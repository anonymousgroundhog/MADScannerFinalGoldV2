public class androidx.appcompat.view.SupportMenuInflater extends android.view.MenuInflater
{
    static final java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE;
    static final java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE;
    static final java.lang.String LOG_TAG;
    static final int NO_ID;
    private static final java.lang.String XML_GROUP;
    private static final java.lang.String XML_ITEM;
    private static final java.lang.String XML_MENU;
    final java.lang.Object[] mActionProviderConstructorArguments;
    final java.lang.Object[] mActionViewConstructorArguments;
    android.content.Context mContext;
    private java.lang.Object mRealOwner;

    static void <clinit>()
    {
        java.lang.Class[] $r0;

        $r0 = newarray (java.lang.Class)[1];

        $r0[0] = class "Landroid/content/Context;";

        androidx.appcompat.view.SupportMenuInflater.ACTION_VIEW_CONSTRUCTOR_SIGNATURE = $r0;

        androidx.appcompat.view.SupportMenuInflater.ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        androidx.appcompat.view.SupportMenuInflater r0;
        java.lang.Object[] $r2;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>($r1);

        r0.mContext = $r1;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = $r1;

        r0.mActionViewConstructorArguments = $r2;

        r0.mActionProviderConstructorArguments = $r2;

        return;
    }

    private java.lang.Object findRealOwner(java.lang.Object)
    {
        android.content.Context $r3;
        androidx.appcompat.view.SupportMenuInflater r0;
        java.lang.Object $r1;
        android.content.ContextWrapper $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = $r1 instanceof android.app.Activity;

        if $z0 == 0 goto label1;

        return $r1;

     label1:
        $z0 = $r1 instanceof android.content.ContextWrapper;

        if $z0 == 0 goto label2;

        $r2 = (android.content.ContextWrapper) $r1;

        $r3 = virtualinvoke $r2.getBaseContext();

        $r1 = specialinvoke r0.findRealOwner($r3);

     label2:
        return $r1;
    }

    private void parseMenu(org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.view.Menu) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.util.AttributeSet $r2;
        android.view.Menu $r3;
        int $i0, $i1;
        java.lang.String r5, $r6;
        org.xmlpull.v1.XmlPullParser $r1;
        boolean z0, $z1, $z2;
        androidx.appcompat.view.SupportMenuInflater r0;
        java.lang.RuntimeException $r7;
        android.view.SubMenu $r10;
        androidx.core.view.ActionProvider r9;
        java.lang.StringBuilder r8;
        androidx.appcompat.view.SupportMenuInflater$MenuState r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        r4 = new androidx.appcompat.view.SupportMenuInflater$MenuState;

        specialinvoke r4.<init>(r0, $r3);

        $i0 = interfaceinvoke $r1.getEventType();

        z0 = 0;

        r5 = null;

     label01:
        if $i0 != 2 goto label03;

        $r6 = interfaceinvoke $r1.getName();

        $z1 = virtualinvoke $r6.equals("menu");

        if $z1 == 0 goto label02;

        $i0 = interfaceinvoke $r1.next();

        goto label04;

     label02:
        $r7 = new java.lang.RuntimeException;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<init>();

        r8 = virtualinvoke r8.append("Expecting menu, got ");

        r8 = virtualinvoke r8.append($r6);

        r5 = virtualinvoke r8.toString();

        specialinvoke $r7.<init>(r5);

        throw $r7;

     label03:
        $i1 = interfaceinvoke $r1.next();

        $i0 = $i1;

        if $i1 != 1 goto label01;

     label04:
        $z1 = 0;

     label05:
        if $z1 != 0 goto label19;

        lookupswitch($i0)
        {
            case 1: goto label17;
            case 2: goto label12;
            case 3: goto label07;
            default: goto label06;
        };

     label06:
        goto label18;

     label07:
        $r6 = interfaceinvoke $r1.getName();

        if z0 == 0 goto label08;

        $z2 = virtualinvoke $r6.equals(r5);

        if $z2 == 0 goto label08;

        z0 = 0;

        r5 = null;

        goto label18;

     label08:
        $z2 = virtualinvoke $r6.equals("group");

        if $z2 == 0 goto label09;

        virtualinvoke r4.resetGroup();

        goto label18;

     label09:
        $z2 = virtualinvoke $r6.equals("item");

        if $z2 == 0 goto label11;

        $z2 = virtualinvoke r4.hasAddedItem();

        if $z2 != 0 goto label18;

        r9 = r4.itemActionProvider;

        if r9 == null goto label10;

        r9 = r4.itemActionProvider;

        $z2 = virtualinvoke r9.hasSubMenu();

        if $z2 == 0 goto label10;

        virtualinvoke r4.addSubMenuItem();

        goto label18;

     label10:
        virtualinvoke r4.addItem();

        goto label18;

     label11:
        $z2 = virtualinvoke $r6.equals("menu");

        if $z2 == 0 goto label18;

        $z1 = 1;

        goto label18;

     label12:
        if z0 == 0 goto label13;

        goto label18;

     label13:
        $r6 = interfaceinvoke $r1.getName();

        $z2 = virtualinvoke $r6.equals("group");

        if $z2 == 0 goto label14;

        virtualinvoke r4.readGroup($r2);

        goto label18;

     label14:
        $z2 = virtualinvoke $r6.equals("item");

        if $z2 == 0 goto label15;

        virtualinvoke r4.readItem($r2);

        goto label18;

     label15:
        $z2 = virtualinvoke $r6.equals("menu");

        if $z2 == 0 goto label16;

        $r10 = virtualinvoke r4.addSubMenuItem();

        specialinvoke r0.parseMenu($r1, $r2, $r10);

        goto label18;

     label16:
        z0 = 1;

        r5 = $r6;

        goto label18;

     label17:
        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<init>("Unexpected end of document");

        throw $r7;

     label18:
        $i0 = interfaceinvoke $r1.next();

        goto label05;

     label19:
        return;
    }

    java.lang.Object getRealOwner()
    {
        android.content.Context $r2;
        java.lang.Object $r1;
        androidx.appcompat.view.SupportMenuInflater r0;

        r0 := @this;

        $r1 = r0.mRealOwner;

        if $r1 != null goto label1;

        $r2 = r0.mContext;

        $r1 = specialinvoke r0.findRealOwner($r2);

        r0.mRealOwner = $r1;

     label1:
        $r1 = r0.mRealOwner;

        return $r1;
    }

    public void inflate(int, android.view.Menu)
    {
        java.lang.Throwable $r7;
        android.content.Context r3;
        androidx.appcompat.view.SupportMenuInflater r0;
        android.content.res.XmlResourceParser r2, $r5;
        java.io.IOException r8;
        org.xmlpull.v1.XmlPullParserException r10;
        android.util.AttributeSet $r6;
        android.view.InflateException $r9;
        int i0;
        android.view.Menu r1;
        boolean z0;
        android.content.res.Resources $r4;

        r0 := @this;

        i0 := @parameter0;

        r1 := @parameter1;

        z0 = r1 instanceof androidx.core.internal.view.SupportMenu;

        if z0 != 0 goto label01;

        specialinvoke r0.inflate(i0, r1);

        return;

     label01:
        r2 = null;

     label02:
        r3 = r0.mContext;

     label03:
        $r4 = virtualinvoke r3.getResources();

        $r5 = virtualinvoke $r4.getLayout(i0);

     label04:
        r2 = $r5;

     label05:
        $r6 = android.util.Xml.asAttributeSet($r5);

        specialinvoke r0.parseMenu($r5, $r6, r1);

     label06:
        if $r5 == null goto label14;

        interfaceinvoke $r5.close();

        return;

     label07:
        $r7 := @caughtexception;

        goto label12;

     label08:
        r8 := @caughtexception;

     label09:
        $r9 = new android.view.InflateException;

        specialinvoke $r9.<init>("Error inflating menu XML", r8);

        throw $r9;

     label10:
        r10 := @caughtexception;

     label11:
        $r9 = new android.view.InflateException;

        specialinvoke $r9.<init>("Error inflating menu XML", r10);

        throw $r9;

     label12:
        if r2 == null goto label13;

        interfaceinvoke r2.close();

     label13:
        throw $r7;

     label14:
        return;

        catch org.xmlpull.v1.XmlPullParserException from label03 to label04 with label10;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label10;
        catch java.io.IOException from label03 to label04 with label08;
        catch java.io.IOException from label05 to label06 with label08;
        catch java.lang.Throwable from label02 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label09 to label10 with label07;
        catch java.lang.Throwable from label11 to label12 with label07;
    }
}
