class androidx.work.impl.foreground.SystemForegroundDispatcher$1 extends java.lang.Object implements java.lang.Runnable
{
    final androidx.work.impl.foreground.SystemForegroundDispatcher this$0;
    final androidx.work.impl.WorkDatabase val$database;
    final java.lang.String val$workSpecId;

    void <init>(androidx.work.impl.foreground.SystemForegroundDispatcher, androidx.work.impl.WorkDatabase, java.lang.String)
    {
        androidx.work.impl.WorkDatabase $r2;
        androidx.work.impl.foreground.SystemForegroundDispatcher$1 r0;
        java.lang.String $r3;
        androidx.work.impl.foreground.SystemForegroundDispatcher $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        r0.this$0 = $r1;

        r0.val$database = $r2;

        r0.val$workSpecId = $r3;

        specialinvoke r0.<init>();

        return;
    }

    public void run()
    {
        java.lang.Throwable $r10;
        androidx.work.impl.model.WorkSpecDao $r2;
        androidx.work.impl.foreground.SystemForegroundDispatcher$1 r0;
        java.util.Set $r8;
        androidx.work.impl.model.WorkSpec $r4;
        androidx.work.impl.constraints.WorkConstraintsTracker $r9;
        androidx.work.impl.WorkDatabase r1;
        java.util.Map $r7;
        java.lang.Object $r6;
        java.lang.String $r3;
        androidx.work.impl.foreground.SystemForegroundDispatcher $r5;
        boolean $z0;

        r0 := @this;

        r1 = r0.val$database;

        $r2 = virtualinvoke r1.workSpecDao();

        $r3 = r0.val$workSpecId;

        $r4 = interfaceinvoke $r2.getWorkSpec($r3);

        if $r4 == null goto label5;

        $z0 = virtualinvoke $r4.hasConstraints();

        if $z0 == 0 goto label5;

        $r5 = r0.this$0;

        $r6 = $r5.mLock;

        entermonitor $r6;

     label1:
        $r5 = r0.this$0;

        $r7 = $r5.mWorkSpecById;

        $r3 = r0.val$workSpecId;

        interfaceinvoke $r7.put($r3, $r4);

        $r5 = r0.this$0;

        $r8 = $r5.mTrackedWorkSpecs;

        interfaceinvoke $r8.add($r4);

        $r5 = r0.this$0;

        $r9 = $r5.mConstraintsTracker;

        $r5 = r0.this$0;

        $r8 = $r5.mTrackedWorkSpecs;

        virtualinvoke $r9.replace($r8);

        exitmonitor $r6;

     label2:
        return;

     label3:
        $r10 := @caughtexception;

        exitmonitor $r6;

     label4:
        throw $r10;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
