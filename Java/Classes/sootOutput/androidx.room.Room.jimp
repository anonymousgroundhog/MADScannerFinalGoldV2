public class androidx.room.Room extends java.lang.Object
{
    private static final java.lang.String CURSOR_CONV_SUFFIX;
    static final java.lang.String LOG_TAG;
    public static final java.lang.String MASTER_TABLE_NAME;

    public void <init>()
    {
        androidx.room.Room r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static androidx.room.RoomDatabase$Builder databaseBuilder(android.content.Context, java.lang.Class, java.lang.String)
    {
        android.content.Context $r0;
        int $i0;
        androidx.room.RoomDatabase$Builder $r4;
        java.lang.Class r1;
        java.lang.String $r2, $r3;
        java.lang.IllegalArgumentException $r5;

        $r0 := @parameter0;

        r1 := @parameter1;

        $r2 := @parameter2;

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.trim();

        $i0 = virtualinvoke $r3.length();

        if $i0 == 0 goto label1;

        $r4 = new androidx.room.RoomDatabase$Builder;

        specialinvoke $r4.<init>($r0, r1, $r2);

        return $r4;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<init>("Cannot build a database with null or empty name. If you are trying to create an in memory database, use Room.inMemoryDatabaseBuilder");

        throw $r5;
    }

    static java.lang.Object getGeneratedImplementation(java.lang.Class, java.lang.String)
    {
        java.lang.IllegalAccessException r10;
        java.lang.Package $r2;
        java.lang.RuntimeException $r9;
        int $i0;
        java.lang.InstantiationException r8;
        java.lang.Class r0, $r6;
        java.lang.StringBuilder r5;
        java.lang.Object $r7;
        java.lang.ClassNotFoundException r11;
        java.lang.String $r1, $r3, $r4;
        boolean $z0;

        r0 := @parameter0;

        $r1 := @parameter1;

        $r2 = virtualinvoke r0.getPackage();

        $r3 = virtualinvoke $r2.getName();

        $r4 = virtualinvoke r0.getCanonicalName();

        $z0 = virtualinvoke $r3.isEmpty();

        if $z0 == 0 goto label01;

        goto label02;

     label01:
        $i0 = virtualinvoke $r3.length();

        $i0 = $i0 + 1;

        $r4 = virtualinvoke $r4.substring($i0);

     label02:
        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<init>();

        $r4 = virtualinvoke $r4.replace(46, 95);

        r5 = virtualinvoke r5.append($r4);

        r5 = virtualinvoke r5.append($r1);

        $r1 = virtualinvoke r5.toString();

     label03:
        $z0 = virtualinvoke $r3.isEmpty();

     label04:
        if $z0 == 0 goto label05;

        $r3 = $r1;

        goto label07;

     label05:
        r5 = new java.lang.StringBuilder;

     label06:
        specialinvoke r5.<init>();

        r5 = virtualinvoke r5.append($r3);

        r5 = virtualinvoke r5.append(".");

        r5 = virtualinvoke r5.append($r1);

        $r3 = virtualinvoke r5.toString();

     label07:
        $r6 = java.lang.Class.forName($r3);

        $r7 = virtualinvoke $r6.newInstance();

     label08:
        return $r7;

     label09:
        r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<init>();

        r5 = virtualinvoke r5.append("Failed to create an instance of ");

        $r1 = virtualinvoke r0.getCanonicalName();

        r5 = virtualinvoke r5.append($r1);

        $r1 = virtualinvoke r5.toString();

        specialinvoke $r9.<init>($r1);

        throw $r9;

     label10:
        r10 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<init>();

        r5 = virtualinvoke r5.append("Cannot access the constructor");

        $r1 = virtualinvoke r0.getCanonicalName();

        r5 = virtualinvoke r5.append($r1);

        $r1 = virtualinvoke r5.toString();

        specialinvoke $r9.<init>($r1);

        throw $r9;

     label11:
        r11 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<init>();

        r5 = virtualinvoke r5.append("cannot find implementation for ");

        $r3 = virtualinvoke r0.getCanonicalName();

        r5 = virtualinvoke r5.append($r3);

        r5 = virtualinvoke r5.append(". ");

        r5 = virtualinvoke r5.append($r1);

        r5 = virtualinvoke r5.append(" does not exist");

        $r1 = virtualinvoke r5.toString();

        specialinvoke $r9.<init>($r1);

        throw $r9;

        catch java.lang.ClassNotFoundException from label03 to label04 with label11;
        catch java.lang.ClassNotFoundException from label06 to label07 with label11;
        catch java.lang.ClassNotFoundException from label07 to label08 with label11;
        catch java.lang.IllegalAccessException from label03 to label04 with label10;
        catch java.lang.IllegalAccessException from label06 to label07 with label10;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
        catch java.lang.InstantiationException from label03 to label04 with label09;
        catch java.lang.InstantiationException from label06 to label07 with label09;
        catch java.lang.InstantiationException from label07 to label08 with label09;
    }

    public static androidx.room.RoomDatabase$Builder inMemoryDatabaseBuilder(android.content.Context, java.lang.Class)
    {
        android.content.Context $r0;
        androidx.room.RoomDatabase$Builder $r2;
        java.lang.Class r1;

        $r0 := @parameter0;

        r1 := @parameter1;

        $r2 = new androidx.room.RoomDatabase$Builder;

        specialinvoke $r2.<init>($r0, r1, null);

        return $r2;
    }
}
