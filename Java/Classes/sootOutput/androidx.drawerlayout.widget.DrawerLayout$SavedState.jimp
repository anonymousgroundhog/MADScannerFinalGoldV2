public class androidx.drawerlayout.widget.DrawerLayout$SavedState extends androidx.customview.view.AbsSavedState
{
    public static final android.os.Parcelable$Creator CREATOR;
    int lockModeEnd;
    int lockModeLeft;
    int lockModeRight;
    int lockModeStart;
    int openDrawerGravity;

    static void <clinit>()
    {
        androidx.drawerlayout.widget.DrawerLayout$SavedState$1 $r0;

        $r0 = new androidx.drawerlayout.widget.DrawerLayout$SavedState$1;

        specialinvoke $r0.<init>();

        androidx.drawerlayout.widget.DrawerLayout$SavedState.CREATOR = $r0;

        return;
    }

    public void <init>(android.os.Parcel, java.lang.ClassLoader)
    {
        androidx.drawerlayout.widget.DrawerLayout$SavedState r0;
        int $i0;
        java.lang.ClassLoader $r2;
        android.os.Parcel $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.<init>($r1, $r2);

        r0.openDrawerGravity = 0;

        $i0 = virtualinvoke $r1.readInt();

        r0.openDrawerGravity = $i0;

        $i0 = virtualinvoke $r1.readInt();

        r0.lockModeLeft = $i0;

        $i0 = virtualinvoke $r1.readInt();

        r0.lockModeRight = $i0;

        $i0 = virtualinvoke $r1.readInt();

        r0.lockModeStart = $i0;

        $i0 = virtualinvoke $r1.readInt();

        r0.lockModeEnd = $i0;

        return;
    }

    public void <init>(android.os.Parcelable)
    {
        androidx.drawerlayout.widget.DrawerLayout$SavedState r0;
        android.os.Parcelable $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>($r1);

        r0.openDrawerGravity = 0;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        int $i0;
        androidx.drawerlayout.widget.DrawerLayout$SavedState r0;
        android.os.Parcel $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        specialinvoke r0.writeToParcel($r1, $i0);

        $i0 = r0.openDrawerGravity;

        virtualinvoke $r1.writeInt($i0);

        $i0 = r0.lockModeLeft;

        virtualinvoke $r1.writeInt($i0);

        $i0 = r0.lockModeRight;

        virtualinvoke $r1.writeInt($i0);

        $i0 = r0.lockModeStart;

        virtualinvoke $r1.writeInt($i0);

        $i0 = r0.lockModeEnd;

        virtualinvoke $r1.writeInt($i0);

        return;
    }
}
