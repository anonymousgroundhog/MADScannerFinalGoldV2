class androidx.appcompat.app.ToolbarActionBar extends androidx.appcompat.app.ActionBar
{
    androidx.appcompat.widget.DecorToolbar mDecorToolbar;
    private boolean mLastMenuVisibility;
    private boolean mMenuCallbackSet;
    private final androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mMenuClicker;
    private final java.lang.Runnable mMenuInvalidator;
    private java.util.ArrayList mMenuVisibilityListeners;
    boolean mToolbarMenuPrepared;
    android.view.Window$Callback mWindowCallback;

    void <init>(androidx.appcompat.widget.Toolbar, java.lang.CharSequence, android.view.Window$Callback)
    {
        androidx.appcompat.widget.DecorToolbar $r9;
        androidx.appcompat.app.ToolbarActionBar r0;
        java.lang.CharSequence $r2;
        androidx.appcompat.widget.ToolbarWidgetWrapper $r7;
        androidx.appcompat.app.ToolbarActionBar$1 $r5;
        android.view.Window$Callback $r3;
        java.util.ArrayList $r4;
        androidx.appcompat.app.ToolbarActionBar$2 $r6;
        androidx.appcompat.widget.Toolbar $r1;
        androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper $r8;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        specialinvoke r0.<init>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<init>();

        r0.mMenuVisibilityListeners = $r4;

        $r5 = new androidx.appcompat.app.ToolbarActionBar$1;

        specialinvoke $r5.<init>(r0);

        r0.mMenuInvalidator = $r5;

        $r6 = new androidx.appcompat.app.ToolbarActionBar$2;

        specialinvoke $r6.<init>(r0);

        r0.mMenuClicker = $r6;

        $r7 = new androidx.appcompat.widget.ToolbarWidgetWrapper;

        specialinvoke $r7.<init>($r1, 0);

        r0.mDecorToolbar = $r7;

        $r8 = new androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper;

        specialinvoke $r8.<init>(r0, $r3);

        r0.mWindowCallback = $r8;

        $r9 = r0.mDecorToolbar;

        interfaceinvoke $r9.setWindowCallback($r8);

        virtualinvoke $r1.setOnMenuItemClickListener($r6);

        $r9 = r0.mDecorToolbar;

        interfaceinvoke $r9.setWindowTitle($r2);

        return;
    }

    private android.view.Menu getMenu()
    {
        androidx.appcompat.widget.DecorToolbar $r4;
        androidx.appcompat.app.ToolbarActionBar r0;
        androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback $r1;
        androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback $r2;
        android.view.Menu $r3;
        boolean $z0;

        r0 := @this;

        $z0 = r0.mMenuCallbackSet;

        if $z0 != 0 goto label1;

        $r4 = r0.mDecorToolbar;

        $r1 = new androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback;

        specialinvoke $r1.<init>(r0);

        $r2 = new androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback;

        specialinvoke $r2.<init>(r0);

        interfaceinvoke $r4.setMenuCallbacks($r1, $r2);

        r0.mMenuCallbackSet = 1;

     label1:
        $r4 = r0.mDecorToolbar;

        $r3 = interfaceinvoke $r4.getMenu();

        return $r3;
    }

    public void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    {
        androidx.appcompat.app.ActionBar$OnMenuVisibilityListener $r1;
        androidx.appcompat.app.ToolbarActionBar r0;
        java.util.ArrayList $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mMenuVisibilityListeners;

        virtualinvoke $r2.add($r1);

        return;
    }

    public void addTab(androidx.appcompat.app.ActionBar$Tab)
    {
        java.lang.UnsupportedOperationException $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        androidx.appcompat.app.ActionBar$Tab $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<init>("Tabs are not supported in toolbar action bars");

        throw $r2;
    }

    public void addTab(androidx.appcompat.app.ActionBar$Tab, int)
    {
        java.lang.UnsupportedOperationException $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        androidx.appcompat.app.ActionBar$Tab $r1;
        int $i0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<init>("Tabs are not supported in toolbar action bars");

        throw $r2;
    }

    public void addTab(androidx.appcompat.app.ActionBar$Tab, int, boolean)
    {
        java.lang.UnsupportedOperationException $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        androidx.appcompat.app.ActionBar$Tab $r1;
        int $i0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $z0 := @parameter2;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<init>("Tabs are not supported in toolbar action bars");

        throw $r2;
    }

    public void addTab(androidx.appcompat.app.ActionBar$Tab, boolean)
    {
        java.lang.UnsupportedOperationException $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        androidx.appcompat.app.ActionBar$Tab $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<init>("Tabs are not supported in toolbar action bars");

        throw $r2;
    }

    public boolean closeOptionsMenu()
    {
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.app.ToolbarActionBar r0;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mDecorToolbar;

        $z0 = interfaceinvoke $r1.hideOverflowMenu();

        return $z0;
    }

    public boolean collapseActionView()
    {
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.app.ToolbarActionBar r0;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mDecorToolbar;

        $z0 = interfaceinvoke $r1.hasExpandedActionView();

        if $z0 == 0 goto label1;

        $r1 = r0.mDecorToolbar;

        interfaceinvoke $r1.collapseActionView();

        return 1;

     label1:
        return 0;
    }

    public void dispatchMenuVisibilityChanged(boolean)
    {
        androidx.appcompat.app.ToolbarActionBar r0;
        androidx.appcompat.app.ActionBar$OnMenuVisibilityListener $r3;
        java.util.ArrayList r1;
        int $i0, i1;
        java.lang.Object $r2;
        boolean $z0, z1;

        r0 := @this;

        $z0 := @parameter0;

        z1 = r0.mLastMenuVisibility;

        if $z0 != z1 goto label1;

        return;

     label1:
        r0.mLastMenuVisibility = $z0;

        r1 = r0.mMenuVisibilityListeners;

        $i0 = virtualinvoke r1.size();

        i1 = 0;

     label2:
        if i1 >= $i0 goto label3;

        r1 = r0.mMenuVisibilityListeners;

        $r2 = virtualinvoke r1.get(i1);

        $r3 = (androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) $r2;

        interfaceinvoke $r3.onMenuVisibilityChanged($z0);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public android.view.View getCustomView()
    {
        android.view.View $r1;
        androidx.appcompat.widget.DecorToolbar $r2;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $r2 = r0.mDecorToolbar;

        $r1 = interfaceinvoke $r2.getCustomView();

        return $r1;
    }

    public int getDisplayOptions()
    {
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $r1 = r0.mDecorToolbar;

        $i0 = interfaceinvoke $r1.getDisplayOptions();

        return $i0;
    }

    public float getElevation()
    {
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.app.ToolbarActionBar r0;
        float $f0;
        android.view.ViewGroup $r2;

        r0 := @this;

        $r1 = r0.mDecorToolbar;

        $r2 = interfaceinvoke $r1.getViewGroup();

        $f0 = androidx.core.view.ViewCompat.getElevation($r2);

        return $f0;
    }

    public int getHeight()
    {
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $r1 = r0.mDecorToolbar;

        $i0 = interfaceinvoke $r1.getHeight();

        return $i0;
    }

    public int getNavigationItemCount()
    {
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        return 0;
    }

    public int getNavigationMode()
    {
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        return 0;
    }

    public int getSelectedNavigationIndex()
    {
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        return -1;
    }

    public androidx.appcompat.app.ActionBar$Tab getSelectedTab()
    {
        java.lang.UnsupportedOperationException $r1;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<init>("Tabs are not supported in toolbar action bars");

        throw $r1;
    }

    public java.lang.CharSequence getSubtitle()
    {
        androidx.appcompat.widget.DecorToolbar $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        java.lang.CharSequence $r1;

        r0 := @this;

        $r2 = r0.mDecorToolbar;

        $r1 = interfaceinvoke $r2.getSubtitle();

        return $r1;
    }

    public androidx.appcompat.app.ActionBar$Tab getTabAt(int)
    {
        int $i0;
        java.lang.UnsupportedOperationException $r1;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<init>("Tabs are not supported in toolbar action bars");

        throw $r1;
    }

    public int getTabCount()
    {
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        return 0;
    }

    public android.content.Context getThemedContext()
    {
        android.content.Context $r1;
        androidx.appcompat.widget.DecorToolbar $r2;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $r2 = r0.mDecorToolbar;

        $r1 = interfaceinvoke $r2.getContext();

        return $r1;
    }

    public java.lang.CharSequence getTitle()
    {
        androidx.appcompat.widget.DecorToolbar $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        java.lang.CharSequence $r1;

        r0 := @this;

        $r2 = r0.mDecorToolbar;

        $r1 = interfaceinvoke $r2.getTitle();

        return $r1;
    }

    public android.view.Window$Callback getWrappedWindowCallback()
    {
        androidx.appcompat.app.ToolbarActionBar r0;
        android.view.Window$Callback r1;

        r0 := @this;

        r1 = r0.mWindowCallback;

        return r1;
    }

    public void hide()
    {
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $r1 = r0.mDecorToolbar;

        interfaceinvoke $r1.setVisibility(8);

        return;
    }

    public boolean invalidateOptionsMenu()
    {
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.app.ToolbarActionBar r0;
        java.lang.Runnable $r3;
        android.view.ViewGroup $r2;

        r0 := @this;

        $r1 = r0.mDecorToolbar;

        $r2 = interfaceinvoke $r1.getViewGroup();

        $r3 = r0.mMenuInvalidator;

        virtualinvoke $r2.removeCallbacks($r3);

        $r1 = r0.mDecorToolbar;

        $r2 = interfaceinvoke $r1.getViewGroup();

        $r3 = r0.mMenuInvalidator;

        androidx.core.view.ViewCompat.postOnAnimation($r2, $r3);

        return 1;
    }

    public boolean isShowing()
    {
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $r1 = r0.mDecorToolbar;

        $i0 = interfaceinvoke $r1.getVisibility();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isTitleTruncated()
    {
        androidx.appcompat.app.ToolbarActionBar r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.isTitleTruncated();

        return $z0;
    }

    public androidx.appcompat.app.ActionBar$Tab newTab()
    {
        java.lang.UnsupportedOperationException $r1;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<init>("Tabs are not supported in toolbar action bars");

        throw $r1;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.appcompat.app.ToolbarActionBar r0;
        android.content.res.Configuration $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.onConfigurationChanged($r1);

        return;
    }

    void onDestroy()
    {
        androidx.appcompat.widget.DecorToolbar $r3;
        androidx.appcompat.app.ToolbarActionBar r0;
        java.lang.Runnable $r1;
        android.view.ViewGroup $r2;

        r0 := @this;

        $r3 = r0.mDecorToolbar;

        $r2 = interfaceinvoke $r3.getViewGroup();

        $r1 = r0.mMenuInvalidator;

        virtualinvoke $r2.removeCallbacks($r1);

        return;
    }

    public boolean onKeyShortcut(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.ToolbarActionBar r0;
        android.view.KeyEvent $r1;
        android.view.KeyCharacterMap $r3;
        int $i0, $i1;
        android.view.Menu $r2;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $r2 = specialinvoke r0.getMenu();

        if $r2 == null goto label5;

        if $r1 == null goto label1;

        $i1 = virtualinvoke $r1.getDeviceId();

        goto label2;

     label1:
        $i1 = -1;

     label2:
        $r3 = android.view.KeyCharacterMap.load($i1);

        $i1 = virtualinvoke $r3.getKeyboardType();

        $z0 = 1;

        if $i1 == 1 goto label3;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        interfaceinvoke $r2.setQwertyMode($z0);

        $z0 = interfaceinvoke $r2.performShortcut($i0, $r1, 0);

        return $z0;

     label5:
        return 0;
    }

    public boolean onMenuKeyEvent(android.view.KeyEvent)
    {
        int $i0;
        androidx.appcompat.app.ToolbarActionBar r0;
        android.view.KeyEvent $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 = virtualinvoke $r1.getAction();

        if $i0 != 1 goto label1;

        virtualinvoke r0.openOptionsMenu();

     label1:
        return 1;
    }

    public boolean openOptionsMenu()
    {
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.app.ToolbarActionBar r0;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mDecorToolbar;

        $z0 = interfaceinvoke $r1.showOverflowMenu();

        return $z0;
    }

    void populateOptionsMenu()
    {
        java.lang.Throwable $r4;
        androidx.appcompat.app.ToolbarActionBar r0;
        androidx.appcompat.view.menu.MenuBuilder r2;
        android.view.Menu $r1;
        boolean z0;
        android.view.Window$Callback $r3;

        r0 := @this;

        $r1 = specialinvoke r0.getMenu();

        z0 = $r1 instanceof androidx.appcompat.view.menu.MenuBuilder;

        if z0 == 0 goto label01;

        r2 = (androidx.appcompat.view.menu.MenuBuilder) $r1;

        goto label02;

     label01:
        r2 = null;

     label02:
        if r2 == null goto label03;

        virtualinvoke r2.stopDispatchingItemsChanged();

     label03:
        interfaceinvoke $r1.clear();

        $r3 = r0.mWindowCallback;

        z0 = interfaceinvoke $r3.onCreatePanelMenu(0, $r1);

     label04:
        if z0 == 0 goto label07;

     label05:
        $r3 = r0.mWindowCallback;

        z0 = interfaceinvoke $r3.onPreparePanel(0, null, $r1);

     label06:
        if z0 != 0 goto label08;

     label07:
        interfaceinvoke $r1.clear();

     label08:
        if r2 == null goto label11;

        virtualinvoke r2.startDispatchingItemsChanged();

        return;

     label09:
        $r4 := @caughtexception;

        if r2 == null goto label10;

        virtualinvoke r2.startDispatchingItemsChanged();

     label10:
        throw $r4;

     label11:
        return;

        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
    }

    public void removeAllTabs()
    {
        java.lang.UnsupportedOperationException $r1;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<init>("Tabs are not supported in toolbar action bars");

        throw $r1;
    }

    public void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener)
    {
        androidx.appcompat.app.ActionBar$OnMenuVisibilityListener $r1;
        androidx.appcompat.app.ToolbarActionBar r0;
        java.util.ArrayList $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mMenuVisibilityListeners;

        virtualinvoke $r2.remove($r1);

        return;
    }

    public void removeTab(androidx.appcompat.app.ActionBar$Tab)
    {
        java.lang.UnsupportedOperationException $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        androidx.appcompat.app.ActionBar$Tab $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<init>("Tabs are not supported in toolbar action bars");

        throw $r2;
    }

    public void removeTabAt(int)
    {
        int $i0;
        java.lang.UnsupportedOperationException $r1;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<init>("Tabs are not supported in toolbar action bars");

        throw $r1;
    }

    public boolean requestFocus()
    {
        androidx.appcompat.widget.DecorToolbar r1;
        androidx.appcompat.app.ToolbarActionBar r0;
        android.view.ViewGroup $r2;
        boolean $z0;

        r0 := @this;

        r1 = r0.mDecorToolbar;

        $r2 = interfaceinvoke r1.getViewGroup();

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.hasFocus();

        if $z0 != 0 goto label1;

        virtualinvoke $r2.requestFocus();

        return 1;

     label1:
        return 0;
    }

    public void selectTab(androidx.appcompat.app.ActionBar$Tab)
    {
        java.lang.UnsupportedOperationException $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        androidx.appcompat.app.ActionBar$Tab $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<init>("Tabs are not supported in toolbar action bars");

        throw $r2;
    }

    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.DecorToolbar $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDecorToolbar;

        interfaceinvoke $r2.setBackgroundDrawable($r1);

        return;
    }

    public void setCustomView(int)
    {
        androidx.appcompat.widget.DecorToolbar r1;
        android.content.Context $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        android.view.LayoutInflater $r3;
        int $i0;
        android.view.View $r5;
        android.view.ViewGroup $r4;

        r0 := @this;

        $i0 := @parameter0;

        r1 = r0.mDecorToolbar;

        $r2 = interfaceinvoke r1.getContext();

        $r3 = android.view.LayoutInflater.from($r2);

        r1 = r0.mDecorToolbar;

        $r4 = interfaceinvoke r1.getViewGroup();

        $r5 = virtualinvoke $r3.inflate($i0, $r4, 0);

        virtualinvoke r0.setCustomView($r5);

        return;
    }

    public void setCustomView(android.view.View)
    {
        android.view.View $r1;
        androidx.appcompat.app.ToolbarActionBar r0;
        androidx.appcompat.app.ActionBar$LayoutParams $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = new androidx.appcompat.app.ActionBar$LayoutParams;

        specialinvoke $r2.<init>(-2, -2);

        virtualinvoke r0.setCustomView($r1, $r2);

        return;
    }

    public void setCustomView(android.view.View, androidx.appcompat.app.ActionBar$LayoutParams)
    {
        androidx.appcompat.widget.DecorToolbar $r3;
        androidx.appcompat.app.ToolbarActionBar r0;
        androidx.appcompat.app.ActionBar$LayoutParams $r2;
        android.view.View $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        if $r1 == null goto label1;

        virtualinvoke $r1.setLayoutParams($r2);

     label1:
        $r3 = r0.mDecorToolbar;

        interfaceinvoke $r3.setCustomView($r1);

        return;
    }

    public void setDefaultDisplayHomeAsUpEnabled(boolean)
    {
        androidx.appcompat.app.ToolbarActionBar r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        return;
    }

    public void setDisplayHomeAsUpEnabled(boolean)
    {
        androidx.appcompat.app.ToolbarActionBar r0;
        byte $b0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        if $z0 == 0 goto label1;

        $b0 = 4;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r0.setDisplayOptions($b0, 4);

        return;
    }

    public void setDisplayOptions(int)
    {
        int $i0;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $i0 := @parameter0;

        virtualinvoke r0.setDisplayOptions($i0, -1);

        return;
    }

    public void setDisplayOptions(int, int)
    {
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.app.ToolbarActionBar r0;
        int $i0, $i1, $i2;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $r1 = r0.mDecorToolbar;

        $i2 = interfaceinvoke $r1.getDisplayOptions();

        $r1 = r0.mDecorToolbar;

        $i0 = $i0 & $i1;

        $i1 = $i1 ^ -1;

        $i1 = $i1 & $i2;

        $i0 = $i0 | $i1;

        interfaceinvoke $r1.setDisplayOptions($i0);

        return;
    }

    public void setDisplayShowCustomEnabled(boolean)
    {
        androidx.appcompat.app.ToolbarActionBar r0;
        byte $b0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        if $z0 == 0 goto label1;

        $b0 = 16;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r0.setDisplayOptions($b0, 16);

        return;
    }

    public void setDisplayShowHomeEnabled(boolean)
    {
        androidx.appcompat.app.ToolbarActionBar r0;
        byte $b0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        if $z0 == 0 goto label1;

        $b0 = 2;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r0.setDisplayOptions($b0, 2);

        return;
    }

    public void setDisplayShowTitleEnabled(boolean)
    {
        androidx.appcompat.app.ToolbarActionBar r0;
        byte $b0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        if $z0 == 0 goto label1;

        $b0 = 8;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r0.setDisplayOptions($b0, 8);

        return;
    }

    public void setDisplayUseLogoEnabled(boolean)
    {
        int $i0;
        androidx.appcompat.app.ToolbarActionBar r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        $i0 = (int) $z0;

        virtualinvoke r0.setDisplayOptions($i0, 1);

        return;
    }

    public void setElevation(float)
    {
        androidx.appcompat.widget.DecorToolbar $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        float $f0;
        android.view.ViewGroup $r1;

        r0 := @this;

        $f0 := @parameter0;

        $r2 = r0.mDecorToolbar;

        $r1 = interfaceinvoke $r2.getViewGroup();

        androidx.core.view.ViewCompat.setElevation($r1, $f0);

        return;
    }

    public void setHomeActionContentDescription(int)
    {
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mDecorToolbar;

        interfaceinvoke $r1.setNavigationContentDescription($i0);

        return;
    }

    public void setHomeActionContentDescription(java.lang.CharSequence)
    {
        androidx.appcompat.widget.DecorToolbar $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        java.lang.CharSequence $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDecorToolbar;

        interfaceinvoke $r2.setNavigationContentDescription($r1);

        return;
    }

    public void setHomeAsUpIndicator(int)
    {
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mDecorToolbar;

        interfaceinvoke $r1.setNavigationIcon($i0);

        return;
    }

    public void setHomeAsUpIndicator(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.DecorToolbar $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDecorToolbar;

        interfaceinvoke $r2.setNavigationIcon($r1);

        return;
    }

    public void setHomeButtonEnabled(boolean)
    {
        androidx.appcompat.app.ToolbarActionBar r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        return;
    }

    public void setIcon(int)
    {
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mDecorToolbar;

        interfaceinvoke $r1.setIcon($i0);

        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.DecorToolbar $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDecorToolbar;

        interfaceinvoke $r2.setIcon($r1);

        return;
    }

    public void setListNavigationCallbacks(android.widget.SpinnerAdapter, androidx.appcompat.app.ActionBar$OnNavigationListener)
    {
        android.widget.SpinnerAdapter $r1;
        androidx.appcompat.widget.DecorToolbar $r3;
        androidx.appcompat.app.ToolbarActionBar r0;
        androidx.appcompat.app.NavItemSelectedListener $r4;
        androidx.appcompat.app.ActionBar$OnNavigationListener $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = r0.mDecorToolbar;

        $r4 = new androidx.appcompat.app.NavItemSelectedListener;

        specialinvoke $r4.<init>($r2);

        interfaceinvoke $r3.setDropdownParams($r1, $r4);

        return;
    }

    public void setLogo(int)
    {
        int $i0;
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mDecorToolbar;

        interfaceinvoke $r1.setLogo($i0);

        return;
    }

    public void setLogo(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.DecorToolbar $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDecorToolbar;

        interfaceinvoke $r2.setLogo($r1);

        return;
    }

    public void setNavigationMode(int)
    {
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.app.ToolbarActionBar r0;
        int $i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this;

        $i0 := @parameter0;

        if $i0 == 2 goto label1;

        $r1 = r0.mDecorToolbar;

        interfaceinvoke $r1.setNavigationMode($i0);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<init>("Tabs not supported in this configuration");

        throw $r2;
    }

    public void setSelectedNavigationItem(int)
    {
        androidx.appcompat.widget.DecorToolbar $r1;
        java.lang.IllegalStateException $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        int $i0, $i1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mDecorToolbar;

        $i1 = interfaceinvoke $r1.getNavigationMode();

        lookupswitch($i1)
        {
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<init>("setSelectedNavigationIndex not valid for current navigation mode");

        throw $r2;

     label2:
        $r1 = r0.mDecorToolbar;

        interfaceinvoke $r1.setDropdownSelectedPosition($i0);

        return;
    }

    public void setShowHideAnimationEnabled(boolean)
    {
        androidx.appcompat.app.ToolbarActionBar r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        return;
    }

    public void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.ToolbarActionBar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    public void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.app.ToolbarActionBar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    public void setSubtitle(int)
    {
        androidx.appcompat.widget.DecorToolbar $r1;
        android.content.Context $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        java.lang.CharSequence $r3;
        int $i0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mDecorToolbar;

        if $i0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.getContext();

        $r3 = virtualinvoke $r2.getText($i0);

        goto label2;

     label1:
        $r3 = null;

     label2:
        interfaceinvoke $r1.setSubtitle($r3);

        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        androidx.appcompat.widget.DecorToolbar $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        java.lang.CharSequence $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDecorToolbar;

        interfaceinvoke $r2.setSubtitle($r1);

        return;
    }

    public void setTitle(int)
    {
        androidx.appcompat.widget.DecorToolbar $r1;
        android.content.Context $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        java.lang.CharSequence $r3;
        int $i0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mDecorToolbar;

        if $i0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.getContext();

        $r3 = virtualinvoke $r2.getText($i0);

        goto label2;

     label1:
        $r3 = null;

     label2:
        interfaceinvoke $r1.setTitle($r3);

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        androidx.appcompat.widget.DecorToolbar $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        java.lang.CharSequence $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDecorToolbar;

        interfaceinvoke $r2.setTitle($r1);

        return;
    }

    public void setWindowTitle(java.lang.CharSequence)
    {
        androidx.appcompat.widget.DecorToolbar $r2;
        androidx.appcompat.app.ToolbarActionBar r0;
        java.lang.CharSequence $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDecorToolbar;

        interfaceinvoke $r2.setWindowTitle($r1);

        return;
    }

    public void show()
    {
        androidx.appcompat.widget.DecorToolbar $r1;
        androidx.appcompat.app.ToolbarActionBar r0;

        r0 := @this;

        $r1 = r0.mDecorToolbar;

        interfaceinvoke $r1.setVisibility(0);

        return;
    }
}
