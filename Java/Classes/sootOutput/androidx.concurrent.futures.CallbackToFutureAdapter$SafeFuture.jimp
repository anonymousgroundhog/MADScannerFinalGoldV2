final class androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture extends java.lang.Object implements com.google.common.util.concurrent.ListenableFuture
{
    final java.lang.ref.WeakReference completerWeakReference;
    private final androidx.concurrent.futures.AbstractResolvableFuture delegate;

    void <init>(androidx.concurrent.futures.CallbackToFutureAdapter$Completer)
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r1;
        java.lang.ref.WeakReference $r3;
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1 $r2;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        $r2 = new androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture$1;

        specialinvoke $r2.<init>(r0);

        r0.delegate = $r2;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<init>(r1);

        r0.completerWeakReference = $r3;

        return;
    }

    public void addListener(java.lang.Runnable, java.util.concurrent.Executor)
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        java.util.concurrent.Executor $r2;
        androidx.concurrent.futures.AbstractResolvableFuture $r3;
        java.lang.Runnable $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = r0.delegate;

        virtualinvoke $r3.addListener($r1, $r2);

        return;
    }

    public boolean cancel(boolean)
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.futures.CallbackToFutureAdapter$Completer r3;
        androidx.concurrent.futures.AbstractResolvableFuture r4;
        java.lang.Object $r2;
        java.lang.ref.WeakReference r1;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        r1 = r0.completerWeakReference;

        $r2 = virtualinvoke r1.get();

        r3 = (androidx.concurrent.futures.CallbackToFutureAdapter$Completer) $r2;

        r4 = r0.delegate;

        $z0 = virtualinvoke r4.cancel($z0);

        if $z0 == 0 goto label1;

        if r3 == null goto label1;

        virtualinvoke r3.fireCancellationListeners();

     label1:
        return $z0;
    }

    boolean cancelWithoutNotifyingCompleter(boolean)
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        boolean $z0;
        androidx.concurrent.futures.AbstractResolvableFuture $r1;

        r0 := @this;

        $z0 := @parameter0;

        $r1 = r0.delegate;

        $z0 = virtualinvoke $r1.cancel($z0);

        return $z0;
    }

    public java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        java.lang.Object $r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.futures.AbstractResolvableFuture $r2;

        r0 := @this;

        $r2 = r0.delegate;

        $r1 = virtualinvoke $r2.get();

        return $r1;
    }

    public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        java.util.concurrent.TimeUnit $r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.futures.AbstractResolvableFuture $r3;
        long $l0;
        java.lang.Object $r2;

        r0 := @this;

        $l0 := @parameter0;

        $r1 := @parameter1;

        $r3 = r0.delegate;

        $r2 = virtualinvoke $r3.get($l0, $r1);

        return $r2;
    }

    public boolean isCancelled()
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        boolean $z0;
        androidx.concurrent.futures.AbstractResolvableFuture $r1;

        r0 := @this;

        $r1 = r0.delegate;

        $z0 = virtualinvoke $r1.isCancelled();

        return $z0;
    }

    public boolean isDone()
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        boolean $z0;
        androidx.concurrent.futures.AbstractResolvableFuture $r1;

        r0 := @this;

        $r1 = r0.delegate;

        $z0 = virtualinvoke $r1.isDone();

        return $z0;
    }

    boolean set(java.lang.Object)
    {
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.futures.AbstractResolvableFuture $r2;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.delegate;

        $z0 = virtualinvoke $r2.set(r1);

        return $z0;
    }

    boolean setException(java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.futures.AbstractResolvableFuture $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.delegate;

        $z0 = virtualinvoke $r2.setException($r1);

        return $z0;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        androidx.concurrent.futures.CallbackToFutureAdapter$SafeFuture r0;
        androidx.concurrent.futures.AbstractResolvableFuture $r2;

        r0 := @this;

        $r2 = r0.delegate;

        $r1 = virtualinvoke $r2.toString();

        return $r1;
    }
}
