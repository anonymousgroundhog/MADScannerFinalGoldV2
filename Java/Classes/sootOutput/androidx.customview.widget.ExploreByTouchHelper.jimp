public abstract class androidx.customview.widget.ExploreByTouchHelper extends androidx.core.view.AccessibilityDelegateCompat
{
    private static final java.lang.String DEFAULT_CLASS_NAME;
    public static final int HOST_ID;
    public static final int INVALID_ID;
    private static final android.graphics.Rect INVALID_PARENT_BOUNDS;
    private static final androidx.customview.widget.FocusStrategy$BoundsAdapter NODE_ADAPTER;
    private static final androidx.customview.widget.FocusStrategy$CollectionAdapter SPARSE_VALUES_ADAPTER;
    int mAccessibilityFocusedVirtualViewId;
    private final android.view.View mHost;
    private int mHoveredVirtualViewId;
    int mKeyboardFocusedVirtualViewId;
    private final android.view.accessibility.AccessibilityManager mManager;
    private androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider mNodeProvider;
    private final int[] mTempGlobalRect;
    private final android.graphics.Rect mTempParentRect;
    private final android.graphics.Rect mTempScreenRect;
    private final android.graphics.Rect mTempVisibleRect;

    static void <clinit>()
    {
        android.graphics.Rect $r0;
        androidx.customview.widget.ExploreByTouchHelper$1 $r1;
        androidx.customview.widget.ExploreByTouchHelper$2 $r2;

        $r0 = new android.graphics.Rect;

        specialinvoke $r0.<init>(2147483647, 2147483647, -2147483648, -2147483648);

        androidx.customview.widget.ExploreByTouchHelper.INVALID_PARENT_BOUNDS = $r0;

        $r1 = new androidx.customview.widget.ExploreByTouchHelper$1;

        specialinvoke $r1.<init>();

        androidx.customview.widget.ExploreByTouchHelper.NODE_ADAPTER = $r1;

        $r2 = new androidx.customview.widget.ExploreByTouchHelper$2;

        specialinvoke $r2.<init>();

        androidx.customview.widget.ExploreByTouchHelper.SPARSE_VALUES_ADAPTER = $r2;

        return;
    }

    public void <init>(android.view.View)
    {
        android.graphics.Rect r2;
        android.content.Context $r4;
        androidx.customview.widget.ExploreByTouchHelper r0;
        java.lang.IllegalArgumentException r7;
        android.view.accessibility.AccessibilityManager $r6;
        int[] r3;
        int $i0;
        android.view.View $r1;
        java.lang.Object $r5;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        r2 = new android.graphics.Rect;

        specialinvoke r2.<init>();

        r0.mTempScreenRect = r2;

        r2 = new android.graphics.Rect;

        specialinvoke r2.<init>();

        r0.mTempParentRect = r2;

        r2 = new android.graphics.Rect;

        specialinvoke r2.<init>();

        r0.mTempVisibleRect = r2;

        r3 = newarray (int)[2];

        r0.mTempGlobalRect = r3;

        r0.mAccessibilityFocusedVirtualViewId = -2147483648;

        r0.mKeyboardFocusedVirtualViewId = -2147483648;

        r0.mHoveredVirtualViewId = -2147483648;

        if $r1 == null goto label1;

        r0.mHost = $r1;

        $r4 = virtualinvoke $r1.getContext();

        $r5 = virtualinvoke $r4.getSystemService("accessibility");

        $r6 = (android.view.accessibility.AccessibilityManager) $r5;

        r0.mManager = $r6;

        virtualinvoke $r1.setFocusable(1);

        $i0 = androidx.core.view.ViewCompat.getImportantForAccessibility($r1);

        if $i0 != 0 goto label2;

        androidx.core.view.ViewCompat.setImportantForAccessibility($r1, 1);

        return;

     label1:
        r7 = new java.lang.IllegalArgumentException;

        specialinvoke r7.<init>("View may not be null");

        throw r7;

     label2:
        return;
    }

    private boolean clearAccessibilityFocus(int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this;

        $i0 := @parameter0;

        $i1 = r0.mAccessibilityFocusedVirtualViewId;

        if $i1 != $i0 goto label1;

        r0.mAccessibilityFocusedVirtualViewId = -2147483648;

        $r1 = r0.mHost;

        virtualinvoke $r1.invalidate();

        virtualinvoke r0.sendEventForVirtualView($i0, 65536);

        return 1;

     label1:
        return 0;
    }

    private boolean clickKeyboardFocusedVirtualView()
    {
        int $i0;
        androidx.customview.widget.ExploreByTouchHelper r0;
        boolean $z0;

        r0 := @this;

        $i0 = r0.mKeyboardFocusedVirtualViewId;

        if $i0 == -2147483648 goto label1;

        $z0 = virtualinvoke r0.onPerformActionForVirtualView($i0, 16, null);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private android.view.accessibility.AccessibilityEvent createEvent(int, int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int $i0, $i1;
        android.view.accessibility.AccessibilityEvent $r1;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        lookupswitch($i0)
        {
            case -1: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = specialinvoke r0.createEventForChild($i0, $i1);

        return $r1;

     label2:
        $r1 = specialinvoke r0.createEventForHost($i1);

        return $r1;
    }

    private android.view.accessibility.AccessibilityEvent createEventForChild(int, int)
    {
        android.content.Context $r7;
        androidx.customview.widget.ExploreByTouchHelper r0;
        java.lang.CharSequence $r4;
        java.lang.RuntimeException $r5;
        java.util.List $r3;
        int $i0, $i1;
        android.view.View $r6;
        android.view.accessibility.AccessibilityEvent $r1;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r2;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $r1 = android.view.accessibility.AccessibilityEvent.obtain($i1);

        $r2 = virtualinvoke r0.obtainAccessibilityNodeInfo($i0);

        $r3 = virtualinvoke $r1.getText();

        $r4 = virtualinvoke $r2.getText();

        interfaceinvoke $r3.add($r4);

        $r4 = virtualinvoke $r2.getContentDescription();

        virtualinvoke $r1.setContentDescription($r4);

        $z0 = virtualinvoke $r2.isScrollable();

        virtualinvoke $r1.setScrollable($z0);

        $z0 = virtualinvoke $r2.isPassword();

        virtualinvoke $r1.setPassword($z0);

        $z0 = virtualinvoke $r2.isEnabled();

        virtualinvoke $r1.setEnabled($z0);

        $z0 = virtualinvoke $r2.isChecked();

        virtualinvoke $r1.setChecked($z0);

        virtualinvoke r0.onPopulateEventForVirtualView($i0, $r1);

        $r3 = virtualinvoke $r1.getText();

        $z0 = interfaceinvoke $r3.isEmpty();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke $r1.getContentDescription();

        if $r4 == null goto label1;

        goto label2;

     label1:
        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<init>("Callbacks must add text or a content description in populateEventForVirtualViewId()");

        throw $r5;

     label2:
        $r4 = virtualinvoke $r2.getClassName();

        virtualinvoke $r1.setClassName($r4);

        $r6 = r0.mHost;

        androidx.core.view.accessibility.AccessibilityRecordCompat.setSource($r1, $r6, $i0);

        $r6 = r0.mHost;

        $r7 = virtualinvoke $r6.getContext();

        $r8 = virtualinvoke $r7.getPackageName();

        virtualinvoke $r1.setPackageName($r8);

        return $r1;
    }

    private android.view.accessibility.AccessibilityEvent createEventForHost(int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int $i0;
        android.view.View $r1;
        android.view.accessibility.AccessibilityEvent $r2;

        r0 := @this;

        $i0 := @parameter0;

        $r2 = android.view.accessibility.AccessibilityEvent.obtain($i0);

        $r1 = r0.mHost;

        virtualinvoke $r1.onInitializeAccessibilityEvent($r2);

        return $r2;
    }

    private androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int)
    {
        android.graphics.Rect r2, r5;
        android.content.Context $r6;
        int[] r8;
        int $i0, $i1, i2;
        android.view.View r3;
        java.lang.String $r7;
        boolean $z0, $z1;
        androidx.customview.widget.ExploreByTouchHelper r0;
        java.lang.CharSequence $r4;
        java.lang.RuntimeException $r10;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r1, $r9;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = androidx.core.view.accessibility.AccessibilityNodeInfoCompat.obtain();

        virtualinvoke $r1.setEnabled(1);

        virtualinvoke $r1.setFocusable(1);

        virtualinvoke $r1.setClassName("android.view.View");

        r2 = androidx.customview.widget.ExploreByTouchHelper.INVALID_PARENT_BOUNDS;

        virtualinvoke $r1.setBoundsInParent(r2);

        virtualinvoke $r1.setBoundsInScreen(r2);

        r3 = r0.mHost;

        virtualinvoke $r1.setParent(r3);

        virtualinvoke r0.onPopulateNodeForVirtualView($i0, $r1);

        $r4 = virtualinvoke $r1.getText();

        if $r4 != null goto label02;

        $r4 = virtualinvoke $r1.getContentDescription();

        if $r4 == null goto label01;

        goto label02;

     label01:
        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<init>("Callbacks must add text or a content description in populateNodeForVirtualViewId()");

        throw $r10;

     label02:
        r5 = r0.mTempParentRect;

        virtualinvoke $r1.getBoundsInParent(r5);

        r5 = r0.mTempParentRect;

        $z0 = virtualinvoke r5.equals(r2);

        if $z0 != 0 goto label15;

        $i1 = virtualinvoke $r1.getActions();

        i2 = $i1 & 64;

        if i2 != 0 goto label14;

        $i1 = $i1 & 128;

        if $i1 != 0 goto label13;

        r3 = r0.mHost;

        $r6 = virtualinvoke r3.getContext();

        $r7 = virtualinvoke $r6.getPackageName();

        virtualinvoke $r1.setPackageName($r7);

        r3 = r0.mHost;

        virtualinvoke $r1.setSource(r3, $i0);

        $i1 = r0.mAccessibilityFocusedVirtualViewId;

        if $i1 != $i0 goto label03;

        virtualinvoke $r1.setAccessibilityFocused(1);

        virtualinvoke $r1.addAction(128);

        goto label04;

     label03:
        virtualinvoke $r1.setAccessibilityFocused(0);

        virtualinvoke $r1.addAction(64);

     label04:
        $i1 = r0.mKeyboardFocusedVirtualViewId;

        if $i1 != $i0 goto label05;

        $z0 = 1;

        goto label06;

     label05:
        $z0 = 0;

     label06:
        if $z0 == 0 goto label07;

        virtualinvoke $r1.addAction(2);

        goto label08;

     label07:
        $z1 = virtualinvoke $r1.isFocusable();

        if $z1 == 0 goto label08;

        virtualinvoke $r1.addAction(1);

     label08:
        virtualinvoke $r1.setFocused($z0);

        r3 = r0.mHost;

        r8 = r0.mTempGlobalRect;

        virtualinvoke r3.getLocationOnScreen(r8);

        r5 = r0.mTempScreenRect;

        virtualinvoke $r1.getBoundsInScreen(r5);

        r5 = r0.mTempScreenRect;

        $z0 = virtualinvoke r5.equals(r2);

        if $z0 == 0 goto label12;

        r2 = r0.mTempScreenRect;

        virtualinvoke $r1.getBoundsInParent(r2);

        $i0 = $r1.mParentVirtualDescendantId;

        if $i0 == -1 goto label11;

        $r9 = androidx.core.view.accessibility.AccessibilityNodeInfoCompat.obtain();

        $i0 = $r1.mParentVirtualDescendantId;

     label09:
        if $i0 == -1 goto label10;

        r3 = r0.mHost;

        virtualinvoke $r9.setParent(r3, -1);

        r2 = androidx.customview.widget.ExploreByTouchHelper.INVALID_PARENT_BOUNDS;

        virtualinvoke $r9.setBoundsInParent(r2);

        virtualinvoke r0.onPopulateNodeForVirtualView($i0, $r9);

        r2 = r0.mTempParentRect;

        virtualinvoke $r9.getBoundsInParent(r2);

        r2 = r0.mTempScreenRect;

        r5 = r0.mTempParentRect;

        $i0 = r5.left;

        r5 = r0.mTempParentRect;

        $i1 = r5.top;

        virtualinvoke r2.offset($i0, $i1);

        $i0 = $r9.mParentVirtualDescendantId;

        goto label09;

     label10:
        virtualinvoke $r9.recycle();

     label11:
        r2 = r0.mTempScreenRect;

        r8 = r0.mTempGlobalRect;

        $i0 = r8[0];

        r3 = r0.mHost;

        $i1 = virtualinvoke r3.getScrollX();

        $i0 = $i0 - $i1;

        r8 = r0.mTempGlobalRect;

        $i1 = r8[1];

        r3 = r0.mHost;

        i2 = virtualinvoke r3.getScrollY();

        $i1 = $i1 - i2;

        virtualinvoke r2.offset($i0, $i1);

     label12:
        r3 = r0.mHost;

        r2 = r0.mTempVisibleRect;

        $z0 = virtualinvoke r3.getLocalVisibleRect(r2);

        if $z0 == 0 goto label17;

        r2 = r0.mTempVisibleRect;

        r8 = r0.mTempGlobalRect;

        $i0 = r8[0];

        r3 = r0.mHost;

        $i1 = virtualinvoke r3.getScrollX();

        $i0 = $i0 - $i1;

        r8 = r0.mTempGlobalRect;

        $i1 = r8[1];

        r3 = r0.mHost;

        i2 = virtualinvoke r3.getScrollY();

        $i1 = $i1 - i2;

        virtualinvoke r2.offset($i0, $i1);

        r2 = r0.mTempScreenRect;

        r5 = r0.mTempVisibleRect;

        $z0 = virtualinvoke r2.intersect(r5);

        if $z0 == 0 goto label17;

        r2 = r0.mTempScreenRect;

        virtualinvoke $r1.setBoundsInScreen(r2);

        r2 = r0.mTempScreenRect;

        $z0 = specialinvoke r0.isVisibleToUser(r2);

        if $z0 == 0 goto label17;

        virtualinvoke $r1.setVisibleToUser(1);

        return $r1;

     label13:
        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<init>("Callbacks must not add ACTION_CLEAR_ACCESSIBILITY_FOCUS in populateNodeForVirtualViewId()");

        throw $r10;

     label14:
        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<init>("Callbacks must not add ACTION_ACCESSIBILITY_FOCUS in populateNodeForVirtualViewId()");

        throw $r10;

     label15:
        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<init>("Callbacks must set parent bounds in populateNodeForVirtualViewId()");

        goto label16;

     label16:
        throw $r10;

     label17:
        return $r1;
    }

    private androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost()
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        java.lang.RuntimeException r4;
        java.lang.Integer $r6;
        java.util.ArrayList r3;
        int $i0, $i1, $i2;
        android.view.View $r1;
        java.lang.Object $r5;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r2;

        r0 := @this;

        $r1 = r0.mHost;

        $r2 = androidx.core.view.accessibility.AccessibilityNodeInfoCompat.obtain($r1);

        $r1 = r0.mHost;

        androidx.core.view.ViewCompat.onInitializeAccessibilityNodeInfo($r1, $r2);

        r3 = new java.util.ArrayList;

        specialinvoke r3.<init>();

        virtualinvoke r0.getVisibleVirtualViews(r3);

        $i0 = virtualinvoke $r2.getChildCount();

        if $i0 <= 0 goto label2;

        $i0 = virtualinvoke r3.size();

        if $i0 > 0 goto label1;

        goto label2;

     label1:
        r4 = new java.lang.RuntimeException;

        specialinvoke r4.<init>("Views cannot have both real and virtual children");

        throw r4;

     label2:
        $i0 = 0;

        $i1 = virtualinvoke r3.size();

     label3:
        if $i0 >= $i1 goto label4;

        $r1 = r0.mHost;

        $r5 = virtualinvoke r3.get($i0);

        $r6 = (java.lang.Integer) $r5;

        $i2 = virtualinvoke $r6.intValue();

        virtualinvoke $r2.addChild($r1, $i2);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        return $r2;
    }

    private androidx.collection.SparseArrayCompat getAllNodes()
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int i0, $i1;
        androidx.collection.SparseArrayCompat r2;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r3;
        java.util.ArrayList r1;

        r0 := @this;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<init>();

        virtualinvoke r0.getVisibleVirtualViews(r1);

        r2 = new androidx.collection.SparseArrayCompat;

        specialinvoke r2.<init>();

        i0 = 0;

     label1:
        $i1 = interfaceinvoke r1.size();

        if i0 >= $i1 goto label2;

        $r3 = specialinvoke r0.createNodeForChild(i0);

        virtualinvoke r2.put(i0, $r3);

        i0 = i0 + 1;

        goto label1;

     label2:
        return r2;
    }

    private void getBoundsInParent(int, android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        androidx.customview.widget.ExploreByTouchHelper r0;
        int $i0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r2;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $r2 = virtualinvoke r0.obtainAccessibilityNodeInfo($i0);

        virtualinvoke $r2.getBoundsInParent($r1);

        return;
    }

    private static android.graphics.Rect guessPreviouslyFocusedRect(android.view.View, int, android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        int $i0, $i1, $i2;
        android.view.View $r0;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0;

        $i0 := @parameter1;

        $r1 := @parameter2;

        $i1 = virtualinvoke $r0.getWidth();

        $i2 = virtualinvoke $r0.getHeight();

        lookupswitch($i0)
        {
            case 17: goto label5;
            case 33: goto label4;
            case 66: goto label3;
            case 130: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<init>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        virtualinvoke $r1.set(0, -1, $i1, -1);

        return $r1;

     label3:
        virtualinvoke $r1.set(-1, 0, -1, $i2);

        return $r1;

     label4:
        virtualinvoke $r1.set(0, $i2, $i1, $i2);

        return $r1;

     label5:
        virtualinvoke $r1.set($i1, 0, $i1, $i2);

        return $r1;
    }

    private boolean isVisibleToUser(android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        android.view.ViewParent $r3;
        androidx.customview.widget.ExploreByTouchHelper r0;
        byte $b1;
        int $i0;
        android.view.View r2;
        float $f0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 == null goto label7;

        $z0 = virtualinvoke $r1.isEmpty();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r2 = r0.mHost;

        $i0 = virtualinvoke r2.getWindowVisibility();

        if $i0 == 0 goto label2;

        return 0;

     label2:
        r2 = r0.mHost;

        $r3 = virtualinvoke r2.getParent();

     label3:
        $z0 = $r3 instanceof android.view.View;

        if $z0 == 0 goto label6;

        r2 = (android.view.View) $r3;

        $f0 = virtualinvoke r2.getAlpha();

        $b1 = $f0 cmpg 0.0F;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label5;

        $i0 = virtualinvoke r2.getVisibility();

        if $i0 == 0 goto label4;

        return 0;

     label4:
        $r3 = virtualinvoke r2.getParent();

        goto label3;

     label5:
        return 0;

     label6:
        if $r3 == null goto label7;

        return 1;

     label7:
        return 0;
    }

    private static int keyToDirection(int)
    {
        int $i0;

        $i0 := @parameter0;

        lookupswitch($i0)
        {
            case 19: goto label4;
            case 20: goto label1;
            case 21: goto label3;
            case 22: goto label2;
            default: goto label1;
        };

     label1:
        return 130;

     label2:
        return 66;

     label3:
        return 17;

     label4:
        return 33;
    }

    private boolean moveFocus(int, android.graphics.Rect)
    {
        android.graphics.Rect $r1, r6;
        androidx.customview.widget.ExploreByTouchHelper r0;
        androidx.customview.widget.FocusStrategy$CollectionAdapter r8;
        androidx.customview.widget.FocusStrategy$BoundsAdapter $r9;
        java.lang.IllegalArgumentException r5;
        int $i0, i1;
        androidx.collection.SparseArrayCompat $r2;
        android.view.View r7;
        java.lang.Object $r4;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat r3;
        boolean z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $r2 = specialinvoke r0.getAllNodes();

        i1 = r0.mKeyboardFocusedVirtualViewId;

        if i1 != -2147483648 goto label01;

        r3 = null;

        goto label02;

     label01:
        $r4 = virtualinvoke $r2.get(i1);

        r3 = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat) $r4;

     label02:
        lookupswitch($i0)
        {
            case 1: goto label08;
            case 2: goto label08;
            case 17: goto label04;
            case 33: goto label04;
            case 66: goto label04;
            case 130: goto label04;
            default: goto label03;
        };

     label03:
        r5 = new java.lang.IllegalArgumentException;

        specialinvoke r5.<init>("direction must be one of {FOCUS_FORWARD, FOCUS_BACKWARD, FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw r5;

     label04:
        r6 = new android.graphics.Rect;

        specialinvoke r6.<init>();

        i1 = r0.mKeyboardFocusedVirtualViewId;

        if i1 == -2147483648 goto label05;

        specialinvoke r0.getBoundsInParent(i1, r6);

        goto label07;

     label05:
        if $r1 == null goto label06;

        virtualinvoke r6.set($r1);

        goto label07;

     label06:
        r7 = r0.mHost;

        androidx.customview.widget.ExploreByTouchHelper.guessPreviouslyFocusedRect(r7, $i0, r6);

     label07:
        r8 = androidx.customview.widget.ExploreByTouchHelper.SPARSE_VALUES_ADAPTER;

        $r9 = androidx.customview.widget.ExploreByTouchHelper.NODE_ADAPTER;

        $r4 = androidx.customview.widget.FocusStrategy.findNextFocusInAbsoluteDirection($r2, r8, $r9, r3, r6, $i0);

        r3 = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat) $r4;

        goto label11;

     label08:
        r7 = r0.mHost;

        i1 = androidx.core.view.ViewCompat.getLayoutDirection(r7);

        if i1 != 1 goto label09;

        z0 = 1;

        goto label10;

     label09:
        z0 = 0;

     label10:
        r8 = androidx.customview.widget.ExploreByTouchHelper.SPARSE_VALUES_ADAPTER;

        $r9 = androidx.customview.widget.ExploreByTouchHelper.NODE_ADAPTER;

        $r4 = androidx.customview.widget.FocusStrategy.findNextFocusInRelativeDirection($r2, r8, $r9, r3, $i0, z0, 0);

        r3 = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat) $r4;

     label11:
        if r3 != null goto label12;

        $i0 = -2147483648;

        goto label13;

     label12:
        $i0 = virtualinvoke $r2.indexOfValue(r3);

        $i0 = virtualinvoke $r2.keyAt($i0);

     label13:
        z0 = virtualinvoke r0.requestKeyboardFocusForVirtualView($i0);

        return z0;
    }

    private boolean performActionForChild(int, int, android.os.Bundle)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.os.Bundle $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $r1 := @parameter2;

        lookupswitch($i1)
        {
            case 1: goto label5;
            case 2: goto label4;
            case 64: goto label3;
            case 128: goto label2;
            default: goto label1;
        };

     label1:
        $z0 = virtualinvoke r0.onPerformActionForVirtualView($i0, $i1, $r1);

        return $z0;

     label2:
        $z0 = specialinvoke r0.clearAccessibilityFocus($i0);

        return $z0;

     label3:
        $z0 = specialinvoke r0.requestAccessibilityFocus($i0);

        return $z0;

     label4:
        $z0 = virtualinvoke r0.clearKeyboardFocusForVirtualView($i0);

        return $z0;

     label5:
        $z0 = virtualinvoke r0.requestKeyboardFocusForVirtualView($i0);

        return $z0;
    }

    private boolean performActionForHost(int, android.os.Bundle)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.os.Bundle $r1;
        int $i0;
        android.view.View $r2;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $r2 = r0.mHost;

        $z0 = androidx.core.view.ViewCompat.performAccessibilityAction($r2, $i0, $r1);

        return $z0;
    }

    private boolean requestAccessibilityFocus(int)
    {
        android.view.accessibility.AccessibilityManager $r1;
        androidx.customview.widget.ExploreByTouchHelper r0;
        int $i0, $i1;
        android.view.View $r2;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mManager;

        $z0 = virtualinvoke $r1.isEnabled();

        if $z0 == 0 goto label3;

        $r1 = r0.mManager;

        $z0 = virtualinvoke $r1.isTouchExplorationEnabled();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i1 = r0.mAccessibilityFocusedVirtualViewId;

        if $i1 == $i0 goto label3;

        if $i1 == -2147483648 goto label2;

        specialinvoke r0.clearAccessibilityFocus($i1);

     label2:
        r0.mAccessibilityFocusedVirtualViewId = $i0;

        $r2 = r0.mHost;

        virtualinvoke $r2.invalidate();

        virtualinvoke r0.sendEventForVirtualView($i0, 32768);

        return 1;

     label3:
        return 0;
    }

    private void updateHoveredVirtualView(int)
    {
        int $i0, i1;
        androidx.customview.widget.ExploreByTouchHelper r0;

        r0 := @this;

        $i0 := @parameter0;

        i1 = r0.mHoveredVirtualViewId;

        if i1 != $i0 goto label1;

        return;

     label1:
        i1 = r0.mHoveredVirtualViewId;

        r0.mHoveredVirtualViewId = $i0;

        virtualinvoke r0.sendEventForVirtualView($i0, 128);

        virtualinvoke r0.sendEventForVirtualView(i1, 256);

        return;
    }

    public final boolean clearKeyboardFocusForVirtualView(int)
    {
        int $i0, $i1;
        androidx.customview.widget.ExploreByTouchHelper r0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 = r0.mKeyboardFocusedVirtualViewId;

        if $i1 == $i0 goto label1;

        return 0;

     label1:
        r0.mKeyboardFocusedVirtualViewId = -2147483648;

        virtualinvoke r0.onVirtualViewKeyboardFocusChanged($i0, 0);

        virtualinvoke r0.sendEventForVirtualView($i0, 8);

        return 1;
    }

    public final boolean dispatchHoverEvent(android.view.MotionEvent)
    {
        android.view.accessibility.AccessibilityManager r2;
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.view.MotionEvent $r1;
        int $i0;
        float $f0, $f1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mManager;

        $z0 = virtualinvoke r2.isEnabled();

        if $z0 == 0 goto label6;

        r2 = r0.mManager;

        $z0 = virtualinvoke r2.isTouchExplorationEnabled();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r1.getAction();

        lookupswitch($i0)
        {
            case 7: goto label5;
            case 8: goto label2;
            case 9: goto label5;
            case 10: goto label3;
            default: goto label2;
        };

     label2:
        return 0;

     label3:
        $i0 = r0.mHoveredVirtualViewId;

        if $i0 == -2147483648 goto label4;

        specialinvoke r0.updateHoveredVirtualView(-2147483648);

        return 1;

     label4:
        return 0;

     label5:
        $f0 = virtualinvoke $r1.getX();

        $f1 = virtualinvoke $r1.getY();

        $i0 = virtualinvoke r0.getVirtualViewAt($f0, $f1);

        specialinvoke r0.updateHoveredVirtualView($i0);

        if $i0 == -2147483648 goto label6;

        return 1;

     label6:
        return 0;
    }

    public final boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.view.KeyEvent $r1;
        int $i0, $i1, i2;
        boolean z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        z0 = 0;

        $i0 = virtualinvoke $r1.getAction();

        if $i0 == 1 goto label8;

        $i0 = virtualinvoke $r1.getKeyCode();

        lookupswitch($i0)
        {
            case 19: goto label5;
            case 20: goto label5;
            case 21: goto label5;
            case 22: goto label5;
            case 23: goto label4;
            case 61: goto label2;
            case 66: goto label4;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        z0 = virtualinvoke $r1.hasNoModifiers();

        if z0 == 0 goto label3;

        z0 = specialinvoke r0.moveFocus(2, null);

        return z0;

     label3:
        z0 = virtualinvoke $r1.hasModifiers(1);

        if z0 == 0 goto label8;

        z0 = specialinvoke r0.moveFocus(1, null);

        return z0;

     label4:
        z0 = virtualinvoke $r1.hasNoModifiers();

        if z0 == 0 goto label8;

        $i0 = virtualinvoke $r1.getRepeatCount();

        if $i0 != 0 goto label8;

        specialinvoke r0.clickKeyboardFocusedVirtualView();

        return 1;

     label5:
        $z1 = virtualinvoke $r1.hasNoModifiers();

        if $z1 == 0 goto label8;

        $i0 = androidx.customview.widget.ExploreByTouchHelper.keyToDirection($i0);

        $i1 = virtualinvoke $r1.getRepeatCount();

        $i1 = $i1 + 1;

        i2 = 0;

     label6:
        if i2 >= $i1 goto label7;

        $z1 = specialinvoke r0.moveFocus($i0, null);

        if $z1 == 0 goto label7;

        z0 = 1;

        i2 = i2 + 1;

        goto label6;

     label7:
        return z0;

     label8:
        return 0;
    }

    public final int getAccessibilityFocusedVirtualViewId()
    {
        int i0;
        androidx.customview.widget.ExploreByTouchHelper r0;

        r0 := @this;

        i0 = r0.mAccessibilityFocusedVirtualViewId;

        return i0;
    }

    public androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    {
        android.view.View $r1;
        androidx.customview.widget.ExploreByTouchHelper r0;
        androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mNodeProvider;

        if $r2 != null goto label1;

        $r2 = new androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider;

        specialinvoke $r2.<init>(r0);

        r0.mNodeProvider = $r2;

     label1:
        $r2 = r0.mNodeProvider;

        return $r2;
    }

    public int getFocusedVirtualView()
    {
        int $i0;
        androidx.customview.widget.ExploreByTouchHelper r0;

        r0 := @this;

        $i0 = virtualinvoke r0.getAccessibilityFocusedVirtualViewId();

        return $i0;
    }

    public final int getKeyboardFocusedVirtualViewId()
    {
        int i0;
        androidx.customview.widget.ExploreByTouchHelper r0;

        r0 := @this;

        i0 = r0.mKeyboardFocusedVirtualViewId;

        return i0;
    }

    protected abstract int getVirtualViewAt(float, float);

    protected abstract void getVisibleVirtualViews(java.util.List);

    public final void invalidateRoot()
    {
        androidx.customview.widget.ExploreByTouchHelper r0;

        r0 := @this;

        virtualinvoke r0.invalidateVirtualView(-1, 1);

        return;
    }

    public final void invalidateVirtualView(int)
    {
        int $i0;
        androidx.customview.widget.ExploreByTouchHelper r0;

        r0 := @this;

        $i0 := @parameter0;

        virtualinvoke r0.invalidateVirtualView($i0, 0);

        return;
    }

    public final void invalidateVirtualView(int, int)
    {
        android.view.ViewParent $r3;
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.view.accessibility.AccessibilityManager r2;
        int $i0, $i1;
        android.view.View $r1;
        android.view.accessibility.AccessibilityEvent $r4;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        if $i0 == -2147483648 goto label1;

        r2 = r0.mManager;

        $z0 = virtualinvoke r2.isEnabled();

        if $z0 == 0 goto label1;

        $r1 = r0.mHost;

        $r3 = virtualinvoke $r1.getParent();

        if $r3 == null goto label1;

        $r4 = specialinvoke r0.createEvent($i0, 2048);

        androidx.core.view.accessibility.AccessibilityEventCompat.setContentChangeTypes($r4, $i1);

        $r1 = r0.mHost;

        androidx.core.view.ViewParentCompat.requestSendAccessibilityEvent($r3, $r1, $r4);

     label1:
        return;
    }

    androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int)
    {
        int $i0;
        androidx.customview.widget.ExploreByTouchHelper r0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r1;

        r0 := @this;

        $i0 := @parameter0;

        if $i0 != -1 goto label1;

        $r1 = specialinvoke r0.createNodeForHost();

        return $r1;

     label1:
        $r1 = specialinvoke r0.createNodeForChild($i0);

        return $r1;
    }

    public final void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        androidx.customview.widget.ExploreByTouchHelper r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        $i0 := @parameter1;

        $r1 := @parameter2;

        $i1 = r0.mKeyboardFocusedVirtualViewId;

        if $i1 == -2147483648 goto label1;

        virtualinvoke r0.clearKeyboardFocusForVirtualView($i1);

     label1:
        if $z0 == 0 goto label2;

        specialinvoke r0.moveFocus($i0, $r1);

     label2:
        return;
    }

    public void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.view.View $r1;
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.view.accessibility.AccessibilityEvent $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.onInitializeAccessibilityEvent($r1, $r2);

        virtualinvoke r0.onPopulateEventForHost($r2);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.view.View $r1;
        androidx.customview.widget.ExploreByTouchHelper r0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.onInitializeAccessibilityNodeInfo($r1, $r2);

        virtualinvoke r0.onPopulateNodeForHost($r2);

        return;
    }

    protected abstract boolean onPerformActionForVirtualView(int, int, android.os.Bundle);

    protected void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.view.accessibility.AccessibilityEvent $r1;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    protected void onPopulateEventForVirtualView(int, android.view.accessibility.AccessibilityEvent)
    {
        int $i0;
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.view.accessibility.AccessibilityEvent $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        return;
    }

    protected void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r1;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    protected abstract void onPopulateNodeForVirtualView(int, androidx.core.view.accessibility.AccessibilityNodeInfoCompat);

    protected void onVirtualViewKeyboardFocusChanged(int, boolean)
    {
        int $i0;
        androidx.customview.widget.ExploreByTouchHelper r0;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $z0 := @parameter1;

        return;
    }

    boolean performAction(int, int, android.os.Bundle)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.os.Bundle $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $r1 := @parameter2;

        lookupswitch($i0)
        {
            case -1: goto label2;
            default: goto label1;
        };

     label1:
        $z0 = specialinvoke r0.performActionForChild($i0, $i1, $r1);

        return $z0;

     label2:
        $z0 = specialinvoke r0.performActionForHost($i1, $r1);

        return $z0;
    }

    public final boolean requestKeyboardFocusForVirtualView(int)
    {
        androidx.customview.widget.ExploreByTouchHelper r0;
        int $i0, $i1;
        android.view.View $r1;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mHost;

        $z0 = virtualinvoke $r1.isFocused();

        if $z0 != 0 goto label1;

        $r1 = r0.mHost;

        $z0 = virtualinvoke $r1.requestFocus();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i1 = r0.mKeyboardFocusedVirtualViewId;

        if $i1 != $i0 goto label2;

        return 0;

     label2:
        if $i1 == -2147483648 goto label3;

        virtualinvoke r0.clearKeyboardFocusForVirtualView($i1);

     label3:
        r0.mKeyboardFocusedVirtualViewId = $i0;

        virtualinvoke r0.onVirtualViewKeyboardFocusChanged($i0, 1);

        virtualinvoke r0.sendEventForVirtualView($i0, 8);

        return 1;
    }

    public final boolean sendEventForVirtualView(int, int)
    {
        android.view.ViewParent $r3;
        androidx.customview.widget.ExploreByTouchHelper r0;
        android.view.accessibility.AccessibilityManager r1;
        int $i0, $i1;
        android.view.View r2;
        android.view.accessibility.AccessibilityEvent $r4;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        if $i0 == -2147483648 goto label3;

        r1 = r0.mManager;

        $z0 = virtualinvoke r1.isEnabled();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = r0.mHost;

        $r3 = virtualinvoke r2.getParent();

        if $r3 != null goto label2;

        return 0;

     label2:
        $r4 = specialinvoke r0.createEvent($i0, $i1);

        r2 = r0.mHost;

        $z0 = androidx.core.view.ViewParentCompat.requestSendAccessibilityEvent($r3, r2, $r4);

        return $z0;

     label3:
        return 0;
    }
}
