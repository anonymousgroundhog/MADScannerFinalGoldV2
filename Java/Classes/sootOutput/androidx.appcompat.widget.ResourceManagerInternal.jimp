public final class androidx.appcompat.widget.ResourceManagerInternal extends java.lang.Object
{
    private static final androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE;
    private static final boolean DEBUG;
    private static final android.graphics.PorterDuff$Mode DEFAULT_MODE;
    private static androidx.appcompat.widget.ResourceManagerInternal INSTANCE;
    private static final java.lang.String PLATFORM_VD_CLAZZ;
    private static final java.lang.String SKIP_DRAWABLE_TAG;
    private static final java.lang.String TAG;
    private androidx.collection.SimpleArrayMap mDelegates;
    private final java.util.WeakHashMap mDrawableCaches;
    private boolean mHasCheckedVectorDrawableSetup;
    private androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks;
    private androidx.collection.SparseArrayCompat mKnownDrawableIdTags;
    private java.util.WeakHashMap mTintLists;
    private android.util.TypedValue mTypedValue;

    static void <clinit>()
    {
        android.graphics.PorterDuff$Mode $r0;
        androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache $r1;

        $r0 = android.graphics.PorterDuff$Mode.SRC_IN;

        androidx.appcompat.widget.ResourceManagerInternal.DEFAULT_MODE = $r0;

        $r1 = new androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache;

        specialinvoke $r1.<init>(6);

        androidx.appcompat.widget.ResourceManagerInternal.COLOR_FILTER_CACHE = $r1;

        return;
    }

    public void <init>()
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        java.util.WeakHashMap $r1;

        r0 := @this;

        specialinvoke r0.<init>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<init>(0);

        r0.mDrawableCaches = $r1;

        return;
    }

    private void addDelegate(java.lang.String, androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)
    {
        androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate $r2;
        androidx.appcompat.widget.ResourceManagerInternal r0;
        java.lang.String $r1;
        androidx.collection.SimpleArrayMap $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = r0.mDelegates;

        if $r3 != null goto label1;

        $r3 = new androidx.collection.SimpleArrayMap;

        specialinvoke $r3.<init>();

        r0.mDelegates = $r3;

     label1:
        $r3 = r0.mDelegates;

        virtualinvoke $r3.put($r1, $r2);

        return;
    }

    private boolean addDrawableToCache(android.content.Context, long, android.graphics.drawable.Drawable)
    {
        java.lang.Throwable $r9;
        android.content.Context $r2;
        androidx.collection.LongSparseArray r6, $r7;
        long $l0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.Drawable$ConstantState $r3;
        androidx.appcompat.widget.ResourceManagerInternal r0;
        java.lang.Object $r5;
        java.lang.ref.WeakReference $r8;
        java.util.WeakHashMap r4;

        r0 := @this;

        $r2 := @parameter0;

        $l0 := @parameter1;

        $r1 := @parameter2;

        entermonitor r0;

     label1:
        $r3 = virtualinvoke $r1.getConstantState();

        if $r3 == null goto label4;

        r4 = r0.mDrawableCaches;

        $r5 = virtualinvoke r4.get($r2);

        r6 = (androidx.collection.LongSparseArray) $r5;

        if r6 != null goto label2;

        $r7 = new androidx.collection.LongSparseArray;

        specialinvoke $r7.<init>();

        r6 = $r7;

        r4 = r0.mDrawableCaches;

        virtualinvoke r4.put($r2, $r7);

     label2:
        $r8 = new java.lang.ref.WeakReference;

        specialinvoke $r8.<init>($r3);

        virtualinvoke r6.put($l0, $r8);

     label3:
        exitmonitor r0;

        return 1;

     label4:
        exitmonitor r0;

        return 0;

     label5:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    private void addTintListToCache(android.content.Context, int, android.content.res.ColorStateList)
    {
        android.content.Context $r1;
        android.content.res.ColorStateList $r2;
        androidx.appcompat.widget.ResourceManagerInternal r0;
        int $i0;
        androidx.collection.SparseArrayCompat r5, $r6;
        java.lang.Object $r3;
        java.util.WeakHashMap r4;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 := @parameter2;

        r4 = r0.mTintLists;

        if r4 != null goto label1;

        r4 = new java.util.WeakHashMap;

        specialinvoke r4.<init>();

        r0.mTintLists = r4;

     label1:
        r4 = r0.mTintLists;

        $r3 = virtualinvoke r4.get($r1);

        r5 = (androidx.collection.SparseArrayCompat) $r3;

        if r5 != null goto label2;

        $r6 = new androidx.collection.SparseArrayCompat;

        specialinvoke $r6.<init>();

        r5 = $r6;

        r4 = r0.mTintLists;

        virtualinvoke r4.put($r1, $r6);

     label2:
        virtualinvoke r5.append($i0, $r2);

        return;
    }

    private void checkVectorDrawableSetup(android.content.Context)
    {
        android.content.Context $r1;
        java.lang.IllegalStateException $r3;
        androidx.appcompat.widget.ResourceManagerInternal r0;
        int i0;
        android.graphics.drawable.Drawable $r2;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        z0 = r0.mHasCheckedVectorDrawableSetup;

        if z0 == 0 goto label1;

        return;

     label1:
        r0.mHasCheckedVectorDrawableSetup = 1;

        i0 = androidx.appcompat.resources.R$drawable.abc_vector_test;

        $r2 = virtualinvoke r0.getDrawable($r1, i0);

        if $r2 == null goto label2;

        z0 = androidx.appcompat.widget.ResourceManagerInternal.isVectorDrawable($r2);

        if z0 == 0 goto label2;

        return;

     label2:
        r0.mHasCheckedVectorDrawableSetup = 0;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<init>("This app has been built with an incorrect configuration. Please configure your build for VectorDrawableCompat.");

        throw $r3;
    }

    private static long createCacheKey(android.util.TypedValue)
    {
        android.util.TypedValue $r0;
        int $i0;
        long $l1, $l2;

        $r0 := @parameter0;

        $i0 = $r0.assetCookie;

        $l1 = (long) $i0;

        $l1 = $l1 << 32;

        $i0 = $r0.data;

        $l2 = (long) $i0;

        $l1 = $l1 | $l2;

        return $l1;
    }

    private android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context, int)
    {
        android.content.Context $r1;
        long $l1;
        android.graphics.drawable.Drawable $r4;
        android.util.TypedValue r2;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks $r5;
        androidx.appcompat.widget.ResourceManagerInternal r0;
        int $i0;
        android.content.res.Resources $r3;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        r2 = r0.mTypedValue;

        if r2 != null goto label1;

        r2 = new android.util.TypedValue;

        specialinvoke r2.<init>();

        r0.mTypedValue = r2;

     label1:
        r2 = r0.mTypedValue;

        $r3 = virtualinvoke $r1.getResources();

        virtualinvoke $r3.getValue($i0, r2, 1);

        $l1 = androidx.appcompat.widget.ResourceManagerInternal.createCacheKey(r2);

        $r4 = specialinvoke r0.getCachedDrawable($r1, $l1);

        if $r4 == null goto label2;

        return $r4;

     label2:
        $r5 = r0.mHooks;

        if $r5 != null goto label3;

        $r4 = null;

        goto label4;

     label3:
        $r4 = interfaceinvoke $r5.createDrawableFor(r0, $r1, $i0);

     label4:
        if $r4 == null goto label5;

        $i0 = r2.changingConfigurations;

        virtualinvoke $r4.setChangingConfigurations($i0);

        specialinvoke r0.addDrawableToCache($r1, $l1, $r4);

     label5:
        return $r4;
    }

    private static android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList, android.graphics.PorterDuff$Mode, int[])
    {
        android.content.res.ColorStateList $r0;
        int[] $r2;
        int $i0;
        android.graphics.PorterDuffColorFilter $r3;
        android.graphics.PorterDuff$Mode $r1;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        if $r0 == null goto label2;

        if $r1 != null goto label1;

        goto label2;

     label1:
        $i0 = virtualinvoke $r0.getColorForState($r2, 0);

        $r3 = androidx.appcompat.widget.ResourceManagerInternal.getPorterDuffColorFilter($i0, $r1);

        return $r3;

     label2:
        return null;
    }

    public static androidx.appcompat.widget.ResourceManagerInternal get()
    {
        androidx.appcompat.widget.ResourceManagerInternal $r0;
        java.lang.Throwable $r1;

        entermonitor class "Landroidx/appcompat/widget/ResourceManagerInternal;";

     label1:
        $r0 = androidx.appcompat.widget.ResourceManagerInternal.INSTANCE;

        if $r0 != null goto label2;

        $r0 = new androidx.appcompat.widget.ResourceManagerInternal;

        specialinvoke $r0.<init>();

        androidx.appcompat.widget.ResourceManagerInternal.INSTANCE = $r0;

        androidx.appcompat.widget.ResourceManagerInternal.installDefaultInflateDelegates($r0);

     label2:
        $r0 = androidx.appcompat.widget.ResourceManagerInternal.INSTANCE;

     label3:
        exitmonitor class "Landroidx/appcompat/widget/ResourceManagerInternal;";

        return $r0;

     label4:
        $r1 := @caughtexception;

        exitmonitor class "Landroidx/appcompat/widget/ResourceManagerInternal;";

        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    private android.graphics.drawable.Drawable getCachedDrawable(android.content.Context, long)
    {
        java.lang.Throwable $r9;
        android.content.Context $r1;
        androidx.collection.LongSparseArray r4;
        long $l0;
        android.graphics.drawable.Drawable $r8;
        android.graphics.drawable.Drawable$ConstantState r6;
        androidx.appcompat.widget.ResourceManagerInternal r0;
        java.lang.Object $r3;
        java.lang.ref.WeakReference r5;
        java.util.WeakHashMap r2;
        android.content.res.Resources $r7;

        r0 := @this;

        $r1 := @parameter0;

        $l0 := @parameter1;

        entermonitor r0;

     label1:
        r2 = r0.mDrawableCaches;

        $r3 = virtualinvoke r2.get($r1);

        r4 = (androidx.collection.LongSparseArray) $r3;

     label2:
        if r4 != null goto label3;

        exitmonitor r0;

        return null;

     label3:
        $r3 = virtualinvoke r4.get($l0);

        r5 = (java.lang.ref.WeakReference) $r3;

        if r5 == null goto label6;

        $r3 = virtualinvoke r5.get();

        r6 = (android.graphics.drawable.Drawable$ConstantState) $r3;

        if r6 == null goto label5;

        $r7 = virtualinvoke $r1.getResources();

        $r8 = virtualinvoke r6.newDrawable($r7);

     label4:
        exitmonitor r0;

        return $r8;

     label5:
        virtualinvoke r4.remove($l0);

     label6:
        exitmonitor r0;

        return null;

     label7:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public static android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int, android.graphics.PorterDuff$Mode)
    {
        java.lang.Throwable $r4;
        int $i0;
        android.graphics.PorterDuffColorFilter $r2, r3;
        android.graphics.PorterDuff$Mode $r0;
        androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache $r1;

        $i0 := @parameter0;

        $r0 := @parameter1;

        entermonitor class "Landroidx/appcompat/widget/ResourceManagerInternal;";

     label1:
        $r1 = androidx.appcompat.widget.ResourceManagerInternal.COLOR_FILTER_CACHE;

        $r2 = virtualinvoke $r1.get($i0, $r0);

        r3 = $r2;

        if $r2 != null goto label2;

        $r2 = new android.graphics.PorterDuffColorFilter;

        specialinvoke $r2.<init>($i0, $r0);

        r3 = $r2;

        virtualinvoke $r1.put($i0, $r0, $r2);

     label2:
        exitmonitor class "Landroidx/appcompat/widget/ResourceManagerInternal;";

        return r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor class "Landroidx/appcompat/widget/ResourceManagerInternal;";

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private android.content.res.ColorStateList getTintListFromCache(android.content.Context, int)
    {
        android.content.res.ColorStateList $r5;
        android.content.Context $r1;
        androidx.appcompat.widget.ResourceManagerInternal r0;
        int $i0;
        androidx.collection.SparseArrayCompat r4;
        java.lang.Object $r3;
        java.util.WeakHashMap r2;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        r2 = r0.mTintLists;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.get($r1);

        r4 = (androidx.collection.SparseArrayCompat) $r3;

        if r4 == null goto label1;

        $r3 = virtualinvoke r4.get($i0);

        $r5 = (android.content.res.ColorStateList) $r3;

        return $r5;

     label1:
        return null;
    }

    private static void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)
    {
        androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate $r2;
        androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate $r1;
        androidx.appcompat.widget.ResourceManagerInternal $r0;
        int $i0;
        androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate $r3;

        $r0 := @parameter0;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 >= 24 goto label1;

        $r1 = new androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate;

        specialinvoke $r1.<init>();

        specialinvoke $r0.addDelegate("vector", $r1);

        $r2 = new androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate;

        specialinvoke $r2.<init>();

        specialinvoke $r0.addDelegate("animated-vector", $r2);

        $r3 = new androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate;

        specialinvoke $r3.<init>();

        specialinvoke $r0.addDelegate("animated-selector", $r3);

     label1:
        return;
    }

    private static boolean isVectorDrawable(android.graphics.drawable.Drawable)
    {
        java.lang.Class $r2;
        java.lang.String $r1, $r3;
        android.graphics.drawable.Drawable $r0;
        boolean $z0;

        $r0 := @parameter0;

        $z0 = $r0 instanceof androidx.vectordrawable.graphics.drawable.VectorDrawableCompat;

        if $z0 != 0 goto label2;

        $r2 = virtualinvoke $r0.getClass();

        $r3 = virtualinvoke $r2.getName();

        $r1 = "android.graphics.drawable.VectorDrawable";

        $z0 = virtualinvoke $r1.equals($r3);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context, int)
    {
        android.content.Context r1;
        android.content.res.XmlResourceParser $r12;
        long $l1;
        android.graphics.drawable.Drawable $r9, r10;
        android.util.AttributeSet $r13;
        androidx.appcompat.widget.ResourceManagerInternal r0;
        int i0, $i2;
        androidx.collection.SparseArrayCompat r4;
        java.lang.String $r2, r6;
        android.content.res.Resources$Theme $r15;
        androidx.collection.SimpleArrayMap r3;
        boolean $z0;
        java.lang.CharSequence r11;
        java.lang.Exception r17;
        org.xmlpull.v1.XmlPullParserException r16;
        android.util.TypedValue r7;
        androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate r14;
        java.lang.Object $r5;
        android.content.res.Resources $r8;

        r0 := @this;

        r1 := @parameter0;

        i0 := @parameter1;

        r3 = r0.mDelegates;

        if r3 == null goto label22;

        $z0 = virtualinvoke r3.isEmpty();

        if $z0 != 0 goto label22;

        r4 = r0.mKnownDrawableIdTags;

        $r2 = "appcompat_skip_skip";

        if r4 == null goto label03;

        $r5 = virtualinvoke r4.get(i0);

        r6 = (java.lang.String) $r5;

        $z0 = virtualinvoke $r2.equals(r6);

        if $z0 != 0 goto label02;

        if r6 == null goto label01;

        r3 = r0.mDelegates;

        $r5 = virtualinvoke r3.get(r6);

        if $r5 != null goto label01;

        return null;

     label01:
        goto label04;

     label02:
        return null;

     label03:
        r4 = new androidx.collection.SparseArrayCompat;

        specialinvoke r4.<init>();

        r0.mKnownDrawableIdTags = r4;

     label04:
        r7 = r0.mTypedValue;

        if r7 != null goto label05;

        r7 = new android.util.TypedValue;

        specialinvoke r7.<init>();

        r0.mTypedValue = r7;

     label05:
        r7 = r0.mTypedValue;

        $r8 = virtualinvoke r1.getResources();

        virtualinvoke $r8.getValue(i0, r7, 1);

        $l1 = androidx.appcompat.widget.ResourceManagerInternal.createCacheKey(r7);

        $r9 = specialinvoke r0.getCachedDrawable(r1, $l1);

        r10 = $r9;

        if $r9 == null goto label06;

        return $r9;

     label06:
        r11 = r7.string;

        if r11 == null goto label21;

        r11 = r7.string;

        $r2 = interfaceinvoke r11.toString();

        $z0 = virtualinvoke $r2.endsWith(".xml");

        if $z0 == 0 goto label21;

     label07:
        $r12 = virtualinvoke $r8.getXml(i0);

        $r13 = android.util.Xml.asAttributeSet($r12);

     label08:
        $i2 = interfaceinvoke $r12.next();

     label09:
        if $i2 == 2 goto label10;

        if $i2 == 1 goto label10;

        goto label08;

     label10:
        if $i2 != 2 goto label18;

     label11:
        $r2 = interfaceinvoke $r12.getName();

        r4 = r0.mKnownDrawableIdTags;

        virtualinvoke r4.append(i0, $r2);

        r3 = r0.mDelegates;

        $r5 = virtualinvoke r3.get($r2);

        r14 = (androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) $r5;

     label12:
        if r14 == null goto label15;

     label13:
        $r15 = virtualinvoke r1.getTheme();

        $r9 = interfaceinvoke r14.createFromXmlInner(r1, $r12, $r13, $r15);

     label14:
        r10 = $r9;

     label15:
        if r10 == null goto label17;

     label16:
        $i2 = r7.changingConfigurations;

        virtualinvoke r10.setChangingConfigurations($i2);

        specialinvoke r0.addDrawableToCache(r1, $l1, r10);

     label17:
        goto label21;

     label18:
        r16 = new org.xmlpull.v1.XmlPullParserException;

     label19:
        specialinvoke r16.<init>("No start tag found");

        throw r16;

     label20:
        r17 := @caughtexception;

        android.util.Log.e("ResourceManagerInternal", "Exception while inflating drawable", r17);

     label21:
        if r10 != null goto label23;

        r4 = r0.mKnownDrawableIdTags;

        virtualinvoke r4.append(i0, "appcompat_skip_skip");

        return r10;

     label22:
        return null;

     label23:
        return r10;

        catch java.lang.Exception from label07 to label09 with label20;
        catch java.lang.Exception from label11 to label12 with label20;
        catch java.lang.Exception from label13 to label14 with label20;
        catch java.lang.Exception from label16 to label17 with label20;
        catch java.lang.Exception from label19 to label20 with label20;
    }

    private android.graphics.drawable.Drawable tintDrawable(android.content.Context, int, boolean, android.graphics.drawable.Drawable)
    {
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2, $r4;
        android.graphics.PorterDuff$Mode $r5;
        android.content.res.ColorStateList $r3;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks r6;
        androidx.appcompat.widget.ResourceManagerInternal r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $z0 := @parameter2;

        $r2 := @parameter3;

        $r3 = virtualinvoke r0.getTintList($r1, $i0);

        if $r3 == null goto label3;

        $z0 = androidx.appcompat.widget.DrawableUtils.canSafelyMutateDrawable($r2);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r2.mutate();

     label1:
        $r4 = androidx.core.graphics.drawable.DrawableCompat.wrap($r2);

        $r2 = $r4;

        androidx.core.graphics.drawable.DrawableCompat.setTintList($r4, $r3);

        $r5 = virtualinvoke r0.getTintMode($i0);

        if $r5 == null goto label2;

        androidx.core.graphics.drawable.DrawableCompat.setTintMode($r4, $r5);

     label2:
        return $r2;

     label3:
        r6 = r0.mHooks;

        if r6 == null goto label4;

        $z1 = interfaceinvoke r6.tintDrawable($r1, $i0, $r2);

        if $z1 == 0 goto label4;

        goto label2;

     label4:
        $z1 = virtualinvoke r0.tintDrawableUsingColorFilter($r1, $i0, $r2);

        if $z1 != 0 goto label5;

        if $z0 == 0 goto label5;

        return null;

     label5:
        return $r2;
    }

    static void tintDrawable(android.graphics.drawable.Drawable, androidx.appcompat.widget.TintInfo, int[])
    {
        android.graphics.drawable.Drawable $r0, $r3;
        androidx.appcompat.widget.TintInfo $r1;
        android.graphics.PorterDuff$Mode $r5;
        android.content.res.ColorStateList $r4;
        int[] $r2;
        int $i0;
        android.graphics.PorterDuffColorFilter $r6;
        boolean $z0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        $z0 = androidx.appcompat.widget.DrawableUtils.canSafelyMutateDrawable($r0);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r0.mutate();

        if $r3 == $r0 goto label1;

        android.util.Log.d("ResourceManagerInternal", "Mutated drawable is not the same instance as the input.");

        return;

     label1:
        $z0 = $r1.mHasTintList;

        if $z0 != 0 goto label3;

        $z0 = $r1.mHasTintMode;

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        virtualinvoke $r0.clearColorFilter();

        goto label8;

     label3:
        $z0 = $r1.mHasTintList;

        if $z0 == 0 goto label4;

        $r4 = $r1.mTintList;

        goto label5;

     label4:
        $r4 = null;

     label5:
        $z0 = $r1.mHasTintMode;

        if $z0 == 0 goto label6;

        $r5 = $r1.mTintMode;

        goto label7;

     label6:
        $r5 = androidx.appcompat.widget.ResourceManagerInternal.DEFAULT_MODE;

     label7:
        $r6 = androidx.appcompat.widget.ResourceManagerInternal.createTintFilter($r4, $r5, $r2);

        virtualinvoke $r0.setColorFilter($r6);

     label8:
        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 > 23 goto label9;

        virtualinvoke $r0.invalidateSelf();

     label9:
        return;
    }

    public android.graphics.drawable.Drawable getDrawable(android.content.Context, int)
    {
        java.lang.Throwable $r3;
        android.content.Context $r2;
        androidx.appcompat.widget.ResourceManagerInternal r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r2 := @parameter0;

        $i0 := @parameter1;

        entermonitor r0;

     label1:
        $r1 = virtualinvoke r0.getDrawable($r2, $i0, 0);

     label2:
        exitmonitor r0;

        return $r1;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    android.graphics.drawable.Drawable getDrawable(android.content.Context, int, boolean)
    {
        java.lang.Throwable $r4;
        android.content.Context $r1;
        androidx.appcompat.widget.ResourceManagerInternal r0;
        int $i0;
        android.graphics.drawable.Drawable $r2, r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $z0 := @parameter2;

        entermonitor r0;

     label1:
        specialinvoke r0.checkVectorDrawableSetup($r1);

        $r2 = specialinvoke r0.loadDrawableFromDelegates($r1, $i0);

        r3 = $r2;

        if $r2 != null goto label2;

        r3 = specialinvoke r0.createDrawableIfNeeded($r1, $i0);

     label2:
        if r3 != null goto label3;

        r3 = androidx.core.content.ContextCompat.getDrawable($r1, $i0);

     label3:
        if r3 == null goto label4;

        r3 = specialinvoke r0.tintDrawable($r1, $i0, $z0, r3);

     label4:
        if r3 == null goto label5;

        androidx.appcompat.widget.DrawableUtils.fixDrawable(r3);

     label5:
        exitmonitor r0;

        return r3;

     label6:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label5 with label6;
    }

    android.content.res.ColorStateList getTintList(android.content.Context, int)
    {
        android.content.res.ColorStateList $r2, r3;
        java.lang.Throwable $r5;
        android.content.Context $r1;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks $r4;
        androidx.appcompat.widget.ResourceManagerInternal r0;
        int $i0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        entermonitor r0;

     label1:
        $r2 = specialinvoke r0.getTintListFromCache($r1, $i0);

        r3 = $r2;

        if $r2 != null goto label4;

        $r4 = r0.mHooks;

        if $r4 != null goto label2;

        $r2 = null;

        goto label3;

     label2:
        $r2 = interfaceinvoke $r4.getTintListForDrawableRes($r1, $i0);

     label3:
        r3 = $r2;

        if $r2 == null goto label4;

        specialinvoke r0.addTintListToCache($r1, $i0, $r2);

     label4:
        exitmonitor r0;

        return r3;

     label5:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    android.graphics.PorterDuff$Mode getTintMode(int)
    {
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks $r2;
        androidx.appcompat.widget.ResourceManagerInternal r0;
        int $i0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r2 = r0.mHooks;

        if $r2 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke $r2.getTintModeForDrawableRes($i0);

        return $r1;
    }

    public void onConfigurationChanged(android.content.Context)
    {
        java.lang.Throwable $r5;
        android.content.Context $r2;
        androidx.collection.LongSparseArray r4;
        androidx.appcompat.widget.ResourceManagerInternal r0;
        java.lang.Object $r1;
        java.util.WeakHashMap r3;

        r0 := @this;

        $r2 := @parameter0;

        entermonitor r0;

     label1:
        r3 = r0.mDrawableCaches;

        $r1 = virtualinvoke r3.get($r2);

        r4 = (androidx.collection.LongSparseArray) $r1;

        if r4 == null goto label2;

        virtualinvoke r4.clear();

     label2:
        exitmonitor r0;

        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context, androidx.appcompat.widget.VectorEnabledTintResources, int)
    {
        java.lang.Throwable $r5;
        android.content.Context $r2;
        androidx.appcompat.widget.ResourceManagerInternal r0;
        int $i0;
        androidx.appcompat.widget.VectorEnabledTintResources $r1;
        android.graphics.drawable.Drawable $r3, r4;

        r0 := @this;

        $r2 := @parameter0;

        $r1 := @parameter1;

        $i0 := @parameter2;

        entermonitor r0;

     label1:
        $r3 = specialinvoke r0.loadDrawableFromDelegates($r2, $i0);

        r4 = $r3;

        if $r3 != null goto label2;

        r4 = virtualinvoke $r1.superGetDrawable($i0);

     label2:
        if r4 == null goto label4;

        $r3 = specialinvoke r0.tintDrawable($r2, $i0, 0, r4);

     label3:
        exitmonitor r0;

        return $r3;

     label4:
        exitmonitor r0;

        return null;

     label5:
        $r5 := @caughtexception;

        exitmonitor r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
    }

    public void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks)
    {
        androidx.appcompat.widget.ResourceManagerInternal r0;
        java.lang.Throwable $r2;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks $r1;

        r0 := @this;

        $r1 := @parameter0;

        entermonitor r0;

     label1:
        r0.mHooks = $r1;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    boolean tintDrawableUsingColorFilter(android.content.Context, int, android.graphics.drawable.Drawable)
    {
        android.content.Context $r1;
        androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks $r3;
        androidx.appcompat.widget.ResourceManagerInternal r0;
        int $i0;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 := @parameter2;

        $r3 = r0.mHooks;

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.tintDrawableUsingColorFilter($r1, $i0, $r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
