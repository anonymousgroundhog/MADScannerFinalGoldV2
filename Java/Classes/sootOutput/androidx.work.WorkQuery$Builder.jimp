public final class androidx.work.WorkQuery$Builder extends java.lang.Object
{
    java.util.List mIds;
    java.util.List mStates;
    java.util.List mTags;
    java.util.List mUniqueWorkNames;

    private void <init>()
    {
        androidx.work.WorkQuery$Builder r0;
        java.util.ArrayList $r1;

        r0 := @this;

        specialinvoke r0.<init>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<init>();

        r0.mIds = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<init>();

        r0.mUniqueWorkNames = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<init>();

        r0.mTags = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<init>();

        r0.mStates = $r1;

        return;
    }

    public static androidx.work.WorkQuery$Builder fromIds(java.util.List)
    {
        java.util.List r0;
        androidx.work.WorkQuery$Builder r1;

        r0 := @parameter0;

        r1 = new androidx.work.WorkQuery$Builder;

        specialinvoke r1.<init>();

        virtualinvoke r1.addIds(r0);

        return r1;
    }

    public static androidx.work.WorkQuery$Builder fromStates(java.util.List)
    {
        java.util.List r0;
        androidx.work.WorkQuery$Builder r1;

        r0 := @parameter0;

        r1 = new androidx.work.WorkQuery$Builder;

        specialinvoke r1.<init>();

        virtualinvoke r1.addStates(r0);

        return r1;
    }

    public static androidx.work.WorkQuery$Builder fromTags(java.util.List)
    {
        java.util.List r0;
        androidx.work.WorkQuery$Builder r1;

        r0 := @parameter0;

        r1 = new androidx.work.WorkQuery$Builder;

        specialinvoke r1.<init>();

        virtualinvoke r1.addTags(r0);

        return r1;
    }

    public static androidx.work.WorkQuery$Builder fromUniqueWorkNames(java.util.List)
    {
        java.util.List r0;
        androidx.work.WorkQuery$Builder r1;

        r0 := @parameter0;

        r1 = new androidx.work.WorkQuery$Builder;

        specialinvoke r1.<init>();

        virtualinvoke r1.addUniqueWorkNames(r0);

        return r1;
    }

    public androidx.work.WorkQuery$Builder addIds(java.util.List)
    {
        java.util.List r1, $r2;
        androidx.work.WorkQuery$Builder r0;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.mIds;

        interfaceinvoke $r2.addAll(r1);

        return r0;
    }

    public androidx.work.WorkQuery$Builder addStates(java.util.List)
    {
        java.util.List r1, $r2;
        androidx.work.WorkQuery$Builder r0;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.mStates;

        interfaceinvoke $r2.addAll(r1);

        return r0;
    }

    public androidx.work.WorkQuery$Builder addTags(java.util.List)
    {
        java.util.List r1, $r2;
        androidx.work.WorkQuery$Builder r0;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.mTags;

        interfaceinvoke $r2.addAll(r1);

        return r0;
    }

    public androidx.work.WorkQuery$Builder addUniqueWorkNames(java.util.List)
    {
        java.util.List r1, $r2;
        androidx.work.WorkQuery$Builder r0;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.mUniqueWorkNames;

        interfaceinvoke $r2.addAll(r1);

        return r0;
    }

    public androidx.work.WorkQuery build()
    {
        java.util.List r2;
        androidx.work.WorkQuery r3;
        androidx.work.WorkQuery$Builder r0;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        r0 := @this;

        r2 = r0.mIds;

        $z0 = interfaceinvoke r2.isEmpty();

        if $z0 == 0 goto label2;

        r2 = r0.mUniqueWorkNames;

        $z0 = interfaceinvoke r2.isEmpty();

        if $z0 == 0 goto label2;

        r2 = r0.mTags;

        $z0 = interfaceinvoke r2.isEmpty();

        if $z0 == 0 goto label2;

        r2 = r0.mStates;

        $z0 = interfaceinvoke r2.isEmpty();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<init>("Must specify ids, uniqueNames, tags or states when building a WorkQuery");

        throw $r1;

     label2:
        r3 = new androidx.work.WorkQuery;

        specialinvoke r3.<init>(r0);

        return r3;
    }
}
