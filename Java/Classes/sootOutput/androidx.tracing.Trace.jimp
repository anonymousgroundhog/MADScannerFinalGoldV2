public final class androidx.tracing.Trace extends java.lang.Object
{
    static final java.lang.String TAG;
    private static java.lang.reflect.Method sAsyncTraceBeginMethod;
    private static java.lang.reflect.Method sAsyncTraceEndMethod;
    private static java.lang.reflect.Method sIsTagEnabledMethod;
    private static java.lang.reflect.Method sTraceCounterMethod;
    private static long sTraceTagApp;

    private void <init>()
    {
        androidx.tracing.Trace r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static void beginAsyncSection(java.lang.String, int)
    {
        java.lang.NoSuchMethodError $r3;
        int $i0;
        java.lang.String $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.reflect.Method $r1;

        $r0 := @parameter0;

        $i0 := @parameter1;

     label1:
        $r1 = androidx.tracing.Trace.sAsyncTraceBeginMethod;

     label2:
        if $r1 != null goto label5;

     label3:
        androidx.tracing.TraceApi29Impl.beginAsyncSection($r0, $i0);

     label4:
        return;

     label5:
        goto label8;

     label6:
        $r2 := @caughtexception;

        goto label8;

     label7:
        $r3 := @caughtexception;

     label8:
        androidx.tracing.Trace.beginAsyncSectionFallback($r0, $i0);

        return;

        catch java.lang.NoSuchMethodError from label1 to label2 with label7;
        catch java.lang.NoSuchMethodError from label3 to label4 with label7;
        catch java.lang.NoClassDefFoundError from label1 to label2 with label6;
        catch java.lang.NoClassDefFoundError from label3 to label4 with label6;
    }

    private static void beginAsyncSectionFallback(java.lang.String, int)
    {
        java.lang.Object[] $r5;
        java.lang.Class[] $r3;
        long $l1;
        java.lang.Integer $r7;
        java.lang.Exception r8;
        java.lang.Long $r6;
        int $i0;
        java.lang.Class r2, $r4;
        java.lang.String $r0;
        java.lang.reflect.Method r1;

        $r0 := @parameter0;

        $i0 := @parameter1;

        r1 = androidx.tracing.Trace.sAsyncTraceBeginMethod;

        if r1 != null goto label5;

        r2 = class "Landroid/os/Trace;";

        $r3 = newarray (java.lang.Class)[3];

        $r4 = java.lang.Long.TYPE;

     label1:
        $r3[0] = $r4;

        $r3[1] = class "Ljava/lang/String;";

     label2:
        $r4 = java.lang.Integer.TYPE;

     label3:
        $r3[2] = $r4;

        r1 = virtualinvoke r2.getMethod("asyncTraceBegin", $r3);

     label4:
        androidx.tracing.Trace.sAsyncTraceBeginMethod = r1;

     label5:
        r1 = androidx.tracing.Trace.sAsyncTraceBeginMethod;

        $r5 = newarray (java.lang.Object)[3];

        $l1 = androidx.tracing.Trace.sTraceTagApp;

     label6:
        $r6 = java.lang.Long.valueOf($l1);

        $r5[0] = $r6;

        $r5[1] = $r0;

        $r7 = java.lang.Integer.valueOf($i0);

        $r5[2] = $r7;

        virtualinvoke r1.invoke(null, $r5);

     label7:
        return;

     label8:
        r8 := @caughtexception;

        androidx.tracing.Trace.handleException("asyncTraceBegin", r8);

        return;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static void beginSection(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0;

        androidx.tracing.TraceApi18Impl.beginSection($r0);

        return;
    }

    public static void endAsyncSection(java.lang.String, int)
    {
        java.lang.NoSuchMethodError $r3;
        int $i0;
        java.lang.String $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.reflect.Method $r1;

        $r0 := @parameter0;

        $i0 := @parameter1;

     label1:
        $r1 = androidx.tracing.Trace.sAsyncTraceEndMethod;

     label2:
        if $r1 != null goto label5;

     label3:
        androidx.tracing.TraceApi29Impl.endAsyncSection($r0, $i0);

     label4:
        return;

     label5:
        goto label8;

     label6:
        $r2 := @caughtexception;

        goto label8;

     label7:
        $r3 := @caughtexception;

     label8:
        androidx.tracing.Trace.endAsyncSectionFallback($r0, $i0);

        return;

        catch java.lang.NoSuchMethodError from label1 to label2 with label7;
        catch java.lang.NoSuchMethodError from label3 to label4 with label7;
        catch java.lang.NoClassDefFoundError from label1 to label2 with label6;
        catch java.lang.NoClassDefFoundError from label3 to label4 with label6;
    }

    private static void endAsyncSectionFallback(java.lang.String, int)
    {
        java.lang.Object[] $r5;
        java.lang.Class[] $r3;
        long $l1;
        java.lang.Integer $r7;
        java.lang.Exception r8;
        java.lang.Long $r6;
        int $i0;
        java.lang.Class r2, $r4;
        java.lang.String $r0;
        java.lang.reflect.Method r1;

        $r0 := @parameter0;

        $i0 := @parameter1;

        r1 = androidx.tracing.Trace.sAsyncTraceEndMethod;

        if r1 != null goto label5;

        r2 = class "Landroid/os/Trace;";

        $r3 = newarray (java.lang.Class)[3];

        $r4 = java.lang.Long.TYPE;

     label1:
        $r3[0] = $r4;

        $r3[1] = class "Ljava/lang/String;";

     label2:
        $r4 = java.lang.Integer.TYPE;

     label3:
        $r3[2] = $r4;

        r1 = virtualinvoke r2.getMethod("asyncTraceEnd", $r3);

     label4:
        androidx.tracing.Trace.sAsyncTraceEndMethod = r1;

     label5:
        r1 = androidx.tracing.Trace.sAsyncTraceEndMethod;

        $r5 = newarray (java.lang.Object)[3];

        $l1 = androidx.tracing.Trace.sTraceTagApp;

     label6:
        $r6 = java.lang.Long.valueOf($l1);

        $r5[0] = $r6;

        $r5[1] = $r0;

        $r7 = java.lang.Integer.valueOf($i0);

        $r5[2] = $r7;

        virtualinvoke r1.invoke(null, $r5);

     label7:
        return;

     label8:
        r8 := @caughtexception;

        androidx.tracing.Trace.handleException("asyncTraceEnd", r8);

        return;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static void endSection()
    {
        androidx.tracing.TraceApi18Impl.endSection();

        return;
    }

    private static void handleException(java.lang.String, java.lang.Exception)
    {
        java.lang.Throwable $r2;
        java.lang.StringBuilder r4;
        java.lang.String $r0;
        java.lang.RuntimeException $r3;
        java.lang.Exception $r1;
        boolean z0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        z0 = $r1 instanceof java.lang.reflect.InvocationTargetException;

        if z0 == 0 goto label2;

        $r2 = virtualinvoke $r1.getCause();

        z0 = $r2 instanceof java.lang.RuntimeException;

        if z0 == 0 goto label1;

        $r3 = (java.lang.RuntimeException) $r2;

        throw $r3;

     label1:
        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<init>($r2);

        throw $r3;

     label2:
        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<init>();

        r4 = virtualinvoke r4.append("Unable to call ");

        r4 = virtualinvoke r4.append($r0);

        r4 = virtualinvoke r4.append(" via reflection");

        $r0 = virtualinvoke r4.toString();

        android.util.Log.v("Trace", $r0, $r1);

        return;
    }

    public static boolean isEnabled()
    {
        java.lang.NoSuchMethodError $r2;
        java.lang.NoClassDefFoundError $r1;
        java.lang.reflect.Method $r0;
        boolean $z0;

     label1:
        $r0 = androidx.tracing.Trace.sIsTagEnabledMethod;

     label2:
        if $r0 != null goto label5;

     label3:
        $z0 = android.os.Trace.isEnabled();

     label4:
        return $z0;

     label5:
        goto label8;

     label6:
        $r1 := @caughtexception;

        goto label8;

     label7:
        $r2 := @caughtexception;

     label8:
        $z0 = androidx.tracing.Trace.isEnabledFallback();

        return $z0;

        catch java.lang.NoSuchMethodError from label1 to label2 with label7;
        catch java.lang.NoSuchMethodError from label3 to label4 with label7;
        catch java.lang.NoClassDefFoundError from label1 to label2 with label6;
        catch java.lang.NoClassDefFoundError from label3 to label4 with label6;
    }

    private static boolean isEnabledFallback()
    {
        java.lang.Object[] $r5;
        java.lang.Class[] $r0;
        long $l0;
        java.lang.reflect.Field $r3;
        java.lang.Exception r9;
        java.lang.Long $r6;
        java.lang.Boolean r8;
        java.lang.Class $r1, $r4;
        java.lang.Object $r7;
        java.lang.reflect.Method r2;
        boolean $z0;

        r2 = androidx.tracing.Trace.sIsTagEnabledMethod;

        if r2 != null goto label5;

        $r1 = class "Landroid/os/Trace;";

     label1:
        $r3 = virtualinvoke $r1.getField("TRACE_TAG_APP");

        $l0 = virtualinvoke $r3.getLong(null);

     label2:
        androidx.tracing.Trace.sTraceTagApp = $l0;

        $r4 = class "Landroid/os/Trace;";

        $r0 = newarray (java.lang.Class)[1];

        $r1 = java.lang.Long.TYPE;

     label3:
        $r0[0] = $r1;

        r2 = virtualinvoke $r4.getMethod("isTagEnabled", $r0);

     label4:
        androidx.tracing.Trace.sIsTagEnabledMethod = r2;

     label5:
        r2 = androidx.tracing.Trace.sIsTagEnabledMethod;

        $r5 = newarray (java.lang.Object)[1];

        $l0 = androidx.tracing.Trace.sTraceTagApp;

     label6:
        $r6 = java.lang.Long.valueOf($l0);

        $r5[0] = $r6;

        $r7 = virtualinvoke r2.invoke(null, $r5);

        r8 = (java.lang.Boolean) $r7;

        $z0 = virtualinvoke r8.booleanValue();

     label7:
        return $z0;

     label8:
        r9 := @caughtexception;

        androidx.tracing.Trace.handleException("isTagEnabled", r9);

        return 0;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static void setCounter(java.lang.String, int)
    {
        java.lang.NoSuchMethodError $r3;
        int $i0;
        java.lang.String $r0;
        java.lang.NoClassDefFoundError $r2;
        java.lang.reflect.Method $r1;

        $r0 := @parameter0;

        $i0 := @parameter1;

     label1:
        $r1 = androidx.tracing.Trace.sTraceCounterMethod;

     label2:
        if $r1 != null goto label5;

     label3:
        androidx.tracing.TraceApi29Impl.setCounter($r0, $i0);

     label4:
        return;

     label5:
        goto label8;

     label6:
        $r2 := @caughtexception;

        goto label8;

     label7:
        $r3 := @caughtexception;

     label8:
        androidx.tracing.Trace.setCounterFallback($r0, $i0);

        return;

        catch java.lang.NoSuchMethodError from label1 to label2 with label7;
        catch java.lang.NoSuchMethodError from label3 to label4 with label7;
        catch java.lang.NoClassDefFoundError from label1 to label2 with label6;
        catch java.lang.NoClassDefFoundError from label3 to label4 with label6;
    }

    private static void setCounterFallback(java.lang.String, int)
    {
        java.lang.Object[] $r5;
        java.lang.Class[] $r3;
        long $l1;
        java.lang.Integer $r7;
        java.lang.Exception r8;
        java.lang.Long $r6;
        int $i0;
        java.lang.Class r2, $r4;
        java.lang.String $r0;
        java.lang.reflect.Method r1;

        $r0 := @parameter0;

        $i0 := @parameter1;

        r1 = androidx.tracing.Trace.sTraceCounterMethod;

        if r1 != null goto label5;

        r2 = class "Landroid/os/Trace;";

        $r3 = newarray (java.lang.Class)[3];

        $r4 = java.lang.Long.TYPE;

     label1:
        $r3[0] = $r4;

        $r3[1] = class "Ljava/lang/String;";

     label2:
        $r4 = java.lang.Integer.TYPE;

     label3:
        $r3[2] = $r4;

        r1 = virtualinvoke r2.getMethod("traceCounter", $r3);

     label4:
        androidx.tracing.Trace.sTraceCounterMethod = r1;

     label5:
        r1 = androidx.tracing.Trace.sTraceCounterMethod;

        $r5 = newarray (java.lang.Object)[3];

        $l1 = androidx.tracing.Trace.sTraceTagApp;

     label6:
        $r6 = java.lang.Long.valueOf($l1);

        $r5[0] = $r6;

        $r5[1] = $r0;

        $r7 = java.lang.Integer.valueOf($i0);

        $r5[2] = $r7;

        virtualinvoke r1.invoke(null, $r5);

     label7:
        return;

     label8:
        r8 := @caughtexception;

        androidx.tracing.Trace.handleException("traceCounter", r8);

        return;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }
}
