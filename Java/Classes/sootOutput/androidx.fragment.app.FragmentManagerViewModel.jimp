class androidx.fragment.app.FragmentManagerViewModel extends androidx.lifecycle.ViewModel
{
    private static final androidx.lifecycle.ViewModelProvider$Factory FACTORY;
    private final java.util.HashMap mChildNonConfigs;
    private boolean mHasBeenCleared;
    private boolean mHasSavedSnapshot;
    private final java.util.HashSet mRetainedFragments;
    private final boolean mStateAutomaticallySaved;
    private final java.util.HashMap mViewModelStores;

    static void <clinit>()
    {
        androidx.fragment.app.FragmentManagerViewModel$1 $r0;

        $r0 = new androidx.fragment.app.FragmentManagerViewModel$1;

        specialinvoke $r0.<init>();

        androidx.fragment.app.FragmentManagerViewModel.FACTORY = $r0;

        return;
    }

    void <init>(boolean)
    {
        java.util.HashSet $r1;
        androidx.fragment.app.FragmentManagerViewModel r0;
        java.util.HashMap $r2;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        specialinvoke r0.<init>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<init>();

        r0.mRetainedFragments = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<init>();

        r0.mChildNonConfigs = $r2;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<init>();

        r0.mViewModelStores = $r2;

        r0.mHasBeenCleared = 0;

        r0.mHasSavedSnapshot = 0;

        r0.mStateAutomaticallySaved = $z0;

        return;
    }

    static androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)
    {
        androidx.lifecycle.ViewModelStore $r0;
        androidx.fragment.app.FragmentManagerViewModel $r4;
        androidx.lifecycle.ViewModelProvider r1;
        androidx.lifecycle.ViewModel $r2;
        androidx.lifecycle.ViewModelProvider$Factory $r3;

        $r0 := @parameter0;

        r1 = new androidx.lifecycle.ViewModelProvider;

        $r3 = androidx.fragment.app.FragmentManagerViewModel.FACTORY;

        specialinvoke r1.<init>($r0, $r3);

        $r2 = virtualinvoke r1.get(class "Landroidx/fragment/app/FragmentManagerViewModel;");

        $r4 = (androidx.fragment.app.FragmentManagerViewModel) $r2;

        return $r4;
    }

    boolean addRetainedFragment(androidx.fragment.app.Fragment)
    {
        java.util.HashSet $r2;
        androidx.fragment.app.FragmentManagerViewModel r0;
        androidx.fragment.app.Fragment $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mRetainedFragments;

        $z0 = virtualinvoke $r2.add($r1);

        return $z0;
    }

    void clearNonConfigState(androidx.fragment.app.Fragment)
    {
        java.util.HashMap r4;
        androidx.fragment.app.FragmentManagerViewModel r0, r6;
        androidx.lifecycle.ViewModelStore r7;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder r3;
        java.lang.Object $r5;
        java.lang.String $r2;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if z0 == 0 goto label1;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<init>();

        r3 = virtualinvoke r3.append("Clearing non-config state for ");

        r3 = virtualinvoke r3.append($r1);

        $r2 = virtualinvoke r3.toString();

        android.util.Log.d("FragmentManager", $r2);

     label1:
        r4 = r0.mChildNonConfigs;

        $r2 = $r1.mWho;

        $r5 = virtualinvoke r4.get($r2);

        r6 = (androidx.fragment.app.FragmentManagerViewModel) $r5;

        if r6 == null goto label2;

        virtualinvoke r6.onCleared();

        r4 = r0.mChildNonConfigs;

        $r2 = $r1.mWho;

        virtualinvoke r4.remove($r2);

     label2:
        r4 = r0.mViewModelStores;

        $r2 = $r1.mWho;

        $r5 = virtualinvoke r4.get($r2);

        r7 = (androidx.lifecycle.ViewModelStore) $r5;

        if r7 == null goto label3;

        virtualinvoke r7.clear();

        r4 = r0.mViewModelStores;

        $r2 = $r1.mWho;

        virtualinvoke r4.remove($r2);

     label3:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.HashMap $r7, $r8;
        java.util.HashSet $r5, $r6;
        androidx.fragment.app.FragmentManagerViewModel r0, r4;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        if $r1 == null goto label3;

        $r2 = virtualinvoke r0.getClass();

        $r3 = virtualinvoke $r1.getClass();

        if $r2 == $r3 goto label2;

        return 0;

     label2:
        r4 = (androidx.fragment.app.FragmentManagerViewModel) $r1;

        $r5 = r0.mRetainedFragments;

        $r6 = r4.mRetainedFragments;

        $z0 = virtualinvoke $r5.equals($r6);

        if $z0 == 0 goto label3;

        $r7 = r0.mChildNonConfigs;

        $r8 = r4.mChildNonConfigs;

        $z0 = virtualinvoke $r7.equals($r8);

        if $z0 == 0 goto label3;

        $r7 = r0.mViewModelStores;

        $r8 = r4.mViewModelStores;

        $z0 = virtualinvoke $r7.equals($r8);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerViewModel r0, r5;
        androidx.fragment.app.Fragment $r1;
        java.lang.Object $r2;
        java.util.HashMap r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        r3 = r0.mChildNonConfigs;

        $r4 = $r1.mWho;

        $r2 = virtualinvoke r3.get($r4);

        r5 = (androidx.fragment.app.FragmentManagerViewModel) $r2;

        if r5 != null goto label1;

        r5 = new androidx.fragment.app.FragmentManagerViewModel;

        $z0 = r0.mStateAutomaticallySaved;

        specialinvoke r5.<init>($z0);

        r3 = r0.mChildNonConfigs;

        $r4 = $r1.mWho;

        virtualinvoke r3.put($r4, r5);

     label1:
        return r5;
    }

    java.util.Collection getRetainedFragments()
    {
        java.util.HashSet r1;
        androidx.fragment.app.FragmentManagerViewModel r0;

        r0 := @this;

        r1 = r0.mRetainedFragments;

        return r1;
    }

    androidx.fragment.app.FragmentManagerNonConfig getSnapshot()
    {
        java.util.Map$Entry r7;
        androidx.fragment.app.FragmentManagerNonConfig $r9;
        java.util.Iterator $r5;
        java.util.Set $r4;
        java.util.HashMap r2, $r3, r11;
        java.util.ArrayList $r10;
        java.util.HashSet r1;
        androidx.fragment.app.FragmentManagerViewModel r0, r8;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this;

        r1 = r0.mRetainedFragments;

        $z0 = virtualinvoke r1.isEmpty();

        if $z0 == 0 goto label1;

        r2 = r0.mChildNonConfigs;

        $z0 = virtualinvoke r2.isEmpty();

        if $z0 == 0 goto label1;

        r2 = r0.mViewModelStores;

        $z0 = virtualinvoke r2.isEmpty();

        if $z0 == 0 goto label1;

        return null;

     label1:
        r2 = new java.util.HashMap;

        specialinvoke r2.<init>();

        $r3 = r0.mChildNonConfigs;

        $r4 = virtualinvoke $r3.entrySet();

        $r5 = interfaceinvoke $r4.iterator();

     label2:
        $z0 = interfaceinvoke $r5.hasNext();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.next();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke r7.getValue();

        r8 = (androidx.fragment.app.FragmentManagerViewModel) $r6;

        $r9 = virtualinvoke r8.getSnapshot();

        if $r9 == null goto label2;

        $r6 = interfaceinvoke r7.getKey();

        virtualinvoke r2.put($r6, $r9);

        goto label2;

     label3:
        r0.mHasSavedSnapshot = 1;

        r1 = r0.mRetainedFragments;

        $z0 = virtualinvoke r1.isEmpty();

        if $z0 == 0 goto label4;

        $z0 = virtualinvoke r2.isEmpty();

        if $z0 == 0 goto label4;

        $r3 = r0.mViewModelStores;

        $z0 = virtualinvoke $r3.isEmpty();

        if $z0 == 0 goto label4;

        return null;

     label4:
        $r9 = new androidx.fragment.app.FragmentManagerNonConfig;

        $r10 = new java.util.ArrayList;

        r1 = r0.mRetainedFragments;

        specialinvoke $r10.<init>(r1);

        $r3 = new java.util.HashMap;

        r11 = r0.mViewModelStores;

        specialinvoke $r3.<init>(r11);

        specialinvoke $r9.<init>($r10, r2, $r3);

        return $r9;
    }

    androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        androidx.lifecycle.ViewModelStore r5;
        androidx.fragment.app.Fragment $r1;
        java.lang.Object $r3;
        java.util.HashMap r4;
        java.lang.String $r2;

        r0 := @this;

        $r1 := @parameter0;

        r4 = r0.mViewModelStores;

        $r2 = $r1.mWho;

        $r3 = virtualinvoke r4.get($r2);

        r5 = (androidx.lifecycle.ViewModelStore) $r3;

        if r5 != null goto label1;

        r5 = new androidx.lifecycle.ViewModelStore;

        specialinvoke r5.<init>();

        r4 = r0.mViewModelStores;

        $r2 = $r1.mWho;

        virtualinvoke r4.put($r2, r5);

     label1:
        return r5;
    }

    public int hashCode()
    {
        java.util.HashSet r1;
        androidx.fragment.app.FragmentManagerViewModel r0;
        int $i0, $i1;
        java.util.HashMap $r2;

        r0 := @this;

        r1 = r0.mRetainedFragments;

        $i0 = virtualinvoke r1.hashCode();

        $i0 = $i0 * 31;

        $r2 = r0.mChildNonConfigs;

        $i1 = virtualinvoke $r2.hashCode();

        $i0 = $i0 + $i1;

        $i0 = $i0 * 31;

        $r2 = r0.mViewModelStores;

        $i1 = virtualinvoke $r2.hashCode();

        $i0 = $i0 + $i1;

        return $i0;
    }

    boolean isCleared()
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mHasBeenCleared;

        return z0;
    }

    protected void onCleared()
    {
        androidx.fragment.app.FragmentManagerViewModel r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>();

        $r1 = virtualinvoke $r1.append("onCleared called for ");

        $r1 = virtualinvoke $r1.append(r0);

        $r2 = virtualinvoke $r1.toString();

        android.util.Log.d("FragmentManager", $r2);

     label1:
        r0.mHasBeenCleared = 1;

        return;
    }

    boolean removeRetainedFragment(androidx.fragment.app.Fragment)
    {
        java.util.HashSet $r2;
        androidx.fragment.app.FragmentManagerViewModel r0;
        androidx.fragment.app.Fragment $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mRetainedFragments;

        $z0 = virtualinvoke $r2.remove($r1);

        return $z0;
    }

    void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig)
    {
        java.util.Map$Entry r10;
        androidx.fragment.app.FragmentManagerNonConfig $r1, $r11;
        java.util.Iterator $r8;
        java.util.Collection $r5;
        java.util.Set $r7;
        java.util.HashMap r4;
        java.util.HashSet r3;
        androidx.fragment.app.FragmentManagerViewModel r0, r2;
        java.util.Map $r6;
        java.lang.Object $r9;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        r3 = r0.mRetainedFragments;

        virtualinvoke r3.clear();

        r4 = r0.mChildNonConfigs;

        virtualinvoke r4.clear();

        r4 = r0.mViewModelStores;

        virtualinvoke r4.clear();

        if $r1 == null goto label4;

        $r5 = virtualinvoke $r1.getFragments();

        if $r5 == null goto label1;

        r3 = r0.mRetainedFragments;

        virtualinvoke r3.addAll($r5);

     label1:
        $r6 = virtualinvoke $r1.getChildNonConfigs();

        if $r6 == null goto label3;

        $r7 = interfaceinvoke $r6.entrySet();

        $r8 = interfaceinvoke $r7.iterator();

     label2:
        $z0 = interfaceinvoke $r8.hasNext();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke $r8.next();

        r10 = (java.util.Map$Entry) $r9;

        r2 = new androidx.fragment.app.FragmentManagerViewModel;

        $z0 = r0.mStateAutomaticallySaved;

        specialinvoke r2.<init>($z0);

        $r9 = interfaceinvoke r10.getValue();

        $r11 = (androidx.fragment.app.FragmentManagerNonConfig) $r9;

        virtualinvoke r2.restoreFromSnapshot($r11);

        r4 = r0.mChildNonConfigs;

        $r9 = interfaceinvoke r10.getKey();

        virtualinvoke r4.put($r9, r2);

        goto label2;

     label3:
        $r6 = virtualinvoke $r1.getViewModelStores();

        if $r6 == null goto label4;

        r4 = r0.mViewModelStores;

        virtualinvoke r4.putAll($r6);

     label4:
        r0.mHasSavedSnapshot = 0;

        return;
    }

    boolean shouldDestroy(androidx.fragment.app.Fragment)
    {
        java.util.HashSet $r2;
        androidx.fragment.app.FragmentManagerViewModel r0;
        androidx.fragment.app.Fragment $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mRetainedFragments;

        $z0 = virtualinvoke $r2.contains($r1);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        $z0 = r0.mStateAutomaticallySaved;

        if $z0 == 0 goto label2;

        $z0 = r0.mHasBeenCleared;

        return $z0;

     label2:
        $z0 = r0.mHasSavedSnapshot;

        $z0 = $z0 ^ 1;

        return $z0;
    }

    public java.lang.String toString()
    {
        java.util.Iterator $r4;
        java.util.Set $r7;
        java.util.HashMap r6;
        java.util.HashSet r3;
        androidx.fragment.app.FragmentManagerViewModel r0;
        int $i0;
        java.lang.StringBuilder r1;
        java.lang.Object $r5;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<init>("FragmentManagerViewModel{");

        $i0 = java.lang.System.identityHashCode(r0);

        $r2 = java.lang.Integer.toHexString($i0);

        virtualinvoke r1.append($r2);

        virtualinvoke r1.append("} Fragments (");

        r3 = r0.mRetainedFragments;

        $r4 = virtualinvoke r3.iterator();

     label1:
        $z0 = interfaceinvoke $r4.hasNext();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.next();

        virtualinvoke r1.append($r5);

        $z0 = interfaceinvoke $r4.hasNext();

        if $z0 == 0 goto label1;

        virtualinvoke r1.append(", ");

        goto label1;

     label2:
        virtualinvoke r1.append(") Child Non Config (");

        r6 = r0.mChildNonConfigs;

        $r7 = virtualinvoke r6.keySet();

        $r4 = interfaceinvoke $r7.iterator();

     label3:
        $z0 = interfaceinvoke $r4.hasNext();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.next();

        $r2 = (java.lang.String) $r5;

        virtualinvoke r1.append($r2);

        $z0 = interfaceinvoke $r4.hasNext();

        if $z0 == 0 goto label3;

        virtualinvoke r1.append(", ");

        goto label3;

     label4:
        virtualinvoke r1.append(") ViewModelStores (");

        r6 = r0.mViewModelStores;

        $r7 = virtualinvoke r6.keySet();

        $r4 = interfaceinvoke $r7.iterator();

     label5:
        $z0 = interfaceinvoke $r4.hasNext();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r4.next();

        $r2 = (java.lang.String) $r5;

        virtualinvoke r1.append($r2);

        $z0 = interfaceinvoke $r4.hasNext();

        if $z0 == 0 goto label5;

        virtualinvoke r1.append(", ");

        goto label5;

     label6:
        virtualinvoke r1.append(41);

        $r2 = virtualinvoke r1.toString();

        return $r2;
    }
}
