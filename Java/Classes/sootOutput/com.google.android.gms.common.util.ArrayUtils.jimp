public final class com.google.android.gms.common.util.ArrayUtils extends java.lang.Object
{

    private void <init>()
    {
        com.google.android.gms.common.util.ArrayUtils r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static transient java.lang.Object[] concat(java.lang.Object[][])
    {
        java.lang.Object[] $r1, $r2;
        java.lang.Object[][] $r0;
        int $i0, $i1, $i2;
        java.lang.Class $r3;
        java.lang.Object $r4;

        $r0 := @parameter0;

        $i1 = lengthof $r0;

        if $i1 == 0 goto label5;

        $i1 = 0;

        $i2 = 0;

     label1:
        $i0 = lengthof $r0;

        if $i1 >= $i0 goto label2;

        $r1 = $r0[$i1];

        $i0 = lengthof $r1;

        $i2 = $i2 + $i0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r1 = $r0[0];

        $r1 = java.util.Arrays.copyOf($r1, $i2);

        $r2 = $r0[0];

        $i1 = lengthof $r2;

        $i2 = 1;

     label3:
        $i0 = lengthof $r0;

        if $i2 >= $i0 goto label4;

        $r2 = $r0[$i2];

        $i0 = lengthof $r2;

        java.lang.System.arraycopy($r2, 0, $r1, $i1, $i0);

        $i1 = $i1 + $i0;

        $i2 = $i2 + 1;

        goto label3;

     label4:
        return $r1;

     label5:
        $r3 = virtualinvoke $r0.getClass();

        $r4 = java.lang.reflect.Array.newInstance($r3, 0);

        $r1 = (java.lang.Object[]) $r4;

        return $r1;
    }

    public static transient byte[] concatByteArrays(byte[][])
    {
        byte[] $r0, $r2;
        byte[][] $r1;
        int $i0, $i1, $i2;

        $r1 := @parameter0;

        $i1 = lengthof $r1;

        if $i1 == 0 goto label5;

        $i1 = 0;

        $i2 = 0;

     label1:
        $i0 = lengthof $r1;

        if $i1 >= $i0 goto label2;

        $r0 = $r1[$i1];

        $i0 = lengthof $r0;

        $i2 = $i2 + $i0;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r0 = $r1[0];

        $r0 = java.util.Arrays.copyOf($r0, $i2);

        $r2 = $r1[0];

        $i1 = lengthof $r2;

        $i2 = 1;

     label3:
        $i0 = lengthof $r1;

        if $i2 >= $i0 goto label4;

        $r2 = $r1[$i2];

        $i0 = lengthof $r2;

        java.lang.System.arraycopy($r2, 0, $r0, $i1, $i0);

        $i1 = $i1 + $i0;

        $i2 = $i2 + 1;

        goto label3;

     label4:
        return $r0;

     label5:
        $r0 = newarray (byte)[0];

        return $r0;
    }

    public static boolean contains(int[], int)
    {
        int[] $r0;
        int $i0, $i1, $i2, $i3;

        $r0 := @parameter0;

        $i0 := @parameter1;

        if $r0 != null goto label1;

        return 0;

     label1:
        $i1 = lengthof $r0;

        $i3 = 0;

     label2:
        if $i3 >= $i1 goto label4;

        $i2 = $r0[$i3];

        if $i2 != $i0 goto label3;

        return 1;

     label3:
        $i3 = $i3 + 1;

        goto label2;

     label4:
        return 0;
    }

    public static boolean contains(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.Object $r0, $r2;
        boolean $z0;

        $r1 := @parameter0;

        $r0 := @parameter1;

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        goto label2;

     label1:
        $i0 = 0;

     label2:
        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label5;

        $r2 = $r1[$i1];

        $z0 = com.google.android.gms.common.internal.Objects.equal($r2, $r0);

        if $z0 == 0 goto label4;

        if $i1 < 0 goto label5;

        return 1;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        return 0;
    }

    public static java.util.ArrayList newArrayList()
    {
        java.util.ArrayList $r0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<init>();

        return $r0;
    }

    public static transient java.lang.Object[] removeAll(java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] $r0, $r1, $r4;
        int $i0, $i1, $i2;
        java.lang.Class $r2;
        java.lang.Object $r3, $r5;
        boolean $z0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        if $r0 != null goto label01;

        return null;

     label01:
        if $r1 == null goto label13;

        $i1 = lengthof $r1;

        if $i1 != 0 goto label02;

        goto label13;

     label02:
        $r2 = virtualinvoke $r1.getClass();

        $r2 = virtualinvoke $r2.getComponentType();

        $i0 = lengthof $r0;

        $r3 = java.lang.reflect.Array.newInstance($r2, $i0);

        $r4 = (java.lang.Object[]) $r3;

        $i2 = 0;

        if $i1 != 1 goto label06;

        $i1 = 0;

        $i2 = 0;

     label03:
        if $i1 >= $i0 goto label05;

        $r3 = $r0[$i1];

        $r5 = $r1[0];

        $z0 = com.google.android.gms.common.internal.Objects.equal($r5, $r3);

        if $z0 != 0 goto label04;

        $r4[$i2] = $r3;

        $i2 = $i2 + 1;

     label04:
        $i1 = $i1 + 1;

        goto label03;

     label05:
        goto label10;

     label06:
        $i1 = 0;

     label07:
        if $i2 >= $i0 goto label09;

        $r3 = $r0[$i2];

        $z0 = com.google.android.gms.common.util.ArrayUtils.contains($r1, $r3);

        if $z0 != 0 goto label08;

        $r4[$i1] = $r3;

        $i1 = $i1 + 1;

     label08:
        $i2 = $i2 + 1;

        goto label07;

     label09:
        $i2 = $i1;

     label10:
        if $r4 != null goto label11;

        return null;

     label11:
        $i0 = lengthof $r4;

        if $i2 != $i0 goto label12;

        return $r4;

     label12:
        $r0 = java.util.Arrays.copyOf($r4, $i2);

        return $r0;

     label13:
        $i0 = lengthof $r0;

        $r0 = java.util.Arrays.copyOf($r0, $i0);

        return $r0;
    }

    public static java.util.ArrayList toArrayList(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        int $i0, $i1;
        java.lang.Object $r2;
        java.util.ArrayList $r1;

        $r0 := @parameter0;

        $i0 = lengthof $r0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<init>($i0);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = $r0[$i1];

        virtualinvoke $r1.add($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static int[] toPrimitiveArray(java.util.Collection)
    {
        java.util.Iterator $r2;
        java.util.Collection $r0;
        java.lang.Integer $r4;
        int[] $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        boolean $z0;

        $r0 := @parameter0;

        $i0 = 0;

        if $r0 == null goto label4;

        $i1 = interfaceinvoke $r0.size();

        if $i1 != 0 goto label1;

        goto label4;

     label1:
        $i1 = interfaceinvoke $r0.size();

        $r1 = newarray (int)[$i1];

        $r2 = interfaceinvoke $r0.iterator();

     label2:
        $z0 = interfaceinvoke $r2.hasNext();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.next();

        $r4 = (java.lang.Integer) $r3;

        $i2 = virtualinvoke $r4.intValue();

        $r1[$i0] = $i2;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return $r1;

     label4:
        $r1 = newarray (int)[0];

        return $r1;
    }

    public static java.lang.Integer[] toWrapperArray(int[])
    {
        int[] $r2;
        int $i0, $i1, $i2;
        java.lang.Integer $r1;
        java.lang.Integer[] $r0;

        $r2 := @parameter0;

        if $r2 != null goto label1;

        return null;

     label1:
        $i0 = lengthof $r2;

        $r0 = newarray (java.lang.Integer)[$i0];

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $i2 = $r2[$i1];

        $r1 = java.lang.Integer.valueOf($i2);

        $r0[$i1] = $r1;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return $r0;
    }

    public static void writeArray(java.lang.StringBuilder, double[])
    {
        double[] $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r2;
        double $d0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        if $i1 == 0 goto label2;

        virtualinvoke $r0.append(",");

     label2:
        $d0 = $r1[$i1];

        $r2 = java.lang.Double.toString($d0);

        virtualinvoke $r0.append($r2);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    public static void writeArray(java.lang.StringBuilder, float[])
    {
        int $i0, $i1;
        float $f0;
        java.lang.StringBuilder $r0;
        float[] $r1;
        java.lang.String $r2;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        if $i1 == 0 goto label2;

        virtualinvoke $r0.append(",");

     label2:
        $f0 = $r1[$i1];

        $r2 = java.lang.Float.toString($f0);

        virtualinvoke $r0.append($r2);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    public static void writeArray(java.lang.StringBuilder, int[])
    {
        int[] $r1;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r0;
        java.lang.String $r2;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        if $i1 == 0 goto label2;

        virtualinvoke $r0.append(",");

     label2:
        $i2 = $r1[$i1];

        $r2 = java.lang.Integer.toString($i2);

        virtualinvoke $r0.append($r2);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    public static void writeArray(java.lang.StringBuilder, long[])
    {
        long[] $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        long $l2;
        java.lang.String $r2;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        if $i1 == 0 goto label2;

        virtualinvoke $r0.append(",");

     label2:
        $l2 = $r1[$i1];

        $r2 = java.lang.Long.toString($l2);

        virtualinvoke $r0.append($r2);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    public static void writeArray(java.lang.StringBuilder, java.lang.Object[])
    {
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.Object $r2;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        if $i1 == 0 goto label2;

        virtualinvoke $r0.append(",");

     label2:
        $r2 = $r1[$i1];

        virtualinvoke $r0.append($r2);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    public static void writeArray(java.lang.StringBuilder, boolean[])
    {
        boolean[] $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        if $i1 == 0 goto label2;

        virtualinvoke $r0.append(",");

     label2:
        $z0 = $r1[$i1];

        $r2 = java.lang.Boolean.toString($z0);

        virtualinvoke $r0.append($r2);

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    public static void writeStringArray(java.lang.StringBuilder, java.lang.String[])
    {
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        if $i1 == 0 goto label2;

        virtualinvoke $r0.append(",");

     label2:
        virtualinvoke $r0.append("\"");

        $r2 = $r1[$i1];

        virtualinvoke $r0.append($r2);

        virtualinvoke $r0.append("\"");

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }
}
