class androidx.room.MultiInstanceInvalidationClient extends java.lang.Object
{
    final android.content.Context mAppContext;
    final androidx.room.IMultiInstanceInvalidationCallback mCallback;
    int mClientId;
    final java.util.concurrent.Executor mExecutor;
    final androidx.room.InvalidationTracker mInvalidationTracker;
    final java.lang.String mName;
    final androidx.room.InvalidationTracker$Observer mObserver;
    final java.lang.Runnable mRemoveObserverRunnable;
    androidx.room.IMultiInstanceInvalidationService mService;
    final android.content.ServiceConnection mServiceConnection;
    final java.lang.Runnable mSetUpRunnable;
    final java.util.concurrent.atomic.AtomicBoolean mStopped;
    private final java.lang.Runnable mTearDownRunnable;

    void <init>(android.content.Context, java.lang.String, androidx.room.InvalidationTracker, java.util.concurrent.Executor)
    {
        androidx.room.InvalidationTracker $r3;
        android.content.Context $r1;
        java.lang.Object[] $r15;
        java.util.concurrent.atomic.AtomicBoolean $r6;
        java.util.HashMap r11;
        java.lang.String[] r14;
        android.content.Intent r16;
        java.lang.String $r2;
        androidx.room.MultiInstanceInvalidationClient$5 $r10;
        java.util.concurrent.Executor $r4;
        androidx.room.MultiInstanceInvalidationClient$6 $r13;
        androidx.room.MultiInstanceInvalidationClient$3 $r8;
        androidx.room.MultiInstanceInvalidationClient$4 $r9;
        androidx.room.MultiInstanceInvalidationClient$1 $r5;
        androidx.room.MultiInstanceInvalidationClient$2 $r7;
        java.util.Set $r12;
        androidx.room.MultiInstanceInvalidationClient r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 := @parameter3;

        specialinvoke r0.<init>();

        $r5 = new androidx.room.MultiInstanceInvalidationClient$1;

        specialinvoke $r5.<init>(r0);

        r0.mCallback = $r5;

        $r6 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r6.<init>(0);

        r0.mStopped = $r6;

        $r7 = new androidx.room.MultiInstanceInvalidationClient$2;

        specialinvoke $r7.<init>(r0);

        r0.mServiceConnection = $r7;

        $r8 = new androidx.room.MultiInstanceInvalidationClient$3;

        specialinvoke $r8.<init>(r0);

        r0.mSetUpRunnable = $r8;

        $r9 = new androidx.room.MultiInstanceInvalidationClient$4;

        specialinvoke $r9.<init>(r0);

        r0.mRemoveObserverRunnable = $r9;

        $r10 = new androidx.room.MultiInstanceInvalidationClient$5;

        specialinvoke $r10.<init>(r0);

        r0.mTearDownRunnable = $r10;

        $r1 = virtualinvoke $r1.getApplicationContext();

        r0.mAppContext = $r1;

        r0.mName = $r2;

        r0.mInvalidationTracker = $r3;

        r0.mExecutor = $r4;

        r11 = $r3.mTableIdLookup;

        $r12 = virtualinvoke r11.keySet();

        $r13 = new androidx.room.MultiInstanceInvalidationClient$6;

        r14 = newarray (java.lang.String)[0];

        $r15 = interfaceinvoke $r12.toArray(r14);

        r14 = (java.lang.String[]) $r15;

        specialinvoke $r13.<init>(r0, r14);

        r0.mObserver = $r13;

        r16 = new android.content.Intent;

        specialinvoke r16.<init>($r1, class "Landroidx/room/MultiInstanceInvalidationService;");

        virtualinvoke $r1.bindService(r16, $r7, 1);

        return;
    }

    void stop()
    {
        java.util.concurrent.Executor $r2;
        androidx.room.MultiInstanceInvalidationClient r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        java.lang.Runnable $r3;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mStopped;

        $z0 = virtualinvoke $r1.compareAndSet(0, 1);

        if $z0 == 0 goto label1;

        $r2 = r0.mExecutor;

        $r3 = r0.mTearDownRunnable;

        interfaceinvoke $r2.execute($r3);

     label1:
        return;
    }
}
