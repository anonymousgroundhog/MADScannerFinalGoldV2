class androidx.versionedparcelable.VersionedParcelStream$1 extends java.io.FilterInputStream
{
    final androidx.versionedparcelable.VersionedParcelStream this$0;

    void <init>(androidx.versionedparcelable.VersionedParcelStream, java.io.InputStream)
    {
        androidx.versionedparcelable.VersionedParcelStream $r1;
        androidx.versionedparcelable.VersionedParcelStream$1 r0;
        java.io.InputStream $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        r0.this$0 = $r1;

        specialinvoke r0.<init>($r2);

        return;
    }

    public int read() throws java.io.IOException
    {
        androidx.versionedparcelable.VersionedParcelStream r1;
        int $i0, $i1;
        java.io.IOException $r2;
        androidx.versionedparcelable.VersionedParcelStream$1 r0;

        r0 := @this;

        r1 = r0.this$0;

        $i0 = r1.mFieldSize;

        if $i0 == -1 goto label2;

        r1 = r0.this$0;

        $i0 = r1.mCount;

        r1 = r0.this$0;

        $i1 = r1.mFieldSize;

        if $i0 >= $i1 goto label1;

        goto label2;

     label1:
        $r2 = new java.io.IOException;

        specialinvoke $r2.<init>();

        throw $r2;

     label2:
        $i0 = specialinvoke r0.read();

        r1 = r0.this$0;

        $i1 = r1.mCount;

        $i1 = $i1 + 1;

        r1.mCount = $i1;

        return $i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] $r1;
        java.io.IOException $r3;
        androidx.versionedparcelable.VersionedParcelStream$1 r0;
        androidx.versionedparcelable.VersionedParcelStream r2;
        int $i0, $i1, i2, $i3;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        r2 = r0.this$0;

        i2 = r2.mFieldSize;

        if i2 == -1 goto label2;

        r2 = r0.this$0;

        i2 = r2.mCount;

        r2 = r0.this$0;

        $i3 = r2.mFieldSize;

        if i2 >= $i3 goto label1;

        goto label2;

     label1:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<init>();

        throw $r3;

     label2:
        $i0 = specialinvoke r0.read($r1, $i0, $i1);

        if $i0 <= 0 goto label3;

        r2 = r0.this$0;

        $i1 = r2.mCount;

        $i1 = $i1 + $i0;

        r2.mCount = $i1;

     label3:
        return $i0;
    }

    public long skip(long) throws java.io.IOException
    {
        androidx.versionedparcelable.VersionedParcelStream r1;
        byte $b3;
        int i1, $i2;
        long $l0;
        java.io.IOException $r2;
        androidx.versionedparcelable.VersionedParcelStream$1 r0;

        r0 := @this;

        $l0 := @parameter0;

        r1 = r0.this$0;

        i1 = r1.mFieldSize;

        if i1 == -1 goto label2;

        r1 = r0.this$0;

        i1 = r1.mCount;

        r1 = r0.this$0;

        $i2 = r1.mFieldSize;

        if i1 >= $i2 goto label1;

        goto label2;

     label1:
        $r2 = new java.io.IOException;

        specialinvoke $r2.<init>();

        throw $r2;

     label2:
        $l0 = specialinvoke r0.skip($l0);

        $b3 = $l0 cmp 0L;

        i1 = (int) $b3;

        if i1 <= 0 goto label3;

        r1 = r0.this$0;

        i1 = r1.mCount;

        $i2 = (int) $l0;

        i1 = i1 + $i2;

        r1.mCount = i1;

     label3:
        return $l0;
    }
}
