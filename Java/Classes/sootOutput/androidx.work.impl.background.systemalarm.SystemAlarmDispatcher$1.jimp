class androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$1 extends java.lang.Object implements java.lang.Runnable
{
    final androidx.work.impl.background.systemalarm.SystemAlarmDispatcher this$0;

    void <init>(androidx.work.impl.background.systemalarm.SystemAlarmDispatcher)
    {
        androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$1 r0;
        androidx.work.impl.background.systemalarm.SystemAlarmDispatcher $r1;

        r0 := @this;

        $r1 := @parameter0;

        r0.this$0 = $r1;

        specialinvoke r0.<init>();

        return;
    }

    public void run()
    {
        java.lang.Throwable r17, r18, r19;
        android.content.Context r13;
        java.lang.Object[] $r10;
        androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$DequeueAndCheckForCompletion r16;
        android.content.Intent r6;
        androidx.work.impl.background.systemalarm.SystemAlarmDispatcher r2;
        java.lang.Integer $r11;
        androidx.work.Logger $r8;
        int $i0;
        java.lang.String $r7, r9, $r12;
        androidx.work.impl.background.systemalarm.CommandHandler r15;
        android.os.PowerManager$WakeLock $r14;
        androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$1 r0;
        java.util.List r3, r4;
        java.lang.Throwable[] $r1;
        java.lang.Object $r5;

        r0 := @this;

        r2 = r0.this$0;

        r3 = r2.mIntents;

        entermonitor r3;

     label01:
        r2 = r0.this$0;

        r4 = r2.mIntents;

        $r5 = interfaceinvoke r4.get(0);

        r6 = (android.content.Intent) $r5;

        r2.mCurrentIntent = r6;

        exitmonitor r3;

     label02:
        r2 = r0.this$0;

        r6 = r2.mCurrentIntent;

        if r6 == null goto label13;

        r2 = r0.this$0;

        r6 = r2.mCurrentIntent;

        $r7 = virtualinvoke r6.getAction();

        r2 = r0.this$0;

        r6 = r2.mCurrentIntent;

        $i0 = virtualinvoke r6.getIntExtra("KEY_START_ID", 0);

        $r8 = androidx.work.Logger.get();

        r9 = androidx.work.impl.background.systemalarm.SystemAlarmDispatcher.TAG;

        $r10 = newarray (java.lang.Object)[2];

        r2 = r0.this$0;

        r6 = r2.mCurrentIntent;

        $r10[0] = r6;

        $r11 = java.lang.Integer.valueOf($i0);

        $r10[1] = $r11;

        $r12 = java.lang.String.format("Processing command %s, %s", $r10);

        $r1 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r8.debug(r9, $r12, $r1);

        r2 = r0.this$0;

        r13 = r2.mContext;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = $r7;

        $r11 = java.lang.Integer.valueOf($i0);

        $r10[1] = $r11;

        r9 = java.lang.String.format("%s (%s)", $r10);

        $r14 = androidx.work.impl.utils.WakeLocks.newWakeLock(r13, r9);

     label03:
        $r8 = androidx.work.Logger.get();

        r9 = androidx.work.impl.background.systemalarm.SystemAlarmDispatcher.TAG;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = $r7;

        $r10[1] = $r14;

        $r12 = java.lang.String.format("Acquiring operation wake lock (%s) %s", $r10);

        $r1 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r8.debug(r9, $r12, $r1);

        virtualinvoke $r14.acquire();

        r2 = r0.this$0;

        r15 = r2.mCommandHandler;

        r2 = r0.this$0;

        r6 = r2.mCurrentIntent;

        r2 = r0.this$0;

        virtualinvoke r15.onHandleIntent(r6, $i0, r2);

     label04:
        $r8 = androidx.work.Logger.get();

        r9 = androidx.work.impl.background.systemalarm.SystemAlarmDispatcher.TAG;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = $r7;

        $r10[1] = $r14;

        $r7 = java.lang.String.format("Releasing operation wake lock (%s) %s", $r10);

        $r1 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r8.debug(r9, $r7, $r1);

        virtualinvoke $r14.release();

        r2 = r0.this$0;

        r16 = new androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$DequeueAndCheckForCompletion;

        specialinvoke r16.<init>(r2);

        goto label08;

     label05:
        r17 := @caughtexception;

     label06:
        $r8 = androidx.work.Logger.get();

        r9 = androidx.work.impl.background.systemalarm.SystemAlarmDispatcher.TAG;

        $r1 = newarray (java.lang.Throwable)[1];

        $r1[0] = r17;

        virtualinvoke $r8.error(r9, "Unexpected error in onHandleIntent", $r1);

     label07:
        $r8 = androidx.work.Logger.get();

        r9 = androidx.work.impl.background.systemalarm.SystemAlarmDispatcher.TAG;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = $r7;

        $r10[1] = $r14;

        $r7 = java.lang.String.format("Releasing operation wake lock (%s) %s", $r10);

        $r1 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r8.debug(r9, $r7, $r1);

        virtualinvoke $r14.release();

        r2 = r0.this$0;

        r16 = new androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$DequeueAndCheckForCompletion;

        specialinvoke r16.<init>(r2);

     label08:
        virtualinvoke r2.postOnMainThread(r16);

        return;

     label09:
        r18 := @caughtexception;

        $r8 = androidx.work.Logger.get();

        r9 = androidx.work.impl.background.systemalarm.SystemAlarmDispatcher.TAG;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = $r7;

        $r10[1] = $r14;

        $r7 = java.lang.String.format("Releasing operation wake lock (%s) %s", $r10);

        $r1 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r8.debug(r9, $r7, $r1);

        virtualinvoke $r14.release();

        r2 = r0.this$0;

        r16 = new androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$DequeueAndCheckForCompletion;

        specialinvoke r16.<init>(r2);

        virtualinvoke r2.postOnMainThread(r16);

        throw r18;

     label10:
        r19 := @caughtexception;

     label11:
        exitmonitor r3;

     label12:
        throw r19;

     label13:
        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label11 to label12 with label10;
    }
}
