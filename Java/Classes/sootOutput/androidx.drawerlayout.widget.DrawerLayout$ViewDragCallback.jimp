class androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback extends androidx.customview.widget.ViewDragHelper$Callback
{
    private final int mAbsGravity;
    private androidx.customview.widget.ViewDragHelper mDragger;
    private final java.lang.Runnable mPeekRunnable;
    final androidx.drawerlayout.widget.DrawerLayout this$0;

    void <init>(androidx.drawerlayout.widget.DrawerLayout, int)
    {
        androidx.drawerlayout.widget.DrawerLayout $r1;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1 $r2;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r0;
        int $i0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        r0.this$0 = $r1;

        specialinvoke r0.<init>();

        $r2 = new androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1;

        specialinvoke $r2.<init>(r0);

        r0.mPeekRunnable = $r2;

        r0.mAbsGravity = $i0;

        return;
    }

    private void closeOtherDrawer()
    {
        androidx.drawerlayout.widget.DrawerLayout $r1;
        byte b1;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r0;
        int i0;
        android.view.View $r2;

        r0 := @this;

        i0 = r0.mAbsGravity;

        b1 = 3;

        if i0 != 3 goto label1;

        b1 = 5;

     label1:
        $r1 = r0.this$0;

        $r2 = virtualinvoke $r1.findDrawerWithGravity(b1);

        if $r2 == null goto label2;

        $r1 = r0.this$0;

        virtualinvoke $r1.closeDrawer($r2);

     label2:
        return;
    }

    public int clampViewPositionHorizontal(android.view.View, int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r2;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r0;
        int $i0, $i1, $i2;
        android.view.View $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        r2 = r0.this$0;

        $z0 = virtualinvoke r2.checkDrawerViewAbsoluteGravity($r1, 3);

        if $z0 == 0 goto label1;

        $i1 = virtualinvoke $r1.getWidth();

        $i1 = neg $i1;

        $i0 = java.lang.Math.min($i0, 0);

        $i0 = java.lang.Math.max($i1, $i0);

        return $i0;

     label1:
        r2 = r0.this$0;

        $i1 = virtualinvoke r2.getWidth();

        $i2 = virtualinvoke $r1.getWidth();

        $i2 = $i1 - $i2;

        $i0 = java.lang.Math.min($i0, $i1);

        $i0 = java.lang.Math.max($i2, $i0);

        return $i0;
    }

    public int clampViewPositionVertical(android.view.View, int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        $i0 = virtualinvoke $r1.getTop();

        return $i0;
    }

    public int getViewHorizontalDragRange(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout $r2;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r0;
        int $i0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.this$0;

        $z0 = virtualinvoke $r2.isDrawerView($r1);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.getWidth();

        return $i0;

     label1:
        return 0;
    }

    public void onEdgeDragStarted(int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r1;
        androidx.customview.widget.ViewDragHelper $r3;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r0;
        int $i0, $i1;
        android.view.View $r2;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i0 = $i0 & 1;

        if $i0 != 1 goto label1;

        r1 = r0.this$0;

        $r2 = virtualinvoke r1.findDrawerWithGravity(3);

        goto label2;

     label1:
        r1 = r0.this$0;

        $r2 = virtualinvoke r1.findDrawerWithGravity(5);

     label2:
        if $r2 == null goto label3;

        r1 = r0.this$0;

        $i0 = virtualinvoke r1.getDrawerLockMode($r2);

        if $i0 != 0 goto label3;

        $r3 = r0.mDragger;

        virtualinvoke $r3.captureChildView($r2, $i1);

     label3:
        return;
    }

    public boolean onEdgeLock(int)
    {
        int $i0;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r0;

        r0 := @this;

        $i0 := @parameter0;

        return 0;
    }

    public void onEdgeTouched(int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout $r1;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r0;
        int $i0, $i1;
        java.lang.Runnable $r2;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $r1 = r0.this$0;

        $r2 = r0.mPeekRunnable;

        virtualinvoke $r1.postDelayed($r2, 160L);

        return;
    }

    public void onViewCaptured(android.view.View, int)
    {
        android.view.ViewGroup$LayoutParams $r2;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r0;
        int $i0;
        android.view.View $r1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r3;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        r3.isPeeking = 0;

        specialinvoke r0.closeOtherDrawer();

        return;
    }

    public void onViewDragStateChanged(int)
    {
        androidx.drawerlayout.widget.DrawerLayout $r1;
        androidx.customview.widget.ViewDragHelper $r3;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r0;
        int $i0, $i1;
        android.view.View $r2;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.this$0;

        $i1 = r0.mAbsGravity;

        $r3 = r0.mDragger;

        $r2 = virtualinvoke $r3.getCapturedView();

        virtualinvoke $r1.updateDrawerState($i1, $i0, $r2);

        return;
    }

    public void onViewPositionChanged(android.view.View, int, int, int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r2;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r0;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;
        float $f0, $f1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        $i2 := @parameter3;

        $i3 := @parameter4;

        $i1 = virtualinvoke $r1.getWidth();

        r2 = r0.this$0;

        $z0 = virtualinvoke r2.checkDrawerViewAbsoluteGravity($r1, 3);

        if $z0 == 0 goto label1;

        $i0 = $i1 + $i0;

        $f0 = (float) $i0;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        goto label2;

     label1:
        r2 = r0.this$0;

        $i2 = virtualinvoke r2.getWidth();

        $i0 = $i2 - $i0;

        $f1 = (float) $i0;

        $f0 = (float) $i1;

        $f0 = $f1 / $f0;

     label2:
        r2 = r0.this$0;

        virtualinvoke r2.setDrawerViewOffset($r1, $f0);

        $b4 = $f0 cmpl 0.0F;

        if $b4 != 0 goto label3;

        $b4 = 4;

        goto label4;

     label3:
        $b4 = 0;

     label4:
        virtualinvoke $r1.setVisibility($b4);

        r2 = r0.this$0;

        virtualinvoke r2.invalidate();

        return;
    }

    public void onViewReleased(android.view.View, float, float)
    {
        androidx.drawerlayout.widget.DrawerLayout r2;
        androidx.customview.widget.ViewDragHelper $r3;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r0;
        byte $b0;
        int $i1, $i2, $i3;
        android.view.View $r1;
        float $f0, $f1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $f0 := @parameter1;

        $f1 := @parameter2;

        r2 = r0.this$0;

        $f1 = virtualinvoke r2.getDrawerViewOffset($r1);

        $i1 = virtualinvoke $r1.getWidth();

        r2 = r0.this$0;

        $z0 = virtualinvoke r2.checkDrawerViewAbsoluteGravity($r1, 3);

        if $z0 == 0 goto label4;

        $b0 = $f0 cmpl 0.0F;

        $i2 = (int) $b0;

        if $i2 > 0 goto label2;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        $b0 = $f1 cmpl 0.5F;

        $i2 = (int) $b0;

        if $i2 <= 0 goto label1;

        goto label2;

     label1:
        $i1 = neg $i1;

        goto label3;

     label2:
        $i1 = 0;

     label3:
        goto label7;

     label4:
        r2 = r0.this$0;

        $i2 = virtualinvoke r2.getWidth();

        $b0 = $f0 cmpg 0.0F;

        $i3 = (int) $b0;

        if $i3 < 0 goto label6;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label5;

        $b0 = $f1 cmpl 0.5F;

        $i3 = (int) $b0;

        if $i3 <= 0 goto label5;

        goto label6;

     label5:
        $i1 = $i2;

        goto label7;

     label6:
        $i1 = $i2 - $i1;

     label7:
        $r3 = r0.mDragger;

        $i2 = virtualinvoke $r1.getTop();

        virtualinvoke $r3.settleCapturedViewAt($i1, $i2);

        r2 = r0.this$0;

        virtualinvoke r2.invalidate();

        return;
    }

    void peekDrawer()
    {
        androidx.customview.widget.ViewDragHelper $r1;
        androidx.drawerlayout.widget.DrawerLayout r2;
        android.view.ViewGroup$LayoutParams $r5;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r0;
        int $i0, i1, i2;
        android.view.View $r3, r4;
        boolean z0;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r6;

        r0 := @this;

        $r1 = r0.mDragger;

        $i0 = virtualinvoke $r1.getEdgeSize();

        i1 = r0.mAbsGravity;

        i2 = 0;

        if i1 != 3 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if z0 == 0 goto label4;

        r2 = r0.this$0;

        $r3 = virtualinvoke r2.findDrawerWithGravity(3);

        r4 = $r3;

        if $r3 == null goto label3;

        i1 = virtualinvoke $r3.getWidth();

        i2 = neg i1;

     label3:
        $i0 = i2 + $i0;

        goto label5;

     label4:
        r2 = r0.this$0;

        r4 = virtualinvoke r2.findDrawerWithGravity(5);

        r2 = r0.this$0;

        i1 = virtualinvoke r2.getWidth();

        $i0 = i1 - $i0;

     label5:
        if r4 == null goto label8;

        if z0 == 0 goto label6;

        i1 = virtualinvoke r4.getLeft();

        if i1 < $i0 goto label7;

     label6:
        if z0 != 0 goto label8;

        i1 = virtualinvoke r4.getLeft();

        if i1 <= $i0 goto label8;

     label7:
        r2 = r0.this$0;

        i1 = virtualinvoke r2.getDrawerLockMode(r4);

        if i1 != 0 goto label8;

        $r5 = virtualinvoke r4.getLayoutParams();

        r6 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r5;

        $r1 = r0.mDragger;

        i1 = virtualinvoke r4.getTop();

        virtualinvoke $r1.smoothSlideViewTo(r4, $i0, i1);

        r6.isPeeking = 1;

        r2 = r0.this$0;

        virtualinvoke r2.invalidate();

        specialinvoke r0.closeOtherDrawer();

        r2 = r0.this$0;

        virtualinvoke r2.cancelChildViewTouch();

     label8:
        return;
    }

    public void removeCallbacks()
    {
        androidx.drawerlayout.widget.DrawerLayout $r1;
        java.lang.Runnable $r2;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r0;

        r0 := @this;

        $r1 = r0.this$0;

        $r2 = r0.mPeekRunnable;

        virtualinvoke $r1.removeCallbacks($r2);

        return;
    }

    public void setDragger(androidx.customview.widget.ViewDragHelper)
    {
        androidx.customview.widget.ViewDragHelper $r1;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r0;

        r0 := @this;

        $r1 := @parameter0;

        r0.mDragger = $r1;

        return;
    }

    public boolean tryCaptureView(android.view.View, int)
    {
        androidx.drawerlayout.widget.DrawerLayout $r2;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r0;
        int $i0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 = r0.this$0;

        $z0 = virtualinvoke $r2.isDrawerView($r1);

        if $z0 == 0 goto label1;

        $r2 = r0.this$0;

        $i0 = r0.mAbsGravity;

        $z0 = virtualinvoke $r2.checkDrawerViewAbsoluteGravity($r1, $i0);

        if $z0 == 0 goto label1;

        $r2 = r0.this$0;

        $i0 = virtualinvoke $r2.getDrawerLockMode($r1);

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
