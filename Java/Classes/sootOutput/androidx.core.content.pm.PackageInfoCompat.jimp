public final class androidx.core.content.pm.PackageInfoCompat extends java.lang.Object
{

    private void <init>()
    {
        androidx.core.content.pm.PackageInfoCompat r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    private static boolean byteArrayContains(byte[][], byte[])
    {
        byte[] $r1, r2;
        byte[][] $r0;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        r2 = $r0[$i1];

        $z0 = java.util.Arrays.equals($r1, r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private static byte[] computeSHA256Digest(byte[])
    {
        byte[] $r0;
        java.security.MessageDigest $r2;
        java.security.NoSuchAlgorithmException r3;
        java.lang.RuntimeException $r1;

        $r0 := @parameter0;

     label1:
        $r2 = java.security.MessageDigest.getInstance("SHA256");

        $r0 = virtualinvoke $r2.digest($r0);

     label2:
        return $r0;

     label3:
        r3 := @caughtexception;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<init>("Device doesn\'t support SHA256 cert checking", r3);

        throw $r1;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static long getLongVersionCode(android.content.pm.PackageInfo)
    {
        int $i1;
        long $l0;
        android.content.pm.PackageInfo $r0;

        $r0 := @parameter0;

        $i1 = android.os.Build$VERSION.SDK_INT;

        if $i1 < 28 goto label1;

        $l0 = virtualinvoke $r0.getLongVersionCode();

        return $l0;

     label1:
        $i1 = $r0.versionCode;

        $l0 = (long) $i1;

        return $l0;
    }

    public static java.util.List getSignatures(android.content.pm.PackageManager, java.lang.String) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.pm.PackageManager $r0;
        android.content.pm.PackageInfo $r2;
        android.content.pm.Signature[] $r4;
        java.util.List $r5;
        int i0;
        java.lang.String $r1;
        android.content.pm.SigningInfo r3;
        boolean $z0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 < 28 goto label3;

        $r2 = virtualinvoke $r0.getPackageInfo($r1, 134217728);

        r3 = $r2.signingInfo;

        $z0 = androidx.core.content.pm.PackageInfoCompat$Api28Impl.hasMultipleSigners(r3);

        if $z0 == 0 goto label1;

        $r4 = androidx.core.content.pm.PackageInfoCompat$Api28Impl.getApkContentsSigners(r3);

        goto label2;

     label1:
        $r4 = androidx.core.content.pm.PackageInfoCompat$Api28Impl.getSigningCertificateHistory(r3);

     label2:
        goto label4;

     label3:
        $r2 = virtualinvoke $r0.getPackageInfo($r1, 64);

        $r4 = $r2.signatures;

     label4:
        if $r4 != null goto label5;

        $r5 = java.util.Collections.emptyList();

        return $r5;

     label5:
        $r5 = java.util.Arrays.asList($r4);

        return $r5;
    }

    public static boolean hasSignatures(android.content.pm.PackageManager, java.lang.String, java.util.Map, boolean) throws android.content.pm.PackageManager$NameNotFoundException
    {
        byte[] r6;
        android.content.pm.PackageManager $r0;
        java.lang.Integer r7;
        java.util.Map r2;
        int $i0, $i1;
        java.lang.String $r1;
        boolean $z0, $z1;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.lang.IllegalArgumentException $r8;
        java.util.List $r10;
        byte[][] r11;
        java.lang.Object $r5;
        java.lang.StringBuilder r9;
        android.content.pm.Signature r12;

        $r0 := @parameter0;

        $r1 := @parameter1;

        r2 := @parameter2;

        $z0 := @parameter3;

        $z1 = interfaceinvoke r2.isEmpty();

        if $z1 == 0 goto label01;

        return 0;

     label01:
        $r3 = interfaceinvoke r2.keySet();

        $r4 = interfaceinvoke $r3.iterator();

     label02:
        $z1 = interfaceinvoke $r4.hasNext();

        if $z1 == 0 goto label07;

        $r5 = interfaceinvoke $r4.next();

        r6 = (byte[]) $r5;

        if r6 == null goto label06;

        $r5 = interfaceinvoke r2.get(r6);

        r7 = (java.lang.Integer) $r5;

        if r7 == null goto label05;

        $i0 = virtualinvoke r7.intValue();

        lookupswitch($i0)
        {
            case 0: goto label04;
            case 1: goto label04;
            default: goto label03;
        };

     label03:
        $r8 = new java.lang.IllegalArgumentException;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<init>();

        r9 = virtualinvoke r9.append("Unsupported certificate type ");

        r9 = virtualinvoke r9.append(r7);

        r9 = virtualinvoke r9.append(" when verifying ");

        r9 = virtualinvoke r9.append($r1);

        $r1 = virtualinvoke r9.toString();

        specialinvoke $r8.<init>($r1);

        throw $r8;

     label04:
        goto label02;

     label05:
        $r8 = new java.lang.IllegalArgumentException;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<init>();

        r9 = virtualinvoke r9.append("Type must be specified for cert when verifying ");

        r9 = virtualinvoke r9.append($r1);

        $r1 = virtualinvoke r9.toString();

        specialinvoke $r8.<init>($r1);

        throw $r8;

     label06:
        $r8 = new java.lang.IllegalArgumentException;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<init>();

        r9 = virtualinvoke r9.append("Cert byte array cannot be null when verifying ");

        r9 = virtualinvoke r9.append($r1);

        $r1 = virtualinvoke r9.toString();

        specialinvoke $r8.<init>($r1);

        throw $r8;

     label07:
        $r10 = androidx.core.content.pm.PackageInfoCompat.getSignatures($r0, $r1);

        if $z0 != 0 goto label10;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 28 goto label10;

        $r4 = interfaceinvoke $r3.iterator();

     label08:
        $z0 = interfaceinvoke $r4.hasNext();

        if $z0 == 0 goto label09;

        $r5 = interfaceinvoke $r4.next();

        r6 = (byte[]) $r5;

        $r5 = interfaceinvoke r2.get(r6);

        r7 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke r7.intValue();

        $z0 = androidx.core.content.pm.PackageInfoCompat$Api28Impl.hasSigningCertificate($r0, $r1, r6, $i0);

        if $z0 != 0 goto label08;

        return 0;

     label09:
        return 1;

     label10:
        $i0 = interfaceinvoke $r10.size();

        if $i0 == 0 goto label18;

        $i0 = interfaceinvoke r2.size();

        $i1 = interfaceinvoke $r10.size();

        if $i0 > $i1 goto label18;

        if $z0 == 0 goto label11;

        $i0 = interfaceinvoke r2.size();

        $i1 = interfaceinvoke $r10.size();

        if $i0 == $i1 goto label11;

        return 0;

     label11:
        r7 = java.lang.Integer.valueOf(1);

        $z0 = interfaceinvoke r2.containsValue(r7);

        r11 = null;

        if $z0 == 0 goto label13;

        $i0 = interfaceinvoke $r10.size();

        r11 = newarray (byte[])[$i0];

        $i0 = 0;

     label12:
        $i1 = interfaceinvoke $r10.size();

        if $i0 >= $i1 goto label13;

        $r5 = interfaceinvoke $r10.get($i0);

        r12 = (android.content.pm.Signature) $r5;

        r6 = virtualinvoke r12.toByteArray();

        r6 = androidx.core.content.pm.PackageInfoCompat.computeSHA256Digest(r6);

        r11[$i0] = r6;

        $i0 = $i0 + 1;

        goto label12;

     label13:
        $r4 = interfaceinvoke $r3.iterator();

        $z0 = interfaceinvoke $r4.hasNext();

        if $z0 == 0 goto label18;

        $r5 = interfaceinvoke $r4.next();

        r6 = (byte[]) $r5;

        $r5 = interfaceinvoke r2.get(r6);

        r7 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke r7.intValue();

        lookupswitch($i0)
        {
            case 0: goto label16;
            case 1: goto label15;
            default: goto label14;
        };

     label14:
        $r8 = new java.lang.IllegalArgumentException;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<init>();

        r9 = virtualinvoke r9.append("Unsupported certificate type ");

        r9 = virtualinvoke r9.append(r7);

        $r1 = virtualinvoke r9.toString();

        specialinvoke $r8.<init>($r1);

        throw $r8;

     label15:
        $z0 = androidx.core.content.pm.PackageInfoCompat.byteArrayContains(r11, r6);

        if $z0 != 0 goto label17;

        return 0;

     label16:
        r12 = new android.content.pm.Signature;

        specialinvoke r12.<init>(r6);

        $z0 = interfaceinvoke $r10.contains(r12);

        if $z0 != 0 goto label19;

        return 0;

     label17:
        return 1;

     label18:
        return 0;

     label19:
        return 1;
    }
}
