class androidx.appcompat.widget.TooltipCompatHandler extends java.lang.Object implements android.view.View$OnLongClickListener, android.view.View$OnHoverListener, android.view.View$OnAttachStateChangeListener
{
    private static final long HOVER_HIDE_TIMEOUT_MS;
    private static final long HOVER_HIDE_TIMEOUT_SHORT_MS;
    private static final long LONG_CLICK_HIDE_TIMEOUT_MS;
    private static final java.lang.String TAG;
    private static androidx.appcompat.widget.TooltipCompatHandler sActiveHandler;
    private static androidx.appcompat.widget.TooltipCompatHandler sPendingHandler;
    private final android.view.View mAnchor;
    private int mAnchorX;
    private int mAnchorY;
    private boolean mFromTouch;
    private final java.lang.Runnable mHideRunnable;
    private final int mHoverSlop;
    private androidx.appcompat.widget.TooltipPopup mPopup;
    private final java.lang.Runnable mShowRunnable;
    private final java.lang.CharSequence mTooltipText;

    private void <init>(android.view.View, java.lang.CharSequence)
    {
        android.content.Context $r5;
        java.lang.CharSequence $r2;
        androidx.appcompat.widget.TooltipCompatHandler r0;
        android.view.ViewConfiguration $r6;
        androidx.appcompat.widget.TooltipCompatHandler$2 $r4;
        androidx.appcompat.widget.TooltipCompatHandler$1 $r3;
        int $i0;
        android.view.View $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.<init>();

        $r3 = new androidx.appcompat.widget.TooltipCompatHandler$1;

        specialinvoke $r3.<init>(r0);

        r0.mShowRunnable = $r3;

        $r4 = new androidx.appcompat.widget.TooltipCompatHandler$2;

        specialinvoke $r4.<init>(r0);

        r0.mHideRunnable = $r4;

        r0.mAnchor = $r1;

        r0.mTooltipText = $r2;

        $r5 = virtualinvoke $r1.getContext();

        $r6 = android.view.ViewConfiguration.get($r5);

        $i0 = androidx.core.view.ViewConfigurationCompat.getScaledHoverSlop($r6);

        r0.mHoverSlop = $i0;

        specialinvoke r0.clearAnchorPos();

        virtualinvoke $r1.setOnLongClickListener(r0);

        virtualinvoke $r1.setOnHoverListener(r0);

        return;
    }

    private void cancelPendingShow()
    {
        android.view.View $r1;
        java.lang.Runnable $r2;
        androidx.appcompat.widget.TooltipCompatHandler r0;

        r0 := @this;

        $r1 = r0.mAnchor;

        $r2 = r0.mShowRunnable;

        virtualinvoke $r1.removeCallbacks($r2);

        return;
    }

    private void clearAnchorPos()
    {
        androidx.appcompat.widget.TooltipCompatHandler r0;

        r0 := @this;

        r0.mAnchorX = 2147483647;

        r0.mAnchorY = 2147483647;

        return;
    }

    private void scheduleShow()
    {
        int $i0;
        android.view.View $r1;
        long $l1;
        java.lang.Runnable $r2;
        androidx.appcompat.widget.TooltipCompatHandler r0;

        r0 := @this;

        $r1 = r0.mAnchor;

        $r2 = r0.mShowRunnable;

        $i0 = android.view.ViewConfiguration.getLongPressTimeout();

        $l1 = (long) $i0;

        virtualinvoke $r1.postDelayed($r2, $l1);

        return;
    }

    private static void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)
    {
        androidx.appcompat.widget.TooltipCompatHandler $r0, $r1;

        $r0 := @parameter0;

        $r1 = androidx.appcompat.widget.TooltipCompatHandler.sPendingHandler;

        if $r1 == null goto label1;

        specialinvoke $r1.cancelPendingShow();

     label1:
        androidx.appcompat.widget.TooltipCompatHandler.sPendingHandler = $r0;

        if $r0 == null goto label2;

        specialinvoke $r0.scheduleShow();

     label2:
        return;
    }

    public static void setTooltipText(android.view.View, java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        android.view.View $r0, $r2;
        boolean $z0;
        androidx.appcompat.widget.TooltipCompatHandler $r3;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r3 = androidx.appcompat.widget.TooltipCompatHandler.sPendingHandler;

        if $r3 == null goto label1;

        $r2 = $r3.mAnchor;

        if $r2 != $r0 goto label1;

        androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(null);

     label1:
        $z0 = android.text.TextUtils.isEmpty($r1);

        if $z0 == 0 goto label3;

        $r3 = androidx.appcompat.widget.TooltipCompatHandler.sActiveHandler;

        if $r3 == null goto label2;

        $r2 = $r3.mAnchor;

        if $r2 != $r0 goto label2;

        virtualinvoke $r3.hide();

     label2:
        virtualinvoke $r0.setOnLongClickListener(null);

        virtualinvoke $r0.setLongClickable(0);

        virtualinvoke $r0.setOnHoverListener(null);

        return;

     label3:
        $r3 = new androidx.appcompat.widget.TooltipCompatHandler;

        specialinvoke $r3.<init>($r0, $r1);

        return;
    }

    private boolean updateAnchorPos(android.view.MotionEvent)
    {
        android.view.MotionEvent $r1;
        int i0, i1, $i2, $i3;
        float $f0;
        androidx.appcompat.widget.TooltipCompatHandler r0;

        r0 := @this;

        $r1 := @parameter0;

        $f0 = virtualinvoke $r1.getX();

        i0 = (int) $f0;

        $f0 = virtualinvoke $r1.getY();

        i1 = (int) $f0;

        $i2 = r0.mAnchorX;

        $i2 = i0 - $i2;

        $i2 = java.lang.Math.abs($i2);

        $i3 = r0.mHoverSlop;

        if $i2 > $i3 goto label1;

        $i2 = r0.mAnchorY;

        $i2 = i1 - $i2;

        $i2 = java.lang.Math.abs($i2);

        $i3 = r0.mHoverSlop;

        if $i2 > $i3 goto label1;

        return 0;

     label1:
        r0.mAnchorX = i0;

        r0.mAnchorY = i1;

        return 1;
    }

    void hide()
    {
        androidx.appcompat.widget.TooltipPopup $r2;
        android.view.View $r3;
        java.lang.Runnable $r4;
        androidx.appcompat.widget.TooltipCompatHandler r0, $r1;

        r0 := @this;

        $r1 = androidx.appcompat.widget.TooltipCompatHandler.sActiveHandler;

        if $r1 != r0 goto label2;

        androidx.appcompat.widget.TooltipCompatHandler.sActiveHandler = null;

        $r2 = r0.mPopup;

        if $r2 == null goto label1;

        virtualinvoke $r2.hide();

        r0.mPopup = null;

        specialinvoke r0.clearAnchorPos();

        $r3 = r0.mAnchor;

        virtualinvoke $r3.removeOnAttachStateChangeListener(r0);

        goto label2;

     label1:
        android.util.Log.e("TooltipCompatHandler", "sActiveHandler.mPopup == null");

     label2:
        $r1 = androidx.appcompat.widget.TooltipCompatHandler.sPendingHandler;

        if $r1 != r0 goto label3;

        androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(null);

     label3:
        $r3 = r0.mAnchor;

        $r4 = r0.mHideRunnable;

        virtualinvoke $r3.removeCallbacks($r4);

        return;
    }

    public boolean onHover(android.view.View, android.view.MotionEvent)
    {
        android.content.Context $r4;
        androidx.appcompat.widget.TooltipPopup r3;
        androidx.appcompat.widget.TooltipCompatHandler r0;
        android.view.accessibility.AccessibilityManager r6;
        android.view.MotionEvent $r2;
        int $i0;
        android.view.View $r1;
        java.lang.Object $r5;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        r3 = r0.mPopup;

        if r3 == null goto label1;

        z0 = r0.mFromTouch;

        if z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.mAnchor;

        $r4 = virtualinvoke $r1.getContext();

        $r5 = virtualinvoke $r4.getSystemService("accessibility");

        r6 = (android.view.accessibility.AccessibilityManager) $r5;

        z0 = virtualinvoke r6.isEnabled();

        if z0 == 0 goto label2;

        z0 = virtualinvoke r6.isTouchExplorationEnabled();

        if z0 == 0 goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke $r2.getAction();

        lookupswitch($i0)
        {
            case 7: goto label5;
            case 10: goto label4;
            default: goto label3;
        };

     label3:
        return 0;

     label4:
        specialinvoke r0.clearAnchorPos();

        virtualinvoke r0.hide();

        return 0;

     label5:
        $r1 = r0.mAnchor;

        z0 = virtualinvoke $r1.isEnabled();

        if z0 == 0 goto label6;

        r3 = r0.mPopup;

        if r3 != null goto label6;

        z0 = specialinvoke r0.updateAnchorPos($r2);

        if z0 == 0 goto label6;

        androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(r0);

     label6:
        return 0;
    }

    public boolean onLongClick(android.view.View)
    {
        int $i0;
        android.view.View $r1;
        androidx.appcompat.widget.TooltipCompatHandler r0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 = virtualinvoke $r1.getWidth();

        $i0 = $i0 / 2;

        r0.mAnchorX = $i0;

        $i0 = virtualinvoke $r1.getHeight();

        $i0 = $i0 / 2;

        r0.mAnchorY = $i0;

        virtualinvoke r0.show(1);

        return 1;
    }

    public void onViewAttachedToWindow(android.view.View)
    {
        android.view.View $r1;
        androidx.appcompat.widget.TooltipCompatHandler r0;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    public void onViewDetachedFromWindow(android.view.View)
    {
        android.view.View $r1;
        androidx.appcompat.widget.TooltipCompatHandler r0;

        r0 := @this;

        $r1 := @parameter0;

        virtualinvoke r0.hide();

        return;
    }

    void show(boolean)
    {
        android.content.Context $r5;
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.TooltipPopup $r4;
        long l2;
        java.lang.Runnable $r6;
        androidx.appcompat.widget.TooltipCompatHandler r0, r3;
        int $i0, $i1;
        android.view.View r2;
        boolean $z0, $z1;

        r0 := @this;

        $z0 := @parameter0;

        r2 = r0.mAnchor;

        $z1 = androidx.core.view.ViewCompat.isAttachedToWindow(r2);

        if $z1 != 0 goto label1;

        return;

     label1:
        androidx.appcompat.widget.TooltipCompatHandler.setPendingHandler(null);

        r3 = androidx.appcompat.widget.TooltipCompatHandler.sActiveHandler;

        if r3 == null goto label2;

        virtualinvoke r3.hide();

     label2:
        androidx.appcompat.widget.TooltipCompatHandler.sActiveHandler = r0;

        r0.mFromTouch = $z0;

        $r4 = new androidx.appcompat.widget.TooltipPopup;

        r2 = r0.mAnchor;

        $r5 = virtualinvoke r2.getContext();

        specialinvoke $r4.<init>($r5);

        r0.mPopup = $r4;

        r2 = r0.mAnchor;

        $i1 = r0.mAnchorX;

        $i0 = r0.mAnchorY;

        $z0 = r0.mFromTouch;

        $r1 = r0.mTooltipText;

        virtualinvoke $r4.show(r2, $i1, $i0, $z0, $r1);

        r2 = r0.mAnchor;

        virtualinvoke r2.addOnAttachStateChangeListener(r0);

        $z0 = r0.mFromTouch;

        if $z0 == 0 goto label3;

        l2 = 2500L;

        goto label5;

     label3:
        r2 = r0.mAnchor;

        $i0 = androidx.core.view.ViewCompat.getWindowSystemUiVisibility(r2);

        $i0 = $i0 & 1;

        if $i0 != 1 goto label4;

        $i0 = android.view.ViewConfiguration.getLongPressTimeout();

        l2 = (long) $i0;

        l2 = 3000L - l2;

        goto label5;

     label4:
        $i0 = android.view.ViewConfiguration.getLongPressTimeout();

        l2 = (long) $i0;

        l2 = 15000L - l2;

     label5:
        r2 = r0.mAnchor;

        $r6 = r0.mHideRunnable;

        virtualinvoke r2.removeCallbacks($r6);

        r2 = r0.mAnchor;

        $r6 = r0.mHideRunnable;

        virtualinvoke r2.postDelayed($r6, l2);

        return;
    }
}
