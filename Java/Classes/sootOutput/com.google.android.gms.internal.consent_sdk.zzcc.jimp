final class com.google.android.gms.internal.consent_sdk.zzcc extends java.lang.Object implements java.util.concurrent.Executor
{
    private final java.util.concurrent.atomic.AtomicInteger zza;
    private final java.util.concurrent.ThreadPoolExecutor zzb;
    private java.lang.ref.WeakReference zzc;

    void <init>(java.lang.String)
    {
        java.util.concurrent.ThreadPoolExecutor $r7;
        com.google.android.gms.internal.consent_sdk.zzcc r0;
        com.google.android.gms.internal.consent_sdk.zzcb $r3;
        java.util.concurrent.LinkedBlockingQueue $r2;
        java.util.concurrent.TimeUnit $r1;
        java.util.concurrent.atomic.AtomicInteger $r5;
        java.lang.String $r4;
        java.lang.ref.WeakReference $r6;

        r0 := @this;

        $r4 := @parameter0;

        specialinvoke r0.<init>();

        $r5 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $r5.<init>(1);

        r0.zza = $r5;

        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<init>(null);

        r0.zzc = $r6;

        $r3 = new com.google.android.gms.internal.consent_sdk.zzcb;

        specialinvoke $r3.<init>(r0, "Google consent worker");

        $r7 = new java.util.concurrent.ThreadPoolExecutor;

        $r1 = java.util.concurrent.TimeUnit.SECONDS;

        $r2 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r2.<init>();

        specialinvoke $r7.<init>(1, 1, 30L, $r1, $r2, $r3);

        r0.zzb = $r7;

        virtualinvoke $r7.allowCoreThreadTimeOut(1);

        return;
    }

    public final void execute(java.lang.Runnable)
    {
        java.util.concurrent.ThreadPoolExecutor $r5;
        java.lang.Thread $r2;
        com.google.android.gms.internal.consent_sdk.zzcc r0;
        java.lang.Object $r4;
        java.lang.ref.WeakReference $r3;
        java.lang.Runnable $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = java.lang.Thread.currentThread();

        $r3 = r0.zzc;

        $r4 = virtualinvoke $r3.get();

        if $r2 != $r4 goto label1;

        interfaceinvoke $r1.run();

        return;

     label1:
        $r5 = r0.zzb;

        virtualinvoke $r5.execute($r1);

        return;
    }

    public final java.lang.Thread zza(java.lang.String, java.lang.Runnable)
    {
        com.google.android.gms.internal.consent_sdk.zzcc r0;
        java.lang.Runnable $r3;
        java.util.concurrent.atomic.AtomicInteger $r5;
        java.lang.Thread $r4;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.ref.WeakReference $r6;

        r0 := @this;

        $r2 := @parameter0;

        $r3 := @parameter1;

        $r4 = new java.lang.Thread;

        $r5 = r0.zza;

        $i0 = virtualinvoke $r5.getAndIncrement();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>(34);

        virtualinvoke $r1.append("Google consent worker #");

        virtualinvoke $r1.append($i0);

        $r2 = virtualinvoke $r1.toString();

        specialinvoke $r4.<init>($r3, $r2);

        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<init>($r4);

        r0.zzc = $r6;

        return $r4;
    }
}
