class androidx.work.impl.model.WorkTypeConverters$1 extends java.lang.Object
{
    static final int[] $SwitchMap$androidx$work$BackoffPolicy;
    static final int[] $SwitchMap$androidx$work$NetworkType;
    static final int[] $SwitchMap$androidx$work$OutOfQuotaPolicy;
    static final int[] $SwitchMap$androidx$work$WorkInfo$State;

    static void <clinit>()
    {
        androidx.work.NetworkType $r6;
        androidx.work.BackoffPolicy $r13;
        java.lang.NoSuchFieldError $r3, $r4, $r7, $r8, $r9, $r10, $r11, $r14, $r15, $r18, $r19, $r20, $r21, $r22, $r23;
        int[] $r1;
        int $i0;
        androidx.work.OutOfQuotaPolicy $r2;
        androidx.work.WorkInfo$State[] $r16;
        androidx.work.OutOfQuotaPolicy[] $r0;
        androidx.work.NetworkType[] $r5;
        androidx.work.BackoffPolicy[] $r12;
        androidx.work.WorkInfo$State $r17;

        $r0 = androidx.work.OutOfQuotaPolicy.values();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        androidx.work.impl.model.WorkTypeConverters$1.$SwitchMap$androidx$work$OutOfQuotaPolicy = $r1;

     label01:
        $r2 = androidx.work.OutOfQuotaPolicy.RUN_AS_NON_EXPEDITED_WORK_REQUEST;

        $i0 = virtualinvoke $r2.ordinal();

     label02:
        $r1[$i0] = 1;

        goto label04;

     label03:
        $r3 := @caughtexception;

     label04:
        $r1 = androidx.work.impl.model.WorkTypeConverters$1.$SwitchMap$androidx$work$OutOfQuotaPolicy;

        $r2 = androidx.work.OutOfQuotaPolicy.DROP_WORK_REQUEST;

        $i0 = virtualinvoke $r2.ordinal();

     label05:
        $r1[$i0] = 2;

        goto label07;

     label06:
        $r4 := @caughtexception;

     label07:
        $r5 = androidx.work.NetworkType.values();

        $i0 = lengthof $r5;

        $r1 = newarray (int)[$i0];

        androidx.work.impl.model.WorkTypeConverters$1.$SwitchMap$androidx$work$NetworkType = $r1;

     label08:
        $r6 = androidx.work.NetworkType.NOT_REQUIRED;

        $i0 = virtualinvoke $r6.ordinal();

     label09:
        $r1[$i0] = 1;

        goto label11;

     label10:
        $r7 := @caughtexception;

     label11:
        $r1 = androidx.work.impl.model.WorkTypeConverters$1.$SwitchMap$androidx$work$NetworkType;

        $r6 = androidx.work.NetworkType.CONNECTED;

        $i0 = virtualinvoke $r6.ordinal();

     label12:
        $r1[$i0] = 2;

        goto label14;

     label13:
        $r8 := @caughtexception;

     label14:
        $r1 = androidx.work.impl.model.WorkTypeConverters$1.$SwitchMap$androidx$work$NetworkType;

        $r6 = androidx.work.NetworkType.UNMETERED;

        $i0 = virtualinvoke $r6.ordinal();

     label15:
        $r1[$i0] = 3;

        goto label17;

     label16:
        $r9 := @caughtexception;

     label17:
        $r1 = androidx.work.impl.model.WorkTypeConverters$1.$SwitchMap$androidx$work$NetworkType;

        $r6 = androidx.work.NetworkType.NOT_ROAMING;

        $i0 = virtualinvoke $r6.ordinal();

     label18:
        $r1[$i0] = 4;

        goto label20;

     label19:
        $r10 := @caughtexception;

     label20:
        $r1 = androidx.work.impl.model.WorkTypeConverters$1.$SwitchMap$androidx$work$NetworkType;

        $r6 = androidx.work.NetworkType.METERED;

        $i0 = virtualinvoke $r6.ordinal();

     label21:
        $r1[$i0] = 5;

        goto label23;

     label22:
        $r11 := @caughtexception;

     label23:
        $r12 = androidx.work.BackoffPolicy.values();

        $i0 = lengthof $r12;

        $r1 = newarray (int)[$i0];

        androidx.work.impl.model.WorkTypeConverters$1.$SwitchMap$androidx$work$BackoffPolicy = $r1;

     label24:
        $r13 = androidx.work.BackoffPolicy.EXPONENTIAL;

        $i0 = virtualinvoke $r13.ordinal();

     label25:
        $r1[$i0] = 1;

        goto label27;

     label26:
        $r14 := @caughtexception;

     label27:
        $r1 = androidx.work.impl.model.WorkTypeConverters$1.$SwitchMap$androidx$work$BackoffPolicy;

        $r13 = androidx.work.BackoffPolicy.LINEAR;

        $i0 = virtualinvoke $r13.ordinal();

     label28:
        $r1[$i0] = 2;

        goto label30;

     label29:
        $r15 := @caughtexception;

     label30:
        $r16 = androidx.work.WorkInfo$State.values();

        $i0 = lengthof $r16;

        $r1 = newarray (int)[$i0];

        androidx.work.impl.model.WorkTypeConverters$1.$SwitchMap$androidx$work$WorkInfo$State = $r1;

     label31:
        $r17 = androidx.work.WorkInfo$State.ENQUEUED;

        $i0 = virtualinvoke $r17.ordinal();

     label32:
        $r1[$i0] = 1;

        goto label34;

     label33:
        $r18 := @caughtexception;

     label34:
        $r1 = androidx.work.impl.model.WorkTypeConverters$1.$SwitchMap$androidx$work$WorkInfo$State;

        $r17 = androidx.work.WorkInfo$State.RUNNING;

        $i0 = virtualinvoke $r17.ordinal();

     label35:
        $r1[$i0] = 2;

        goto label37;

     label36:
        $r19 := @caughtexception;

     label37:
        $r1 = androidx.work.impl.model.WorkTypeConverters$1.$SwitchMap$androidx$work$WorkInfo$State;

        $r17 = androidx.work.WorkInfo$State.SUCCEEDED;

        $i0 = virtualinvoke $r17.ordinal();

     label38:
        $r1[$i0] = 3;

        goto label40;

     label39:
        $r20 := @caughtexception;

     label40:
        $r1 = androidx.work.impl.model.WorkTypeConverters$1.$SwitchMap$androidx$work$WorkInfo$State;

        $r17 = androidx.work.WorkInfo$State.FAILED;

        $i0 = virtualinvoke $r17.ordinal();

     label41:
        $r1[$i0] = 4;

        goto label43;

     label42:
        $r21 := @caughtexception;

     label43:
        $r1 = androidx.work.impl.model.WorkTypeConverters$1.$SwitchMap$androidx$work$WorkInfo$State;

        $r17 = androidx.work.WorkInfo$State.BLOCKED;

        $i0 = virtualinvoke $r17.ordinal();

     label44:
        $r1[$i0] = 5;

        goto label46;

     label45:
        $r22 := @caughtexception;

     label46:
        $r1 = androidx.work.impl.model.WorkTypeConverters$1.$SwitchMap$androidx$work$WorkInfo$State;

        $r17 = androidx.work.WorkInfo$State.CANCELLED;

        $i0 = virtualinvoke $r17.ordinal();

     label47:
        $r1[$i0] = 6;

        return;

     label48:
        $r23 := @caughtexception;

        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label04 to label05 with label06;
        catch java.lang.NoSuchFieldError from label08 to label09 with label10;
        catch java.lang.NoSuchFieldError from label11 to label12 with label13;
        catch java.lang.NoSuchFieldError from label14 to label15 with label16;
        catch java.lang.NoSuchFieldError from label17 to label18 with label19;
        catch java.lang.NoSuchFieldError from label20 to label21 with label22;
        catch java.lang.NoSuchFieldError from label24 to label25 with label26;
        catch java.lang.NoSuchFieldError from label27 to label28 with label29;
        catch java.lang.NoSuchFieldError from label31 to label32 with label33;
        catch java.lang.NoSuchFieldError from label34 to label35 with label36;
        catch java.lang.NoSuchFieldError from label37 to label38 with label39;
        catch java.lang.NoSuchFieldError from label40 to label41 with label42;
        catch java.lang.NoSuchFieldError from label43 to label44 with label45;
        catch java.lang.NoSuchFieldError from label46 to label47 with label48;
    }
}
