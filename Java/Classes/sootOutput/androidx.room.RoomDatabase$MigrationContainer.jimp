public class androidx.room.RoomDatabase$MigrationContainer extends java.lang.Object
{
    private java.util.HashMap mMigrations;

    public void <init>()
    {
        androidx.room.RoomDatabase$MigrationContainer r0;
        java.util.HashMap $r1;

        r0 := @this;

        specialinvoke r0.<init>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<init>();

        r0.mMigrations = $r1;

        return;
    }

    private void addMigration(androidx.room.migration.Migration)
    {
        java.util.HashMap r2;
        java.lang.Integer $r3;
        java.util.TreeMap r5, r6;
        int i0, i1;
        androidx.room.RoomDatabase$MigrationContainer r0;
        java.lang.Object $r4;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        androidx.room.migration.Migration $r1, r7;

        r0 := @this;

        $r1 := @parameter0;

        i0 = $r1.startVersion;

        i1 = $r1.endVersion;

        r2 = r0.mMigrations;

        $r3 = java.lang.Integer.valueOf(i0);

        $r4 = virtualinvoke r2.get($r3);

        r5 = (java.util.TreeMap) $r4;

        if r5 != null goto label1;

        r6 = new java.util.TreeMap;

        specialinvoke r6.<init>();

        r5 = r6;

        r2 = r0.mMigrations;

        $r3 = java.lang.Integer.valueOf(i0);

        virtualinvoke r2.put($r3, r6);

     label1:
        $r3 = java.lang.Integer.valueOf(i1);

        $r4 = virtualinvoke r5.get($r3);

        r7 = (androidx.room.migration.Migration) $r4;

        if r7 == null goto label2;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<init>();

        $r8 = virtualinvoke $r8.append("Overriding migration ");

        $r8 = virtualinvoke $r8.append(r7);

        $r8 = virtualinvoke $r8.append(" with ");

        $r8 = virtualinvoke $r8.append($r1);

        $r9 = virtualinvoke $r8.toString();

        android.util.Log.w("ROOM", $r9);

     label2:
        $r3 = java.lang.Integer.valueOf(i1);

        virtualinvoke r5.put($r3, $r1);

        return;
    }

    private java.util.List findUpMigrationPath(java.util.List, boolean, int, int)
    {
        java.util.Iterator $r7;
        java.util.Set r6;
        java.util.HashMap r2;
        java.lang.Integer $r3;
        java.util.List r1;
        java.util.TreeMap r5;
        int $i0, $i1, $i2;
        androidx.room.RoomDatabase$MigrationContainer r0;
        java.lang.Object $r4;
        boolean $z0, z1, $z2;

        r0 := @this;

        r1 := @parameter0;

        $z0 := @parameter1;

        $i1 := @parameter2;

        $i0 := @parameter3;

     label01:
        if $z0 == 0 goto label02;

        if $i1 >= $i0 goto label14;

        goto label03;

     label02:
        if $i1 <= $i0 goto label14;

     label03:
        r2 = r0.mMigrations;

        $r3 = java.lang.Integer.valueOf($i1);

        $r4 = virtualinvoke r2.get($r3);

        r5 = (java.util.TreeMap) $r4;

        if r5 != null goto label04;

        return null;

     label04:
        if $z0 == 0 goto label05;

        r6 = virtualinvoke r5.descendingKeySet();

        goto label06;

     label05:
        r6 = virtualinvoke r5.keySet();

     label06:
        z1 = 0;

        $r7 = interfaceinvoke r6.iterator();

     label07:
        $z2 = interfaceinvoke $r7.hasNext();

        if $z2 == 0 goto label13;

        $r4 = interfaceinvoke $r7.next();

        $r3 = (java.lang.Integer) $r4;

        $i2 = virtualinvoke $r3.intValue();

        $z2 = 1;

        if $z0 == 0 goto label10;

        if $i2 > $i0 goto label08;

        if $i2 <= $i1 goto label08;

        goto label09;

     label08:
        $z2 = 0;

     label09:
        goto label12;

     label10:
        if $i2 < $i0 goto label11;

        if $i2 >= $i1 goto label11;

        goto label12;

     label11:
        $z2 = 0;

     label12:
        if $z2 == 0 goto label07;

        $r3 = java.lang.Integer.valueOf($i2);

        $r4 = virtualinvoke r5.get($r3);

        interfaceinvoke r1.add($r4);

        $i1 = $i2;

        z1 = 1;

        goto label13;

     label13:
        if z1 != 0 goto label01;

        return null;

     label14:
        return r1;
    }

    public transient void addMigrations(androidx.room.migration.Migration[])
    {
        int $i0, $i1;
        androidx.room.RoomDatabase$MigrationContainer r0;
        androidx.room.migration.Migration[] $r1;
        androidx.room.migration.Migration r2;

        r0 := @this;

        $r1 := @parameter0;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r2 = $r1[$i1];

        specialinvoke r0.addMigration(r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return;
    }

    public java.util.List findMigrationPath(int, int)
    {
        java.util.List $r2;
        int $i0, $i1;
        androidx.room.RoomDatabase$MigrationContainer r0;
        java.util.ArrayList r1;
        boolean z0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        if $i0 != $i1 goto label1;

        $r2 = java.util.Collections.emptyList();

        return $r2;

     label1:
        if $i1 <= $i0 goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        r1 = new java.util.ArrayList;

        specialinvoke r1.<init>();

        $r2 = specialinvoke r0.findUpMigrationPath(r1, z0, $i0, $i1);

        return $r2;
    }
}
