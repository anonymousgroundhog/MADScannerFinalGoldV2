public class androidx.appcompat.widget.Toolbar extends android.view.ViewGroup
{
    private static final java.lang.String TAG;
    private androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback;
    int mButtonGravity;
    android.widget.ImageButton mCollapseButtonView;
    private java.lang.CharSequence mCollapseDescription;
    private android.graphics.drawable.Drawable mCollapseIcon;
    private boolean mCollapsible;
    private int mContentInsetEndWithActions;
    private int mContentInsetStartWithNavigation;
    private androidx.appcompat.widget.RtlSpacingHelper mContentInsets;
    private boolean mEatingHover;
    private boolean mEatingTouch;
    android.view.View mExpandedActionView;
    private androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter;
    private int mGravity;
    private final java.util.ArrayList mHiddenViews;
    private android.widget.ImageView mLogoView;
    private int mMaxButtonHeight;
    private androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback;
    private androidx.appcompat.widget.ActionMenuView mMenuView;
    private final androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener;
    private android.widget.ImageButton mNavButtonView;
    androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener;
    private androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter;
    private android.content.Context mPopupContext;
    private int mPopupTheme;
    private final java.lang.Runnable mShowOverflowMenuRunnable;
    private java.lang.CharSequence mSubtitleText;
    private int mSubtitleTextAppearance;
    private android.content.res.ColorStateList mSubtitleTextColor;
    private android.widget.TextView mSubtitleTextView;
    private final int[] mTempMargins;
    private final java.util.ArrayList mTempViews;
    private int mTitleMarginBottom;
    private int mTitleMarginEnd;
    private int mTitleMarginStart;
    private int mTitleMarginTop;
    private java.lang.CharSequence mTitleText;
    private int mTitleTextAppearance;
    private android.content.res.ColorStateList mTitleTextColor;
    private android.widget.TextView mTitleTextView;
    private androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper;

    public void <init>(android.content.Context)
    {
        androidx.appcompat.widget.Toolbar r0;
        android.content.Context $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 = androidx.appcompat.R$attr.toolbarStyle;

        specialinvoke r0.<init>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1, $r4;
        android.graphics.drawable.Drawable $r8;
        android.content.res.TypedArray $r6;
        java.util.ArrayList $r11;
        android.content.res.ColorStateList $r10;
        android.util.AttributeSet $r2;
        int[] r3;
        androidx.appcompat.widget.TintTypedArray $r5;
        int $i0, i1, i2, i3;
        androidx.appcompat.widget.Toolbar$2 $r13;
        androidx.appcompat.widget.Toolbar$1 $r12;
        boolean $z0;
        java.lang.CharSequence $r9;
        androidx.appcompat.widget.RtlSpacingHelper r7;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 := @parameter2;

        specialinvoke r0.<init>($r1, $r2, $i0);

        r0.mGravity = 8388627;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<init>();

        r0.mTempViews = $r11;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<init>();

        r0.mHiddenViews = $r11;

        r3 = newarray (int)[2];

        r0.mTempMargins = r3;

        $r12 = new androidx.appcompat.widget.Toolbar$1;

        specialinvoke $r12.<init>(r0);

        r0.mMenuViewItemClickListener = $r12;

        $r13 = new androidx.appcompat.widget.Toolbar$2;

        specialinvoke $r13.<init>(r0);

        r0.mShowOverflowMenuRunnable = $r13;

        $r4 = virtualinvoke r0.getContext();

        r3 = androidx.appcompat.R$styleable.Toolbar;

        $r5 = androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes($r4, $r2, r3, $i0, 0);

        r3 = androidx.appcompat.R$styleable.Toolbar;

        $r6 = virtualinvoke $r5.getWrappedTypeArray();

        androidx.core.view.ViewCompat.saveAttributeDataForStyleable(r0, $r1, r3, $r2, $r6, $i0, 0);

        $i0 = androidx.appcompat.R$styleable.Toolbar_titleTextAppearance;

        $i0 = virtualinvoke $r5.getResourceId($i0, 0);

        r0.mTitleTextAppearance = $i0;

        $i0 = androidx.appcompat.R$styleable.Toolbar_subtitleTextAppearance;

        $i0 = virtualinvoke $r5.getResourceId($i0, 0);

        r0.mSubtitleTextAppearance = $i0;

        $i0 = androidx.appcompat.R$styleable.Toolbar_android_gravity;

        i1 = r0.mGravity;

        $i0 = virtualinvoke $r5.getInteger($i0, i1);

        r0.mGravity = $i0;

        $i0 = androidx.appcompat.R$styleable.Toolbar_buttonGravity;

        $i0 = virtualinvoke $r5.getInteger($i0, 48);

        r0.mButtonGravity = $i0;

        $i0 = androidx.appcompat.R$styleable.Toolbar_titleMargin;

        $i0 = virtualinvoke $r5.getDimensionPixelOffset($i0, 0);

        i1 = $i0;

        i2 = androidx.appcompat.R$styleable.Toolbar_titleMargins;

        $z0 = virtualinvoke $r5.hasValue(i2);

        if $z0 == 0 goto label01;

        i1 = androidx.appcompat.R$styleable.Toolbar_titleMargins;

        i1 = virtualinvoke $r5.getDimensionPixelOffset(i1, $i0);

     label01:
        r0.mTitleMarginBottom = i1;

        r0.mTitleMarginTop = i1;

        r0.mTitleMarginEnd = i1;

        r0.mTitleMarginStart = i1;

        $i0 = androidx.appcompat.R$styleable.Toolbar_titleMarginStart;

        i1 = -1;

        $i0 = virtualinvoke $r5.getDimensionPixelOffset($i0, i1);

        if $i0 < 0 goto label02;

        r0.mTitleMarginStart = $i0;

     label02:
        $i0 = androidx.appcompat.R$styleable.Toolbar_titleMarginEnd;

        i1 = -1;

        $i0 = virtualinvoke $r5.getDimensionPixelOffset($i0, i1);

        if $i0 < 0 goto label03;

        r0.mTitleMarginEnd = $i0;

     label03:
        $i0 = androidx.appcompat.R$styleable.Toolbar_titleMarginTop;

        i1 = -1;

        $i0 = virtualinvoke $r5.getDimensionPixelOffset($i0, i1);

        if $i0 < 0 goto label04;

        r0.mTitleMarginTop = $i0;

     label04:
        $i0 = androidx.appcompat.R$styleable.Toolbar_titleMarginBottom;

        i1 = -1;

        $i0 = virtualinvoke $r5.getDimensionPixelOffset($i0, i1);

        if $i0 < 0 goto label05;

        r0.mTitleMarginBottom = $i0;

     label05:
        $i0 = androidx.appcompat.R$styleable.Toolbar_maxButtonHeight;

        i1 = -1;

        $i0 = virtualinvoke $r5.getDimensionPixelSize($i0, i1);

        r0.mMaxButtonHeight = $i0;

        $i0 = androidx.appcompat.R$styleable.Toolbar_contentInsetStart;

        $i0 = virtualinvoke $r5.getDimensionPixelOffset($i0, -2147483648);

        i1 = androidx.appcompat.R$styleable.Toolbar_contentInsetEnd;

        i1 = virtualinvoke $r5.getDimensionPixelOffset(i1, -2147483648);

        i2 = androidx.appcompat.R$styleable.Toolbar_contentInsetLeft;

        i2 = virtualinvoke $r5.getDimensionPixelSize(i2, 0);

        i3 = androidx.appcompat.R$styleable.Toolbar_contentInsetRight;

        i3 = virtualinvoke $r5.getDimensionPixelSize(i3, 0);

        specialinvoke r0.ensureContentInsets();

        r7 = r0.mContentInsets;

        virtualinvoke r7.setAbsolute(i2, i3);

        if $i0 != -2147483648 goto label06;

        if i1 == -2147483648 goto label07;

     label06:
        r7 = r0.mContentInsets;

        virtualinvoke r7.setRelative($i0, i1);

     label07:
        $i0 = androidx.appcompat.R$styleable.Toolbar_contentInsetStartWithNavigation;

        $i0 = virtualinvoke $r5.getDimensionPixelOffset($i0, -2147483648);

        r0.mContentInsetStartWithNavigation = $i0;

        $i0 = androidx.appcompat.R$styleable.Toolbar_contentInsetEndWithActions;

        $i0 = virtualinvoke $r5.getDimensionPixelOffset($i0, -2147483648);

        r0.mContentInsetEndWithActions = $i0;

        $i0 = androidx.appcompat.R$styleable.Toolbar_collapseIcon;

        $r8 = virtualinvoke $r5.getDrawable($i0);

        r0.mCollapseIcon = $r8;

        $i0 = androidx.appcompat.R$styleable.Toolbar_collapseContentDescription;

        $r9 = virtualinvoke $r5.getText($i0);

        r0.mCollapseDescription = $r9;

        $i0 = androidx.appcompat.R$styleable.Toolbar_title;

        $r9 = virtualinvoke $r5.getText($i0);

        $z0 = android.text.TextUtils.isEmpty($r9);

        if $z0 != 0 goto label08;

        virtualinvoke r0.setTitle($r9);

     label08:
        $i0 = androidx.appcompat.R$styleable.Toolbar_subtitle;

        $r9 = virtualinvoke $r5.getText($i0);

        $z0 = android.text.TextUtils.isEmpty($r9);

        if $z0 != 0 goto label09;

        virtualinvoke r0.setSubtitle($r9);

     label09:
        $r1 = virtualinvoke r0.getContext();

        r0.mPopupContext = $r1;

        $i0 = androidx.appcompat.R$styleable.Toolbar_popupTheme;

        $i0 = virtualinvoke $r5.getResourceId($i0, 0);

        virtualinvoke r0.setPopupTheme($i0);

        $i0 = androidx.appcompat.R$styleable.Toolbar_navigationIcon;

        $r8 = virtualinvoke $r5.getDrawable($i0);

        if $r8 == null goto label10;

        virtualinvoke r0.setNavigationIcon($r8);

     label10:
        $i0 = androidx.appcompat.R$styleable.Toolbar_navigationContentDescription;

        $r9 = virtualinvoke $r5.getText($i0);

        $z0 = android.text.TextUtils.isEmpty($r9);

        if $z0 != 0 goto label11;

        virtualinvoke r0.setNavigationContentDescription($r9);

     label11:
        $i0 = androidx.appcompat.R$styleable.Toolbar_logo;

        $r8 = virtualinvoke $r5.getDrawable($i0);

        if $r8 == null goto label12;

        virtualinvoke r0.setLogo($r8);

     label12:
        $i0 = androidx.appcompat.R$styleable.Toolbar_logoDescription;

        $r9 = virtualinvoke $r5.getText($i0);

        $z0 = android.text.TextUtils.isEmpty($r9);

        if $z0 != 0 goto label13;

        virtualinvoke r0.setLogoDescription($r9);

     label13:
        $i0 = androidx.appcompat.R$styleable.Toolbar_titleTextColor;

        $z0 = virtualinvoke $r5.hasValue($i0);

        if $z0 == 0 goto label14;

        $i0 = androidx.appcompat.R$styleable.Toolbar_titleTextColor;

        $r10 = virtualinvoke $r5.getColorStateList($i0);

        virtualinvoke r0.setTitleTextColor($r10);

     label14:
        $i0 = androidx.appcompat.R$styleable.Toolbar_subtitleTextColor;

        $z0 = virtualinvoke $r5.hasValue($i0);

        if $z0 == 0 goto label15;

        $i0 = androidx.appcompat.R$styleable.Toolbar_subtitleTextColor;

        $r10 = virtualinvoke $r5.getColorStateList($i0);

        virtualinvoke r0.setSubtitleTextColor($r10);

     label15:
        $i0 = androidx.appcompat.R$styleable.Toolbar_menu;

        $z0 = virtualinvoke $r5.hasValue($i0);

        if $z0 == 0 goto label16;

        $i0 = androidx.appcompat.R$styleable.Toolbar_menu;

        $i0 = virtualinvoke $r5.getResourceId($i0, 0);

        virtualinvoke r0.inflateMenu($i0);

        goto label16;

     label16:
        virtualinvoke $r5.recycle();

        return;
    }

    private void addCustomViewsWithGravity(java.util.List, int)
    {
        android.view.ViewGroup$LayoutParams $r3;
        androidx.appcompat.widget.Toolbar$LayoutParams r4;
        java.util.List r1;
        int $i0, $i1, $i2, $i3;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r2;
        boolean z0;

        r0 := @this;

        r1 := @parameter0;

        $i0 := @parameter1;

        $i1 = androidx.core.view.ViewCompat.getLayoutDirection(r0);

        z0 = 1;

        if $i1 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        $i1 = virtualinvoke r0.getChildCount();

        $i2 = androidx.core.view.ViewCompat.getLayoutDirection(r0);

        $i0 = androidx.core.view.GravityCompat.getAbsoluteGravity($i0, $i2);

        interfaceinvoke r1.clear();

        if z0 == 0 goto label6;

        $i1 = $i1 + -1;

     label3:
        if $i1 < 0 goto label5;

        $r2 = virtualinvoke r0.getChildAt($i1);

        $r3 = virtualinvoke $r2.getLayoutParams();

        r4 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r3;

        $i2 = r4.mViewType;

        if $i2 != 0 goto label4;

        z0 = specialinvoke r0.shouldLayout($r2);

        if z0 == 0 goto label4;

        $i2 = r4.gravity;

        $i2 = specialinvoke r0.getChildHorizontalGravity($i2);

        if $i2 != $i0 goto label4;

        interfaceinvoke r1.add($r2);

     label4:
        $i1 = $i1 + -1;

        goto label3;

     label5:
        return;

     label6:
        $i2 = 0;

     label7:
        if $i2 >= $i1 goto label9;

        $r2 = virtualinvoke r0.getChildAt($i2);

        $r3 = virtualinvoke $r2.getLayoutParams();

        r4 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r3;

        $i3 = r4.mViewType;

        if $i3 != 0 goto label8;

        z0 = specialinvoke r0.shouldLayout($r2);

        if z0 == 0 goto label8;

        $i3 = r4.gravity;

        $i3 = specialinvoke r0.getChildHorizontalGravity($i3);

        if $i3 != $i0 goto label8;

        interfaceinvoke r1.add($r2);

     label8:
        $i2 = $i2 + 1;

        goto label7;

     label9:
        return;
    }

    private void addSystemView(android.view.View, boolean)
    {
        android.view.ViewGroup$LayoutParams $r2;
        java.util.ArrayList $r5;
        androidx.appcompat.widget.Toolbar$LayoutParams $r3;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1, $r4;
        boolean $z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        $r2 = virtualinvoke $r1.getLayoutParams();

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.generateDefaultLayoutParams();

        goto label3;

     label1:
        $z1 = virtualinvoke r0.checkLayoutParams($r2);

        if $z1 != 0 goto label2;

        $r3 = virtualinvoke r0.generateLayoutParams($r2);

        goto label3;

     label2:
        $r3 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r2;

     label3:
        $r3.mViewType = 1;

        if $z0 == 0 goto label4;

        $r4 = r0.mExpandedActionView;

        if $r4 == null goto label4;

        virtualinvoke $r1.setLayoutParams($r3);

        $r5 = r0.mHiddenViews;

        virtualinvoke $r5.add($r1);

        return;

     label4:
        virtualinvoke r0.addView($r1, $r3);

        return;
    }

    private void ensureContentInsets()
    {
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.RtlSpacingHelper $r1;

        r0 := @this;

        $r1 = r0.mContentInsets;

        if $r1 != null goto label1;

        $r1 = new androidx.appcompat.widget.RtlSpacingHelper;

        specialinvoke $r1.<init>();

        r0.mContentInsets = $r1;

     label1:
        return;
    }

    private void ensureLogoView()
    {
        android.content.Context $r1;
        androidx.appcompat.widget.AppCompatImageView $r3;
        android.widget.ImageView $r2;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $r2 = r0.mLogoView;

        if $r2 != null goto label1;

        $r3 = new androidx.appcompat.widget.AppCompatImageView;

        $r1 = virtualinvoke r0.getContext();

        specialinvoke $r3.<init>($r1);

        r0.mLogoView = $r3;

     label1:
        return;
    }

    private void ensureMenu()
    {
        androidx.appcompat.widget.ActionMenuView r1;
        android.content.Context $r5;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter $r4;
        androidx.appcompat.view.menu.MenuBuilder $r2;
        android.view.Menu $r3;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        specialinvoke r0.ensureMenuView();

        r1 = r0.mMenuView;

        $r2 = virtualinvoke r1.peekMenu();

        if $r2 != null goto label2;

        r1 = r0.mMenuView;

        $r3 = virtualinvoke r1.getMenu();

        $r2 = (androidx.appcompat.view.menu.MenuBuilder) $r3;

        $r4 = r0.mExpandedMenuPresenter;

        if $r4 != null goto label1;

        $r4 = new androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter;

        specialinvoke $r4.<init>(r0);

        r0.mExpandedMenuPresenter = $r4;

     label1:
        r1 = r0.mMenuView;

        virtualinvoke r1.setExpandedActionViewsExclusive(1);

        $r4 = r0.mExpandedMenuPresenter;

        $r5 = r0.mPopupContext;

        virtualinvoke $r2.addMenuPresenter($r4, $r5);

     label2:
        return;
    }

    private void ensureMenuView()
    {
        android.content.Context $r2;
        androidx.appcompat.widget.ActionMenuView r1;
        androidx.appcompat.view.menu.MenuPresenter$Callback $r4;
        androidx.appcompat.widget.Toolbar$LayoutParams $r6;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener $r3;
        androidx.appcompat.view.menu.MenuBuilder$Callback $r5;

        r0 := @this;

        r1 = r0.mMenuView;

        if r1 != null goto label1;

        r1 = new androidx.appcompat.widget.ActionMenuView;

        $r2 = virtualinvoke r0.getContext();

        specialinvoke r1.<init>($r2);

        r0.mMenuView = r1;

        $i0 = r0.mPopupTheme;

        virtualinvoke r1.setPopupTheme($i0);

        r1 = r0.mMenuView;

        $r3 = r0.mMenuViewItemClickListener;

        virtualinvoke r1.setOnMenuItemClickListener($r3);

        r1 = r0.mMenuView;

        $r4 = r0.mActionMenuPresenterCallback;

        $r5 = r0.mMenuBuilderCallback;

        virtualinvoke r1.setMenuCallbacks($r4, $r5);

        $r6 = virtualinvoke r0.generateDefaultLayoutParams();

        $i0 = r0.mButtonGravity;

        $i0 = $i0 & 112;

        $i0 = $i0 | 8388613;

        $r6.gravity = $i0;

        r1 = r0.mMenuView;

        virtualinvoke r1.setLayoutParams($r6);

        r1 = r0.mMenuView;

        specialinvoke r0.addSystemView(r1, 0);

     label1:
        return;
    }

    private void ensureNavButtonView()
    {
        android.widget.ImageButton r1;
        android.content.Context $r3;
        androidx.appcompat.widget.Toolbar$LayoutParams $r4;
        androidx.appcompat.widget.AppCompatImageButton r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        r1 = r0.mNavButtonView;

        if r1 != null goto label1;

        r2 = new androidx.appcompat.widget.AppCompatImageButton;

        $r3 = virtualinvoke r0.getContext();

        $i0 = androidx.appcompat.R$attr.toolbarNavigationButtonStyle;

        specialinvoke r2.<init>($r3, null, $i0);

        r0.mNavButtonView = r2;

        $r4 = virtualinvoke r0.generateDefaultLayoutParams();

        $i0 = r0.mButtonGravity;

        $i0 = $i0 & 112;

        $i0 = $i0 | 8388611;

        $r4.gravity = $i0;

        r1 = r0.mNavButtonView;

        virtualinvoke r1.setLayoutParams($r4);

     label1:
        return;
    }

    private int getChildHorizontalGravity(int)
    {
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 = androidx.core.view.ViewCompat.getLayoutDirection(r0);

        $i0 = androidx.core.view.GravityCompat.getAbsoluteGravity($i0, $i1);

        $i0 = $i0 & 7;

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label1;
            case 5: goto label2;
            default: goto label1;
        };

     label1:
        if $i1 != 1 goto label3;

        return 5;

     label2:
        return $i0;

     label3:
        return 3;
    }

    private int getChildTop(android.view.View, int)
    {
        android.view.ViewGroup$LayoutParams $r2;
        androidx.appcompat.widget.Toolbar$LayoutParams r3;
        int $i0, $i1, i2, $i3, $i4, i5;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r2;

        $i1 = virtualinvoke $r1.getMeasuredHeight();

        if $i0 <= 0 goto label1;

        $i0 = $i1 - $i0;

        $i0 = $i0 / 2;

        goto label2;

     label1:
        $i0 = 0;

     label2:
        i2 = r3.gravity;

        i2 = specialinvoke r0.getChildVerticalGravity(i2);

        lookupswitch(i2)
        {
            case 48: goto label5;
            case 80: goto label4;
            default: goto label3;
        };

     label3:
        $i0 = virtualinvoke r0.getPaddingTop();

        $i3 = virtualinvoke r0.getPaddingBottom();

        $i4 = virtualinvoke r0.getHeight();

        i2 = $i4 - $i0;

        i2 = i2 - $i3;

        i2 = i2 - $i1;

        i2 = i2 / 2;

        i5 = r3.topMargin;

        if i2 >= i5 goto label6;

        i2 = r3.topMargin;

        goto label7;

     label4:
        i2 = virtualinvoke r0.getHeight();

        $i3 = virtualinvoke r0.getPaddingBottom();

        i2 = i2 - $i3;

        $i1 = i2 - $i1;

        i2 = r3.bottomMargin;

        $i1 = $i1 - i2;

        $i0 = $i1 - $i0;

        return $i0;

     label5:
        $i1 = virtualinvoke r0.getPaddingTop();

        $i0 = $i1 - $i0;

        return $i0;

     label6:
        $i3 = $i4 - $i3;

        $i1 = $i3 - $i1;

        $i1 = $i1 - i2;

        $i1 = $i1 - $i0;

        $i3 = r3.bottomMargin;

        if $i1 >= $i3 goto label7;

        $i3 = r3.bottomMargin;

        $i1 = $i3 - $i1;

        $i1 = i2 - $i1;

        i2 = java.lang.Math.max(0, $i1);

     label7:
        $i0 = $i0 + i2;

        return $i0;
    }

    private int getChildVerticalGravity(int)
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        $i0 = $i0 & 112;

        lookupswitch($i0)
        {
            case 16: goto label2;
            case 48: goto label2;
            case 80: goto label2;
            default: goto label1;
        };

     label1:
        $i0 = r0.mGravity;

        $i0 = $i0 & 112;

     label2:
        return $i0;
    }

    private int getHorizontalMargins(android.view.View)
    {
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams r3;
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $i0 = androidx.core.view.MarginLayoutParamsCompat.getMarginStart(r3);

        $i1 = androidx.core.view.MarginLayoutParamsCompat.getMarginEnd(r3);

        $i0 = $i0 + $i1;

        return $i0;
    }

    private android.view.MenuInflater getMenuInflater()
    {
        androidx.appcompat.widget.Toolbar r0;
        android.content.Context $r2;
        androidx.appcompat.view.SupportMenuInflater $r1;

        r0 := @this;

        $r1 = new androidx.appcompat.view.SupportMenuInflater;

        $r2 = virtualinvoke r0.getContext();

        specialinvoke $r1.<init>($r2);

        return $r1;
    }

    private int getVerticalMargins(android.view.View)
    {
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams r3;
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $i1 = r3.topMargin;

        $i0 = r3.bottomMargin;

        $i0 = $i1 + $i0;

        return $i0;
    }

    private int getViewListMeasuredWidth(java.util.List, int[])
    {
        android.view.ViewGroup$LayoutParams $r5;
        androidx.appcompat.widget.Toolbar$LayoutParams r6;
        java.util.List r1;
        int[] $r2;
        int i0, i1, i2, $i3, i4, i5, $i6, $i7;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View r4;
        java.lang.Object $r3;

        r0 := @this;

        r1 := @parameter0;

        $r2 := @parameter1;

        i0 = $r2[0];

        i1 = $r2[1];

        i2 = 0;

        $i3 = interfaceinvoke r1.size();

        i4 = 0;

     label1:
        if i4 >= $i3 goto label2;

        $r3 = interfaceinvoke r1.get(i4);

        r4 = (android.view.View) $r3;

        $r5 = virtualinvoke r4.getLayoutParams();

        r6 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r5;

        i5 = r6.leftMargin;

        i0 = i5 - i0;

        i5 = r6.rightMargin;

        i1 = i5 - i1;

        $i6 = java.lang.Math.max(0, i0);

        i5 = java.lang.Math.max(0, i1);

        i0 = neg i0;

        i0 = java.lang.Math.max(0, i0);

        i1 = neg i1;

        i1 = java.lang.Math.max(0, i1);

        $i7 = virtualinvoke r4.getMeasuredWidth();

        $i6 = $i7 + $i6;

        i5 = $i6 + i5;

        i2 = i2 + i5;

        i4 = i4 + 1;

        goto label1;

     label2:
        return i2;
    }

    private boolean isChildOrHidden(android.view.View)
    {
        android.view.ViewParent $r2;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;
        java.util.ArrayList $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke $r1.getParent();

        if $r2 == r0 goto label2;

        $r3 = r0.mHiddenViews;

        $z0 = virtualinvoke $r3.contains($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    private int layoutChildLeft(android.view.View, int, int[], int)
    {
        android.view.ViewGroup$LayoutParams $r3;
        androidx.appcompat.widget.Toolbar$LayoutParams r4;
        int[] $r2;
        int $i0, $i1, i2, i3, $i4;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i1 := @parameter1;

        $r2 := @parameter2;

        $i0 := @parameter3;

        $r3 = virtualinvoke $r1.getLayoutParams();

        r4 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r3;

        i2 = r4.leftMargin;

        i3 = $r2[0];

        i2 = i2 - i3;

        i3 = java.lang.Math.max(0, i2);

        $i1 = $i1 + i3;

        i2 = neg i2;

        i2 = java.lang.Math.max(0, i2);

        $r2[0] = i2;

        i2 = specialinvoke r0.getChildTop($r1, $i0);

        $i0 = virtualinvoke $r1.getMeasuredWidth();

        i3 = $i1 + $i0;

        $i4 = virtualinvoke $r1.getMeasuredHeight();

        $i4 = $i4 + i2;

        virtualinvoke $r1.layout($i1, i2, i3, $i4);

        i2 = r4.rightMargin;

        $i0 = i2 + $i0;

        $i1 = $i1 + $i0;

        return $i1;
    }

    private int layoutChildRight(android.view.View, int, int[], int)
    {
        android.view.ViewGroup$LayoutParams $r3;
        androidx.appcompat.widget.Toolbar$LayoutParams r4;
        int[] $r2;
        int $i0, $i1, i2, i3, $i4;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i1 := @parameter1;

        $r2 := @parameter2;

        $i0 := @parameter3;

        $r3 = virtualinvoke $r1.getLayoutParams();

        r4 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r3;

        i2 = r4.rightMargin;

        i3 = $r2[1];

        i2 = i2 - i3;

        i3 = java.lang.Math.max(0, i2);

        $i1 = $i1 - i3;

        i2 = neg i2;

        i2 = java.lang.Math.max(0, i2);

        $r2[1] = i2;

        i2 = specialinvoke r0.getChildTop($r1, $i0);

        $i0 = virtualinvoke $r1.getMeasuredWidth();

        i3 = $i1 - $i0;

        $i4 = virtualinvoke $r1.getMeasuredHeight();

        $i4 = $i4 + i2;

        virtualinvoke $r1.layout(i3, i2, $i1, $i4);

        i2 = r4.leftMargin;

        $i0 = i2 + $i0;

        $i1 = $i1 - $i0;

        return $i1;
    }

    private int measureChildCollapseMargins(android.view.View, int, int, int, int, int[])
    {
        android.view.ViewGroup$LayoutParams $r3;
        int[] $r2;
        android.view.ViewGroup$MarginLayoutParams r4;
        int $i0, $i1, $i2, $i3, i4, i5, i6, $i7;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        $i2 := @parameter3;

        $i3 := @parameter4;

        $r2 := @parameter5;

        $r3 = virtualinvoke $r1.getLayoutParams();

        r4 = (android.view.ViewGroup$MarginLayoutParams) $r3;

        i4 = r4.leftMargin;

        i5 = $r2[0];

        i5 = i4 - i5;

        i4 = r4.rightMargin;

        i6 = $r2[1];

        i6 = i4 - i6;

        i4 = java.lang.Math.max(0, i5);

        $i7 = java.lang.Math.max(0, i6);

        i4 = i4 + $i7;

        i5 = neg i5;

        i5 = java.lang.Math.max(0, i5);

        $r2[0] = i5;

        i5 = neg i6;

        i5 = java.lang.Math.max(0, i5);

        $r2[1] = i5;

        i5 = virtualinvoke r0.getPaddingLeft();

        i6 = virtualinvoke r0.getPaddingRight();

        i5 = i5 + i6;

        i5 = i5 + i4;

        $i1 = i5 + $i1;

        i5 = r4.width;

        $i0 = androidx.appcompat.widget.Toolbar.getChildMeasureSpec($i0, $i1, i5);

        $i1 = virtualinvoke r0.getPaddingTop();

        i5 = virtualinvoke r0.getPaddingBottom();

        $i1 = $i1 + i5;

        i5 = r4.topMargin;

        $i1 = $i1 + i5;

        i5 = r4.bottomMargin;

        $i1 = $i1 + i5;

        $i1 = $i1 + $i3;

        $i3 = r4.height;

        $i1 = androidx.appcompat.widget.Toolbar.getChildMeasureSpec($i2, $i1, $i3);

        virtualinvoke $r1.measure($i0, $i1);

        $i0 = virtualinvoke $r1.getMeasuredWidth();

        $i0 = $i0 + i4;

        return $i0;
    }

    private void measureChildConstrained(android.view.View, int, int, int, int, int)
    {
        android.view.ViewGroup$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        $i2 := @parameter3;

        $i3 := @parameter4;

        $i4 := @parameter5;

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        $i5 = virtualinvoke r0.getPaddingLeft();

        $i6 = virtualinvoke r0.getPaddingRight();

        $i5 = $i5 + $i6;

        $i6 = r3.leftMargin;

        $i5 = $i5 + $i6;

        $i6 = r3.rightMargin;

        $i5 = $i5 + $i6;

        $i1 = $i5 + $i1;

        $i5 = r3.width;

        $i0 = androidx.appcompat.widget.Toolbar.getChildMeasureSpec($i0, $i1, $i5);

        $i1 = virtualinvoke r0.getPaddingTop();

        $i5 = virtualinvoke r0.getPaddingBottom();

        $i1 = $i1 + $i5;

        $i5 = r3.topMargin;

        $i1 = $i1 + $i5;

        $i5 = r3.bottomMargin;

        $i1 = $i1 + $i5;

        $i1 = $i1 + $i3;

        $i3 = r3.height;

        $i1 = androidx.appcompat.widget.Toolbar.getChildMeasureSpec($i2, $i1, $i3);

        $i2 = $i1;

        $i3 = android.view.View$MeasureSpec.getMode($i1);

        if $i3 == 1073741824 goto label3;

        if $i4 < 0 goto label3;

        if $i3 == 0 goto label1;

        $i1 = android.view.View$MeasureSpec.getSize($i1);

        $i1 = java.lang.Math.min($i1, $i4);

        goto label2;

     label1:
        $i1 = $i4;

     label2:
        $i2 = android.view.View$MeasureSpec.makeMeasureSpec($i1, 1073741824);

     label3:
        virtualinvoke $r1.measure($i0, $i2);

        return;
    }

    private void postShowOverflowMenu()
    {
        androidx.appcompat.widget.Toolbar r0;
        java.lang.Runnable $r1;

        r0 := @this;

        $r1 = r0.mShowOverflowMenuRunnable;

        virtualinvoke r0.removeCallbacks($r1);

        $r1 = r0.mShowOverflowMenuRunnable;

        virtualinvoke r0.post($r1);

        return;
    }

    private boolean shouldCollapse()
    {
        int $i0, i1, $i2;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;
        boolean z0;

        r0 := @this;

        z0 = r0.mCollapsible;

        if z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.getChildCount();

        i1 = 0;

     label2:
        if i1 >= $i0 goto label4;

        $r1 = virtualinvoke r0.getChildAt(i1);

        z0 = specialinvoke r0.shouldLayout($r1);

        if z0 == 0 goto label3;

        $i2 = virtualinvoke $r1.getMeasuredWidth();

        if $i2 <= 0 goto label3;

        $i2 = virtualinvoke $r1.getMeasuredHeight();

        if $i2 <= 0 goto label3;

        return 0;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 1;
    }

    private boolean shouldLayout(android.view.View)
    {
        android.view.ViewParent $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.getParent();

        if $r2 != r0 goto label1;

        $i0 = virtualinvoke $r1.getVisibility();

        if $i0 == 8 goto label1;

        return 1;

     label1:
        return 0;
    }

    void addChildrenForExpandedActionView()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r3;
        java.lang.Object $r2;
        java.util.ArrayList r1;

        r0 := @this;

        r1 = r0.mHiddenViews;

        $i0 = virtualinvoke r1.size();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label2;

        r1 = r0.mHiddenViews;

        $r2 = virtualinvoke r1.get($i0);

        $r3 = (android.view.View) $r2;

        virtualinvoke r0.addView($r3);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        r1 = r0.mHiddenViews;

        virtualinvoke r1.clear();

        return;
    }

    public boolean canShowOverflowMenu()
    {
        androidx.appcompat.widget.ActionMenuView $r1;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this;

        $i0 = virtualinvoke r0.getVisibility();

        if $i0 != 0 goto label1;

        $r1 = r0.mMenuView;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.isOverflowReserved();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.Toolbar r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = specialinvoke r0.checkLayoutParams($r1);

        if $z0 == 0 goto label1;

        $z0 = $r1 instanceof androidx.appcompat.widget.Toolbar$LayoutParams;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void collapseActionView()
    {
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter r1;
        androidx.appcompat.view.menu.MenuItemImpl r2;

        r0 := @this;

        r1 = r0.mExpandedMenuPresenter;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r2 = r1.mCurrentExpandedItem;

     label2:
        if r2 == null goto label3;

        virtualinvoke r2.collapseActionView();

     label3:
        return;
    }

    public void dismissPopupMenus()
    {
        androidx.appcompat.widget.ActionMenuView $r1;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $r1 = r0.mMenuView;

        if $r1 == null goto label1;

        virtualinvoke $r1.dismissPopupMenus();

     label1:
        return;
    }

    void ensureCollapseButtonView()
    {
        android.widget.ImageButton r1;
        android.content.Context $r3;
        androidx.appcompat.widget.AppCompatImageButton r2;
        java.lang.CharSequence $r5;
        androidx.appcompat.widget.Toolbar$3 $r7;
        android.graphics.drawable.Drawable $r4;
        androidx.appcompat.widget.Toolbar$LayoutParams $r6;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        r1 = r0.mCollapseButtonView;

        if r1 != null goto label1;

        r2 = new androidx.appcompat.widget.AppCompatImageButton;

        $r3 = virtualinvoke r0.getContext();

        $i0 = androidx.appcompat.R$attr.toolbarNavigationButtonStyle;

        specialinvoke r2.<init>($r3, null, $i0);

        r0.mCollapseButtonView = r2;

        $r4 = r0.mCollapseIcon;

        virtualinvoke r2.setImageDrawable($r4);

        r1 = r0.mCollapseButtonView;

        $r5 = r0.mCollapseDescription;

        virtualinvoke r1.setContentDescription($r5);

        $r6 = virtualinvoke r0.generateDefaultLayoutParams();

        $i0 = r0.mButtonGravity;

        $i0 = $i0 & 112;

        $i0 = $i0 | 8388611;

        $r6.gravity = $i0;

        $r6.mViewType = 2;

        r1 = r0.mCollapseButtonView;

        virtualinvoke r1.setLayoutParams($r6);

        r1 = r0.mCollapseButtonView;

        $r7 = new androidx.appcompat.widget.Toolbar$3;

        specialinvoke $r7.<init>(r0);

        virtualinvoke r1.setOnClickListener($r7);

     label1:
        return;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.Toolbar$LayoutParams $r1;

        r0 := @this;

        $r1 = virtualinvoke r0.generateDefaultLayoutParams();

        return $r1;
    }

    protected androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()
    {
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.Toolbar$LayoutParams $r1;

        r0 := @this;

        $r1 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        specialinvoke $r1.<init>(-2, -2);

        return $r1;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.Toolbar$LayoutParams $r1;
        android.util.AttributeSet $r2;

        r0 := @this;

        $r2 := @parameter0;

        $r1 = virtualinvoke r0.generateLayoutParams($r2);

        return $r1;
    }

    protected volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.Toolbar$LayoutParams $r1;
        android.view.ViewGroup$LayoutParams $r2;

        r0 := @this;

        $r2 := @parameter0;

        $r1 = virtualinvoke r0.generateLayoutParams($r2);

        return $r1;
    }

    public androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        androidx.appcompat.widget.Toolbar$LayoutParams $r2;
        android.content.Context $r3;
        android.util.AttributeSet $r1;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $r3 = virtualinvoke r0.getContext();

        specialinvoke $r2.<init>($r3, $r1);

        return $r2;
    }

    protected androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.appcompat.widget.Toolbar$LayoutParams $r2, $r3;
        androidx.appcompat.app.ActionBar$LayoutParams $r4;
        android.view.ViewGroup$LayoutParams $r1;
        android.view.ViewGroup$MarginLayoutParams $r5;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = $r1 instanceof androidx.appcompat.widget.Toolbar$LayoutParams;

        if $z0 == 0 goto label1;

        $r2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $r3 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r1;

        specialinvoke $r2.<init>($r3);

        return $r2;

     label1:
        $z0 = $r1 instanceof androidx.appcompat.app.ActionBar$LayoutParams;

        if $z0 == 0 goto label2;

        $r2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $r4 = (androidx.appcompat.app.ActionBar$LayoutParams) $r1;

        specialinvoke $r2.<init>($r4);

        return $r2;

     label2:
        $z0 = $r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label3;

        $r2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        $r5 = (android.view.ViewGroup$MarginLayoutParams) $r1;

        specialinvoke $r2.<init>($r5);

        return $r2;

     label3:
        $r2 = new androidx.appcompat.widget.Toolbar$LayoutParams;

        specialinvoke $r2.<init>($r1);

        return $r2;
    }

    public java.lang.CharSequence getCollapseContentDescription()
    {
        androidx.appcompat.widget.Toolbar r0;
        android.widget.ImageButton $r2;
        java.lang.CharSequence $r1;

        r0 := @this;

        $r2 = r0.mCollapseButtonView;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.getContentDescription();

        return $r1;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getCollapseIcon()
    {
        androidx.appcompat.widget.Toolbar r0;
        android.widget.ImageButton $r2;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r2 = r0.mCollapseButtonView;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.getDrawable();

        return $r1;

     label1:
        return null;
    }

    public int getContentInsetEnd()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.RtlSpacingHelper $r1;

        r0 := @this;

        $r1 = r0.mContentInsets;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.getEnd();

        return $i0;

     label1:
        return 0;
    }

    public int getContentInsetEndWithActions()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 = r0.mContentInsetEndWithActions;

        if $i0 == -2147483648 goto label1;

        return $i0;

     label1:
        $i0 = virtualinvoke r0.getContentInsetEnd();

        return $i0;
    }

    public int getContentInsetLeft()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.RtlSpacingHelper $r1;

        r0 := @this;

        $r1 = r0.mContentInsets;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.getLeft();

        return $i0;

     label1:
        return 0;
    }

    public int getContentInsetRight()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.RtlSpacingHelper $r1;

        r0 := @this;

        $r1 = r0.mContentInsets;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.getRight();

        return $i0;

     label1:
        return 0;
    }

    public int getContentInsetStart()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.RtlSpacingHelper $r1;

        r0 := @this;

        $r1 = r0.mContentInsets;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.getStart();

        return $i0;

     label1:
        return 0;
    }

    public int getContentInsetStartWithNavigation()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 = r0.mContentInsetStartWithNavigation;

        if $i0 == -2147483648 goto label1;

        return $i0;

     label1:
        $i0 = virtualinvoke r0.getContentInsetStart();

        return $i0;
    }

    public int getCurrentContentInsetEnd()
    {
        androidx.appcompat.widget.ActionMenuView r1;
        androidx.appcompat.view.menu.MenuBuilder $r2;
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        boolean z0;

        r0 := @this;

        z0 = 0;

        r1 = r0.mMenuView;

        if r1 == null goto label2;

        $r2 = virtualinvoke r1.peekMenu();

        if $r2 == null goto label1;

        z0 = virtualinvoke $r2.hasVisibleItems();

        if z0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if z0 == 0 goto label3;

        $i0 = virtualinvoke r0.getContentInsetEnd();

        $i1 = r0.mContentInsetEndWithActions;

        $i1 = java.lang.Math.max($i1, 0);

        $i0 = java.lang.Math.max($i0, $i1);

        return $i0;

     label3:
        $i0 = virtualinvoke r0.getContentInsetEnd();

        return $i0;
    }

    public int getCurrentContentInsetLeft()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 = androidx.core.view.ViewCompat.getLayoutDirection(r0);

        if $i0 != 1 goto label1;

        $i0 = virtualinvoke r0.getCurrentContentInsetEnd();

        return $i0;

     label1:
        $i0 = virtualinvoke r0.getCurrentContentInsetStart();

        return $i0;
    }

    public int getCurrentContentInsetRight()
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 = androidx.core.view.ViewCompat.getLayoutDirection(r0);

        if $i0 != 1 goto label1;

        $i0 = virtualinvoke r0.getCurrentContentInsetStart();

        return $i0;

     label1:
        $i0 = virtualinvoke r0.getCurrentContentInsetEnd();

        return $i0;
    }

    public int getCurrentContentInsetStart()
    {
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r1 = virtualinvoke r0.getNavigationIcon();

        if $r1 == null goto label1;

        $i0 = virtualinvoke r0.getContentInsetStart();

        $i1 = r0.mContentInsetStartWithNavigation;

        $i1 = java.lang.Math.max($i1, 0);

        $i0 = java.lang.Math.max($i0, $i1);

        return $i0;

     label1:
        $i0 = virtualinvoke r0.getContentInsetStart();

        return $i0;
    }

    public android.graphics.drawable.Drawable getLogo()
    {
        android.widget.ImageView $r2;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r2 = r0.mLogoView;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.getDrawable();

        return $r1;

     label1:
        return null;
    }

    public java.lang.CharSequence getLogoDescription()
    {
        android.widget.ImageView $r2;
        androidx.appcompat.widget.Toolbar r0;
        java.lang.CharSequence $r1;

        r0 := @this;

        $r2 = r0.mLogoView;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.getContentDescription();

        return $r1;

     label1:
        return null;
    }

    public android.view.Menu getMenu()
    {
        android.view.Menu $r1;
        androidx.appcompat.widget.ActionMenuView $r2;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        specialinvoke r0.ensureMenu();

        $r2 = r0.mMenuView;

        $r1 = virtualinvoke $r2.getMenu();

        return $r1;
    }

    public java.lang.CharSequence getNavigationContentDescription()
    {
        androidx.appcompat.widget.Toolbar r0;
        android.widget.ImageButton $r2;
        java.lang.CharSequence $r1;

        r0 := @this;

        $r2 = r0.mNavButtonView;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.getContentDescription();

        return $r1;

     label1:
        return null;
    }

    public android.graphics.drawable.Drawable getNavigationIcon()
    {
        androidx.appcompat.widget.Toolbar r0;
        android.widget.ImageButton $r2;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r2 = r0.mNavButtonView;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.getDrawable();

        return $r1;

     label1:
        return null;
    }

    androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
    {
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.ActionMenuPresenter r1;

        r0 := @this;

        r1 = r0.mOuterActionMenuPresenter;

        return r1;
    }

    public android.graphics.drawable.Drawable getOverflowIcon()
    {
        androidx.appcompat.widget.ActionMenuView $r2;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        specialinvoke r0.ensureMenu();

        $r2 = r0.mMenuView;

        $r1 = virtualinvoke $r2.getOverflowIcon();

        return $r1;
    }

    android.content.Context getPopupContext()
    {
        androidx.appcompat.widget.Toolbar r0;
        android.content.Context r1;

        r0 := @this;

        r1 = r0.mPopupContext;

        return r1;
    }

    public int getPopupTheme()
    {
        int i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        i0 = r0.mPopupTheme;

        return i0;
    }

    public java.lang.CharSequence getSubtitle()
    {
        androidx.appcompat.widget.Toolbar r0;
        java.lang.CharSequence r1;

        r0 := @this;

        r1 = r0.mSubtitleText;

        return r1;
    }

    final android.widget.TextView getSubtitleTextView()
    {
        androidx.appcompat.widget.Toolbar r0;
        android.widget.TextView r1;

        r0 := @this;

        r1 = r0.mSubtitleTextView;

        return r1;
    }

    public java.lang.CharSequence getTitle()
    {
        androidx.appcompat.widget.Toolbar r0;
        java.lang.CharSequence r1;

        r0 := @this;

        r1 = r0.mTitleText;

        return r1;
    }

    public int getTitleMarginBottom()
    {
        int i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        i0 = r0.mTitleMarginBottom;

        return i0;
    }

    public int getTitleMarginEnd()
    {
        int i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        i0 = r0.mTitleMarginEnd;

        return i0;
    }

    public int getTitleMarginStart()
    {
        int i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        i0 = r0.mTitleMarginStart;

        return i0;
    }

    public int getTitleMarginTop()
    {
        int i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        i0 = r0.mTitleMarginTop;

        return i0;
    }

    final android.widget.TextView getTitleTextView()
    {
        androidx.appcompat.widget.Toolbar r0;
        android.widget.TextView r1;

        r0 := @this;

        r1 = r0.mTitleTextView;

        return r1;
    }

    public androidx.appcompat.widget.DecorToolbar getWrapper()
    {
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.ToolbarWidgetWrapper $r1;

        r0 := @this;

        $r1 = r0.mWrapper;

        if $r1 != null goto label1;

        $r1 = new androidx.appcompat.widget.ToolbarWidgetWrapper;

        specialinvoke $r1.<init>(r0, 1);

        r0.mWrapper = $r1;

     label1:
        $r1 = r0.mWrapper;

        return $r1;
    }

    public boolean hasExpandedActionView()
    {
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter $r1;
        androidx.appcompat.view.menu.MenuItemImpl $r2;

        r0 := @this;

        $r1 = r0.mExpandedMenuPresenter;

        if $r1 == null goto label1;

        $r2 = $r1.mCurrentExpandedItem;

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean hideOverflowMenu()
    {
        androidx.appcompat.widget.ActionMenuView $r1;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mMenuView;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.hideOverflowMenu();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void inflateMenu(int)
    {
        android.view.MenuInflater $r1;
        int $i0;
        android.view.Menu $r2;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = specialinvoke r0.getMenuInflater();

        $r2 = virtualinvoke r0.getMenu();

        virtualinvoke $r1.inflate($i0, $r2);

        return;
    }

    public boolean isOverflowMenuShowPending()
    {
        androidx.appcompat.widget.ActionMenuView $r1;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mMenuView;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.isOverflowMenuShowPending();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowing()
    {
        androidx.appcompat.widget.ActionMenuView $r1;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mMenuView;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.isOverflowMenuShowing();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isTitleTruncated()
    {
        android.widget.TextView r1;
        android.text.Layout $r2;
        int $i0, i1, $i2;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        r1 = r0.mTitleTextView;

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.getLayout();

        if $r2 != null goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke $r2.getLineCount();

        i1 = 0;

     label3:
        if i1 >= $i0 goto label5;

        $i2 = virtualinvoke $r2.getEllipsisCount(i1);

        if $i2 <= 0 goto label4;

        return 1;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return 0;
    }

    protected void onDetachedFromWindow()
    {
        androidx.appcompat.widget.Toolbar r0;
        java.lang.Runnable $r1;

        r0 := @this;

        specialinvoke r0.onDetachedFromWindow();

        $r1 = r0.mShowOverflowMenuRunnable;

        virtualinvoke r0.removeCallbacks($r1);

        return;
    }

    public boolean onHoverEvent(android.view.MotionEvent)
    {
        android.view.MotionEvent $r1;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 = virtualinvoke $r1.getActionMasked();

        if $i0 != 9 goto label1;

        r0.mEatingHover = 0;

     label1:
        z0 = r0.mEatingHover;

        if z0 != 0 goto label2;

        z0 = specialinvoke r0.onHoverEvent($r1);

        if $i0 != 9 goto label2;

        if z0 != 0 goto label2;

        r0.mEatingHover = 1;

     label2:
        if $i0 == 10 goto label3;

        if $i0 != 3 goto label4;

     label3:
        r0.mEatingHover = 0;

     label4:
        return 1;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.ImageButton r2;
        android.widget.ImageView r5;
        java.util.ArrayList r11;
        androidx.appcompat.widget.ActionMenuView r3;
        int[] r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        android.view.View r4;
        boolean $z0, $z1, $z2, z3;
        android.view.ViewGroup$LayoutParams $r7;
        androidx.appcompat.widget.Toolbar$LayoutParams r8, r10;
        android.widget.TextView r6, r9;
        androidx.appcompat.widget.Toolbar r0;
        java.lang.Object $r12;

        r0 := @this;

        $z0 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        $i2 := @parameter3;

        $i3 := @parameter4;

        $i0 = androidx.core.view.ViewCompat.getLayoutDirection(r0);

        if $i0 != 1 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        $i4 = virtualinvoke r0.getWidth();

        $i5 = virtualinvoke r0.getHeight();

        $i6 = virtualinvoke r0.getPaddingLeft();

        $i7 = virtualinvoke r0.getPaddingRight();

        $i8 = virtualinvoke r0.getPaddingTop();

        $i9 = virtualinvoke r0.getPaddingBottom();

        $i2 = $i6;

        $i0 = $i4 - $i7;

        r1 = r0.mTempMargins;

        r1[1] = 0;

        r1[0] = 0;

        $i10 = androidx.core.view.ViewCompat.getMinimumHeight(r0);

        if $i10 < 0 goto label03;

        $i1 = $i3 - $i1;

        $i10 = java.lang.Math.min($i10, $i1);

        goto label04;

     label03:
        $i10 = 0;

     label04:
        r2 = r0.mNavButtonView;

        $z1 = specialinvoke r0.shouldLayout(r2);

        if $z1 == 0 goto label06;

        if $z0 == 0 goto label05;

        r2 = r0.mNavButtonView;

        $i0 = specialinvoke r0.layoutChildRight(r2, $i0, r1, $i10);

        goto label06;

     label05:
        r2 = r0.mNavButtonView;

        $i2 = specialinvoke r0.layoutChildLeft(r2, $i6, r1, $i10);

     label06:
        r2 = r0.mCollapseButtonView;

        $z1 = specialinvoke r0.shouldLayout(r2);

        if $z1 == 0 goto label08;

        if $z0 == 0 goto label07;

        r2 = r0.mCollapseButtonView;

        $i0 = specialinvoke r0.layoutChildRight(r2, $i0, r1, $i10);

        goto label08;

     label07:
        r2 = r0.mCollapseButtonView;

        $i2 = specialinvoke r0.layoutChildLeft(r2, $i2, r1, $i10);

     label08:
        r3 = r0.mMenuView;

        $z1 = specialinvoke r0.shouldLayout(r3);

        if $z1 == 0 goto label10;

        if $z0 == 0 goto label09;

        r3 = r0.mMenuView;

        $i2 = specialinvoke r0.layoutChildLeft(r3, $i2, r1, $i10);

        goto label10;

     label09:
        r3 = r0.mMenuView;

        $i0 = specialinvoke r0.layoutChildRight(r3, $i0, r1, $i10);

     label10:
        $i3 = virtualinvoke r0.getCurrentContentInsetLeft();

        $i1 = virtualinvoke r0.getCurrentContentInsetRight();

        i11 = $i3 - $i2;

        i11 = java.lang.Math.max(0, i11);

        r1[0] = i11;

        i11 = $i4 - $i7;

        i11 = i11 - $i0;

        i11 = $i1 - i11;

        i11 = java.lang.Math.max(0, i11);

        r1[1] = i11;

        $i3 = java.lang.Math.max($i2, $i3);

        $i2 = $i3;

        i11 = $i4 - $i7;

        $i1 = i11 - $i1;

        $i1 = java.lang.Math.min($i0, $i1);

        $i0 = $i1;

        r4 = r0.mExpandedActionView;

        $z1 = specialinvoke r0.shouldLayout(r4);

        if $z1 == 0 goto label12;

        if $z0 == 0 goto label11;

        r4 = r0.mExpandedActionView;

        $i0 = specialinvoke r0.layoutChildRight(r4, $i1, r1, $i10);

        goto label12;

     label11:
        r4 = r0.mExpandedActionView;

        $i2 = specialinvoke r0.layoutChildLeft(r4, $i3, r1, $i10);

     label12:
        r5 = r0.mLogoView;

        $z1 = specialinvoke r0.shouldLayout(r5);

        if $z1 == 0 goto label14;

        if $z0 == 0 goto label13;

        r5 = r0.mLogoView;

        $i0 = specialinvoke r0.layoutChildRight(r5, $i0, r1, $i10);

        goto label14;

     label13:
        r5 = r0.mLogoView;

        $i2 = specialinvoke r0.layoutChildLeft(r5, $i2, r1, $i10);

     label14:
        r6 = r0.mTitleTextView;

        $z1 = specialinvoke r0.shouldLayout(r6);

        r6 = r0.mSubtitleTextView;

        $z2 = specialinvoke r0.shouldLayout(r6);

        i11 = 0;

        if $z1 == 0 goto label15;

        r6 = r0.mTitleTextView;

        $r7 = virtualinvoke r6.getLayoutParams();

        r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $i3 = r8.topMargin;

        $i1 = $i7;

        r6 = r0.mTitleTextView;

        $i7 = virtualinvoke r6.getMeasuredHeight();

        $i3 = $i3 + $i7;

        $i7 = r8.bottomMargin;

        $i3 = $i3 + $i7;

        i11 = $i3;

        goto label16;

     label15:
        $i1 = $i7;

     label16:
        if $z2 == 0 goto label17;

        r6 = r0.mSubtitleTextView;

        $r7 = virtualinvoke r6.getLayoutParams();

        r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $i3 = r8.topMargin;

        r6 = r0.mSubtitleTextView;

        $i7 = virtualinvoke r6.getMeasuredHeight();

        $i3 = $i3 + $i7;

        $i7 = r8.bottomMargin;

        $i3 = $i3 + $i7;

        i11 = i11 + $i3;

     label17:
        if $z1 != 0 goto label19;

        if $z2 == 0 goto label18;

        goto label19;

     label18:
        $i3 = $i4;

        goto label46;

     label19:
        if $z1 == 0 goto label20;

        r6 = r0.mTitleTextView;

        goto label21;

     label20:
        r6 = r0.mSubtitleTextView;

     label21:
        if $z2 == 0 goto label22;

        r9 = r0.mSubtitleTextView;

        goto label23;

     label22:
        r9 = r0.mTitleTextView;

     label23:
        $r7 = virtualinvoke r6.getLayoutParams();

        r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $r7 = virtualinvoke r9.getLayoutParams();

        r10 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        if $z1 == 0 goto label24;

        r6 = r0.mTitleTextView;

        $i3 = virtualinvoke r6.getMeasuredWidth();

        if $i3 > 0 goto label25;

        goto label24;

     label24:
        if $z2 == 0 goto label26;

        r6 = r0.mSubtitleTextView;

        $i3 = virtualinvoke r6.getMeasuredWidth();

        if $i3 <= 0 goto label26;

     label25:
        z3 = 1;

        goto label27;

     label26:
        z3 = 0;

     label27:
        $i3 = $i4;

        $i4 = r0.mGravity;

        $i4 = $i4 & 112;

        lookupswitch($i4)
        {
            case 48: goto label30;
            case 80: goto label29;
            default: goto label28;
        };

     label28:
        $i4 = $i5 - $i8;

        $i4 = $i4 - $i9;

        $i4 = $i4 - i11;

        $i4 = $i4 / 2;

        $i7 = r8.topMargin;

        i12 = r0.mTitleMarginTop;

        $i7 = $i7 + i12;

        if $i4 >= $i7 goto label31;

        $i5 = r8.topMargin;

        $i9 = r0.mTitleMarginTop;

        $i4 = $i5 + $i9;

        goto label32;

     label29:
        $i8 = $i5 - $i9;

        $i5 = r10.bottomMargin;

        $i8 = $i8 - $i5;

        $i5 = r0.mTitleMarginBottom;

        $i8 = $i8 - $i5;

        $i8 = $i8 - i11;

        goto label33;

     label30:
        $i8 = virtualinvoke r0.getPaddingTop();

        $i5 = r8.topMargin;

        $i8 = $i8 + $i5;

        $i5 = r0.mTitleMarginTop;

        $i8 = $i8 + $i5;

        goto label33;

     label31:
        $i5 = $i5 - $i9;

        $i5 = $i5 - i11;

        $i5 = $i5 - $i4;

        $i5 = $i5 - $i8;

        $i9 = r8.bottomMargin;

        $i7 = r0.mTitleMarginBottom;

        $i9 = $i9 + $i7;

        if $i5 >= $i9 goto label32;

        $i9 = r10.bottomMargin;

        $i7 = r0.mTitleMarginBottom;

        $i9 = $i9 + $i7;

        $i5 = $i9 - $i5;

        $i5 = $i4 - $i5;

        $i4 = java.lang.Math.max(0, $i5);

     label32:
        $i8 = $i8 + $i4;

     label33:
        if $z0 == 0 goto label39;

        if z3 == 0 goto label34;

        $i5 = r0.mTitleMarginStart;

        goto label35;

     label34:
        $i5 = 0;

     label35:
        $i9 = r1[1];

        $i5 = $i5 - $i9;

        $i9 = java.lang.Math.max(0, $i5);

        $i0 = $i0 - $i9;

        $i5 = neg $i5;

        $i5 = java.lang.Math.max(0, $i5);

        r1[1] = $i5;

        $i9 = $i0;

        $i5 = $i0;

        if $z1 == 0 goto label36;

        r6 = r0.mTitleTextView;

        $r7 = virtualinvoke r6.getLayoutParams();

        r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        r6 = r0.mTitleTextView;

        $i9 = virtualinvoke r6.getMeasuredWidth();

        $i9 = $i0 - $i9;

        r6 = r0.mTitleTextView;

        $i4 = virtualinvoke r6.getMeasuredHeight();

        $i4 = $i4 + $i8;

        r6 = r0.mTitleTextView;

        virtualinvoke r6.layout($i9, $i8, $i0, $i4);

        $i8 = r0.mTitleMarginEnd;

        $i9 = $i9 - $i8;

        $i8 = r8.bottomMargin;

        $i8 = $i4 + $i8;

        goto label36;

     label36:
        if $z2 == 0 goto label37;

        r6 = r0.mSubtitleTextView;

        $r7 = virtualinvoke r6.getLayoutParams();

        r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $i4 = r8.topMargin;

        $i8 = $i8 + $i4;

        r6 = r0.mSubtitleTextView;

        $i4 = virtualinvoke r6.getMeasuredWidth();

        $i4 = $i5 - $i4;

        r6 = r0.mSubtitleTextView;

        $i7 = virtualinvoke r6.getMeasuredHeight();

        $i7 = $i7 + $i8;

        r6 = r0.mSubtitleTextView;

        virtualinvoke r6.layout($i4, $i8, $i5, $i7);

        $i8 = r0.mTitleMarginEnd;

        $i5 = $i5 - $i8;

        $i8 = r8.bottomMargin;

     label37:
        if z3 == 0 goto label38;

        $i0 = java.lang.Math.min($i9, $i5);

     label38:
        goto label46;

     label39:
        if z3 == 0 goto label40;

        $i5 = r0.mTitleMarginStart;

        goto label41;

     label40:
        $i5 = 0;

     label41:
        $i9 = r1[0];

        $i5 = $i5 - $i9;

        $i9 = java.lang.Math.max(0, $i5);

        $i2 = $i2 + $i9;

        $i5 = neg $i5;

        $i5 = java.lang.Math.max(0, $i5);

        r1[0] = $i5;

        $i9 = $i2;

        $i4 = $i2;

        if $z1 == 0 goto label42;

        r6 = r0.mTitleTextView;

        $r7 = virtualinvoke r6.getLayoutParams();

        r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        r6 = r0.mTitleTextView;

        $i5 = virtualinvoke r6.getMeasuredWidth();

        $i9 = $i5 + $i2;

        r6 = r0.mTitleTextView;

        $i5 = virtualinvoke r6.getMeasuredHeight();

        $i7 = $i5 + $i8;

        $i5 = $i2;

        r6 = r0.mTitleTextView;

        virtualinvoke r6.layout($i2, $i8, $i9, $i7);

        $i8 = r0.mTitleMarginEnd;

        $i9 = $i9 + $i8;

        $i8 = r8.bottomMargin;

        $i8 = $i7 + $i8;

        goto label43;

     label42:
        $i5 = $i2;

     label43:
        if $z2 == 0 goto label44;

        r6 = r0.mSubtitleTextView;

        $r7 = virtualinvoke r6.getLayoutParams();

        r8 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r7;

        $i4 = r8.topMargin;

        $i8 = $i8 + $i4;

        r6 = r0.mSubtitleTextView;

        $i4 = virtualinvoke r6.getMeasuredWidth();

        $i4 = $i4 + $i2;

        r6 = r0.mSubtitleTextView;

        $i7 = virtualinvoke r6.getMeasuredHeight();

        $i7 = $i7 + $i8;

        r6 = r0.mSubtitleTextView;

        virtualinvoke r6.layout($i2, $i8, $i4, $i7);

        $i2 = r0.mTitleMarginEnd;

        $i4 = $i4 + $i2;

        $i2 = r8.bottomMargin;

     label44:
        if z3 == 0 goto label45;

        $i2 = java.lang.Math.max($i9, $i4);

        goto label46;

     label45:
        $i2 = $i5;

     label46:
        r11 = r0.mTempViews;

        specialinvoke r0.addCustomViewsWithGravity(r11, 3);

        r11 = r0.mTempViews;

        $i8 = virtualinvoke r11.size();

        $i5 = 0;

     label47:
        if $i5 >= $i8 goto label48;

        r11 = r0.mTempViews;

        $r12 = virtualinvoke r11.get($i5);

        r4 = (android.view.View) $r12;

        $i2 = specialinvoke r0.layoutChildLeft(r4, $i2, r1, $i10);

        $i5 = $i5 + 1;

        goto label47;

     label48:
        r11 = r0.mTempViews;

        specialinvoke r0.addCustomViewsWithGravity(r11, 5);

        r11 = r0.mTempViews;

        $i8 = virtualinvoke r11.size();

        $i5 = 0;

     label49:
        if $i5 >= $i8 goto label50;

        r11 = r0.mTempViews;

        $r12 = virtualinvoke r11.get($i5);

        r4 = (android.view.View) $r12;

        $i0 = specialinvoke r0.layoutChildRight(r4, $i0, r1, $i10);

        $i5 = $i5 + 1;

        goto label49;

     label50:
        r11 = r0.mTempViews;

        specialinvoke r0.addCustomViewsWithGravity(r11, 1);

        r11 = r0.mTempViews;

        $i8 = specialinvoke r0.getViewListMeasuredWidth(r11, r1);

        $i3 = $i3 - $i6;

        $i1 = $i3 - $i1;

        $i1 = $i1 / 2;

        $i1 = $i6 + $i1;

        $i3 = $i8 / 2;

        $i1 = $i1 - $i3;

        $i3 = $i1 + $i8;

        if $i1 >= $i2 goto label51;

        $i1 = $i2;

        goto label52;

     label51:
        if $i3 <= $i0 goto label52;

        $i0 = $i3 - $i0;

        $i1 = $i1 - $i0;

     label52:
        r11 = r0.mTempViews;

        $i0 = virtualinvoke r11.size();

        $i2 = 0;

     label53:
        if $i2 >= $i0 goto label54;

        r11 = r0.mTempViews;

        $r12 = virtualinvoke r11.get($i2);

        r4 = (android.view.View) $r12;

        $i1 = specialinvoke r0.layoutChildLeft(r4, $i1, r1, $i10);

        $i2 = $i2 + 1;

        goto label53;

     label54:
        r11 = r0.mTempViews;

        virtualinvoke r11.clear();

        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.ImageButton r2;
        android.widget.ImageView r5;
        androidx.appcompat.widget.ActionMenuView r3;
        byte b5, b6;
        int[] r1;
        int $i0, $i1, i2, i3, i4, i7, i8, $i9, $i10, $i11, i12;
        android.view.View r4;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r6;
        androidx.appcompat.widget.Toolbar$LayoutParams r7;
        android.widget.TextView r8;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        i3 = 0;

        i4 = 0;

        r1 = r0.mTempMargins;

        $z0 = androidx.appcompat.widget.ViewUtils.isLayoutRtl(r0);

        if $z0 == 0 goto label01;

        b5 = 1;

        b6 = 0;

        goto label02;

     label01:
        b5 = 0;

        b6 = 1;

     label02:
        i7 = 0;

        r2 = r0.mNavButtonView;

        $z0 = specialinvoke r0.shouldLayout(r2);

        if $z0 == 0 goto label03;

        r2 = r0.mNavButtonView;

        i3 = r0.mMaxButtonHeight;

        specialinvoke r0.measureChildConstrained(r2, $i0, 0, $i1, 0, i3);

        r2 = r0.mNavButtonView;

        i3 = virtualinvoke r2.getMeasuredWidth();

        r2 = r0.mNavButtonView;

        i4 = specialinvoke r0.getHorizontalMargins(r2);

        i7 = i3 + i4;

        r2 = r0.mNavButtonView;

        i3 = virtualinvoke r2.getMeasuredHeight();

        r2 = r0.mNavButtonView;

        i4 = specialinvoke r0.getVerticalMargins(r2);

        i3 = i3 + i4;

        i3 = java.lang.Math.max(0, i3);

        r2 = r0.mNavButtonView;

        i4 = virtualinvoke r2.getMeasuredState();

        i4 = android.view.View.combineMeasuredStates(0, i4);

     label03:
        r2 = r0.mCollapseButtonView;

        $z0 = specialinvoke r0.shouldLayout(r2);

        if $z0 == 0 goto label04;

        r2 = r0.mCollapseButtonView;

        i8 = r0.mMaxButtonHeight;

        specialinvoke r0.measureChildConstrained(r2, $i0, 0, $i1, 0, i8);

        r2 = r0.mCollapseButtonView;

        i8 = virtualinvoke r2.getMeasuredWidth();

        r2 = r0.mCollapseButtonView;

        i7 = specialinvoke r0.getHorizontalMargins(r2);

        i7 = i8 + i7;

        r2 = r0.mCollapseButtonView;

        i8 = virtualinvoke r2.getMeasuredHeight();

        r2 = r0.mCollapseButtonView;

        $i9 = specialinvoke r0.getVerticalMargins(r2);

        i8 = i8 + $i9;

        i3 = java.lang.Math.max(i3, i8);

        r2 = r0.mCollapseButtonView;

        i8 = virtualinvoke r2.getMeasuredState();

        i4 = android.view.View.combineMeasuredStates(i4, i8);

     label04:
        $i9 = virtualinvoke r0.getCurrentContentInsetStart();

        i8 = java.lang.Math.max($i9, i7);

        i7 = $i9 - i7;

        i7 = java.lang.Math.max(0, i7);

        r1[b5] = i7;

        r3 = r0.mMenuView;

        $z0 = specialinvoke r0.shouldLayout(r3);

        if $z0 == 0 goto label05;

        r3 = r0.mMenuView;

        i7 = r0.mMaxButtonHeight;

        specialinvoke r0.measureChildConstrained(r3, $i0, i8, $i1, 0, i7);

        r3 = r0.mMenuView;

        i7 = virtualinvoke r3.getMeasuredWidth();

        r3 = r0.mMenuView;

        $i9 = specialinvoke r0.getHorizontalMargins(r3);

        i7 = i7 + $i9;

        r3 = r0.mMenuView;

        $i9 = virtualinvoke r3.getMeasuredHeight();

        r3 = r0.mMenuView;

        $i10 = specialinvoke r0.getVerticalMargins(r3);

        $i9 = $i9 + $i10;

        i3 = java.lang.Math.max(i3, $i9);

        r3 = r0.mMenuView;

        $i9 = virtualinvoke r3.getMeasuredState();

        i4 = android.view.View.combineMeasuredStates(i4, $i9);

        goto label06;

     label05:
        i7 = 0;

     label06:
        $i9 = virtualinvoke r0.getCurrentContentInsetEnd();

        $i10 = java.lang.Math.max($i9, i7);

        i8 = i8 + $i10;

        i7 = $i9 - i7;

        i7 = java.lang.Math.max(0, i7);

        r1[b6] = i7;

        r4 = r0.mExpandedActionView;

        $z0 = specialinvoke r0.shouldLayout(r4);

        if $z0 == 0 goto label07;

        r4 = r0.mExpandedActionView;

        i7 = specialinvoke r0.measureChildCollapseMargins(r4, $i0, i8, $i1, 0, r1);

        i8 = i8 + i7;

        r4 = r0.mExpandedActionView;

        i7 = virtualinvoke r4.getMeasuredHeight();

        r4 = r0.mExpandedActionView;

        $i9 = specialinvoke r0.getVerticalMargins(r4);

        i7 = i7 + $i9;

        i3 = java.lang.Math.max(i3, i7);

        r4 = r0.mExpandedActionView;

        i7 = virtualinvoke r4.getMeasuredState();

        i4 = android.view.View.combineMeasuredStates(i4, i7);

        goto label07;

     label07:
        r5 = r0.mLogoView;

        $z0 = specialinvoke r0.shouldLayout(r5);

        if $z0 == 0 goto label08;

        r5 = r0.mLogoView;

        i7 = specialinvoke r0.measureChildCollapseMargins(r5, $i0, i8, $i1, 0, r1);

        i8 = i8 + i7;

        r5 = r0.mLogoView;

        i7 = virtualinvoke r5.getMeasuredHeight();

        r5 = r0.mLogoView;

        $i9 = specialinvoke r0.getVerticalMargins(r5);

        i7 = i7 + $i9;

        i3 = java.lang.Math.max(i3, i7);

        r5 = r0.mLogoView;

        i7 = virtualinvoke r5.getMeasuredState();

        i4 = android.view.View.combineMeasuredStates(i4, i7);

     label08:
        $i9 = virtualinvoke r0.getChildCount();

        i7 = i4;

        i4 = i8;

        i8 = 0;

     label09:
        if i8 >= $i9 goto label12;

        r4 = virtualinvoke r0.getChildAt(i8);

        $r6 = virtualinvoke r4.getLayoutParams();

        r7 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r6;

        $i10 = r7.mViewType;

        if $i10 != 0 goto label11;

        $z0 = specialinvoke r0.shouldLayout(r4);

        if $z0 != 0 goto label10;

        goto label11;

     label10:
        $i10 = specialinvoke r0.measureChildCollapseMargins(r4, $i0, i4, $i1, 0, r1);

        i4 = i4 + $i10;

        $i10 = virtualinvoke r4.getMeasuredHeight();

        $i11 = specialinvoke r0.getVerticalMargins(r4);

        $i10 = $i10 + $i11;

        i3 = java.lang.Math.max(i3, $i10);

        $i10 = virtualinvoke r4.getMeasuredState();

        i7 = android.view.View.combineMeasuredStates(i7, $i10);

        goto label11;

     label11:
        i8 = i8 + 1;

        goto label09;

     label12:
        i8 = i7;

        $i9 = 0;

        $i10 = 0;

        $i11 = r0.mTitleMarginTop;

        i2 = r0.mTitleMarginBottom;

        $i11 = $i11 + i2;

        i2 = r0.mTitleMarginStart;

        i12 = r0.mTitleMarginEnd;

        i2 = i2 + i12;

        r8 = r0.mTitleTextView;

        $z0 = specialinvoke r0.shouldLayout(r8);

        if $z0 == 0 goto label13;

        r8 = r0.mTitleTextView;

        i8 = i4 + i2;

        specialinvoke r0.measureChildCollapseMargins(r8, $i0, i8, $i1, $i11, r1);

        r8 = r0.mTitleTextView;

        i8 = virtualinvoke r8.getMeasuredWidth();

        r8 = r0.mTitleTextView;

        $i9 = specialinvoke r0.getHorizontalMargins(r8);

        $i9 = i8 + $i9;

        r8 = r0.mTitleTextView;

        i8 = virtualinvoke r8.getMeasuredHeight();

        r8 = r0.mTitleTextView;

        $i10 = specialinvoke r0.getVerticalMargins(r8);

        $i10 = i8 + $i10;

        r8 = r0.mTitleTextView;

        i8 = virtualinvoke r8.getMeasuredState();

        i8 = android.view.View.combineMeasuredStates(i7, i8);

     label13:
        r8 = r0.mSubtitleTextView;

        $z0 = specialinvoke r0.shouldLayout(r8);

        if $z0 == 0 goto label14;

        r8 = r0.mSubtitleTextView;

        i7 = i4 + i2;

        $i11 = $i10 + $i11;

        i7 = specialinvoke r0.measureChildCollapseMargins(r8, $i0, i7, $i1, $i11, r1);

        $i9 = java.lang.Math.max($i9, i7);

        r8 = r0.mSubtitleTextView;

        i7 = virtualinvoke r8.getMeasuredHeight();

        r8 = r0.mSubtitleTextView;

        $i11 = specialinvoke r0.getVerticalMargins(r8);

        i7 = i7 + $i11;

        i7 = $i10 + i7;

        r8 = r0.mSubtitleTextView;

        $i10 = virtualinvoke r8.getMeasuredState();

        i8 = android.view.View.combineMeasuredStates(i8, $i10);

        goto label15;

     label14:
        i7 = $i10;

     label15:
        i4 = i4 + $i9;

        i3 = java.lang.Math.max(i3, i7);

        i7 = virtualinvoke r0.getPaddingLeft();

        $i9 = virtualinvoke r0.getPaddingRight();

        i7 = i7 + $i9;

        i4 = i4 + i7;

        i7 = virtualinvoke r0.getPaddingTop();

        $i9 = virtualinvoke r0.getPaddingBottom();

        i7 = i7 + $i9;

        i3 = i3 + i7;

        i7 = virtualinvoke r0.getSuggestedMinimumWidth();

        i4 = java.lang.Math.max(i4, i7);

        i7 = -16777216 & i8;

        $i0 = android.view.View.resolveSizeAndState(i4, $i0, i7);

        i4 = virtualinvoke r0.getSuggestedMinimumHeight();

        i3 = java.lang.Math.max(i3, i4);

        i4 = i8 << 16;

        $i1 = android.view.View.resolveSizeAndState(i3, $i1, i4);

        $z0 = specialinvoke r0.shouldCollapse();

        if $z0 == 0 goto label16;

        $i1 = 0;

        goto label16;

     label16:
        virtualinvoke r0.setMeasuredDimension($i0, $i1);

        return;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.os.Parcelable $r1;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter r5;
        androidx.appcompat.view.menu.MenuBuilder $r4;
        android.view.MenuItem $r6;
        androidx.appcompat.widget.ActionMenuView r3;
        int i0;
        androidx.appcompat.widget.Toolbar r0;
        boolean z0;
        androidx.appcompat.widget.Toolbar$SavedState r2;

        r0 := @this;

        $r1 := @parameter0;

        z0 = $r1 instanceof androidx.appcompat.widget.Toolbar$SavedState;

        if z0 != 0 goto label1;

        specialinvoke r0.onRestoreInstanceState($r1);

        return;

     label1:
        r2 = (androidx.appcompat.widget.Toolbar$SavedState) $r1;

        $r1 = virtualinvoke r2.getSuperState();

        specialinvoke r0.onRestoreInstanceState($r1);

        r3 = r0.mMenuView;

        if r3 == null goto label2;

        $r4 = virtualinvoke r3.peekMenu();

        goto label3;

     label2:
        $r4 = null;

     label3:
        i0 = r2.expandedMenuItemId;

        if i0 == 0 goto label4;

        r5 = r0.mExpandedMenuPresenter;

        if r5 == null goto label4;

        if $r4 == null goto label4;

        i0 = r2.expandedMenuItemId;

        $r6 = interfaceinvoke $r4.findItem(i0);

        if $r6 == null goto label4;

        interfaceinvoke $r6.expandActionView();

     label4:
        z0 = r2.isOverflowOpen;

        if z0 == 0 goto label5;

        specialinvoke r0.postShowOverflowMenu();

     label5:
        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        androidx.appcompat.widget.RtlSpacingHelper $r1;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.onRtlPropertiesChanged($i0);

        specialinvoke r0.ensureContentInsets();

        $r1 = r0.mContentInsets;

        $z0 = 1;

        if $i0 != 1 goto label1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        virtualinvoke $r1.setDirection($z0);

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.os.Parcelable $r2;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter $r3;
        androidx.appcompat.view.menu.MenuItemImpl $r4;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.Toolbar$SavedState r1;
        boolean $z0;

        r0 := @this;

        r1 = new androidx.appcompat.widget.Toolbar$SavedState;

        $r2 = specialinvoke r0.onSaveInstanceState();

        specialinvoke r1.<init>($r2);

        $r3 = r0.mExpandedMenuPresenter;

        if $r3 == null goto label1;

        $r4 = $r3.mCurrentExpandedItem;

        if $r4 == null goto label1;

        $r3 = r0.mExpandedMenuPresenter;

        $r4 = $r3.mCurrentExpandedItem;

        $i0 = virtualinvoke $r4.getItemId();

        r1.expandedMenuItemId = $i0;

     label1:
        $z0 = virtualinvoke r0.isOverflowMenuShowing();

        r1.isOverflowOpen = $z0;

        return r1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.view.MotionEvent $r1;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 = virtualinvoke $r1.getActionMasked();

        if $i0 != 0 goto label1;

        r0.mEatingTouch = 0;

     label1:
        z0 = r0.mEatingTouch;

        if z0 != 0 goto label2;

        z0 = specialinvoke r0.onTouchEvent($r1);

        if $i0 != 0 goto label2;

        if z0 != 0 goto label2;

        r0.mEatingTouch = 1;

     label2:
        if $i0 == 1 goto label3;

        if $i0 != 3 goto label4;

     label3:
        r0.mEatingTouch = 0;

     label4:
        return 1;
    }

    void removeChildrenForExpandedActionView()
    {
        android.view.ViewGroup$LayoutParams $r2;
        java.util.ArrayList $r5;
        androidx.appcompat.widget.ActionMenuView $r4;
        androidx.appcompat.widget.Toolbar$LayoutParams r3;
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        android.view.View $r1;

        r0 := @this;

        $i0 = virtualinvoke r0.getChildCount();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label3;

        $r1 = virtualinvoke r0.getChildAt($i0);

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.appcompat.widget.Toolbar$LayoutParams) $r2;

        $i1 = r3.mViewType;

        if $i1 == 2 goto label2;

        $r4 = r0.mMenuView;

        if $r1 == $r4 goto label2;

        virtualinvoke r0.removeViewAt($i0);

        $r5 = r0.mHiddenViews;

        virtualinvoke $r5.add($r1);

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return;
    }

    public void setCollapseContentDescription(int)
    {
        android.content.Context $r1;
        java.lang.CharSequence $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.getContext();

        $r2 = virtualinvoke $r1.getText($i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke r0.setCollapseContentDescription($r2);

        return;
    }

    public void setCollapseContentDescription(java.lang.CharSequence)
    {
        android.widget.ImageButton $r2;
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = android.text.TextUtils.isEmpty($r1);

        if $z0 != 0 goto label1;

        virtualinvoke r0.ensureCollapseButtonView();

     label1:
        $r2 = r0.mCollapseButtonView;

        if $r2 == null goto label2;

        virtualinvoke $r2.setContentDescription($r1);

     label2:
        return;
    }

    public void setCollapseIcon(int)
    {
        android.content.Context $r1;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = virtualinvoke r0.getContext();

        $r2 = androidx.appcompat.content.res.AppCompatResources.getDrawable($r1, $i0);

        virtualinvoke r0.setCollapseIcon($r2);

        return;
    }

    public void setCollapseIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.Toolbar r0;
        android.widget.ImageButton $r2;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 == null goto label1;

        virtualinvoke r0.ensureCollapseButtonView();

        $r2 = r0.mCollapseButtonView;

        virtualinvoke $r2.setImageDrawable($r1);

        return;

     label1:
        $r2 = r0.mCollapseButtonView;

        if $r2 == null goto label2;

        $r1 = r0.mCollapseIcon;

        virtualinvoke $r2.setImageDrawable($r1);

     label2:
        return;
    }

    public void setCollapsible(boolean)
    {
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        r0.mCollapsible = $z0;

        virtualinvoke r0.requestLayout();

        return;
    }

    public void setContentInsetEndWithActions(int)
    {
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $i0 := @parameter0;

        if $i0 >= 0 goto label1;

        $i0 = -2147483648;

     label1:
        $i1 = r0.mContentInsetEndWithActions;

        if $i0 == $i1 goto label2;

        r0.mContentInsetEndWithActions = $i0;

        $r1 = virtualinvoke r0.getNavigationIcon();

        if $r1 == null goto label2;

        virtualinvoke r0.requestLayout();

     label2:
        return;
    }

    public void setContentInsetStartWithNavigation(int)
    {
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $i0 := @parameter0;

        if $i0 >= 0 goto label1;

        $i0 = -2147483648;

     label1:
        $i1 = r0.mContentInsetStartWithNavigation;

        if $i0 == $i1 goto label2;

        r0.mContentInsetStartWithNavigation = $i0;

        $r1 = virtualinvoke r0.getNavigationIcon();

        if $r1 == null goto label2;

        virtualinvoke r0.requestLayout();

     label2:
        return;
    }

    public void setContentInsetsAbsolute(int, int)
    {
        androidx.appcompat.widget.RtlSpacingHelper $r1;
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        specialinvoke r0.ensureContentInsets();

        $r1 = r0.mContentInsets;

        virtualinvoke $r1.setAbsolute($i0, $i1);

        return;
    }

    public void setContentInsetsRelative(int, int)
    {
        androidx.appcompat.widget.RtlSpacingHelper $r1;
        int $i0, $i1;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        specialinvoke r0.ensureContentInsets();

        $r1 = r0.mContentInsets;

        virtualinvoke $r1.setRelative($i0, $i1);

        return;
    }

    public void setLogo(int)
    {
        android.content.Context $r1;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = virtualinvoke r0.getContext();

        $r2 = androidx.appcompat.content.res.AppCompatResources.getDrawable($r1, $i0);

        virtualinvoke r0.setLogo($r2);

        return;
    }

    public void setLogo(android.graphics.drawable.Drawable)
    {
        android.widget.ImageView $r2;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;
        java.util.ArrayList $r3;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 == null goto label1;

        specialinvoke r0.ensureLogoView();

        $r2 = r0.mLogoView;

        $z0 = specialinvoke r0.isChildOrHidden($r2);

        if $z0 != 0 goto label2;

        $r2 = r0.mLogoView;

        specialinvoke r0.addSystemView($r2, 1);

        goto label2;

     label1:
        $r2 = r0.mLogoView;

        if $r2 == null goto label2;

        $z0 = specialinvoke r0.isChildOrHidden($r2);

        if $z0 == 0 goto label2;

        $r2 = r0.mLogoView;

        virtualinvoke r0.removeView($r2);

        $r3 = r0.mHiddenViews;

        $r2 = r0.mLogoView;

        virtualinvoke $r3.remove($r2);

     label2:
        $r2 = r0.mLogoView;

        if $r2 == null goto label3;

        virtualinvoke $r2.setImageDrawable($r1);

     label3:
        return;
    }

    public void setLogoDescription(int)
    {
        android.content.Context $r1;
        java.lang.CharSequence $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = virtualinvoke r0.getContext();

        $r2 = virtualinvoke $r1.getText($i0);

        virtualinvoke r0.setLogoDescription($r2);

        return;
    }

    public void setLogoDescription(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        android.widget.ImageView $r2;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = android.text.TextUtils.isEmpty($r1);

        if $z0 != 0 goto label1;

        specialinvoke r0.ensureLogoView();

     label1:
        $r2 = r0.mLogoView;

        if $r2 == null goto label2;

        virtualinvoke $r2.setContentDescription($r1);

     label2:
        return;
    }

    public void setMenu(androidx.appcompat.view.menu.MenuBuilder, androidx.appcompat.widget.ActionMenuPresenter)
    {
        android.content.Context $r3;
        androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter $r7;
        androidx.appcompat.view.menu.MenuBuilder $r1, $r4;
        androidx.appcompat.widget.ActionMenuView r5;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.widget.ActionMenuPresenter $r2, $r6;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        if $r1 != null goto label1;

        r5 = r0.mMenuView;

        if r5 != null goto label1;

        return;

     label1:
        specialinvoke r0.ensureMenuView();

        r5 = r0.mMenuView;

        $r4 = virtualinvoke r5.peekMenu();

        if $r4 != $r1 goto label2;

        return;

     label2:
        if $r4 == null goto label3;

        $r6 = r0.mOuterActionMenuPresenter;

        virtualinvoke $r4.removeMenuPresenter($r6);

        $r7 = r0.mExpandedMenuPresenter;

        virtualinvoke $r4.removeMenuPresenter($r7);

     label3:
        $r7 = r0.mExpandedMenuPresenter;

        if $r7 != null goto label4;

        $r7 = new androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter;

        specialinvoke $r7.<init>(r0);

        r0.mExpandedMenuPresenter = $r7;

     label4:
        virtualinvoke $r2.setExpandedActionViewsExclusive(1);

        if $r1 == null goto label5;

        $r3 = r0.mPopupContext;

        virtualinvoke $r1.addMenuPresenter($r2, $r3);

        $r7 = r0.mExpandedMenuPresenter;

        $r3 = r0.mPopupContext;

        virtualinvoke $r1.addMenuPresenter($r7, $r3);

        goto label6;

     label5:
        $r3 = r0.mPopupContext;

        virtualinvoke $r2.initForMenu($r3, null);

        $r7 = r0.mExpandedMenuPresenter;

        $r3 = r0.mPopupContext;

        virtualinvoke $r7.initForMenu($r3, null);

        virtualinvoke $r2.updateMenuView(1);

        $r7 = r0.mExpandedMenuPresenter;

        virtualinvoke $r7.updateMenuView(1);

     label6:
        r5 = r0.mMenuView;

        $i0 = r0.mPopupTheme;

        virtualinvoke r5.setPopupTheme($i0);

        r5 = r0.mMenuView;

        virtualinvoke r5.setPresenter($r2);

        r0.mOuterActionMenuPresenter = $r2;

        return;
    }

    public void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback, androidx.appcompat.view.menu.MenuBuilder$Callback)
    {
        androidx.appcompat.view.menu.MenuPresenter$Callback $r1;
        androidx.appcompat.widget.ActionMenuView $r3;
        androidx.appcompat.widget.Toolbar r0;
        androidx.appcompat.view.menu.MenuBuilder$Callback $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        r0.mActionMenuPresenterCallback = $r1;

        r0.mMenuBuilderCallback = $r2;

        $r3 = r0.mMenuView;

        if $r3 == null goto label1;

        virtualinvoke $r3.setMenuCallbacks($r1, $r2);

     label1:
        return;
    }

    public void setNavigationContentDescription(int)
    {
        android.content.Context $r1;
        java.lang.CharSequence $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.getContext();

        $r2 = virtualinvoke $r1.getText($i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        virtualinvoke r0.setNavigationContentDescription($r2);

        return;
    }

    public void setNavigationContentDescription(java.lang.CharSequence)
    {
        android.widget.ImageButton $r2;
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = android.text.TextUtils.isEmpty($r1);

        if $z0 != 0 goto label1;

        specialinvoke r0.ensureNavButtonView();

     label1:
        $r2 = r0.mNavButtonView;

        if $r2 == null goto label2;

        virtualinvoke $r2.setContentDescription($r1);

     label2:
        return;
    }

    public void setNavigationIcon(int)
    {
        android.content.Context $r1;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = virtualinvoke r0.getContext();

        $r2 = androidx.appcompat.content.res.AppCompatResources.getDrawable($r1, $i0);

        virtualinvoke r0.setNavigationIcon($r2);

        return;
    }

    public void setNavigationIcon(android.graphics.drawable.Drawable)
    {
        android.widget.ImageButton $r2;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;
        java.util.ArrayList $r3;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 == null goto label1;

        specialinvoke r0.ensureNavButtonView();

        $r2 = r0.mNavButtonView;

        $z0 = specialinvoke r0.isChildOrHidden($r2);

        if $z0 != 0 goto label2;

        $r2 = r0.mNavButtonView;

        specialinvoke r0.addSystemView($r2, 1);

        goto label2;

     label1:
        $r2 = r0.mNavButtonView;

        if $r2 == null goto label2;

        $z0 = specialinvoke r0.isChildOrHidden($r2);

        if $z0 == 0 goto label2;

        $r2 = r0.mNavButtonView;

        virtualinvoke r0.removeView($r2);

        $r3 = r0.mHiddenViews;

        $r2 = r0.mNavButtonView;

        virtualinvoke $r3.remove($r2);

     label2:
        $r2 = r0.mNavButtonView;

        if $r2 == null goto label3;

        virtualinvoke $r2.setImageDrawable($r1);

     label3:
        return;
    }

    public void setNavigationOnClickListener(android.view.View$OnClickListener)
    {
        androidx.appcompat.widget.Toolbar r0;
        android.widget.ImageButton $r2;
        android.view.View$OnClickListener $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.ensureNavButtonView();

        $r2 = r0.mNavButtonView;

        virtualinvoke $r2.setOnClickListener($r1);

        return;
    }

    public void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
    {
        androidx.appcompat.widget.Toolbar$OnMenuItemClickListener $r1;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $r1 := @parameter0;

        r0.mOnMenuItemClickListener = $r1;

        return;
    }

    public void setOverflowIcon(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.ActionMenuView $r2;
        androidx.appcompat.widget.Toolbar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.ensureMenu();

        $r2 = r0.mMenuView;

        virtualinvoke $r2.setOverflowIcon($r1);

        return;
    }

    public void setPopupTheme(int)
    {
        android.content.Context $r1;
        int $i0, $i1;
        android.view.ContextThemeWrapper $r2;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 = r0.mPopupTheme;

        if $i1 == $i0 goto label2;

        r0.mPopupTheme = $i0;

        if $i0 != 0 goto label1;

        $r1 = virtualinvoke r0.getContext();

        r0.mPopupContext = $r1;

        return;

     label1:
        $r2 = new android.view.ContextThemeWrapper;

        $r1 = virtualinvoke r0.getContext();

        specialinvoke $r2.<init>($r1, $i0);

        r0.mPopupContext = $r2;

     label2:
        return;
    }

    public void setSubtitle(int)
    {
        android.content.Context $r1;
        java.lang.CharSequence $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = virtualinvoke r0.getContext();

        $r2 = virtualinvoke $r1.getText($i0);

        virtualinvoke r0.setSubtitle($r2);

        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        androidx.appcompat.widget.AppCompatTextView $r4;
        android.content.Context $r3;
        java.lang.CharSequence $r1;
        android.text.TextUtils$TruncateAt $r5;
        java.util.ArrayList r7;
        android.content.res.ColorStateList $r6;
        android.widget.TextView r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = android.text.TextUtils.isEmpty($r1);

        if $z0 != 0 goto label3;

        r2 = r0.mSubtitleTextView;

        if r2 != null goto label2;

        $r3 = virtualinvoke r0.getContext();

        $r4 = new androidx.appcompat.widget.AppCompatTextView;

        specialinvoke $r4.<init>($r3);

        r0.mSubtitleTextView = $r4;

        virtualinvoke $r4.setSingleLine();

        r2 = r0.mSubtitleTextView;

        $r5 = android.text.TextUtils$TruncateAt.END;

        virtualinvoke r2.setEllipsize($r5);

        $i0 = r0.mSubtitleTextAppearance;

        if $i0 == 0 goto label1;

        r2 = r0.mSubtitleTextView;

        virtualinvoke r2.setTextAppearance($r3, $i0);

     label1:
        $r6 = r0.mSubtitleTextColor;

        if $r6 == null goto label2;

        r2 = r0.mSubtitleTextView;

        virtualinvoke r2.setTextColor($r6);

     label2:
        r2 = r0.mSubtitleTextView;

        $z0 = specialinvoke r0.isChildOrHidden(r2);

        if $z0 != 0 goto label4;

        r2 = r0.mSubtitleTextView;

        specialinvoke r0.addSystemView(r2, 1);

        goto label4;

     label3:
        r2 = r0.mSubtitleTextView;

        if r2 == null goto label4;

        $z0 = specialinvoke r0.isChildOrHidden(r2);

        if $z0 == 0 goto label4;

        r2 = r0.mSubtitleTextView;

        virtualinvoke r0.removeView(r2);

        r7 = r0.mHiddenViews;

        r2 = r0.mSubtitleTextView;

        virtualinvoke r7.remove(r2);

     label4:
        r2 = r0.mSubtitleTextView;

        if r2 == null goto label5;

        virtualinvoke r2.setText($r1);

     label5:
        r0.mSubtitleText = $r1;

        return;
    }

    public void setSubtitleTextAppearance(android.content.Context, int)
    {
        android.content.Context $r1;
        android.widget.TextView $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        r0.mSubtitleTextAppearance = $i0;

        $r2 = r0.mSubtitleTextView;

        if $r2 == null goto label1;

        virtualinvoke $r2.setTextAppearance($r1, $i0);

     label1:
        return;
    }

    public void setSubtitleTextColor(int)
    {
        int $i0;
        android.content.res.ColorStateList $r1;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = android.content.res.ColorStateList.valueOf($i0);

        virtualinvoke r0.setSubtitleTextColor($r1);

        return;
    }

    public void setSubtitleTextColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        androidx.appcompat.widget.Toolbar r0;
        android.widget.TextView $r2;

        r0 := @this;

        $r1 := @parameter0;

        r0.mSubtitleTextColor = $r1;

        $r2 = r0.mSubtitleTextView;

        if $r2 == null goto label1;

        virtualinvoke $r2.setTextColor($r1);

     label1:
        return;
    }

    public void setTitle(int)
    {
        android.content.Context $r1;
        java.lang.CharSequence $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = virtualinvoke r0.getContext();

        $r2 = virtualinvoke $r1.getText($i0);

        virtualinvoke r0.setTitle($r2);

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        androidx.appcompat.widget.AppCompatTextView $r4;
        android.content.Context $r3;
        java.lang.CharSequence $r1;
        android.text.TextUtils$TruncateAt $r5;
        java.util.ArrayList r7;
        android.content.res.ColorStateList $r6;
        android.widget.TextView r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = android.text.TextUtils.isEmpty($r1);

        if $z0 != 0 goto label3;

        r2 = r0.mTitleTextView;

        if r2 != null goto label2;

        $r3 = virtualinvoke r0.getContext();

        $r4 = new androidx.appcompat.widget.AppCompatTextView;

        specialinvoke $r4.<init>($r3);

        r0.mTitleTextView = $r4;

        virtualinvoke $r4.setSingleLine();

        r2 = r0.mTitleTextView;

        $r5 = android.text.TextUtils$TruncateAt.END;

        virtualinvoke r2.setEllipsize($r5);

        $i0 = r0.mTitleTextAppearance;

        if $i0 == 0 goto label1;

        r2 = r0.mTitleTextView;

        virtualinvoke r2.setTextAppearance($r3, $i0);

     label1:
        $r6 = r0.mTitleTextColor;

        if $r6 == null goto label2;

        r2 = r0.mTitleTextView;

        virtualinvoke r2.setTextColor($r6);

     label2:
        r2 = r0.mTitleTextView;

        $z0 = specialinvoke r0.isChildOrHidden(r2);

        if $z0 != 0 goto label4;

        r2 = r0.mTitleTextView;

        specialinvoke r0.addSystemView(r2, 1);

        goto label4;

     label3:
        r2 = r0.mTitleTextView;

        if r2 == null goto label4;

        $z0 = specialinvoke r0.isChildOrHidden(r2);

        if $z0 == 0 goto label4;

        r2 = r0.mTitleTextView;

        virtualinvoke r0.removeView(r2);

        r7 = r0.mHiddenViews;

        r2 = r0.mTitleTextView;

        virtualinvoke r7.remove(r2);

     label4:
        r2 = r0.mTitleTextView;

        if r2 == null goto label5;

        virtualinvoke r2.setText($r1);

     label5:
        r0.mTitleText = $r1;

        return;
    }

    public void setTitleMargin(int, int, int, int)
    {
        int $i0, $i1, $i2, $i3;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        $i3 := @parameter3;

        r0.mTitleMarginStart = $i0;

        r0.mTitleMarginTop = $i1;

        r0.mTitleMarginEnd = $i2;

        r0.mTitleMarginBottom = $i3;

        virtualinvoke r0.requestLayout();

        return;
    }

    public void setTitleMarginBottom(int)
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        r0.mTitleMarginBottom = $i0;

        virtualinvoke r0.requestLayout();

        return;
    }

    public void setTitleMarginEnd(int)
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        r0.mTitleMarginEnd = $i0;

        virtualinvoke r0.requestLayout();

        return;
    }

    public void setTitleMarginStart(int)
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        r0.mTitleMarginStart = $i0;

        virtualinvoke r0.requestLayout();

        return;
    }

    public void setTitleMarginTop(int)
    {
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        r0.mTitleMarginTop = $i0;

        virtualinvoke r0.requestLayout();

        return;
    }

    public void setTitleTextAppearance(android.content.Context, int)
    {
        android.content.Context $r1;
        android.widget.TextView $r2;
        int $i0;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        r0.mTitleTextAppearance = $i0;

        $r2 = r0.mTitleTextView;

        if $r2 == null goto label1;

        virtualinvoke $r2.setTextAppearance($r1, $i0);

     label1:
        return;
    }

    public void setTitleTextColor(int)
    {
        int $i0;
        android.content.res.ColorStateList $r1;
        androidx.appcompat.widget.Toolbar r0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = android.content.res.ColorStateList.valueOf($i0);

        virtualinvoke r0.setTitleTextColor($r1);

        return;
    }

    public void setTitleTextColor(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        androidx.appcompat.widget.Toolbar r0;
        android.widget.TextView $r2;

        r0 := @this;

        $r1 := @parameter0;

        r0.mTitleTextColor = $r1;

        $r2 = r0.mTitleTextView;

        if $r2 == null goto label1;

        virtualinvoke $r2.setTextColor($r1);

     label1:
        return;
    }

    public boolean showOverflowMenu()
    {
        androidx.appcompat.widget.ActionMenuView $r1;
        androidx.appcompat.widget.Toolbar r0;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mMenuView;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.showOverflowMenu();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
