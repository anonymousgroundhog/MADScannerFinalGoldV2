public final class androidx.work.impl.model.WorkSpecDao_Impl extends java.lang.Object implements androidx.work.impl.model.WorkSpecDao
{
    private final androidx.room.RoomDatabase __db;
    private final androidx.room.EntityInsertionAdapter __insertionAdapterOfWorkSpec;
    private final androidx.room.SharedSQLiteStatement __preparedStmtOfDelete;
    private final androidx.room.SharedSQLiteStatement __preparedStmtOfIncrementWorkSpecRunAttemptCount;
    private final androidx.room.SharedSQLiteStatement __preparedStmtOfMarkWorkSpecScheduled;
    private final androidx.room.SharedSQLiteStatement __preparedStmtOfPruneFinishedWorkWithZeroDependentsIgnoringKeepForAtLeast;
    private final androidx.room.SharedSQLiteStatement __preparedStmtOfResetScheduledState;
    private final androidx.room.SharedSQLiteStatement __preparedStmtOfResetWorkSpecRunAttemptCount;
    private final androidx.room.SharedSQLiteStatement __preparedStmtOfSetOutput;
    private final androidx.room.SharedSQLiteStatement __preparedStmtOfSetPeriodStartTime;

    public void <init>(androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$9 $r10;
        androidx.work.impl.model.WorkSpecDao_Impl$8 $r9;
        androidx.room.RoomDatabase $r1;
        androidx.work.impl.model.WorkSpecDao_Impl$3 $r4;
        androidx.work.impl.model.WorkSpecDao_Impl$2 $r3;
        androidx.work.impl.model.WorkSpecDao_Impl$1 $r2;
        androidx.work.impl.model.WorkSpecDao_Impl$7 $r8;
        androidx.work.impl.model.WorkSpecDao_Impl$6 $r7;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.impl.model.WorkSpecDao_Impl$5 $r6;
        androidx.work.impl.model.WorkSpecDao_Impl$4 $r5;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.__db = $r1;

        $r2 = new androidx.work.impl.model.WorkSpecDao_Impl$1;

        specialinvoke $r2.<init>(r0, $r1);

        r0.__insertionAdapterOfWorkSpec = $r2;

        $r3 = new androidx.work.impl.model.WorkSpecDao_Impl$2;

        specialinvoke $r3.<init>(r0, $r1);

        r0.__preparedStmtOfDelete = $r3;

        $r4 = new androidx.work.impl.model.WorkSpecDao_Impl$3;

        specialinvoke $r4.<init>(r0, $r1);

        r0.__preparedStmtOfSetOutput = $r4;

        $r5 = new androidx.work.impl.model.WorkSpecDao_Impl$4;

        specialinvoke $r5.<init>(r0, $r1);

        r0.__preparedStmtOfSetPeriodStartTime = $r5;

        $r6 = new androidx.work.impl.model.WorkSpecDao_Impl$5;

        specialinvoke $r6.<init>(r0, $r1);

        r0.__preparedStmtOfIncrementWorkSpecRunAttemptCount = $r6;

        $r7 = new androidx.work.impl.model.WorkSpecDao_Impl$6;

        specialinvoke $r7.<init>(r0, $r1);

        r0.__preparedStmtOfResetWorkSpecRunAttemptCount = $r7;

        $r8 = new androidx.work.impl.model.WorkSpecDao_Impl$7;

        specialinvoke $r8.<init>(r0, $r1);

        r0.__preparedStmtOfMarkWorkSpecScheduled = $r8;

        $r9 = new androidx.work.impl.model.WorkSpecDao_Impl$8;

        specialinvoke $r9.<init>(r0, $r1);

        r0.__preparedStmtOfResetScheduledState = $r9;

        $r10 = new androidx.work.impl.model.WorkSpecDao_Impl$9;

        specialinvoke $r10.<init>(r0, $r1);

        r0.__preparedStmtOfPruneFinishedWorkWithZeroDependentsIgnoringKeepForAtLeast = $r10;

        return;
    }

    private void __fetchRelationshipWorkProgressAsandroidxWorkData(androidx.collection.ArrayMap)
    {
        java.lang.Throwable r14;
        androidx.room.RoomSQLiteQuery $r8;
        byte[] $r12;
        java.util.ArrayList r6;
        int $i0, i1, $i2;
        java.lang.String r5;
        androidx.work.Data $r13;
        androidx.collection.ArrayMap r1, r3, $r15;
        boolean $z0;
        android.database.Cursor $r11;
        java.util.Iterator $r9;
        androidx.room.RoomDatabase r10;
        java.util.Set $r2;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7;

        r0 := @this;

        r1 := @parameter0;

        $r2 = virtualinvoke r1.keySet();

        $z0 = interfaceinvoke $r2.isEmpty();

        if $z0 == 0 goto label01;

        return;

     label01:
        $i0 = virtualinvoke r1.size();

        if $i0 <= 999 goto label04;

        $r15 = new androidx.collection.ArrayMap;

        r3 = $r15;

        specialinvoke $r15.<init>(999);

        $i0 = 0;

        i1 = 0;

        $i2 = virtualinvoke r1.size();

     label02:
        if i1 >= $i2 goto label03;

        $r4 = virtualinvoke r1.keyAt(i1);

        r5 = (java.lang.String) $r4;

        $r4 = virtualinvoke r1.valueAt(i1);

        r6 = (java.util.ArrayList) $r4;

        virtualinvoke r3.put(r5, r6);

        i1 = i1 + 1;

        $i0 = $i0 + 1;

        if $i0 != 999 goto label02;

        specialinvoke r0.__fetchRelationshipWorkProgressAsandroidxWorkData(r3);

        $r15 = new androidx.collection.ArrayMap;

        specialinvoke $r15.<init>(999);

        r3 = $r15;

        $i0 = 0;

        goto label02;

     label03:
        if $i0 <= 0 goto label22;

        specialinvoke r0.__fetchRelationshipWorkProgressAsandroidxWorkData(r3);

        return;

     label04:
        $r7 = androidx.room.util.StringUtil.newStringBuilder();

        virtualinvoke $r7.append("SELECT `progress`,`work_spec_id` FROM `WorkProgress` WHERE `work_spec_id` IN (");

        $i0 = interfaceinvoke $r2.size();

        androidx.room.util.StringUtil.appendPlaceholders($r7, $i0);

        virtualinvoke $r7.append(")");

        r5 = virtualinvoke $r7.toString();

        $r8 = androidx.room.RoomSQLiteQuery.acquire(r5, $i0);

        $i0 = 1;

        $r9 = interfaceinvoke $r2.iterator();

     label05:
        $z0 = interfaceinvoke $r9.hasNext();

        if $z0 == 0 goto label08;

        $r4 = interfaceinvoke $r9.next();

        r5 = (java.lang.String) $r4;

        if r5 != null goto label06;

        virtualinvoke $r8.bindNull($i0);

        goto label07;

     label06:
        virtualinvoke $r8.bindString($i0, r5);

     label07:
        $i0 = $i0 + 1;

        goto label05;

     label08:
        r10 = r0.__db;

        $r11 = androidx.room.util.DBUtil.query(r10, $r8, 0, null);

     label09:
        $i0 = androidx.room.util.CursorUtil.getColumnIndex($r11, "work_spec_id");

     label10:
        i1 = -1;

        if $i0 != i1 goto label11;

        interfaceinvoke $r11.close();

        return;

     label11:
        $z0 = interfaceinvoke $r11.moveToNext();

     label12:
        if $z0 == 0 goto label19;

     label13:
        $z0 = interfaceinvoke $r11.isNull($i0);

     label14:
        if $z0 != 0 goto label11;

     label15:
        r5 = interfaceinvoke $r11.getString($i0);

        $r4 = virtualinvoke r1.get(r5);

        r6 = (java.util.ArrayList) $r4;

     label16:
        if r6 == null goto label11;

     label17:
        $r12 = interfaceinvoke $r11.getBlob(0);

        $r13 = androidx.work.Data.fromByteArray($r12);

        virtualinvoke r6.add($r13);

     label18:
        goto label11;

     label19:
        interfaceinvoke $r11.close();

        return;

     label20:
        r14 := @caughtexception;

        interfaceinvoke $r11.close();

        goto label21;

     label21:
        throw r14;

     label22:
        return;

        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label17 to label18 with label20;
    }

    private void __fetchRelationshipWorkTagAsjavaLangString(androidx.collection.ArrayMap)
    {
        java.lang.Throwable r12;
        androidx.room.RoomSQLiteQuery $r8;
        java.util.ArrayList r6;
        int $i0, i1, $i2;
        java.lang.String r5;
        androidx.collection.ArrayMap r1, r3, $r13;
        boolean $z0;
        android.database.Cursor $r11;
        java.util.Iterator $r9;
        androidx.room.RoomDatabase r10;
        java.util.Set $r2;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7;

        r0 := @this;

        r1 := @parameter0;

        $r2 = virtualinvoke r1.keySet();

        $z0 = interfaceinvoke $r2.isEmpty();

        if $z0 == 0 goto label01;

        return;

     label01:
        $i0 = virtualinvoke r1.size();

        if $i0 <= 999 goto label04;

        $r13 = new androidx.collection.ArrayMap;

        r3 = $r13;

        specialinvoke $r13.<init>(999);

        $i0 = 0;

        i1 = 0;

        $i2 = virtualinvoke r1.size();

     label02:
        if i1 >= $i2 goto label03;

        $r4 = virtualinvoke r1.keyAt(i1);

        r5 = (java.lang.String) $r4;

        $r4 = virtualinvoke r1.valueAt(i1);

        r6 = (java.util.ArrayList) $r4;

        virtualinvoke r3.put(r5, r6);

        i1 = i1 + 1;

        $i0 = $i0 + 1;

        if $i0 != 999 goto label02;

        specialinvoke r0.__fetchRelationshipWorkTagAsjavaLangString(r3);

        $r13 = new androidx.collection.ArrayMap;

        specialinvoke $r13.<init>(999);

        r3 = $r13;

        $i0 = 0;

        goto label02;

     label03:
        if $i0 <= 0 goto label22;

        specialinvoke r0.__fetchRelationshipWorkTagAsjavaLangString(r3);

        return;

     label04:
        $r7 = androidx.room.util.StringUtil.newStringBuilder();

        virtualinvoke $r7.append("SELECT `tag`,`work_spec_id` FROM `WorkTag` WHERE `work_spec_id` IN (");

        $i0 = interfaceinvoke $r2.size();

        androidx.room.util.StringUtil.appendPlaceholders($r7, $i0);

        virtualinvoke $r7.append(")");

        r5 = virtualinvoke $r7.toString();

        $r8 = androidx.room.RoomSQLiteQuery.acquire(r5, $i0);

        $i0 = 1;

        $r9 = interfaceinvoke $r2.iterator();

     label05:
        $z0 = interfaceinvoke $r9.hasNext();

        if $z0 == 0 goto label08;

        $r4 = interfaceinvoke $r9.next();

        r5 = (java.lang.String) $r4;

        if r5 != null goto label06;

        virtualinvoke $r8.bindNull($i0);

        goto label07;

     label06:
        virtualinvoke $r8.bindString($i0, r5);

     label07:
        $i0 = $i0 + 1;

        goto label05;

     label08:
        r10 = r0.__db;

        $r11 = androidx.room.util.DBUtil.query(r10, $r8, 0, null);

     label09:
        $i0 = androidx.room.util.CursorUtil.getColumnIndex($r11, "work_spec_id");

     label10:
        i1 = -1;

        if $i0 != i1 goto label11;

        interfaceinvoke $r11.close();

        return;

     label11:
        $z0 = interfaceinvoke $r11.moveToNext();

     label12:
        if $z0 == 0 goto label19;

     label13:
        $z0 = interfaceinvoke $r11.isNull($i0);

     label14:
        if $z0 != 0 goto label11;

     label15:
        r5 = interfaceinvoke $r11.getString($i0);

        $r4 = virtualinvoke r1.get(r5);

        r6 = (java.util.ArrayList) $r4;

     label16:
        if r6 == null goto label11;

     label17:
        r5 = interfaceinvoke $r11.getString(0);

        virtualinvoke r6.add(r5);

     label18:
        goto label11;

     label19:
        interfaceinvoke $r11.close();

        return;

     label20:
        r12 := @caughtexception;

        interfaceinvoke $r11.close();

        goto label21;

     label21:
        throw r12;

     label22:
        return;

        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label11 to label12 with label20;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.Throwable from label15 to label16 with label20;
        catch java.lang.Throwable from label17 to label18 with label20;
    }

    static androidx.room.RoomDatabase access$000(androidx.work.impl.model.WorkSpecDao_Impl)
    {
        androidx.room.RoomDatabase r1;
        androidx.work.impl.model.WorkSpecDao_Impl $r0;

        $r0 := @parameter0;

        r1 = $r0.__db;

        return r1;
    }

    static void access$100(androidx.work.impl.model.WorkSpecDao_Impl, androidx.collection.ArrayMap)
    {
        androidx.work.impl.model.WorkSpecDao_Impl $r0;
        androidx.collection.ArrayMap $r1;

        $r0 := @parameter0;

        $r1 := @parameter1;

        specialinvoke $r0.__fetchRelationshipWorkTagAsjavaLangString($r1);

        return;
    }

    static void access$200(androidx.work.impl.model.WorkSpecDao_Impl, androidx.collection.ArrayMap)
    {
        androidx.work.impl.model.WorkSpecDao_Impl $r0;
        androidx.collection.ArrayMap $r1;

        $r0 := @parameter0;

        $r1 := @parameter1;

        specialinvoke $r0.__fetchRelationshipWorkProgressAsandroidxWorkData($r1);

        return;
    }

    public void delete(java.lang.String)
    {
        java.lang.Throwable $r5;
        androidx.room.RoomDatabase r3;
        androidx.room.SharedSQLiteStatement r4;
        java.lang.String $r1;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.sqlite.db.SupportSQLiteStatement $r2;

        r0 := @this;

        $r1 := @parameter0;

        r3 = r0.__db;

        virtualinvoke r3.assertNotSuspendingTransaction();

        r4 = r0.__preparedStmtOfDelete;

        $r2 = virtualinvoke r4.acquire();

        if $r1 != null goto label1;

        interfaceinvoke $r2.bindNull(1);

        goto label2;

     label1:
        interfaceinvoke $r2.bindString(1, $r1);

     label2:
        r3 = r0.__db;

        virtualinvoke r3.beginTransaction();

     label3:
        interfaceinvoke $r2.executeUpdateDelete();

        r3 = r0.__db;

        virtualinvoke r3.setTransactionSuccessful();

     label4:
        r3 = r0.__db;

        virtualinvoke r3.endTransaction();

        r4 = r0.__preparedStmtOfDelete;

        virtualinvoke r4.release($r2);

        return;

     label5:
        $r5 := @caughtexception;

        r3 = r0.__db;

        virtualinvoke r3.endTransaction();

        r4 = r0.__preparedStmtOfDelete;

        virtualinvoke r4.release($r2);

        throw $r5;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.util.List getAllEligibleWorkSpecsForScheduling(int)
    {
        byte[] $r10;
        androidx.work.BackoffPolicy $r15;
        androidx.work.Constraints r8;
        androidx.work.OutOfQuotaPolicy $r16;
        androidx.work.Data $r14;
        boolean $z0;
        java.lang.Throwable r17;
        androidx.room.RoomSQLiteQuery $r1, r4;
        androidx.work.NetworkType $r9;
        long l6;
        androidx.work.impl.model.WorkSpec r12;
        java.util.ArrayList r5;
        int $i0, i1, i2, i3, i4, i5, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, $i19, $i20, $i21, $i22, i23, i24, $i25, $i26;
        java.lang.String $r6, $r7;
        android.database.Cursor $r3;
        androidx.room.RoomDatabase r2;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.ContentUriTriggers $r11;
        androidx.work.WorkInfo$State $r13;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = androidx.room.RoomSQLiteQuery.acquire("SELECT `required_network_type`, `requires_charging`, `requires_device_idle`, `requires_battery_not_low`, `requires_storage_not_low`, `trigger_content_update_delay`, `trigger_max_content_delay`, `content_uri_triggers`, `WorkSpec`.`id` AS `id`, `WorkSpec`.`state` AS `state`, `WorkSpec`.`worker_class_name` AS `worker_class_name`, `WorkSpec`.`input_merger_class_name` AS `input_merger_class_name`, `WorkSpec`.`input` AS `input`, `WorkSpec`.`output` AS `output`, `WorkSpec`.`initial_delay` AS `initial_delay`, `WorkSpec`.`interval_duration` AS `interval_duration`, `WorkSpec`.`flex_duration` AS `flex_duration`, `WorkSpec`.`run_attempt_count` AS `run_attempt_count`, `WorkSpec`.`backoff_policy` AS `backoff_policy`, `WorkSpec`.`backoff_delay_duration` AS `backoff_delay_duration`, `WorkSpec`.`period_start_time` AS `period_start_time`, `WorkSpec`.`minimum_retention_duration` AS `minimum_retention_duration`, `WorkSpec`.`schedule_requested_at` AS `schedule_requested_at`, `WorkSpec`.`run_in_foreground` AS `run_in_foreground`, `WorkSpec`.`out_of_quota_policy` AS `out_of_quota_policy` FROM workspec WHERE state=0 ORDER BY period_start_time LIMIT ?", 1);

        l6 = (long) $i0;

        virtualinvoke $r1.bindLong(1, l6);

        r2 = r0.__db;

        virtualinvoke r2.assertNotSuspendingTransaction();

        r2 = r0.__db;

        $r3 = androidx.room.util.DBUtil.query(r2, $r1, 0, null);

     label01:
        $i0 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "required_network_type");

     label02:
        i7 = $i0;

     label03:
        $i0 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_charging");

     label04:
        i8 = $i0;

     label05:
        $i0 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_device_idle");

     label06:
        i1 = $i0;

     label07:
        $i0 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_battery_not_low");

        $i9 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_storage_not_low");

        $i10 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "trigger_content_update_delay");

        $i11 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "trigger_max_content_delay");

        $i12 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "content_uri_triggers");

        $i13 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "id");

     label08:
        i2 = $i13;

     label09:
        $i13 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "state");

        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "worker_class_name");

     label10:
        i15 = $i14;

     label11:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "input_merger_class_name");

     label12:
        i3 = $i14;

     label13:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "input");

     label14:
        i16 = $i14;

     label15:
        i4 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "output");

     label16:
        r4 = $r1;

     label17:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "initial_delay");

     label18:
        i17 = $i14;

     label19:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "interval_duration");

     label20:
        i18 = $i14;

     label21:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "flex_duration");

     label22:
        $i19 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "run_attempt_count");

     label23:
        $i20 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "backoff_policy");

     label24:
        i5 = $i20;

     label25:
        $i20 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "backoff_delay_duration");

     label26:
        $i21 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "period_start_time");

     label27:
        $i22 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "minimum_retention_duration");

     label28:
        i23 = $i22;

     label29:
        $i22 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "schedule_requested_at");

     label30:
        i24 = $i22;

     label31:
        $i22 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "run_in_foreground");

     label32:
        $i25 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "out_of_quota_policy");

     label33:
        r5 = new java.util.ArrayList;

     label34:
        $i26 = interfaceinvoke $r3.getCount();

        specialinvoke r5.<init>($i26);

     label35:
        $z0 = interfaceinvoke $r3.moveToNext();

     label36:
        if $z0 == 0 goto label67;

     label37:
        $r6 = interfaceinvoke $r3.getString(i2);

        $r7 = interfaceinvoke $r3.getString(i15);

        r8 = new androidx.work.Constraints;

        specialinvoke r8.<init>();

        $i26 = interfaceinvoke $r3.getInt(i7);

        $r9 = androidx.work.impl.model.WorkTypeConverters.intToNetworkType($i26);

     label38:
        virtualinvoke r8.setRequiredNetworkType($r9);

        $i26 = interfaceinvoke $r3.getInt(i8);

     label39:
        if $i26 == 0 goto label40;

        $z0 = 1;

        goto label41;

     label40:
        $z0 = 0;

     label41:
        virtualinvoke r8.setRequiresCharging($z0);

        $i26 = interfaceinvoke $r3.getInt(i1);

     label42:
        if $i26 == 0 goto label43;

        $z0 = 1;

        goto label44;

     label43:
        $z0 = 0;

     label44:
        virtualinvoke r8.setRequiresDeviceIdle($z0);

        $i26 = interfaceinvoke $r3.getInt($i0);

     label45:
        if $i26 == 0 goto label46;

        $z0 = 1;

        goto label47;

     label46:
        $z0 = 0;

     label47:
        virtualinvoke r8.setRequiresBatteryNotLow($z0);

        $i26 = interfaceinvoke $r3.getInt($i9);

     label48:
        if $i26 == 0 goto label49;

        $z0 = 1;

        goto label50;

     label49:
        $z0 = 0;

     label50:
        virtualinvoke r8.setRequiresStorageNotLow($z0);

        l6 = interfaceinvoke $r3.getLong($i10);

     label51:
        virtualinvoke r8.setTriggerContentUpdateDelay(l6);

        l6 = interfaceinvoke $r3.getLong($i11);

        virtualinvoke r8.setTriggerMaxContentDelay(l6);

        $r10 = interfaceinvoke $r3.getBlob($i12);

        $r11 = androidx.work.impl.model.WorkTypeConverters.byteArrayToContentUriTriggers($r10);

        virtualinvoke r8.setContentUriTriggers($r11);

        r12 = new androidx.work.impl.model.WorkSpec;

     label52:
        specialinvoke r12.<init>($r6, $r7);

        $i26 = interfaceinvoke $r3.getInt($i13);

        $r13 = androidx.work.impl.model.WorkTypeConverters.intToState($i26);

        r12.state = $r13;

        $r6 = interfaceinvoke $r3.getString(i3);

        r12.inputMergerClassName = $r6;

        $r10 = interfaceinvoke $r3.getBlob(i16);

     label53:
        $r14 = androidx.work.Data.fromByteArray($r10);

        r12.input = $r14;

        $r10 = interfaceinvoke $r3.getBlob(i4);

     label54:
        $r14 = androidx.work.Data.fromByteArray($r10);

        r12.output = $r14;

     label55:
        l6 = interfaceinvoke $r3.getLong(i17);

        r12.initialDelay = l6;

     label56:
        l6 = interfaceinvoke $r3.getLong(i18);

        r12.intervalDuration = l6;

        l6 = interfaceinvoke $r3.getLong($i14);

        r12.flexDuration = l6;

        $i26 = interfaceinvoke $r3.getInt($i19);

        r12.runAttemptCount = $i26;

        $i26 = interfaceinvoke $r3.getInt(i5);

     label57:
        $r15 = androidx.work.impl.model.WorkTypeConverters.intToBackoffPolicy($i26);

        r12.backoffPolicy = $r15;

     label58:
        l6 = interfaceinvoke $r3.getLong($i20);

        r12.backoffDelayDuration = l6;

     label59:
        l6 = interfaceinvoke $r3.getLong($i21);

        r12.periodStartTime = l6;

     label60:
        l6 = interfaceinvoke $r3.getLong(i23);

        r12.minimumRetentionDuration = l6;

     label61:
        $i26 = i24;

     label62:
        l6 = interfaceinvoke $r3.getLong(i24);

        r12.scheduleRequestedAt = l6;

        i24 = interfaceinvoke $r3.getInt($i22);

     label63:
        if i24 == 0 goto label64;

        $z0 = 1;

        goto label65;

     label64:
        $z0 = 0;

     label65:
        r12.expedited = $z0;

        i24 = interfaceinvoke $r3.getInt($i25);

        $r16 = androidx.work.impl.model.WorkTypeConverters.intToOutOfQuotaPolicy(i24);

        r12.outOfQuotaPolicy = $r16;

        r12.constraints = r8;

        interfaceinvoke r5.add(r12);

     label66:
        i24 = $i26;

        goto label35;

     label67:
        interfaceinvoke $r3.close();

        virtualinvoke $r1.release();

        return r5;

     label68:
        r17 := @caughtexception;

        goto label72;

     label69:
        r17 := @caughtexception;

        r4 = $r1;

        goto label72;

     label70:
        r17 := @caughtexception;

        r4 = $r1;

        goto label72;

     label71:
        r17 := @caughtexception;

        r4 = $r1;

     label72:
        interfaceinvoke $r3.close();

        virtualinvoke r4.release();

        goto label73;

     label73:
        throw r17;

        catch java.lang.Throwable from label01 to label02 with label71;
        catch java.lang.Throwable from label03 to label04 with label71;
        catch java.lang.Throwable from label05 to label06 with label71;
        catch java.lang.Throwable from label07 to label08 with label71;
        catch java.lang.Throwable from label09 to label10 with label71;
        catch java.lang.Throwable from label11 to label12 with label70;
        catch java.lang.Throwable from label13 to label14 with label69;
        catch java.lang.Throwable from label15 to label16 with label69;
        catch java.lang.Throwable from label17 to label18 with label68;
        catch java.lang.Throwable from label19 to label20 with label68;
        catch java.lang.Throwable from label21 to label22 with label68;
        catch java.lang.Throwable from label22 to label23 with label68;
        catch java.lang.Throwable from label23 to label24 with label68;
        catch java.lang.Throwable from label25 to label26 with label68;
        catch java.lang.Throwable from label26 to label27 with label68;
        catch java.lang.Throwable from label27 to label28 with label68;
        catch java.lang.Throwable from label29 to label30 with label68;
        catch java.lang.Throwable from label31 to label32 with label68;
        catch java.lang.Throwable from label32 to label33 with label68;
        catch java.lang.Throwable from label33 to label34 with label68;
        catch java.lang.Throwable from label34 to label36 with label68;
        catch java.lang.Throwable from label37 to label38 with label68;
        catch java.lang.Throwable from label38 to label39 with label68;
        catch java.lang.Throwable from label41 to label42 with label68;
        catch java.lang.Throwable from label44 to label45 with label68;
        catch java.lang.Throwable from label47 to label48 with label68;
        catch java.lang.Throwable from label50 to label51 with label68;
        catch java.lang.Throwable from label51 to label52 with label68;
        catch java.lang.Throwable from label52 to label53 with label68;
        catch java.lang.Throwable from label53 to label54 with label68;
        catch java.lang.Throwable from label54 to label55 with label68;
        catch java.lang.Throwable from label55 to label56 with label68;
        catch java.lang.Throwable from label56 to label57 with label68;
        catch java.lang.Throwable from label57 to label58 with label68;
        catch java.lang.Throwable from label58 to label59 with label68;
        catch java.lang.Throwable from label59 to label60 with label68;
        catch java.lang.Throwable from label60 to label61 with label68;
        catch java.lang.Throwable from label62 to label63 with label68;
        catch java.lang.Throwable from label65 to label66 with label68;
    }

    public java.util.List getAllUnfinishedWork()
    {
        java.lang.Throwable $r6;
        androidx.room.RoomSQLiteQuery $r1;
        androidx.room.RoomDatabase r2;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.util.ArrayList r4;
        int $i0;
        java.lang.String $r5;
        android.database.Cursor $r3;
        boolean $z0;

        r0 := @this;

        $r1 = androidx.room.RoomSQLiteQuery.acquire("SELECT id FROM workspec WHERE state NOT IN (2, 3, 5)", 0);

        r2 = r0.__db;

        virtualinvoke r2.assertNotSuspendingTransaction();

        r2 = r0.__db;

        $r3 = androidx.room.util.DBUtil.query(r2, $r1, 0, null);

     label1:
        r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r3.getCount();

        specialinvoke r4.<init>($i0);

     label2:
        $z0 = interfaceinvoke $r3.moveToNext();

     label3:
        if $z0 == 0 goto label6;

     label4:
        $r5 = interfaceinvoke $r3.getString(0);

        interfaceinvoke r4.add($r5);

     label5:
        goto label2;

     label6:
        interfaceinvoke $r3.close();

        virtualinvoke $r1.release();

        return r4;

     label7:
        $r6 := @caughtexception;

        interfaceinvoke $r3.close();

        virtualinvoke $r1.release();

        goto label8;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public java.util.List getAllWorkSpecIds()
    {
        java.lang.Throwable $r6;
        androidx.room.RoomSQLiteQuery $r1;
        androidx.room.RoomDatabase r2;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.util.ArrayList r4;
        int $i0;
        java.lang.String $r5;
        android.database.Cursor $r3;
        boolean $z0;

        r0 := @this;

        $r1 = androidx.room.RoomSQLiteQuery.acquire("SELECT id FROM workspec", 0);

        r2 = r0.__db;

        virtualinvoke r2.assertNotSuspendingTransaction();

        r2 = r0.__db;

        $r3 = androidx.room.util.DBUtil.query(r2, $r1, 0, null);

     label1:
        r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r3.getCount();

        specialinvoke r4.<init>($i0);

     label2:
        $z0 = interfaceinvoke $r3.moveToNext();

     label3:
        if $z0 == 0 goto label6;

     label4:
        $r5 = interfaceinvoke $r3.getString(0);

        interfaceinvoke r4.add($r5);

     label5:
        goto label2;

     label6:
        interfaceinvoke $r3.close();

        virtualinvoke $r1.release();

        return r4;

     label7:
        $r6 := @caughtexception;

        interfaceinvoke $r3.close();

        virtualinvoke $r1.release();

        goto label8;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
    }

    public androidx.lifecycle.LiveData getAllWorkSpecIdsLiveData()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$10 $r1;
        androidx.room.InvalidationTracker $r4;
        androidx.room.RoomSQLiteQuery $r2;
        androidx.lifecycle.LiveData $r6;
        androidx.room.RoomDatabase $r3;
        java.lang.String[] $r5;
        androidx.work.impl.model.WorkSpecDao_Impl r0;

        r0 := @this;

        $r2 = androidx.room.RoomSQLiteQuery.acquire("SELECT id FROM workspec", 0);

        $r3 = r0.__db;

        $r4 = virtualinvoke $r3.getInvalidationTracker();

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "workspec";

        $r1 = new androidx.work.impl.model.WorkSpecDao_Impl$10;

        specialinvoke $r1.<init>(r0, $r2);

        $r6 = virtualinvoke $r4.createLiveData($r5, 1, $r1);

        return $r6;
    }

    public java.util.List getEligibleWorkForScheduling(int)
    {
        byte[] $r10;
        androidx.work.BackoffPolicy $r15;
        androidx.work.Constraints r8;
        androidx.work.OutOfQuotaPolicy $r16;
        androidx.work.Data $r14;
        boolean $z0;
        java.lang.Throwable r17;
        androidx.room.RoomSQLiteQuery $r1, r4;
        androidx.work.NetworkType $r9;
        long l6;
        androidx.work.impl.model.WorkSpec r12;
        java.util.ArrayList r5;
        int $i0, i1, i2, i3, i4, i5, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, $i19, $i20, $i21, $i22, i23, i24, $i25, $i26;
        java.lang.String $r6, $r7;
        android.database.Cursor $r3;
        androidx.room.RoomDatabase r2;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.ContentUriTriggers $r11;
        androidx.work.WorkInfo$State $r13;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = androidx.room.RoomSQLiteQuery.acquire("SELECT `required_network_type`, `requires_charging`, `requires_device_idle`, `requires_battery_not_low`, `requires_storage_not_low`, `trigger_content_update_delay`, `trigger_max_content_delay`, `content_uri_triggers`, `WorkSpec`.`id` AS `id`, `WorkSpec`.`state` AS `state`, `WorkSpec`.`worker_class_name` AS `worker_class_name`, `WorkSpec`.`input_merger_class_name` AS `input_merger_class_name`, `WorkSpec`.`input` AS `input`, `WorkSpec`.`output` AS `output`, `WorkSpec`.`initial_delay` AS `initial_delay`, `WorkSpec`.`interval_duration` AS `interval_duration`, `WorkSpec`.`flex_duration` AS `flex_duration`, `WorkSpec`.`run_attempt_count` AS `run_attempt_count`, `WorkSpec`.`backoff_policy` AS `backoff_policy`, `WorkSpec`.`backoff_delay_duration` AS `backoff_delay_duration`, `WorkSpec`.`period_start_time` AS `period_start_time`, `WorkSpec`.`minimum_retention_duration` AS `minimum_retention_duration`, `WorkSpec`.`schedule_requested_at` AS `schedule_requested_at`, `WorkSpec`.`run_in_foreground` AS `run_in_foreground`, `WorkSpec`.`out_of_quota_policy` AS `out_of_quota_policy` FROM workspec WHERE state=0 AND schedule_requested_at=-1 ORDER BY period_start_time LIMIT (SELECT MAX(?-COUNT(*), 0) FROM workspec WHERE schedule_requested_at<>-1 AND state NOT IN (2, 3, 5))", 1);

        l6 = (long) $i0;

        virtualinvoke $r1.bindLong(1, l6);

        r2 = r0.__db;

        virtualinvoke r2.assertNotSuspendingTransaction();

        r2 = r0.__db;

        $r3 = androidx.room.util.DBUtil.query(r2, $r1, 0, null);

     label01:
        $i0 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "required_network_type");

     label02:
        i7 = $i0;

     label03:
        $i0 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_charging");

     label04:
        i8 = $i0;

     label05:
        $i0 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_device_idle");

     label06:
        i1 = $i0;

     label07:
        $i0 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_battery_not_low");

        $i9 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_storage_not_low");

        $i10 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "trigger_content_update_delay");

        $i11 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "trigger_max_content_delay");

        $i12 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "content_uri_triggers");

        $i13 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "id");

     label08:
        i2 = $i13;

     label09:
        $i13 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "state");

        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "worker_class_name");

     label10:
        i15 = $i14;

     label11:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "input_merger_class_name");

     label12:
        i3 = $i14;

     label13:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "input");

     label14:
        i16 = $i14;

     label15:
        i4 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "output");

     label16:
        r4 = $r1;

     label17:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "initial_delay");

     label18:
        i17 = $i14;

     label19:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "interval_duration");

     label20:
        i18 = $i14;

     label21:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "flex_duration");

     label22:
        $i19 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "run_attempt_count");

     label23:
        $i20 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "backoff_policy");

     label24:
        i5 = $i20;

     label25:
        $i20 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "backoff_delay_duration");

     label26:
        $i21 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "period_start_time");

     label27:
        $i22 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "minimum_retention_duration");

     label28:
        i23 = $i22;

     label29:
        $i22 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "schedule_requested_at");

     label30:
        i24 = $i22;

     label31:
        $i22 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "run_in_foreground");

     label32:
        $i25 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "out_of_quota_policy");

     label33:
        r5 = new java.util.ArrayList;

     label34:
        $i26 = interfaceinvoke $r3.getCount();

        specialinvoke r5.<init>($i26);

     label35:
        $z0 = interfaceinvoke $r3.moveToNext();

     label36:
        if $z0 == 0 goto label67;

     label37:
        $r6 = interfaceinvoke $r3.getString(i2);

        $r7 = interfaceinvoke $r3.getString(i15);

        r8 = new androidx.work.Constraints;

        specialinvoke r8.<init>();

        $i26 = interfaceinvoke $r3.getInt(i7);

        $r9 = androidx.work.impl.model.WorkTypeConverters.intToNetworkType($i26);

     label38:
        virtualinvoke r8.setRequiredNetworkType($r9);

        $i26 = interfaceinvoke $r3.getInt(i8);

     label39:
        if $i26 == 0 goto label40;

        $z0 = 1;

        goto label41;

     label40:
        $z0 = 0;

     label41:
        virtualinvoke r8.setRequiresCharging($z0);

        $i26 = interfaceinvoke $r3.getInt(i1);

     label42:
        if $i26 == 0 goto label43;

        $z0 = 1;

        goto label44;

     label43:
        $z0 = 0;

     label44:
        virtualinvoke r8.setRequiresDeviceIdle($z0);

        $i26 = interfaceinvoke $r3.getInt($i0);

     label45:
        if $i26 == 0 goto label46;

        $z0 = 1;

        goto label47;

     label46:
        $z0 = 0;

     label47:
        virtualinvoke r8.setRequiresBatteryNotLow($z0);

        $i26 = interfaceinvoke $r3.getInt($i9);

     label48:
        if $i26 == 0 goto label49;

        $z0 = 1;

        goto label50;

     label49:
        $z0 = 0;

     label50:
        virtualinvoke r8.setRequiresStorageNotLow($z0);

        l6 = interfaceinvoke $r3.getLong($i10);

     label51:
        virtualinvoke r8.setTriggerContentUpdateDelay(l6);

        l6 = interfaceinvoke $r3.getLong($i11);

        virtualinvoke r8.setTriggerMaxContentDelay(l6);

        $r10 = interfaceinvoke $r3.getBlob($i12);

        $r11 = androidx.work.impl.model.WorkTypeConverters.byteArrayToContentUriTriggers($r10);

        virtualinvoke r8.setContentUriTriggers($r11);

        r12 = new androidx.work.impl.model.WorkSpec;

     label52:
        specialinvoke r12.<init>($r6, $r7);

        $i26 = interfaceinvoke $r3.getInt($i13);

        $r13 = androidx.work.impl.model.WorkTypeConverters.intToState($i26);

        r12.state = $r13;

        $r6 = interfaceinvoke $r3.getString(i3);

        r12.inputMergerClassName = $r6;

        $r10 = interfaceinvoke $r3.getBlob(i16);

     label53:
        $r14 = androidx.work.Data.fromByteArray($r10);

        r12.input = $r14;

        $r10 = interfaceinvoke $r3.getBlob(i4);

     label54:
        $r14 = androidx.work.Data.fromByteArray($r10);

        r12.output = $r14;

     label55:
        l6 = interfaceinvoke $r3.getLong(i17);

        r12.initialDelay = l6;

     label56:
        l6 = interfaceinvoke $r3.getLong(i18);

        r12.intervalDuration = l6;

        l6 = interfaceinvoke $r3.getLong($i14);

        r12.flexDuration = l6;

        $i26 = interfaceinvoke $r3.getInt($i19);

        r12.runAttemptCount = $i26;

        $i26 = interfaceinvoke $r3.getInt(i5);

     label57:
        $r15 = androidx.work.impl.model.WorkTypeConverters.intToBackoffPolicy($i26);

        r12.backoffPolicy = $r15;

     label58:
        l6 = interfaceinvoke $r3.getLong($i20);

        r12.backoffDelayDuration = l6;

     label59:
        l6 = interfaceinvoke $r3.getLong($i21);

        r12.periodStartTime = l6;

     label60:
        l6 = interfaceinvoke $r3.getLong(i23);

        r12.minimumRetentionDuration = l6;

     label61:
        $i26 = i24;

     label62:
        l6 = interfaceinvoke $r3.getLong(i24);

        r12.scheduleRequestedAt = l6;

        i24 = interfaceinvoke $r3.getInt($i22);

     label63:
        if i24 == 0 goto label64;

        $z0 = 1;

        goto label65;

     label64:
        $z0 = 0;

     label65:
        r12.expedited = $z0;

        i24 = interfaceinvoke $r3.getInt($i25);

        $r16 = androidx.work.impl.model.WorkTypeConverters.intToOutOfQuotaPolicy(i24);

        r12.outOfQuotaPolicy = $r16;

        r12.constraints = r8;

        interfaceinvoke r5.add(r12);

     label66:
        i24 = $i26;

        goto label35;

     label67:
        interfaceinvoke $r3.close();

        virtualinvoke $r1.release();

        return r5;

     label68:
        r17 := @caughtexception;

        goto label72;

     label69:
        r17 := @caughtexception;

        r4 = $r1;

        goto label72;

     label70:
        r17 := @caughtexception;

        r4 = $r1;

        goto label72;

     label71:
        r17 := @caughtexception;

        r4 = $r1;

     label72:
        interfaceinvoke $r3.close();

        virtualinvoke r4.release();

        goto label73;

     label73:
        throw r17;

        catch java.lang.Throwable from label01 to label02 with label71;
        catch java.lang.Throwable from label03 to label04 with label71;
        catch java.lang.Throwable from label05 to label06 with label71;
        catch java.lang.Throwable from label07 to label08 with label71;
        catch java.lang.Throwable from label09 to label10 with label71;
        catch java.lang.Throwable from label11 to label12 with label70;
        catch java.lang.Throwable from label13 to label14 with label69;
        catch java.lang.Throwable from label15 to label16 with label69;
        catch java.lang.Throwable from label17 to label18 with label68;
        catch java.lang.Throwable from label19 to label20 with label68;
        catch java.lang.Throwable from label21 to label22 with label68;
        catch java.lang.Throwable from label22 to label23 with label68;
        catch java.lang.Throwable from label23 to label24 with label68;
        catch java.lang.Throwable from label25 to label26 with label68;
        catch java.lang.Throwable from label26 to label27 with label68;
        catch java.lang.Throwable from label27 to label28 with label68;
        catch java.lang.Throwable from label29 to label30 with label68;
        catch java.lang.Throwable from label31 to label32 with label68;
        catch java.lang.Throwable from label32 to label33 with label68;
        catch java.lang.Throwable from label33 to label34 with label68;
        catch java.lang.Throwable from label34 to label36 with label68;
        catch java.lang.Throwable from label37 to label38 with label68;
        catch java.lang.Throwable from label38 to label39 with label68;
        catch java.lang.Throwable from label41 to label42 with label68;
        catch java.lang.Throwable from label44 to label45 with label68;
        catch java.lang.Throwable from label47 to label48 with label68;
        catch java.lang.Throwable from label50 to label51 with label68;
        catch java.lang.Throwable from label51 to label52 with label68;
        catch java.lang.Throwable from label52 to label53 with label68;
        catch java.lang.Throwable from label53 to label54 with label68;
        catch java.lang.Throwable from label54 to label55 with label68;
        catch java.lang.Throwable from label55 to label56 with label68;
        catch java.lang.Throwable from label56 to label57 with label68;
        catch java.lang.Throwable from label57 to label58 with label68;
        catch java.lang.Throwable from label58 to label59 with label68;
        catch java.lang.Throwable from label59 to label60 with label68;
        catch java.lang.Throwable from label60 to label61 with label68;
        catch java.lang.Throwable from label62 to label63 with label68;
        catch java.lang.Throwable from label65 to label66 with label68;
    }

    public java.util.List getInputsFromPrerequisites(java.lang.String)
    {
        java.lang.Throwable r8;
        androidx.room.RoomSQLiteQuery $r2;
        byte[] $r6;
        androidx.room.RoomDatabase r3;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.util.ArrayList r5;
        int $i0;
        java.lang.String $r1;
        androidx.work.Data $r7;
        android.database.Cursor $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = androidx.room.RoomSQLiteQuery.acquire("SELECT output FROM workspec WHERE id IN (SELECT prerequisite_id FROM dependency WHERE work_spec_id=?)", 1);

        if $r1 != null goto label01;

        virtualinvoke $r2.bindNull(1);

        goto label02;

     label01:
        virtualinvoke $r2.bindString(1, $r1);

     label02:
        r3 = r0.__db;

        virtualinvoke r3.assertNotSuspendingTransaction();

        r3 = r0.__db;

        $r4 = androidx.room.util.DBUtil.query(r3, $r2, 0, null);

     label03:
        r5 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r4.getCount();

        specialinvoke r5.<init>($i0);

     label04:
        $z0 = interfaceinvoke $r4.moveToNext();

     label05:
        if $z0 == 0 goto label08;

     label06:
        $r6 = interfaceinvoke $r4.getBlob(0);

        $r7 = androidx.work.Data.fromByteArray($r6);

        interfaceinvoke r5.add($r7);

     label07:
        goto label04;

     label08:
        interfaceinvoke $r4.close();

        virtualinvoke $r2.release();

        return r5;

     label09:
        r8 := @caughtexception;

        interfaceinvoke $r4.close();

        virtualinvoke $r2.release();

        goto label10;

     label10:
        throw r8;

        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
    }

    public java.util.List getRecentlyCompletedWork(long)
    {
        byte[] $r10;
        androidx.work.BackoffPolicy $r15;
        androidx.work.Constraints r8;
        androidx.work.OutOfQuotaPolicy $r16;
        androidx.work.Data $r14;
        boolean $z0;
        java.lang.Throwable r17;
        androidx.room.RoomSQLiteQuery $r1, r4;
        androidx.work.NetworkType $r9;
        long $l0;
        androidx.work.impl.model.WorkSpec r12;
        java.util.ArrayList r5;
        int i1, i2, i3, i4, $i5, i6, i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, $i16, $i17, $i18, i19, i20, $i21, i22, $i23, i24, i25, $i26, i27;
        java.lang.String $r6, $r7;
        android.database.Cursor $r3;
        androidx.room.RoomDatabase r2;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.ContentUriTriggers $r11;
        androidx.work.WorkInfo$State $r13;

        r0 := @this;

        $l0 := @parameter0;

        $r1 = androidx.room.RoomSQLiteQuery.acquire("SELECT `required_network_type`, `requires_charging`, `requires_device_idle`, `requires_battery_not_low`, `requires_storage_not_low`, `trigger_content_update_delay`, `trigger_max_content_delay`, `content_uri_triggers`, `WorkSpec`.`id` AS `id`, `WorkSpec`.`state` AS `state`, `WorkSpec`.`worker_class_name` AS `worker_class_name`, `WorkSpec`.`input_merger_class_name` AS `input_merger_class_name`, `WorkSpec`.`input` AS `input`, `WorkSpec`.`output` AS `output`, `WorkSpec`.`initial_delay` AS `initial_delay`, `WorkSpec`.`interval_duration` AS `interval_duration`, `WorkSpec`.`flex_duration` AS `flex_duration`, `WorkSpec`.`run_attempt_count` AS `run_attempt_count`, `WorkSpec`.`backoff_policy` AS `backoff_policy`, `WorkSpec`.`backoff_delay_duration` AS `backoff_delay_duration`, `WorkSpec`.`period_start_time` AS `period_start_time`, `WorkSpec`.`minimum_retention_duration` AS `minimum_retention_duration`, `WorkSpec`.`schedule_requested_at` AS `schedule_requested_at`, `WorkSpec`.`run_in_foreground` AS `run_in_foreground`, `WorkSpec`.`out_of_quota_policy` AS `out_of_quota_policy` FROM workspec WHERE period_start_time >= ? AND state IN (2, 3, 5) ORDER BY period_start_time DESC", 1);

        virtualinvoke $r1.bindLong(1, $l0);

        r2 = r0.__db;

        virtualinvoke r2.assertNotSuspendingTransaction();

        r2 = r0.__db;

        $r3 = androidx.room.util.DBUtil.query(r2, $r1, 0, null);

     label01:
        $i5 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "required_network_type");

     label02:
        i6 = $i5;

     label03:
        $i5 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_charging");

     label04:
        i7 = $i5;

     label05:
        $i5 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_device_idle");

        $i8 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_battery_not_low");

        $i9 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_storage_not_low");

        $i10 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "trigger_content_update_delay");

        $i11 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "trigger_max_content_delay");

        $i12 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "content_uri_triggers");

     label06:
        i2 = $i12;

     label07:
        $i12 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "id");

     label08:
        i1 = $i12;

     label09:
        $i12 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "state");

     label10:
        i3 = $i12;

     label11:
        $i12 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "worker_class_name");

     label12:
        i13 = $i12;

     label13:
        $i12 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "input_merger_class_name");

     label14:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "input");

     label15:
        i4 = $i14;

     label16:
        $i15 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "output");

     label17:
        r4 = $r1;

     label18:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "initial_delay");

     label19:
        $i16 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "interval_duration");

     label20:
        $i17 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "flex_duration");

     label21:
        $i18 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "run_attempt_count");

     label22:
        i19 = $i18;

     label23:
        $i18 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "backoff_policy");

     label24:
        i20 = $i18;

     label25:
        $i18 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "backoff_delay_duration");

     label26:
        $i21 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "period_start_time");

     label27:
        i22 = $i21;

     label28:
        $i21 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "minimum_retention_duration");

     label29:
        $i23 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "schedule_requested_at");

     label30:
        i24 = $i23;

     label31:
        $i23 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "run_in_foreground");

     label32:
        i25 = $i23;

     label33:
        $i23 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "out_of_quota_policy");

     label34:
        r5 = new java.util.ArrayList;

     label35:
        $i26 = interfaceinvoke $r3.getCount();

        specialinvoke r5.<init>($i26);

     label36:
        $z0 = interfaceinvoke $r3.moveToNext();

     label37:
        if $z0 == 0 goto label70;

     label38:
        $r6 = interfaceinvoke $r3.getString(i1);

        $r7 = interfaceinvoke $r3.getString(i13);

        r8 = new androidx.work.Constraints;

        specialinvoke r8.<init>();

        $i26 = interfaceinvoke $r3.getInt(i6);

        $r9 = androidx.work.impl.model.WorkTypeConverters.intToNetworkType($i26);

     label39:
        virtualinvoke r8.setRequiredNetworkType($r9);

        $i26 = interfaceinvoke $r3.getInt(i7);

     label40:
        if $i26 == 0 goto label41;

        $z0 = 1;

        goto label42;

     label41:
        $z0 = 0;

     label42:
        virtualinvoke r8.setRequiresCharging($z0);

        $i26 = interfaceinvoke $r3.getInt($i5);

     label43:
        if $i26 == 0 goto label44;

        $z0 = 1;

        goto label45;

     label44:
        $z0 = 0;

     label45:
        virtualinvoke r8.setRequiresDeviceIdle($z0);

        $i26 = interfaceinvoke $r3.getInt($i8);

     label46:
        if $i26 == 0 goto label47;

        $z0 = 1;

        goto label48;

     label47:
        $z0 = 0;

     label48:
        virtualinvoke r8.setRequiresBatteryNotLow($z0);

        $i26 = interfaceinvoke $r3.getInt($i9);

     label49:
        if $i26 == 0 goto label50;

        $z0 = 1;

        goto label51;

     label50:
        $z0 = 0;

     label51:
        virtualinvoke r8.setRequiresStorageNotLow($z0);

        $l0 = interfaceinvoke $r3.getLong($i10);

     label52:
        virtualinvoke r8.setTriggerContentUpdateDelay($l0);

        $l0 = interfaceinvoke $r3.getLong($i11);

        virtualinvoke r8.setTriggerMaxContentDelay($l0);

        $r10 = interfaceinvoke $r3.getBlob(i2);

        $r11 = androidx.work.impl.model.WorkTypeConverters.byteArrayToContentUriTriggers($r10);

        virtualinvoke r8.setContentUriTriggers($r11);

        r12 = new androidx.work.impl.model.WorkSpec;

     label53:
        specialinvoke r12.<init>($r6, $r7);

        $i26 = interfaceinvoke $r3.getInt(i3);

     label54:
        $r13 = androidx.work.impl.model.WorkTypeConverters.intToState($i26);

        r12.state = $r13;

        $r6 = interfaceinvoke $r3.getString($i12);

        r12.inputMergerClassName = $r6;

        $r10 = interfaceinvoke $r3.getBlob(i4);

        $r14 = androidx.work.Data.fromByteArray($r10);

        r12.input = $r14;

     label55:
        i27 = $i15;

     label56:
        $r10 = interfaceinvoke $r3.getBlob($i15);

        $r14 = androidx.work.Data.fromByteArray($r10);

        r12.output = $r14;

     label57:
        $l0 = interfaceinvoke $r3.getLong($i14);

        r12.initialDelay = $l0;

        $l0 = interfaceinvoke $r3.getLong($i16);

        r12.intervalDuration = $l0;

        $l0 = interfaceinvoke $r3.getLong($i17);

        r12.flexDuration = $l0;

        $i15 = interfaceinvoke $r3.getInt(i19);

        r12.runAttemptCount = $i15;

        $i15 = interfaceinvoke $r3.getInt(i20);

     label58:
        $r15 = androidx.work.impl.model.WorkTypeConverters.intToBackoffPolicy($i15);

        r12.backoffPolicy = $r15;

     label59:
        $l0 = interfaceinvoke $r3.getLong($i18);

        r12.backoffDelayDuration = $l0;

     label60:
        $l0 = interfaceinvoke $r3.getLong(i22);

        r12.periodStartTime = $l0;

     label61:
        $l0 = interfaceinvoke $r3.getLong($i21);

        r12.minimumRetentionDuration = $l0;

     label62:
        $i26 = i24;

     label63:
        $l0 = interfaceinvoke $r3.getLong(i24);

        r12.scheduleRequestedAt = $l0;

     label64:
        i24 = i25;

     label65:
        i25 = interfaceinvoke $r3.getInt(i25);

     label66:
        if i25 == 0 goto label67;

        $z0 = 1;

        goto label68;

     label67:
        $z0 = 0;

     label68:
        r12.expedited = $z0;

        i25 = interfaceinvoke $r3.getInt($i23);

        $r16 = androidx.work.impl.model.WorkTypeConverters.intToOutOfQuotaPolicy(i25);

        r12.outOfQuotaPolicy = $r16;

        r12.constraints = r8;

        interfaceinvoke r5.add(r12);

     label69:
        $i15 = i27;

        i25 = i24;

        i24 = $i26;

        goto label36;

     label70:
        interfaceinvoke $r3.close();

        virtualinvoke $r1.release();

        return r5;

     label71:
        r17 := @caughtexception;

        goto label75;

     label72:
        r17 := @caughtexception;

        r4 = $r1;

        goto label75;

     label73:
        r17 := @caughtexception;

        r4 = $r1;

        goto label75;

     label74:
        r17 := @caughtexception;

        r4 = $r1;

     label75:
        interfaceinvoke $r3.close();

        virtualinvoke r4.release();

        goto label76;

     label76:
        throw r17;

        catch java.lang.Throwable from label01 to label02 with label74;
        catch java.lang.Throwable from label03 to label04 with label74;
        catch java.lang.Throwable from label05 to label06 with label74;
        catch java.lang.Throwable from label07 to label08 with label74;
        catch java.lang.Throwable from label09 to label10 with label74;
        catch java.lang.Throwable from label11 to label12 with label73;
        catch java.lang.Throwable from label13 to label14 with label72;
        catch java.lang.Throwable from label14 to label15 with label72;
        catch java.lang.Throwable from label16 to label17 with label72;
        catch java.lang.Throwable from label18 to label19 with label71;
        catch java.lang.Throwable from label19 to label20 with label71;
        catch java.lang.Throwable from label20 to label21 with label71;
        catch java.lang.Throwable from label21 to label22 with label71;
        catch java.lang.Throwable from label23 to label24 with label71;
        catch java.lang.Throwable from label25 to label26 with label71;
        catch java.lang.Throwable from label26 to label27 with label71;
        catch java.lang.Throwable from label28 to label29 with label71;
        catch java.lang.Throwable from label29 to label30 with label71;
        catch java.lang.Throwable from label31 to label32 with label71;
        catch java.lang.Throwable from label33 to label34 with label71;
        catch java.lang.Throwable from label34 to label35 with label71;
        catch java.lang.Throwable from label35 to label37 with label71;
        catch java.lang.Throwable from label38 to label39 with label71;
        catch java.lang.Throwable from label39 to label40 with label71;
        catch java.lang.Throwable from label42 to label43 with label71;
        catch java.lang.Throwable from label45 to label46 with label71;
        catch java.lang.Throwable from label48 to label49 with label71;
        catch java.lang.Throwable from label51 to label52 with label71;
        catch java.lang.Throwable from label52 to label53 with label71;
        catch java.lang.Throwable from label53 to label54 with label71;
        catch java.lang.Throwable from label54 to label55 with label71;
        catch java.lang.Throwable from label56 to label57 with label71;
        catch java.lang.Throwable from label57 to label58 with label71;
        catch java.lang.Throwable from label58 to label59 with label71;
        catch java.lang.Throwable from label59 to label60 with label71;
        catch java.lang.Throwable from label60 to label61 with label71;
        catch java.lang.Throwable from label61 to label62 with label71;
        catch java.lang.Throwable from label63 to label64 with label71;
        catch java.lang.Throwable from label65 to label66 with label71;
        catch java.lang.Throwable from label68 to label69 with label71;
    }

    public java.util.List getRunningWork()
    {
        byte[] $r10;
        androidx.work.BackoffPolicy $r15;
        androidx.work.Constraints r8;
        androidx.work.OutOfQuotaPolicy $r16;
        androidx.work.Data $r14;
        boolean $z0;
        java.lang.Throwable r17;
        androidx.room.RoomSQLiteQuery $r1, r4;
        androidx.work.NetworkType $r9;
        long $l26;
        androidx.work.impl.model.WorkSpec r12;
        java.util.ArrayList r5;
        int i0, i1, i2, $i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, i12, $i13, $i14, i15, i16, $i17, i18, $i19, $i20, $i21, i22, i23, i24, $i25, i27;
        java.lang.String $r6, $r7;
        android.database.Cursor $r3;
        androidx.room.RoomDatabase r2;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.ContentUriTriggers $r11;
        androidx.work.WorkInfo$State $r13;

        r0 := @this;

        $r1 = androidx.room.RoomSQLiteQuery.acquire("SELECT `required_network_type`, `requires_charging`, `requires_device_idle`, `requires_battery_not_low`, `requires_storage_not_low`, `trigger_content_update_delay`, `trigger_max_content_delay`, `content_uri_triggers`, `WorkSpec`.`id` AS `id`, `WorkSpec`.`state` AS `state`, `WorkSpec`.`worker_class_name` AS `worker_class_name`, `WorkSpec`.`input_merger_class_name` AS `input_merger_class_name`, `WorkSpec`.`input` AS `input`, `WorkSpec`.`output` AS `output`, `WorkSpec`.`initial_delay` AS `initial_delay`, `WorkSpec`.`interval_duration` AS `interval_duration`, `WorkSpec`.`flex_duration` AS `flex_duration`, `WorkSpec`.`run_attempt_count` AS `run_attempt_count`, `WorkSpec`.`backoff_policy` AS `backoff_policy`, `WorkSpec`.`backoff_delay_duration` AS `backoff_delay_duration`, `WorkSpec`.`period_start_time` AS `period_start_time`, `WorkSpec`.`minimum_retention_duration` AS `minimum_retention_duration`, `WorkSpec`.`schedule_requested_at` AS `schedule_requested_at`, `WorkSpec`.`run_in_foreground` AS `run_in_foreground`, `WorkSpec`.`out_of_quota_policy` AS `out_of_quota_policy` FROM workspec WHERE state=1", 0);

        r2 = r0.__db;

        virtualinvoke r2.assertNotSuspendingTransaction();

        r2 = r0.__db;

        $r3 = androidx.room.util.DBUtil.query(r2, $r1, 0, null);

     label01:
        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "required_network_type");

     label02:
        i4 = $i3;

     label03:
        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_charging");

     label04:
        i5 = $i3;

     label05:
        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_device_idle");

     label06:
        i6 = $i3;

     label07:
        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_battery_not_low");

     label08:
        i7 = $i3;

     label09:
        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_storage_not_low");

     label10:
        i8 = $i3;

     label11:
        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "trigger_content_update_delay");

        $i9 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "trigger_max_content_delay");

        $i10 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "content_uri_triggers");

        $i11 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "id");

     label12:
        i12 = $i11;

     label13:
        $i11 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "state");

        $i13 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "worker_class_name");

        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "input_merger_class_name");

     label14:
        i15 = $i14;

     label15:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "input");

     label16:
        i0 = $i14;

     label17:
        i1 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "output");

     label18:
        r4 = $r1;

     label19:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "initial_delay");

     label20:
        i16 = $i14;

     label21:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "interval_duration");

     label22:
        $i17 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "flex_duration");

     label23:
        i18 = $i17;

     label24:
        $i17 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "run_attempt_count");

     label25:
        $i19 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "backoff_policy");

     label26:
        i2 = $i19;

     label27:
        $i19 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "backoff_delay_duration");

     label28:
        $i20 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "period_start_time");

     label29:
        $i21 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "minimum_retention_duration");

     label30:
        i22 = $i21;

     label31:
        $i21 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "schedule_requested_at");

     label32:
        i23 = $i21;

     label33:
        $i21 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "run_in_foreground");

     label34:
        i24 = $i21;

     label35:
        $i21 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "out_of_quota_policy");

     label36:
        r5 = new java.util.ArrayList;

     label37:
        $i25 = interfaceinvoke $r3.getCount();

        specialinvoke r5.<init>($i25);

     label38:
        $z0 = interfaceinvoke $r3.moveToNext();

     label39:
        if $z0 == 0 goto label72;

     label40:
        $r6 = interfaceinvoke $r3.getString(i12);

        $r7 = interfaceinvoke $r3.getString($i13);

        r8 = new androidx.work.Constraints;

        specialinvoke r8.<init>();

        $i25 = interfaceinvoke $r3.getInt(i4);

        $r9 = androidx.work.impl.model.WorkTypeConverters.intToNetworkType($i25);

     label41:
        virtualinvoke r8.setRequiredNetworkType($r9);

        $i25 = interfaceinvoke $r3.getInt(i5);

     label42:
        if $i25 == 0 goto label43;

        $z0 = 1;

        goto label44;

     label43:
        $z0 = 0;

     label44:
        virtualinvoke r8.setRequiresCharging($z0);

        $i25 = interfaceinvoke $r3.getInt(i6);

     label45:
        if $i25 == 0 goto label46;

        $z0 = 1;

        goto label47;

     label46:
        $z0 = 0;

     label47:
        virtualinvoke r8.setRequiresDeviceIdle($z0);

        $i25 = interfaceinvoke $r3.getInt(i7);

     label48:
        if $i25 == 0 goto label49;

        $z0 = 1;

        goto label50;

     label49:
        $z0 = 0;

     label50:
        virtualinvoke r8.setRequiresBatteryNotLow($z0);

        $i25 = interfaceinvoke $r3.getInt(i8);

     label51:
        if $i25 == 0 goto label52;

        $z0 = 1;

        goto label53;

     label52:
        $z0 = 0;

     label53:
        virtualinvoke r8.setRequiresStorageNotLow($z0);

        $l26 = interfaceinvoke $r3.getLong($i3);

     label54:
        virtualinvoke r8.setTriggerContentUpdateDelay($l26);

        $l26 = interfaceinvoke $r3.getLong($i9);

        virtualinvoke r8.setTriggerMaxContentDelay($l26);

        $r10 = interfaceinvoke $r3.getBlob($i10);

        $r11 = androidx.work.impl.model.WorkTypeConverters.byteArrayToContentUriTriggers($r10);

        virtualinvoke r8.setContentUriTriggers($r11);

        r12 = new androidx.work.impl.model.WorkSpec;

        specialinvoke r12.<init>($r6, $r7);

        $i25 = interfaceinvoke $r3.getInt($i11);

        $r13 = androidx.work.impl.model.WorkTypeConverters.intToState($i25);

        r12.state = $r13;

        $r6 = interfaceinvoke $r3.getString(i15);

        r12.inputMergerClassName = $r6;

        $r10 = interfaceinvoke $r3.getBlob(i0);

     label55:
        $r14 = androidx.work.Data.fromByteArray($r10);

        r12.input = $r14;

        $r10 = interfaceinvoke $r3.getBlob(i1);

     label56:
        $r14 = androidx.work.Data.fromByteArray($r10);

        r12.output = $r14;

     label57:
        $l26 = interfaceinvoke $r3.getLong(i16);

        r12.initialDelay = $l26;

     label58:
        $l26 = interfaceinvoke $r3.getLong($i14);

        r12.intervalDuration = $l26;

     label59:
        $l26 = interfaceinvoke $r3.getLong(i18);

        r12.flexDuration = $l26;

        $i25 = interfaceinvoke $r3.getInt($i17);

        r12.runAttemptCount = $i25;

        $i25 = interfaceinvoke $r3.getInt(i2);

     label60:
        $r15 = androidx.work.impl.model.WorkTypeConverters.intToBackoffPolicy($i25);

        r12.backoffPolicy = $r15;

     label61:
        $l26 = interfaceinvoke $r3.getLong($i19);

        r12.backoffDelayDuration = $l26;

     label62:
        $l26 = interfaceinvoke $r3.getLong($i20);

        r12.periodStartTime = $l26;

     label63:
        $l26 = interfaceinvoke $r3.getLong(i22);

        r12.minimumRetentionDuration = $l26;

     label64:
        $i25 = i23;

     label65:
        $l26 = interfaceinvoke $r3.getLong(i23);

        r12.scheduleRequestedAt = $l26;

     label66:
        i27 = i24;

     label67:
        i23 = interfaceinvoke $r3.getInt(i24);

     label68:
        if i23 == 0 goto label69;

        $z0 = 1;

        goto label70;

     label69:
        $z0 = 0;

     label70:
        r12.expedited = $z0;

        i23 = interfaceinvoke $r3.getInt($i21);

        $r16 = androidx.work.impl.model.WorkTypeConverters.intToOutOfQuotaPolicy(i23);

        r12.outOfQuotaPolicy = $r16;

        r12.constraints = r8;

        interfaceinvoke r5.add(r12);

     label71:
        i23 = $i25;

        i24 = i27;

        goto label38;

     label72:
        interfaceinvoke $r3.close();

        virtualinvoke $r1.release();

        return r5;

     label73:
        r17 := @caughtexception;

        goto label76;

     label74:
        r17 := @caughtexception;

        r4 = $r1;

        goto label76;

     label75:
        r17 := @caughtexception;

        r4 = $r1;

     label76:
        interfaceinvoke $r3.close();

        virtualinvoke r4.release();

        goto label77;

     label77:
        throw r17;

        catch java.lang.Throwable from label01 to label02 with label75;
        catch java.lang.Throwable from label03 to label04 with label75;
        catch java.lang.Throwable from label05 to label06 with label75;
        catch java.lang.Throwable from label07 to label08 with label75;
        catch java.lang.Throwable from label09 to label10 with label75;
        catch java.lang.Throwable from label11 to label12 with label75;
        catch java.lang.Throwable from label13 to label14 with label75;
        catch java.lang.Throwable from label15 to label16 with label75;
        catch java.lang.Throwable from label17 to label18 with label74;
        catch java.lang.Throwable from label19 to label20 with label73;
        catch java.lang.Throwable from label21 to label22 with label73;
        catch java.lang.Throwable from label22 to label23 with label73;
        catch java.lang.Throwable from label24 to label25 with label73;
        catch java.lang.Throwable from label25 to label26 with label73;
        catch java.lang.Throwable from label27 to label28 with label73;
        catch java.lang.Throwable from label28 to label29 with label73;
        catch java.lang.Throwable from label29 to label30 with label73;
        catch java.lang.Throwable from label31 to label32 with label73;
        catch java.lang.Throwable from label33 to label34 with label73;
        catch java.lang.Throwable from label35 to label36 with label73;
        catch java.lang.Throwable from label36 to label37 with label73;
        catch java.lang.Throwable from label37 to label39 with label73;
        catch java.lang.Throwable from label40 to label41 with label73;
        catch java.lang.Throwable from label41 to label42 with label73;
        catch java.lang.Throwable from label44 to label45 with label73;
        catch java.lang.Throwable from label47 to label48 with label73;
        catch java.lang.Throwable from label50 to label51 with label73;
        catch java.lang.Throwable from label53 to label54 with label73;
        catch java.lang.Throwable from label54 to label55 with label73;
        catch java.lang.Throwable from label55 to label56 with label73;
        catch java.lang.Throwable from label56 to label57 with label73;
        catch java.lang.Throwable from label57 to label58 with label73;
        catch java.lang.Throwable from label58 to label59 with label73;
        catch java.lang.Throwable from label59 to label60 with label73;
        catch java.lang.Throwable from label60 to label61 with label73;
        catch java.lang.Throwable from label61 to label62 with label73;
        catch java.lang.Throwable from label62 to label63 with label73;
        catch java.lang.Throwable from label63 to label64 with label73;
        catch java.lang.Throwable from label65 to label66 with label73;
        catch java.lang.Throwable from label67 to label68 with label73;
        catch java.lang.Throwable from label70 to label71 with label73;
    }

    public androidx.lifecycle.LiveData getScheduleRequestedAtLiveData(java.lang.String)
    {
        androidx.room.InvalidationTracker $r5;
        androidx.room.RoomSQLiteQuery $r3;
        androidx.lifecycle.LiveData $r7;
        androidx.room.RoomDatabase $r4;
        java.lang.String[] $r6;
        androidx.work.impl.model.WorkSpecDao_Impl$14 $r2;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r3 = androidx.room.RoomSQLiteQuery.acquire("SELECT schedule_requested_at FROM workspec WHERE id=?", 1);

        if $r1 != null goto label1;

        virtualinvoke $r3.bindNull(1);

        goto label2;

     label1:
        virtualinvoke $r3.bindString(1, $r1);

     label2:
        $r4 = r0.__db;

        $r5 = virtualinvoke $r4.getInvalidationTracker();

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "workspec";

        $r2 = new androidx.work.impl.model.WorkSpecDao_Impl$14;

        specialinvoke $r2.<init>(r0, $r3);

        $r7 = virtualinvoke $r5.createLiveData($r6, 0, $r2);

        return $r7;
    }

    public java.util.List getScheduledWork()
    {
        byte[] $r10;
        androidx.work.BackoffPolicy $r15;
        androidx.work.Constraints r8;
        androidx.work.OutOfQuotaPolicy $r16;
        androidx.work.Data $r14;
        boolean $z0;
        java.lang.Throwable r17;
        androidx.room.RoomSQLiteQuery $r1, r4;
        androidx.work.NetworkType $r9;
        long $l26;
        androidx.work.impl.model.WorkSpec r12;
        java.util.ArrayList r5;
        int i0, i1, i2, $i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, i12, $i13, $i14, i15, i16, $i17, i18, $i19, $i20, $i21, i22, i23, i24, $i25, i27;
        java.lang.String $r6, $r7;
        android.database.Cursor $r3;
        androidx.room.RoomDatabase r2;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.ContentUriTriggers $r11;
        androidx.work.WorkInfo$State $r13;

        r0 := @this;

        $r1 = androidx.room.RoomSQLiteQuery.acquire("SELECT `required_network_type`, `requires_charging`, `requires_device_idle`, `requires_battery_not_low`, `requires_storage_not_low`, `trigger_content_update_delay`, `trigger_max_content_delay`, `content_uri_triggers`, `WorkSpec`.`id` AS `id`, `WorkSpec`.`state` AS `state`, `WorkSpec`.`worker_class_name` AS `worker_class_name`, `WorkSpec`.`input_merger_class_name` AS `input_merger_class_name`, `WorkSpec`.`input` AS `input`, `WorkSpec`.`output` AS `output`, `WorkSpec`.`initial_delay` AS `initial_delay`, `WorkSpec`.`interval_duration` AS `interval_duration`, `WorkSpec`.`flex_duration` AS `flex_duration`, `WorkSpec`.`run_attempt_count` AS `run_attempt_count`, `WorkSpec`.`backoff_policy` AS `backoff_policy`, `WorkSpec`.`backoff_delay_duration` AS `backoff_delay_duration`, `WorkSpec`.`period_start_time` AS `period_start_time`, `WorkSpec`.`minimum_retention_duration` AS `minimum_retention_duration`, `WorkSpec`.`schedule_requested_at` AS `schedule_requested_at`, `WorkSpec`.`run_in_foreground` AS `run_in_foreground`, `WorkSpec`.`out_of_quota_policy` AS `out_of_quota_policy` FROM workspec WHERE state=0 AND schedule_requested_at<>-1", 0);

        r2 = r0.__db;

        virtualinvoke r2.assertNotSuspendingTransaction();

        r2 = r0.__db;

        $r3 = androidx.room.util.DBUtil.query(r2, $r1, 0, null);

     label01:
        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "required_network_type");

     label02:
        i4 = $i3;

     label03:
        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_charging");

     label04:
        i5 = $i3;

     label05:
        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_device_idle");

     label06:
        i6 = $i3;

     label07:
        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_battery_not_low");

     label08:
        i7 = $i3;

     label09:
        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "requires_storage_not_low");

     label10:
        i8 = $i3;

     label11:
        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "trigger_content_update_delay");

        $i9 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "trigger_max_content_delay");

        $i10 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "content_uri_triggers");

        $i11 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "id");

     label12:
        i12 = $i11;

     label13:
        $i11 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "state");

        $i13 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "worker_class_name");

        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "input_merger_class_name");

     label14:
        i15 = $i14;

     label15:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "input");

     label16:
        i0 = $i14;

     label17:
        i1 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "output");

     label18:
        r4 = $r1;

     label19:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "initial_delay");

     label20:
        i16 = $i14;

     label21:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "interval_duration");

     label22:
        $i17 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "flex_duration");

     label23:
        i18 = $i17;

     label24:
        $i17 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "run_attempt_count");

     label25:
        $i19 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "backoff_policy");

     label26:
        i2 = $i19;

     label27:
        $i19 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "backoff_delay_duration");

     label28:
        $i20 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "period_start_time");

     label29:
        $i21 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "minimum_retention_duration");

     label30:
        i22 = $i21;

     label31:
        $i21 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "schedule_requested_at");

     label32:
        i23 = $i21;

     label33:
        $i21 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "run_in_foreground");

     label34:
        i24 = $i21;

     label35:
        $i21 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r3, "out_of_quota_policy");

     label36:
        r5 = new java.util.ArrayList;

     label37:
        $i25 = interfaceinvoke $r3.getCount();

        specialinvoke r5.<init>($i25);

     label38:
        $z0 = interfaceinvoke $r3.moveToNext();

     label39:
        if $z0 == 0 goto label72;

     label40:
        $r6 = interfaceinvoke $r3.getString(i12);

        $r7 = interfaceinvoke $r3.getString($i13);

        r8 = new androidx.work.Constraints;

        specialinvoke r8.<init>();

        $i25 = interfaceinvoke $r3.getInt(i4);

        $r9 = androidx.work.impl.model.WorkTypeConverters.intToNetworkType($i25);

     label41:
        virtualinvoke r8.setRequiredNetworkType($r9);

        $i25 = interfaceinvoke $r3.getInt(i5);

     label42:
        if $i25 == 0 goto label43;

        $z0 = 1;

        goto label44;

     label43:
        $z0 = 0;

     label44:
        virtualinvoke r8.setRequiresCharging($z0);

        $i25 = interfaceinvoke $r3.getInt(i6);

     label45:
        if $i25 == 0 goto label46;

        $z0 = 1;

        goto label47;

     label46:
        $z0 = 0;

     label47:
        virtualinvoke r8.setRequiresDeviceIdle($z0);

        $i25 = interfaceinvoke $r3.getInt(i7);

     label48:
        if $i25 == 0 goto label49;

        $z0 = 1;

        goto label50;

     label49:
        $z0 = 0;

     label50:
        virtualinvoke r8.setRequiresBatteryNotLow($z0);

        $i25 = interfaceinvoke $r3.getInt(i8);

     label51:
        if $i25 == 0 goto label52;

        $z0 = 1;

        goto label53;

     label52:
        $z0 = 0;

     label53:
        virtualinvoke r8.setRequiresStorageNotLow($z0);

        $l26 = interfaceinvoke $r3.getLong($i3);

     label54:
        virtualinvoke r8.setTriggerContentUpdateDelay($l26);

        $l26 = interfaceinvoke $r3.getLong($i9);

        virtualinvoke r8.setTriggerMaxContentDelay($l26);

        $r10 = interfaceinvoke $r3.getBlob($i10);

        $r11 = androidx.work.impl.model.WorkTypeConverters.byteArrayToContentUriTriggers($r10);

        virtualinvoke r8.setContentUriTriggers($r11);

        r12 = new androidx.work.impl.model.WorkSpec;

        specialinvoke r12.<init>($r6, $r7);

        $i25 = interfaceinvoke $r3.getInt($i11);

        $r13 = androidx.work.impl.model.WorkTypeConverters.intToState($i25);

        r12.state = $r13;

        $r6 = interfaceinvoke $r3.getString(i15);

        r12.inputMergerClassName = $r6;

        $r10 = interfaceinvoke $r3.getBlob(i0);

     label55:
        $r14 = androidx.work.Data.fromByteArray($r10);

        r12.input = $r14;

        $r10 = interfaceinvoke $r3.getBlob(i1);

     label56:
        $r14 = androidx.work.Data.fromByteArray($r10);

        r12.output = $r14;

     label57:
        $l26 = interfaceinvoke $r3.getLong(i16);

        r12.initialDelay = $l26;

     label58:
        $l26 = interfaceinvoke $r3.getLong($i14);

        r12.intervalDuration = $l26;

     label59:
        $l26 = interfaceinvoke $r3.getLong(i18);

        r12.flexDuration = $l26;

        $i25 = interfaceinvoke $r3.getInt($i17);

        r12.runAttemptCount = $i25;

        $i25 = interfaceinvoke $r3.getInt(i2);

     label60:
        $r15 = androidx.work.impl.model.WorkTypeConverters.intToBackoffPolicy($i25);

        r12.backoffPolicy = $r15;

     label61:
        $l26 = interfaceinvoke $r3.getLong($i19);

        r12.backoffDelayDuration = $l26;

     label62:
        $l26 = interfaceinvoke $r3.getLong($i20);

        r12.periodStartTime = $l26;

     label63:
        $l26 = interfaceinvoke $r3.getLong(i22);

        r12.minimumRetentionDuration = $l26;

     label64:
        $i25 = i23;

     label65:
        $l26 = interfaceinvoke $r3.getLong(i23);

        r12.scheduleRequestedAt = $l26;

     label66:
        i27 = i24;

     label67:
        i23 = interfaceinvoke $r3.getInt(i24);

     label68:
        if i23 == 0 goto label69;

        $z0 = 1;

        goto label70;

     label69:
        $z0 = 0;

     label70:
        r12.expedited = $z0;

        i23 = interfaceinvoke $r3.getInt($i21);

        $r16 = androidx.work.impl.model.WorkTypeConverters.intToOutOfQuotaPolicy(i23);

        r12.outOfQuotaPolicy = $r16;

        r12.constraints = r8;

        interfaceinvoke r5.add(r12);

     label71:
        i23 = $i25;

        i24 = i27;

        goto label38;

     label72:
        interfaceinvoke $r3.close();

        virtualinvoke $r1.release();

        return r5;

     label73:
        r17 := @caughtexception;

        goto label76;

     label74:
        r17 := @caughtexception;

        r4 = $r1;

        goto label76;

     label75:
        r17 := @caughtexception;

        r4 = $r1;

     label76:
        interfaceinvoke $r3.close();

        virtualinvoke r4.release();

        goto label77;

     label77:
        throw r17;

        catch java.lang.Throwable from label01 to label02 with label75;
        catch java.lang.Throwable from label03 to label04 with label75;
        catch java.lang.Throwable from label05 to label06 with label75;
        catch java.lang.Throwable from label07 to label08 with label75;
        catch java.lang.Throwable from label09 to label10 with label75;
        catch java.lang.Throwable from label11 to label12 with label75;
        catch java.lang.Throwable from label13 to label14 with label75;
        catch java.lang.Throwable from label15 to label16 with label75;
        catch java.lang.Throwable from label17 to label18 with label74;
        catch java.lang.Throwable from label19 to label20 with label73;
        catch java.lang.Throwable from label21 to label22 with label73;
        catch java.lang.Throwable from label22 to label23 with label73;
        catch java.lang.Throwable from label24 to label25 with label73;
        catch java.lang.Throwable from label25 to label26 with label73;
        catch java.lang.Throwable from label27 to label28 with label73;
        catch java.lang.Throwable from label28 to label29 with label73;
        catch java.lang.Throwable from label29 to label30 with label73;
        catch java.lang.Throwable from label31 to label32 with label73;
        catch java.lang.Throwable from label33 to label34 with label73;
        catch java.lang.Throwable from label35 to label36 with label73;
        catch java.lang.Throwable from label36 to label37 with label73;
        catch java.lang.Throwable from label37 to label39 with label73;
        catch java.lang.Throwable from label40 to label41 with label73;
        catch java.lang.Throwable from label41 to label42 with label73;
        catch java.lang.Throwable from label44 to label45 with label73;
        catch java.lang.Throwable from label47 to label48 with label73;
        catch java.lang.Throwable from label50 to label51 with label73;
        catch java.lang.Throwable from label53 to label54 with label73;
        catch java.lang.Throwable from label54 to label55 with label73;
        catch java.lang.Throwable from label55 to label56 with label73;
        catch java.lang.Throwable from label56 to label57 with label73;
        catch java.lang.Throwable from label57 to label58 with label73;
        catch java.lang.Throwable from label58 to label59 with label73;
        catch java.lang.Throwable from label59 to label60 with label73;
        catch java.lang.Throwable from label60 to label61 with label73;
        catch java.lang.Throwable from label61 to label62 with label73;
        catch java.lang.Throwable from label62 to label63 with label73;
        catch java.lang.Throwable from label63 to label64 with label73;
        catch java.lang.Throwable from label65 to label66 with label73;
        catch java.lang.Throwable from label67 to label68 with label73;
        catch java.lang.Throwable from label70 to label71 with label73;
    }

    public androidx.work.WorkInfo$State getState(java.lang.String)
    {
        java.lang.Throwable r6;
        androidx.room.RoomSQLiteQuery $r2;
        androidx.room.RoomDatabase r3;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.WorkInfo$State $r5;
        int $i0;
        java.lang.String $r1;
        android.database.Cursor $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = androidx.room.RoomSQLiteQuery.acquire("SELECT state FROM workspec WHERE id=?", 1);

        if $r1 != null goto label1;

        virtualinvoke $r2.bindNull(1);

        goto label2;

     label1:
        virtualinvoke $r2.bindString(1, $r1);

     label2:
        r3 = r0.__db;

        virtualinvoke r3.assertNotSuspendingTransaction();

        r3 = r0.__db;

        $r4 = androidx.room.util.DBUtil.query(r3, $r2, 0, null);

     label3:
        $z0 = interfaceinvoke $r4.moveToFirst();

     label4:
        if $z0 == 0 goto label7;

     label5:
        $i0 = interfaceinvoke $r4.getInt(0);

        $r5 = androidx.work.impl.model.WorkTypeConverters.intToState($i0);

     label6:
        goto label8;

     label7:
        $r5 = null;

     label8:
        interfaceinvoke $r4.close();

        virtualinvoke $r2.release();

        return $r5;

     label9:
        r6 := @caughtexception;

        interfaceinvoke $r4.close();

        virtualinvoke $r2.release();

        throw r6;

        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
    }

    public java.util.List getUnfinishedWorkWithName(java.lang.String)
    {
        java.lang.Throwable r6;
        androidx.room.RoomSQLiteQuery $r2;
        androidx.room.RoomDatabase r3;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.util.ArrayList r5;
        int $i0;
        java.lang.String $r1;
        android.database.Cursor $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = androidx.room.RoomSQLiteQuery.acquire("SELECT id FROM workspec WHERE state NOT IN (2, 3, 5) AND id IN (SELECT work_spec_id FROM workname WHERE name=?)", 1);

        if $r1 != null goto label01;

        virtualinvoke $r2.bindNull(1);

        goto label02;

     label01:
        virtualinvoke $r2.bindString(1, $r1);

     label02:
        r3 = r0.__db;

        virtualinvoke r3.assertNotSuspendingTransaction();

        r3 = r0.__db;

        $r4 = androidx.room.util.DBUtil.query(r3, $r2, 0, null);

     label03:
        r5 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r4.getCount();

        specialinvoke r5.<init>($i0);

     label04:
        $z0 = interfaceinvoke $r4.moveToNext();

     label05:
        if $z0 == 0 goto label08;

     label06:
        $r1 = interfaceinvoke $r4.getString(0);

        interfaceinvoke r5.add($r1);

     label07:
        goto label04;

     label08:
        interfaceinvoke $r4.close();

        virtualinvoke $r2.release();

        return r5;

     label09:
        r6 := @caughtexception;

        interfaceinvoke $r4.close();

        virtualinvoke $r2.release();

        goto label10;

     label10:
        throw r6;

        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
    }

    public java.util.List getUnfinishedWorkWithTag(java.lang.String)
    {
        java.lang.Throwable r6;
        androidx.room.RoomSQLiteQuery $r2;
        androidx.room.RoomDatabase r3;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.util.ArrayList r5;
        int $i0;
        java.lang.String $r1;
        android.database.Cursor $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = androidx.room.RoomSQLiteQuery.acquire("SELECT id FROM workspec WHERE state NOT IN (2, 3, 5) AND id IN (SELECT work_spec_id FROM worktag WHERE tag=?)", 1);

        if $r1 != null goto label01;

        virtualinvoke $r2.bindNull(1);

        goto label02;

     label01:
        virtualinvoke $r2.bindString(1, $r1);

     label02:
        r3 = r0.__db;

        virtualinvoke r3.assertNotSuspendingTransaction();

        r3 = r0.__db;

        $r4 = androidx.room.util.DBUtil.query(r3, $r2, 0, null);

     label03:
        r5 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r4.getCount();

        specialinvoke r5.<init>($i0);

     label04:
        $z0 = interfaceinvoke $r4.moveToNext();

     label05:
        if $z0 == 0 goto label08;

     label06:
        $r1 = interfaceinvoke $r4.getString(0);

        interfaceinvoke r5.add($r1);

     label07:
        goto label04;

     label08:
        interfaceinvoke $r4.close();

        virtualinvoke $r2.release();

        return r5;

     label09:
        r6 := @caughtexception;

        interfaceinvoke $r4.close();

        virtualinvoke $r2.release();

        goto label10;

     label10:
        throw r6;

        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
    }

    public androidx.work.impl.model.WorkSpec getWorkSpec(java.lang.String)
    {
        byte[] $r9;
        androidx.work.BackoffPolicy $r14;
        androidx.work.Constraints r7;
        androidx.work.OutOfQuotaPolicy $r15;
        androidx.work.Data $r13;
        boolean $z0;
        java.lang.Throwable r16;
        androidx.room.RoomSQLiteQuery $r2, r5;
        androidx.work.NetworkType $r8;
        long $l25;
        androidx.work.impl.model.WorkSpec r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        java.lang.String $r1, $r6;
        android.database.Cursor $r4;
        androidx.room.RoomDatabase r3;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.ContentUriTriggers $r10;
        androidx.work.WorkInfo$State $r12;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = androidx.room.RoomSQLiteQuery.acquire("SELECT `required_network_type`, `requires_charging`, `requires_device_idle`, `requires_battery_not_low`, `requires_storage_not_low`, `trigger_content_update_delay`, `trigger_max_content_delay`, `content_uri_triggers`, `WorkSpec`.`id` AS `id`, `WorkSpec`.`state` AS `state`, `WorkSpec`.`worker_class_name` AS `worker_class_name`, `WorkSpec`.`input_merger_class_name` AS `input_merger_class_name`, `WorkSpec`.`input` AS `input`, `WorkSpec`.`output` AS `output`, `WorkSpec`.`initial_delay` AS `initial_delay`, `WorkSpec`.`interval_duration` AS `interval_duration`, `WorkSpec`.`flex_duration` AS `flex_duration`, `WorkSpec`.`run_attempt_count` AS `run_attempt_count`, `WorkSpec`.`backoff_policy` AS `backoff_policy`, `WorkSpec`.`backoff_delay_duration` AS `backoff_delay_duration`, `WorkSpec`.`period_start_time` AS `period_start_time`, `WorkSpec`.`minimum_retention_duration` AS `minimum_retention_duration`, `WorkSpec`.`schedule_requested_at` AS `schedule_requested_at`, `WorkSpec`.`run_in_foreground` AS `run_in_foreground`, `WorkSpec`.`out_of_quota_policy` AS `out_of_quota_policy` FROM workspec WHERE id=?", 1);

        if $r1 != null goto label01;

        virtualinvoke $r2.bindNull(1);

        goto label02;

     label01:
        virtualinvoke $r2.bindString(1, $r1);

     label02:
        r3 = r0.__db;

        virtualinvoke r3.assertNotSuspendingTransaction();

        r3 = r0.__db;

        $r4 = androidx.room.util.DBUtil.query(r3, $r2, 0, null);

     label03:
        $i0 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "required_network_type");

        $i1 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "requires_charging");

        $i2 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "requires_device_idle");

        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "requires_battery_not_low");

        $i4 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "requires_storage_not_low");

        $i5 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "trigger_content_update_delay");

        $i6 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "trigger_max_content_delay");

        $i7 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "content_uri_triggers");

        $i8 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "id");

        $i9 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "state");

        $i10 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "worker_class_name");

        $i11 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "input_merger_class_name");

     label04:
        $i12 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "input");

     label05:
        $i13 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "output");

     label06:
        r5 = $r2;

     label07:
        $i14 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "initial_delay");

        $i15 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "interval_duration");

        $i16 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "flex_duration");

        $i17 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "run_attempt_count");

        $i18 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "backoff_policy");

        $i19 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "backoff_delay_duration");

        $i20 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "period_start_time");

        $i21 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "minimum_retention_duration");

        $i22 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "schedule_requested_at");

        $i23 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "run_in_foreground");

        $i24 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r4, "out_of_quota_policy");

        $z0 = interfaceinvoke $r4.moveToFirst();

     label08:
        if $z0 == 0 goto label26;

     label09:
        $r1 = interfaceinvoke $r4.getString($i8);

        $r6 = interfaceinvoke $r4.getString($i10);

        r7 = new androidx.work.Constraints;

        specialinvoke r7.<init>();

        $i0 = interfaceinvoke $r4.getInt($i0);

        $r8 = androidx.work.impl.model.WorkTypeConverters.intToNetworkType($i0);

        virtualinvoke r7.setRequiredNetworkType($r8);

        $i1 = interfaceinvoke $r4.getInt($i1);

     label10:
        if $i1 == 0 goto label11;

        $z0 = 1;

        goto label12;

     label11:
        $z0 = 0;

     label12:
        virtualinvoke r7.setRequiresCharging($z0);

        $i2 = interfaceinvoke $r4.getInt($i2);

     label13:
        if $i2 == 0 goto label14;

        $z0 = 1;

        goto label15;

     label14:
        $z0 = 0;

     label15:
        virtualinvoke r7.setRequiresDeviceIdle($z0);

        $i3 = interfaceinvoke $r4.getInt($i3);

     label16:
        if $i3 == 0 goto label17;

        $z0 = 1;

        goto label18;

     label17:
        $z0 = 0;

     label18:
        virtualinvoke r7.setRequiresBatteryNotLow($z0);

        $i4 = interfaceinvoke $r4.getInt($i4);

     label19:
        if $i4 == 0 goto label20;

        $z0 = 1;

        goto label21;

     label20:
        $z0 = 0;

     label21:
        virtualinvoke r7.setRequiresStorageNotLow($z0);

        $l25 = interfaceinvoke $r4.getLong($i5);

        virtualinvoke r7.setTriggerContentUpdateDelay($l25);

        $l25 = interfaceinvoke $r4.getLong($i6);

        virtualinvoke r7.setTriggerMaxContentDelay($l25);

        $r9 = interfaceinvoke $r4.getBlob($i7);

        $r10 = androidx.work.impl.model.WorkTypeConverters.byteArrayToContentUriTriggers($r9);

        virtualinvoke r7.setContentUriTriggers($r10);

        r11 = new androidx.work.impl.model.WorkSpec;

        specialinvoke r11.<init>($r1, $r6);

        $i5 = interfaceinvoke $r4.getInt($i9);

        $r12 = androidx.work.impl.model.WorkTypeConverters.intToState($i5);

        r11.state = $r12;

        $r1 = interfaceinvoke $r4.getString($i11);

        r11.inputMergerClassName = $r1;

        $r9 = interfaceinvoke $r4.getBlob($i12);

        $r13 = androidx.work.Data.fromByteArray($r9);

        r11.input = $r13;

        $r9 = interfaceinvoke $r4.getBlob($i13);

        $r13 = androidx.work.Data.fromByteArray($r9);

        r11.output = $r13;

        $l25 = interfaceinvoke $r4.getLong($i14);

        r11.initialDelay = $l25;

        $l25 = interfaceinvoke $r4.getLong($i15);

        r11.intervalDuration = $l25;

        $l25 = interfaceinvoke $r4.getLong($i16);

        r11.flexDuration = $l25;

        $i11 = interfaceinvoke $r4.getInt($i17);

        r11.runAttemptCount = $i11;

        $i18 = interfaceinvoke $r4.getInt($i18);

        $r14 = androidx.work.impl.model.WorkTypeConverters.intToBackoffPolicy($i18);

        r11.backoffPolicy = $r14;

        $l25 = interfaceinvoke $r4.getLong($i19);

        r11.backoffDelayDuration = $l25;

        $l25 = interfaceinvoke $r4.getLong($i20);

        r11.periodStartTime = $l25;

        $l25 = interfaceinvoke $r4.getLong($i21);

        r11.minimumRetentionDuration = $l25;

        $l25 = interfaceinvoke $r4.getLong($i22);

        r11.scheduleRequestedAt = $l25;

        $i19 = interfaceinvoke $r4.getInt($i23);

     label22:
        if $i19 == 0 goto label23;

        $z0 = 1;

        goto label24;

     label23:
        $z0 = 0;

     label24:
        r11.expedited = $z0;

        $i24 = interfaceinvoke $r4.getInt($i24);

        $r15 = androidx.work.impl.model.WorkTypeConverters.intToOutOfQuotaPolicy($i24);

        r11.outOfQuotaPolicy = $r15;

        r11.constraints = r7;

     label25:
        goto label27;

     label26:
        r11 = null;

     label27:
        interfaceinvoke $r4.close();

        virtualinvoke $r2.release();

        return r11;

     label28:
        r16 := @caughtexception;

        goto label32;

     label29:
        r16 := @caughtexception;

        r5 = $r2;

        goto label32;

     label30:
        r16 := @caughtexception;

        r5 = $r2;

        goto label32;

     label31:
        r16 := @caughtexception;

        r5 = $r2;

     label32:
        interfaceinvoke $r4.close();

        virtualinvoke r5.release();

        throw r16;

        catch java.lang.Throwable from label03 to label04 with label31;
        catch java.lang.Throwable from label04 to label05 with label30;
        catch java.lang.Throwable from label05 to label06 with label29;
        catch java.lang.Throwable from label07 to label08 with label28;
        catch java.lang.Throwable from label09 to label10 with label28;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Throwable from label15 to label16 with label28;
        catch java.lang.Throwable from label18 to label19 with label28;
        catch java.lang.Throwable from label21 to label22 with label28;
        catch java.lang.Throwable from label24 to label25 with label28;
    }

    public java.util.List getWorkSpecIdAndStatesForName(java.lang.String)
    {
        java.lang.Throwable r8;
        androidx.room.RoomSQLiteQuery $r3;
        androidx.room.RoomDatabase r4;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.util.ArrayList r2;
        androidx.work.WorkInfo$State $r7;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        androidx.work.impl.model.WorkSpec$IdAndState r6;
        android.database.Cursor $r5;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r3 = androidx.room.RoomSQLiteQuery.acquire("SELECT id, state FROM workspec WHERE id IN (SELECT work_spec_id FROM workname WHERE name=?)", 1);

        if $r1 != null goto label01;

        virtualinvoke $r3.bindNull(1);

        goto label02;

     label01:
        virtualinvoke $r3.bindString(1, $r1);

     label02:
        r4 = r0.__db;

        virtualinvoke r4.assertNotSuspendingTransaction();

        r4 = r0.__db;

        $r5 = androidx.room.util.DBUtil.query(r4, $r3, 0, null);

     label03:
        $i0 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r5, "id");

        $i1 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r5, "state");

        r2 = new java.util.ArrayList;

        $i2 = interfaceinvoke $r5.getCount();

        specialinvoke r2.<init>($i2);

     label04:
        $z0 = interfaceinvoke $r5.moveToNext();

     label05:
        if $z0 == 0 goto label08;

     label06:
        r6 = new androidx.work.impl.model.WorkSpec$IdAndState;

        specialinvoke r6.<init>();

        $r1 = interfaceinvoke $r5.getString($i0);

        r6.id = $r1;

        $i2 = interfaceinvoke $r5.getInt($i1);

        $r7 = androidx.work.impl.model.WorkTypeConverters.intToState($i2);

        r6.state = $r7;

        interfaceinvoke r2.add(r6);

     label07:
        goto label04;

     label08:
        interfaceinvoke $r5.close();

        virtualinvoke $r3.release();

        return r2;

     label09:
        r8 := @caughtexception;

        interfaceinvoke $r5.close();

        virtualinvoke $r3.release();

        goto label10;

     label10:
        throw r8;

        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
    }

    public androidx.work.impl.model.WorkSpec[] getWorkSpecs(java.util.List)
    {
        byte[] $r14;
        androidx.work.BackoffPolicy $r19;
        androidx.work.Constraints r12;
        androidx.work.OutOfQuotaPolicy $r20;
        androidx.work.Data $r18;
        boolean $z0;
        java.util.List r1;
        java.lang.StringBuilder $r2;
        androidx.work.impl.model.WorkSpec[] r10;
        java.lang.Throwable r21;
        androidx.room.RoomSQLiteQuery $r4, r9;
        androidx.work.NetworkType $r13;
        long $l27;
        androidx.work.impl.model.WorkSpec r16;
        int i0, i1, i2, i3, $i4, i5, i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14, $i15, $i16, i17, i18, $i19, i20, $i21, $i22, $i23, i24, $i25, $i26;
        java.lang.String $r3, $r11;
        android.database.Cursor $r8;
        java.util.Iterator $r5;
        androidx.room.RoomDatabase r7;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.ContentUriTriggers $r15;
        androidx.work.WorkInfo$State $r17;
        java.lang.Object $r6;

        r0 := @this;

        r1 := @parameter0;

        $r2 = androidx.room.util.StringUtil.newStringBuilder();

        virtualinvoke $r2.append("SELECT ");

        virtualinvoke $r2.append("*");

        virtualinvoke $r2.append(" FROM workspec WHERE id IN (");

        $i4 = interfaceinvoke r1.size();

        androidx.room.util.StringUtil.appendPlaceholders($r2, $i4);

        virtualinvoke $r2.append(")");

        $r3 = virtualinvoke $r2.toString();

        $r4 = androidx.room.RoomSQLiteQuery.acquire($r3, $i4);

        $r5 = interfaceinvoke r1.iterator();

        $i4 = 1;

     label01:
        $z0 = interfaceinvoke $r5.hasNext();

        if $z0 == 0 goto label04;

        $r6 = interfaceinvoke $r5.next();

        $r3 = (java.lang.String) $r6;

        if $r3 != null goto label02;

        virtualinvoke $r4.bindNull($i4);

        goto label03;

     label02:
        virtualinvoke $r4.bindString($i4, $r3);

     label03:
        $i4 = $i4 + 1;

        goto label01;

     label04:
        r7 = r0.__db;

        virtualinvoke r7.assertNotSuspendingTransaction();

        r7 = r0.__db;

        $r8 = androidx.room.util.DBUtil.query(r7, $r4, 0, null);

     label05:
        $i4 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "required_network_type");

     label06:
        i5 = $i4;

     label07:
        $i4 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "requires_charging");

     label08:
        i6 = $i4;

     label09:
        $i4 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "requires_device_idle");

     label10:
        i0 = $i4;

     label11:
        $i4 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "requires_battery_not_low");

        $i7 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "requires_storage_not_low");

        $i8 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "trigger_content_update_delay");

        $i9 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "trigger_max_content_delay");

        $i10 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "content_uri_triggers");

     label12:
        i11 = $i10;

     label13:
        $i10 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "id");

     label14:
        i12 = $i10;

     label15:
        $i10 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "state");

     label16:
        i2 = $i10;

     label17:
        $i10 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "worker_class_name");

     label18:
        i1 = $i10;

     label19:
        $i10 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "input_merger_class_name");

     label20:
        i13 = $i10;

     label21:
        $i10 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "input");

     label22:
        i14 = $i10;

     label23:
        $i10 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "output");

     label24:
        r9 = $r4;

     label25:
        $i15 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "initial_delay");

     label26:
        $i16 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "interval_duration");

     label27:
        i17 = $i16;

     label28:
        $i16 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "flex_duration");

     label29:
        i18 = $i16;

     label30:
        $i16 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "run_attempt_count");

     label31:
        $i19 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "backoff_policy");

     label32:
        i3 = $i19;

     label33:
        $i19 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "backoff_delay_duration");

     label34:
        i20 = $i19;

     label35:
        $i19 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "period_start_time");

     label36:
        $i21 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "minimum_retention_duration");

     label37:
        $i22 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "schedule_requested_at");

     label38:
        $i23 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "run_in_foreground");

     label39:
        i24 = $i23;

     label40:
        $i23 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r8, "out_of_quota_policy");

     label41:
        $i25 = interfaceinvoke $r8.getCount();

        r10 = newarray (androidx.work.impl.model.WorkSpec)[$i25];

     label42:
        $i25 = 0;

     label43:
        $z0 = interfaceinvoke $r8.moveToNext();

     label44:
        if $z0 == 0 goto label76;

     label45:
        $r3 = interfaceinvoke $r8.getString(i12);

        $r11 = interfaceinvoke $r8.getString(i1);

        r12 = new androidx.work.Constraints;

        specialinvoke r12.<init>();

        $i26 = interfaceinvoke $r8.getInt(i5);

        $r13 = androidx.work.impl.model.WorkTypeConverters.intToNetworkType($i26);

     label46:
        virtualinvoke r12.setRequiredNetworkType($r13);

        $i26 = interfaceinvoke $r8.getInt(i6);

     label47:
        if $i26 == 0 goto label48;

        $z0 = 1;

        goto label49;

     label48:
        $z0 = 0;

     label49:
        virtualinvoke r12.setRequiresCharging($z0);

        $i26 = interfaceinvoke $r8.getInt(i0);

     label50:
        if $i26 == 0 goto label51;

        $z0 = 1;

        goto label52;

     label51:
        $z0 = 0;

     label52:
        virtualinvoke r12.setRequiresDeviceIdle($z0);

        $i26 = interfaceinvoke $r8.getInt($i4);

     label53:
        if $i26 == 0 goto label54;

        $z0 = 1;

        goto label55;

     label54:
        $z0 = 0;

     label55:
        virtualinvoke r12.setRequiresBatteryNotLow($z0);

        $i26 = interfaceinvoke $r8.getInt($i7);

     label56:
        if $i26 == 0 goto label57;

        $z0 = 1;

        goto label58;

     label57:
        $z0 = 0;

     label58:
        virtualinvoke r12.setRequiresStorageNotLow($z0);

        $l27 = interfaceinvoke $r8.getLong($i8);

     label59:
        virtualinvoke r12.setTriggerContentUpdateDelay($l27);

        $l27 = interfaceinvoke $r8.getLong($i9);

        virtualinvoke r12.setTriggerMaxContentDelay($l27);

        $r14 = interfaceinvoke $r8.getBlob(i11);

        $r15 = androidx.work.impl.model.WorkTypeConverters.byteArrayToContentUriTriggers($r14);

        virtualinvoke r12.setContentUriTriggers($r15);

        r16 = new androidx.work.impl.model.WorkSpec;

     label60:
        specialinvoke r16.<init>($r3, $r11);

        $i26 = interfaceinvoke $r8.getInt(i2);

     label61:
        $r17 = androidx.work.impl.model.WorkTypeConverters.intToState($i26);

        r16.state = $r17;

        $r3 = interfaceinvoke $r8.getString(i13);

        r16.inputMergerClassName = $r3;

        $r14 = interfaceinvoke $r8.getBlob(i14);

        $r18 = androidx.work.Data.fromByteArray($r14);

        r16.input = $r18;

        $r14 = interfaceinvoke $r8.getBlob($i10);

        $r18 = androidx.work.Data.fromByteArray($r14);

        r16.output = $r18;

     label62:
        $l27 = interfaceinvoke $r8.getLong($i15);

        r16.initialDelay = $l27;

     label63:
        $l27 = interfaceinvoke $r8.getLong(i17);

        r16.intervalDuration = $l27;

     label64:
        $l27 = interfaceinvoke $r8.getLong(i18);

        r16.flexDuration = $l27;

        $i26 = interfaceinvoke $r8.getInt($i16);

        r16.runAttemptCount = $i26;

        $i26 = interfaceinvoke $r8.getInt(i3);

     label65:
        $r19 = androidx.work.impl.model.WorkTypeConverters.intToBackoffPolicy($i26);

        r16.backoffPolicy = $r19;

     label66:
        $l27 = interfaceinvoke $r8.getLong(i20);

        r16.backoffDelayDuration = $l27;

     label67:
        $l27 = interfaceinvoke $r8.getLong($i19);

        r16.periodStartTime = $l27;

     label68:
        $l27 = interfaceinvoke $r8.getLong($i21);

        r16.minimumRetentionDuration = $l27;

     label69:
        $l27 = interfaceinvoke $r8.getLong($i22);

        r16.scheduleRequestedAt = $l27;

     label70:
        $i26 = i24;

     label71:
        i24 = interfaceinvoke $r8.getInt(i24);

     label72:
        if i24 == 0 goto label73;

        $z0 = 1;

        goto label74;

     label73:
        $z0 = 0;

     label74:
        r16.expedited = $z0;

        i24 = interfaceinvoke $r8.getInt($i23);

        $r20 = androidx.work.impl.model.WorkTypeConverters.intToOutOfQuotaPolicy(i24);

        r16.outOfQuotaPolicy = $r20;

        r16.constraints = r12;

        r10[$i25] = r16;

     label75:
        $i25 = $i25 + 1;

        i24 = $i26;

        goto label43;

     label76:
        interfaceinvoke $r8.close();

        virtualinvoke $r4.release();

        return r10;

     label77:
        r21 := @caughtexception;

        goto label84;

     label78:
        r21 := @caughtexception;

        r9 = $r4;

        goto label84;

     label79:
        r21 := @caughtexception;

        r9 = $r4;

        goto label84;

     label80:
        r21 := @caughtexception;

        r9 = $r4;

        goto label84;

     label81:
        r21 := @caughtexception;

        r9 = $r4;

        goto label84;

     label82:
        r21 := @caughtexception;

        r9 = $r4;

        goto label84;

     label83:
        r21 := @caughtexception;

        r9 = $r4;

     label84:
        interfaceinvoke $r8.close();

        virtualinvoke r9.release();

        goto label85;

     label85:
        throw r21;

        catch java.lang.Throwable from label05 to label06 with label83;
        catch java.lang.Throwable from label07 to label08 with label83;
        catch java.lang.Throwable from label09 to label10 with label83;
        catch java.lang.Throwable from label11 to label12 with label83;
        catch java.lang.Throwable from label13 to label14 with label83;
        catch java.lang.Throwable from label15 to label16 with label82;
        catch java.lang.Throwable from label17 to label18 with label81;
        catch java.lang.Throwable from label19 to label20 with label80;
        catch java.lang.Throwable from label21 to label22 with label79;
        catch java.lang.Throwable from label23 to label24 with label78;
        catch java.lang.Throwable from label25 to label26 with label77;
        catch java.lang.Throwable from label26 to label27 with label77;
        catch java.lang.Throwable from label28 to label29 with label77;
        catch java.lang.Throwable from label30 to label31 with label77;
        catch java.lang.Throwable from label31 to label32 with label77;
        catch java.lang.Throwable from label33 to label34 with label77;
        catch java.lang.Throwable from label35 to label36 with label77;
        catch java.lang.Throwable from label36 to label37 with label77;
        catch java.lang.Throwable from label37 to label38 with label77;
        catch java.lang.Throwable from label38 to label39 with label77;
        catch java.lang.Throwable from label40 to label41 with label77;
        catch java.lang.Throwable from label41 to label42 with label77;
        catch java.lang.Throwable from label43 to label44 with label77;
        catch java.lang.Throwable from label45 to label46 with label77;
        catch java.lang.Throwable from label46 to label47 with label77;
        catch java.lang.Throwable from label49 to label50 with label77;
        catch java.lang.Throwable from label52 to label53 with label77;
        catch java.lang.Throwable from label55 to label56 with label77;
        catch java.lang.Throwable from label58 to label59 with label77;
        catch java.lang.Throwable from label59 to label60 with label77;
        catch java.lang.Throwable from label60 to label61 with label77;
        catch java.lang.Throwable from label61 to label62 with label77;
        catch java.lang.Throwable from label62 to label63 with label77;
        catch java.lang.Throwable from label63 to label64 with label77;
        catch java.lang.Throwable from label64 to label65 with label77;
        catch java.lang.Throwable from label65 to label66 with label77;
        catch java.lang.Throwable from label66 to label67 with label77;
        catch java.lang.Throwable from label67 to label68 with label77;
        catch java.lang.Throwable from label68 to label69 with label77;
        catch java.lang.Throwable from label69 to label70 with label77;
        catch java.lang.Throwable from label71 to label72 with label77;
        catch java.lang.Throwable from label74 to label75 with label77;
    }

    public androidx.work.impl.model.WorkSpec$WorkInfoPojo getWorkStatusPojoForId(java.lang.String)
    {
        java.lang.Throwable r14, r15;
        androidx.room.RoomSQLiteQuery $r4;
        byte[] $r12;
        java.util.ArrayList r8, r9, $r17;
        int $i0, $i1, $i2, $i3;
        java.lang.String r1;
        androidx.work.Data $r13;
        androidx.collection.ArrayMap r2, r3, $r16;
        android.database.Cursor $r6;
        boolean $z0;
        androidx.work.impl.model.WorkSpec$WorkInfoPojo r10, $r18;
        androidx.room.RoomDatabase r5;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.WorkInfo$State $r11;
        java.lang.Object $r7;

        r0 := @this;

        r1 := @parameter0;

        $r4 = androidx.room.RoomSQLiteQuery.acquire("SELECT id, state, output, run_attempt_count FROM workspec WHERE id=?", 1);

        if r1 != null goto label01;

        virtualinvoke $r4.bindNull(1);

        goto label02;

     label01:
        virtualinvoke $r4.bindString(1, r1);

     label02:
        r5 = r0.__db;

        virtualinvoke r5.assertNotSuspendingTransaction();

        r5 = r0.__db;

        virtualinvoke r5.beginTransaction();

     label03:
        r5 = r0.__db;

        $r6 = androidx.room.util.DBUtil.query(r5, $r4, 1, null);

     label04:
        $i0 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r6, "id");

        $i1 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r6, "state");

        $i2 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r6, "output");

        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r6, "run_attempt_count");

        r3 = new androidx.collection.ArrayMap;

     label05:
        r2 = r3;

     label06:
        specialinvoke r3.<init>();

        $r16 = new androidx.collection.ArrayMap;

     label07:
        r3 = $r16;

     label08:
        specialinvoke $r16.<init>();

     label09:
        $z0 = interfaceinvoke $r6.moveToNext();

     label10:
        if $z0 == 0 goto label26;

     label11:
        $z0 = interfaceinvoke $r6.isNull($i0);

     label12:
        if $z0 != 0 goto label18;

     label13:
        r1 = interfaceinvoke $r6.getString($i0);

        $r7 = virtualinvoke r2.get(r1);

        r8 = (java.util.ArrayList) $r7;

     label14:
        if r8 != null goto label18;

     label15:
        r9 = new java.util.ArrayList;

     label16:
        r8 = r9;

     label17:
        specialinvoke r9.<init>();

        virtualinvoke r2.put(r1, r8);

     label18:
        $z0 = interfaceinvoke $r6.isNull($i0);

     label19:
        if $z0 != 0 goto label09;

     label20:
        r1 = interfaceinvoke $r6.getString($i0);

        $r7 = virtualinvoke r3.get(r1);

        r8 = (java.util.ArrayList) $r7;

     label21:
        if r8 != null goto label09;

     label22:
        r9 = new java.util.ArrayList;

     label23:
        r8 = r9;

     label24:
        specialinvoke r9.<init>();

        virtualinvoke r3.put(r1, r8);

     label25:
        goto label09;

     label26:
        interfaceinvoke $r6.moveToPosition(-1);

        specialinvoke r0.__fetchRelationshipWorkTagAsjavaLangString(r2);

        specialinvoke r0.__fetchRelationshipWorkProgressAsandroidxWorkData(r3);

        $z0 = interfaceinvoke $r6.moveToFirst();

     label27:
        if $z0 == 0 goto label47;

        r8 = null;

     label28:
        $z0 = interfaceinvoke $r6.isNull($i0);

     label29:
        if $z0 != 0 goto label31;

     label30:
        r1 = interfaceinvoke $r6.getString($i0);

        $r7 = virtualinvoke r2.get(r1);

        r8 = (java.util.ArrayList) $r7;

     label31:
        if r8 != null goto label35;

     label32:
        r9 = new java.util.ArrayList;

     label33:
        specialinvoke r9.<init>();

     label34:
        r8 = r9;

     label35:
        r9 = null;

     label36:
        $z0 = interfaceinvoke $r6.isNull($i0);

     label37:
        if $z0 != 0 goto label39;

     label38:
        r1 = interfaceinvoke $r6.getString($i0);

        $r7 = virtualinvoke r3.get(r1);

        r9 = (java.util.ArrayList) $r7;

     label39:
        if r9 != null goto label43;

     label40:
        $r17 = new java.util.ArrayList;

     label41:
        specialinvoke $r17.<init>();

     label42:
        r9 = $r17;

     label43:
        $r18 = new androidx.work.impl.model.WorkSpec$WorkInfoPojo;

     label44:
        r10 = $r18;

     label45:
        specialinvoke $r18.<init>();

        r1 = interfaceinvoke $r6.getString($i0);

        r10.id = r1;

        $i0 = interfaceinvoke $r6.getInt($i1);

        $r11 = androidx.work.impl.model.WorkTypeConverters.intToState($i0);

        r10.state = $r11;

        $r12 = interfaceinvoke $r6.getBlob($i2);

        $r13 = androidx.work.Data.fromByteArray($r12);

        r10.output = $r13;

        $i2 = interfaceinvoke $r6.getInt($i3);

        r10.runAttemptCount = $i2;

        r10.tags = r8;

        r10.progress = r9;

     label46:
        goto label48;

     label47:
        r10 = null;

     label48:
        r5 = r0.__db;

        virtualinvoke r5.setTransactionSuccessful();

     label49:
        interfaceinvoke $r6.close();

        virtualinvoke $r4.release();

     label50:
        r5 = r0.__db;

        virtualinvoke r5.endTransaction();

        return r10;

     label51:
        r14 := @caughtexception;

     label52:
        interfaceinvoke $r6.close();

        virtualinvoke $r4.release();

        throw r14;

     label53:
        r15 := @caughtexception;

        r5 = r0.__db;

        virtualinvoke r5.endTransaction();

        goto label54;

     label54:
        throw r15;

        catch java.lang.Throwable from label03 to label04 with label53;
        catch java.lang.Throwable from label04 to label05 with label51;
        catch java.lang.Throwable from label06 to label07 with label51;
        catch java.lang.Throwable from label08 to label10 with label51;
        catch java.lang.Throwable from label11 to label12 with label51;
        catch java.lang.Throwable from label13 to label14 with label51;
        catch java.lang.Throwable from label15 to label16 with label51;
        catch java.lang.Throwable from label17 to label19 with label51;
        catch java.lang.Throwable from label20 to label21 with label51;
        catch java.lang.Throwable from label22 to label23 with label51;
        catch java.lang.Throwable from label24 to label25 with label51;
        catch java.lang.Throwable from label26 to label27 with label51;
        catch java.lang.Throwable from label28 to label29 with label51;
        catch java.lang.Throwable from label30 to label31 with label51;
        catch java.lang.Throwable from label32 to label33 with label51;
        catch java.lang.Throwable from label33 to label34 with label51;
        catch java.lang.Throwable from label36 to label37 with label51;
        catch java.lang.Throwable from label38 to label39 with label51;
        catch java.lang.Throwable from label40 to label41 with label51;
        catch java.lang.Throwable from label41 to label42 with label51;
        catch java.lang.Throwable from label43 to label44 with label51;
        catch java.lang.Throwable from label45 to label46 with label51;
        catch java.lang.Throwable from label48 to label49 with label51;
        catch java.lang.Throwable from label49 to label50 with label53;
        catch java.lang.Throwable from label52 to label53 with label53;
    }

    public java.util.List getWorkStatusPojoForIds(java.util.List)
    {
        java.lang.Throwable r12, r19;
        androidx.room.RoomSQLiteQuery $r6;
        byte[] $r17;
        java.util.ArrayList r11, r13, r14, $r21;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r5;
        androidx.work.Data $r18;
        androidx.collection.ArrayMap r2, r3, $r20;
        boolean $z0;
        android.database.Cursor $r10;
        androidx.work.impl.model.WorkSpec$WorkInfoPojo r15, $r22;
        java.util.Iterator $r7;
        androidx.room.RoomDatabase r9;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.util.List r1;
        androidx.work.WorkInfo$State $r16;
        java.lang.StringBuilder $r4;
        java.lang.Object $r8;

        r0 := @this;

        r1 := @parameter0;

        $r4 = androidx.room.util.StringUtil.newStringBuilder();

        virtualinvoke $r4.append("SELECT id, state, output, run_attempt_count FROM workspec WHERE id IN (");

        i0 = interfaceinvoke r1.size();

        androidx.room.util.StringUtil.appendPlaceholders($r4, i0);

        virtualinvoke $r4.append(")");

        $r5 = virtualinvoke $r4.toString();

        $r6 = androidx.room.RoomSQLiteQuery.acquire($r5, i0);

        $r7 = interfaceinvoke r1.iterator();

        i0 = 1;

     label01:
        $z0 = interfaceinvoke $r7.hasNext();

        if $z0 == 0 goto label04;

        $r8 = interfaceinvoke $r7.next();

        $r5 = (java.lang.String) $r8;

        if $r5 != null goto label02;

        virtualinvoke $r6.bindNull(i0);

        goto label03;

     label02:
        virtualinvoke $r6.bindString(i0, $r5);

     label03:
        i0 = i0 + 1;

        goto label01;

     label04:
        r9 = r0.__db;

        virtualinvoke r9.assertNotSuspendingTransaction();

        r9 = r0.__db;

        virtualinvoke r9.beginTransaction();

     label05:
        r9 = r0.__db;

        $r10 = androidx.room.util.DBUtil.query(r9, $r6, 1, null);

     label06:
        $i1 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r10, "id");

     label07:
        i0 = $i1;

     label08:
        $i2 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r10, "state");

        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r10, "output");

        $i4 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r10, "run_attempt_count");

        r3 = new androidx.collection.ArrayMap;

     label09:
        r2 = r3;

     label10:
        specialinvoke r3.<init>();

        $r20 = new androidx.collection.ArrayMap;

     label11:
        r3 = $r20;

     label12:
        specialinvoke $r20.<init>();

     label13:
        $z0 = interfaceinvoke $r10.moveToNext();

     label14:
        if $z0 == 0 goto label31;

     label15:
        $z0 = interfaceinvoke $r10.isNull($i1);

     label16:
        if $z0 != 0 goto label22;

     label17:
        $r5 = interfaceinvoke $r10.getString($i1);

        $r8 = virtualinvoke r2.get($r5);

        r11 = (java.util.ArrayList) $r8;

     label18:
        if r11 != null goto label22;

     label19:
        r13 = new java.util.ArrayList;

     label20:
        r11 = r13;

     label21:
        specialinvoke r13.<init>();

        virtualinvoke r2.put($r5, r11);

     label22:
        $z0 = interfaceinvoke $r10.isNull($i1);

     label23:
        if $z0 != 0 goto label13;

     label24:
        $r5 = interfaceinvoke $r10.getString($i1);

        $r8 = virtualinvoke r3.get($r5);

        r11 = (java.util.ArrayList) $r8;

     label25:
        if r11 != null goto label13;

     label26:
        r13 = new java.util.ArrayList;

     label27:
        r11 = r13;

     label28:
        specialinvoke r13.<init>();

        virtualinvoke r3.put($r5, r11);

     label29:
        goto label13;

     label30:
        r12 := @caughtexception;

        goto label69;

     label31:
        interfaceinvoke $r10.moveToPosition(-1);

        specialinvoke r0.__fetchRelationshipWorkTagAsjavaLangString(r2);

        specialinvoke r0.__fetchRelationshipWorkProgressAsandroidxWorkData(r3);

        r13 = new java.util.ArrayList;

     label32:
        r11 = r13;

     label33:
        $i1 = interfaceinvoke $r10.getCount();

        specialinvoke r13.<init>($i1);

     label34:
        $z0 = interfaceinvoke $r10.moveToNext();

     label35:
        if $z0 == 0 goto label64;

        r13 = null;

     label36:
        $z0 = interfaceinvoke $r10.isNull(i0);

     label37:
        if $z0 != 0 goto label42;

     label38:
        $r5 = interfaceinvoke $r10.getString(i0);

     label39:
        $r8 = virtualinvoke r2.get($r5);

        r13 = (java.util.ArrayList) $r8;

     label40:
        goto label42;

     label41:
        r12 := @caughtexception;

        goto label69;

     label42:
        if r13 != null goto label47;

     label43:
        r14 = new java.util.ArrayList;

     label44:
        specialinvoke r14.<init>();

     label45:
        r13 = r14;

        goto label47;

     label46:
        r12 := @caughtexception;

        goto label69;

     label47:
        r14 = null;

     label48:
        $z0 = interfaceinvoke $r10.isNull(i0);

     label49:
        if $z0 != 0 goto label52;

     label50:
        $r5 = interfaceinvoke $r10.getString(i0);

        $r8 = virtualinvoke r3.get($r5);

        r14 = (java.util.ArrayList) $r8;

     label51:
        goto label52;

     label52:
        if r14 != null goto label56;

     label53:
        $r21 = new java.util.ArrayList;

     label54:
        specialinvoke $r21.<init>();

     label55:
        r14 = $r21;

     label56:
        $r22 = new androidx.work.impl.model.WorkSpec$WorkInfoPojo;

     label57:
        r15 = $r22;

     label58:
        specialinvoke $r22.<init>();

     label59:
        $r5 = interfaceinvoke $r10.getString(i0);

        r15.id = $r5;

        $i1 = interfaceinvoke $r10.getInt($i2);

     label60:
        $r16 = androidx.work.impl.model.WorkTypeConverters.intToState($i1);

        r15.state = $r16;

        $r17 = interfaceinvoke $r10.getBlob($i3);

        $r18 = androidx.work.Data.fromByteArray($r17);

        r15.output = $r18;

        $i1 = interfaceinvoke $r10.getInt($i4);

        r15.runAttemptCount = $i1;

        r15.tags = r13;

        r15.progress = r14;

        interfaceinvoke r11.add(r15);

     label61:
        goto label34;

     label62:
        r12 := @caughtexception;

        goto label69;

     label63:
        r12 := @caughtexception;

        goto label69;

     label64:
        r9 = r0.__db;

        virtualinvoke r9.setTransactionSuccessful();

     label65:
        interfaceinvoke $r10.close();

        virtualinvoke $r6.release();

     label66:
        r9 = r0.__db;

        virtualinvoke r9.endTransaction();

        return r11;

     label67:
        r12 := @caughtexception;

        goto label69;

     label68:
        r12 := @caughtexception;

     label69:
        interfaceinvoke $r10.close();

        virtualinvoke $r6.release();

        throw r12;

     label70:
        r19 := @caughtexception;

        goto label72;

     label71:
        r19 := @caughtexception;

     label72:
        r9 = r0.__db;

        virtualinvoke r9.endTransaction();

        goto label73;

     label73:
        throw r19;

        catch java.lang.Throwable from label05 to label06 with label71;
        catch java.lang.Throwable from label06 to label07 with label68;
        catch java.lang.Throwable from label08 to label09 with label68;
        catch java.lang.Throwable from label10 to label11 with label68;
        catch java.lang.Throwable from label12 to label14 with label68;
        catch java.lang.Throwable from label15 to label16 with label30;
        catch java.lang.Throwable from label17 to label18 with label30;
        catch java.lang.Throwable from label19 to label20 with label30;
        catch java.lang.Throwable from label21 to label23 with label30;
        catch java.lang.Throwable from label24 to label25 with label30;
        catch java.lang.Throwable from label26 to label27 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
        catch java.lang.Throwable from label31 to label32 with label68;
        catch java.lang.Throwable from label33 to label35 with label68;
        catch java.lang.Throwable from label36 to label37 with label68;
        catch java.lang.Throwable from label38 to label39 with label41;
        catch java.lang.Throwable from label39 to label40 with label46;
        catch java.lang.Throwable from label43 to label44 with label46;
        catch java.lang.Throwable from label44 to label45 with label46;
        catch java.lang.Throwable from label48 to label49 with label63;
        catch java.lang.Throwable from label50 to label51 with label46;
        catch java.lang.Throwable from label53 to label54 with label46;
        catch java.lang.Throwable from label54 to label55 with label46;
        catch java.lang.Throwable from label56 to label57 with label63;
        catch java.lang.Throwable from label58 to label59 with label63;
        catch java.lang.Throwable from label59 to label60 with label62;
        catch java.lang.Throwable from label60 to label61 with label67;
        catch java.lang.Throwable from label64 to label65 with label67;
        catch java.lang.Throwable from label65 to label66 with label70;
        catch java.lang.Throwable from label69 to label70 with label70;
    }

    public java.util.List getWorkStatusPojoForName(java.lang.String)
    {
        java.lang.Throwable r15, r16;
        androidx.room.RoomSQLiteQuery $r4;
        byte[] $r13;
        java.util.ArrayList r8, r9, r10, $r18;
        int $i0, i1, $i2, $i3, $i4;
        java.lang.String r1;
        androidx.work.Data $r14;
        androidx.collection.ArrayMap r2, r3, $r17;
        android.database.Cursor $r6;
        boolean $z0;
        androidx.work.impl.model.WorkSpec$WorkInfoPojo r11, $r19;
        androidx.room.RoomDatabase r5;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.WorkInfo$State $r12;
        java.lang.Object $r7;

        r0 := @this;

        r1 := @parameter0;

        $r4 = androidx.room.RoomSQLiteQuery.acquire("SELECT id, state, output, run_attempt_count FROM workspec WHERE id IN (SELECT work_spec_id FROM workname WHERE name=?)", 1);

        if r1 != null goto label01;

        virtualinvoke $r4.bindNull(1);

        goto label02;

     label01:
        virtualinvoke $r4.bindString(1, r1);

     label02:
        r5 = r0.__db;

        virtualinvoke r5.assertNotSuspendingTransaction();

        r5 = r0.__db;

        virtualinvoke r5.beginTransaction();

     label03:
        r5 = r0.__db;

        $r6 = androidx.room.util.DBUtil.query(r5, $r4, 1, null);

     label04:
        $i0 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r6, "id");

     label05:
        i1 = $i0;

     label06:
        $i2 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r6, "state");

        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r6, "output");

        $i4 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r6, "run_attempt_count");

        r3 = new androidx.collection.ArrayMap;

     label07:
        r2 = r3;

     label08:
        specialinvoke r3.<init>();

        $r17 = new androidx.collection.ArrayMap;

     label09:
        r3 = $r17;

     label10:
        specialinvoke $r17.<init>();

     label11:
        $z0 = interfaceinvoke $r6.moveToNext();

     label12:
        if $z0 == 0 goto label28;

     label13:
        $z0 = interfaceinvoke $r6.isNull($i0);

     label14:
        if $z0 != 0 goto label20;

     label15:
        r1 = interfaceinvoke $r6.getString($i0);

        $r7 = virtualinvoke r2.get(r1);

        r8 = (java.util.ArrayList) $r7;

     label16:
        if r8 != null goto label20;

     label17:
        r9 = new java.util.ArrayList;

     label18:
        r8 = r9;

     label19:
        specialinvoke r9.<init>();

        virtualinvoke r2.put(r1, r8);

     label20:
        $z0 = interfaceinvoke $r6.isNull($i0);

     label21:
        if $z0 != 0 goto label11;

     label22:
        r1 = interfaceinvoke $r6.getString($i0);

        $r7 = virtualinvoke r3.get(r1);

        r8 = (java.util.ArrayList) $r7;

     label23:
        if r8 != null goto label11;

     label24:
        r9 = new java.util.ArrayList;

     label25:
        r8 = r9;

     label26:
        specialinvoke r9.<init>();

        virtualinvoke r3.put(r1, r8);

     label27:
        goto label11;

     label28:
        interfaceinvoke $r6.moveToPosition(-1);

        specialinvoke r0.__fetchRelationshipWorkTagAsjavaLangString(r2);

        specialinvoke r0.__fetchRelationshipWorkProgressAsandroidxWorkData(r3);

        r9 = new java.util.ArrayList;

     label29:
        r8 = r9;

     label30:
        $i0 = interfaceinvoke $r6.getCount();

        specialinvoke r9.<init>($i0);

     label31:
        $z0 = interfaceinvoke $r6.moveToNext();

     label32:
        if $z0 == 0 goto label52;

        r9 = null;

     label33:
        $z0 = interfaceinvoke $r6.isNull(i1);

     label34:
        if $z0 != 0 goto label36;

     label35:
        r1 = interfaceinvoke $r6.getString(i1);

        $r7 = virtualinvoke r2.get(r1);

        r9 = (java.util.ArrayList) $r7;

     label36:
        if r9 != null goto label40;

     label37:
        r10 = new java.util.ArrayList;

     label38:
        specialinvoke r10.<init>();

     label39:
        r9 = r10;

     label40:
        r10 = null;

     label41:
        $z0 = interfaceinvoke $r6.isNull(i1);

     label42:
        if $z0 != 0 goto label44;

     label43:
        r1 = interfaceinvoke $r6.getString(i1);

        $r7 = virtualinvoke r3.get(r1);

        r10 = (java.util.ArrayList) $r7;

     label44:
        if r10 != null goto label48;

     label45:
        $r18 = new java.util.ArrayList;

     label46:
        specialinvoke $r18.<init>();

     label47:
        r10 = $r18;

     label48:
        $r19 = new androidx.work.impl.model.WorkSpec$WorkInfoPojo;

     label49:
        r11 = $r19;

     label50:
        specialinvoke $r19.<init>();

        r1 = interfaceinvoke $r6.getString(i1);

        r11.id = r1;

        $i0 = interfaceinvoke $r6.getInt($i2);

        $r12 = androidx.work.impl.model.WorkTypeConverters.intToState($i0);

        r11.state = $r12;

        $r13 = interfaceinvoke $r6.getBlob($i3);

        $r14 = androidx.work.Data.fromByteArray($r13);

        r11.output = $r14;

        $i0 = interfaceinvoke $r6.getInt($i4);

        r11.runAttemptCount = $i0;

        r11.tags = r9;

        r11.progress = r10;

        interfaceinvoke r8.add(r11);

     label51:
        goto label31;

     label52:
        r5 = r0.__db;

        virtualinvoke r5.setTransactionSuccessful();

     label53:
        interfaceinvoke $r6.close();

        virtualinvoke $r4.release();

     label54:
        r5 = r0.__db;

        virtualinvoke r5.endTransaction();

        return r8;

     label55:
        r15 := @caughtexception;

     label56:
        interfaceinvoke $r6.close();

        virtualinvoke $r4.release();

        throw r15;

     label57:
        r16 := @caughtexception;

        r5 = r0.__db;

        virtualinvoke r5.endTransaction();

        goto label58;

     label58:
        throw r16;

        catch java.lang.Throwable from label03 to label04 with label57;
        catch java.lang.Throwable from label04 to label05 with label55;
        catch java.lang.Throwable from label06 to label07 with label55;
        catch java.lang.Throwable from label08 to label09 with label55;
        catch java.lang.Throwable from label10 to label12 with label55;
        catch java.lang.Throwable from label13 to label14 with label55;
        catch java.lang.Throwable from label15 to label16 with label55;
        catch java.lang.Throwable from label17 to label18 with label55;
        catch java.lang.Throwable from label19 to label21 with label55;
        catch java.lang.Throwable from label22 to label23 with label55;
        catch java.lang.Throwable from label24 to label25 with label55;
        catch java.lang.Throwable from label26 to label27 with label55;
        catch java.lang.Throwable from label28 to label29 with label55;
        catch java.lang.Throwable from label30 to label32 with label55;
        catch java.lang.Throwable from label33 to label34 with label55;
        catch java.lang.Throwable from label35 to label36 with label55;
        catch java.lang.Throwable from label37 to label38 with label55;
        catch java.lang.Throwable from label38 to label39 with label55;
        catch java.lang.Throwable from label41 to label42 with label55;
        catch java.lang.Throwable from label43 to label44 with label55;
        catch java.lang.Throwable from label45 to label46 with label55;
        catch java.lang.Throwable from label46 to label47 with label55;
        catch java.lang.Throwable from label48 to label49 with label55;
        catch java.lang.Throwable from label50 to label51 with label55;
        catch java.lang.Throwable from label52 to label53 with label55;
        catch java.lang.Throwable from label53 to label54 with label57;
        catch java.lang.Throwable from label56 to label57 with label57;
    }

    public java.util.List getWorkStatusPojoForTag(java.lang.String)
    {
        java.lang.Throwable r15, r16;
        androidx.room.RoomSQLiteQuery $r4;
        byte[] $r13;
        java.util.ArrayList r8, r9, r10, $r18;
        int $i0, i1, $i2, $i3, $i4;
        java.lang.String r1;
        androidx.work.Data $r14;
        androidx.collection.ArrayMap r2, r3, $r17;
        android.database.Cursor $r6;
        boolean $z0;
        androidx.work.impl.model.WorkSpec$WorkInfoPojo r11, $r19;
        androidx.room.RoomDatabase r5;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.WorkInfo$State $r12;
        java.lang.Object $r7;

        r0 := @this;

        r1 := @parameter0;

        $r4 = androidx.room.RoomSQLiteQuery.acquire("SELECT id, state, output, run_attempt_count FROM workspec WHERE id IN (SELECT work_spec_id FROM worktag WHERE tag=?)", 1);

        if r1 != null goto label01;

        virtualinvoke $r4.bindNull(1);

        goto label02;

     label01:
        virtualinvoke $r4.bindString(1, r1);

     label02:
        r5 = r0.__db;

        virtualinvoke r5.assertNotSuspendingTransaction();

        r5 = r0.__db;

        virtualinvoke r5.beginTransaction();

     label03:
        r5 = r0.__db;

        $r6 = androidx.room.util.DBUtil.query(r5, $r4, 1, null);

     label04:
        $i0 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r6, "id");

     label05:
        i1 = $i0;

     label06:
        $i2 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r6, "state");

        $i3 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r6, "output");

        $i4 = androidx.room.util.CursorUtil.getColumnIndexOrThrow($r6, "run_attempt_count");

        r3 = new androidx.collection.ArrayMap;

     label07:
        r2 = r3;

     label08:
        specialinvoke r3.<init>();

        $r17 = new androidx.collection.ArrayMap;

     label09:
        r3 = $r17;

     label10:
        specialinvoke $r17.<init>();

     label11:
        $z0 = interfaceinvoke $r6.moveToNext();

     label12:
        if $z0 == 0 goto label28;

     label13:
        $z0 = interfaceinvoke $r6.isNull($i0);

     label14:
        if $z0 != 0 goto label20;

     label15:
        r1 = interfaceinvoke $r6.getString($i0);

        $r7 = virtualinvoke r2.get(r1);

        r8 = (java.util.ArrayList) $r7;

     label16:
        if r8 != null goto label20;

     label17:
        r9 = new java.util.ArrayList;

     label18:
        r8 = r9;

     label19:
        specialinvoke r9.<init>();

        virtualinvoke r2.put(r1, r8);

     label20:
        $z0 = interfaceinvoke $r6.isNull($i0);

     label21:
        if $z0 != 0 goto label11;

     label22:
        r1 = interfaceinvoke $r6.getString($i0);

        $r7 = virtualinvoke r3.get(r1);

        r8 = (java.util.ArrayList) $r7;

     label23:
        if r8 != null goto label11;

     label24:
        r9 = new java.util.ArrayList;

     label25:
        r8 = r9;

     label26:
        specialinvoke r9.<init>();

        virtualinvoke r3.put(r1, r8);

     label27:
        goto label11;

     label28:
        interfaceinvoke $r6.moveToPosition(-1);

        specialinvoke r0.__fetchRelationshipWorkTagAsjavaLangString(r2);

        specialinvoke r0.__fetchRelationshipWorkProgressAsandroidxWorkData(r3);

        r9 = new java.util.ArrayList;

     label29:
        r8 = r9;

     label30:
        $i0 = interfaceinvoke $r6.getCount();

        specialinvoke r9.<init>($i0);

     label31:
        $z0 = interfaceinvoke $r6.moveToNext();

     label32:
        if $z0 == 0 goto label52;

        r9 = null;

     label33:
        $z0 = interfaceinvoke $r6.isNull(i1);

     label34:
        if $z0 != 0 goto label36;

     label35:
        r1 = interfaceinvoke $r6.getString(i1);

        $r7 = virtualinvoke r2.get(r1);

        r9 = (java.util.ArrayList) $r7;

     label36:
        if r9 != null goto label40;

     label37:
        r10 = new java.util.ArrayList;

     label38:
        specialinvoke r10.<init>();

     label39:
        r9 = r10;

     label40:
        r10 = null;

     label41:
        $z0 = interfaceinvoke $r6.isNull(i1);

     label42:
        if $z0 != 0 goto label44;

     label43:
        r1 = interfaceinvoke $r6.getString(i1);

        $r7 = virtualinvoke r3.get(r1);

        r10 = (java.util.ArrayList) $r7;

     label44:
        if r10 != null goto label48;

     label45:
        $r18 = new java.util.ArrayList;

     label46:
        specialinvoke $r18.<init>();

     label47:
        r10 = $r18;

     label48:
        $r19 = new androidx.work.impl.model.WorkSpec$WorkInfoPojo;

     label49:
        r11 = $r19;

     label50:
        specialinvoke $r19.<init>();

        r1 = interfaceinvoke $r6.getString(i1);

        r11.id = r1;

        $i0 = interfaceinvoke $r6.getInt($i2);

        $r12 = androidx.work.impl.model.WorkTypeConverters.intToState($i0);

        r11.state = $r12;

        $r13 = interfaceinvoke $r6.getBlob($i3);

        $r14 = androidx.work.Data.fromByteArray($r13);

        r11.output = $r14;

        $i0 = interfaceinvoke $r6.getInt($i4);

        r11.runAttemptCount = $i0;

        r11.tags = r9;

        r11.progress = r10;

        interfaceinvoke r8.add(r11);

     label51:
        goto label31;

     label52:
        r5 = r0.__db;

        virtualinvoke r5.setTransactionSuccessful();

     label53:
        interfaceinvoke $r6.close();

        virtualinvoke $r4.release();

     label54:
        r5 = r0.__db;

        virtualinvoke r5.endTransaction();

        return r8;

     label55:
        r15 := @caughtexception;

     label56:
        interfaceinvoke $r6.close();

        virtualinvoke $r4.release();

        throw r15;

     label57:
        r16 := @caughtexception;

        r5 = r0.__db;

        virtualinvoke r5.endTransaction();

        goto label58;

     label58:
        throw r16;

        catch java.lang.Throwable from label03 to label04 with label57;
        catch java.lang.Throwable from label04 to label05 with label55;
        catch java.lang.Throwable from label06 to label07 with label55;
        catch java.lang.Throwable from label08 to label09 with label55;
        catch java.lang.Throwable from label10 to label12 with label55;
        catch java.lang.Throwable from label13 to label14 with label55;
        catch java.lang.Throwable from label15 to label16 with label55;
        catch java.lang.Throwable from label17 to label18 with label55;
        catch java.lang.Throwable from label19 to label21 with label55;
        catch java.lang.Throwable from label22 to label23 with label55;
        catch java.lang.Throwable from label24 to label25 with label55;
        catch java.lang.Throwable from label26 to label27 with label55;
        catch java.lang.Throwable from label28 to label29 with label55;
        catch java.lang.Throwable from label30 to label32 with label55;
        catch java.lang.Throwable from label33 to label34 with label55;
        catch java.lang.Throwable from label35 to label36 with label55;
        catch java.lang.Throwable from label37 to label38 with label55;
        catch java.lang.Throwable from label38 to label39 with label55;
        catch java.lang.Throwable from label41 to label42 with label55;
        catch java.lang.Throwable from label43 to label44 with label55;
        catch java.lang.Throwable from label45 to label46 with label55;
        catch java.lang.Throwable from label46 to label47 with label55;
        catch java.lang.Throwable from label48 to label49 with label55;
        catch java.lang.Throwable from label50 to label51 with label55;
        catch java.lang.Throwable from label52 to label53 with label55;
        catch java.lang.Throwable from label53 to label54 with label57;
        catch java.lang.Throwable from label56 to label57 with label57;
    }

    public androidx.lifecycle.LiveData getWorkStatusPojoLiveDataForIds(java.util.List)
    {
        androidx.room.InvalidationTracker $r8;
        androidx.room.RoomSQLiteQuery $r4;
        androidx.lifecycle.LiveData $r11;
        java.util.Iterator $r5;
        androidx.room.RoomDatabase $r7;
        java.lang.String[] $r9;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.impl.model.WorkSpecDao_Impl$11 $r10;
        java.util.List r1;
        int i0;
        java.lang.StringBuilder $r2;
        java.lang.Object $r6;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        $r2 = androidx.room.util.StringUtil.newStringBuilder();

        virtualinvoke $r2.append("SELECT id, state, output, run_attempt_count FROM workspec WHERE id IN (");

        i0 = interfaceinvoke r1.size();

        androidx.room.util.StringUtil.appendPlaceholders($r2, i0);

        virtualinvoke $r2.append(")");

        $r3 = virtualinvoke $r2.toString();

        $r4 = androidx.room.RoomSQLiteQuery.acquire($r3, i0);

        i0 = 1;

        $r5 = interfaceinvoke r1.iterator();

     label1:
        $z0 = interfaceinvoke $r5.hasNext();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.next();

        $r3 = (java.lang.String) $r6;

        if $r3 != null goto label2;

        virtualinvoke $r4.bindNull(i0);

        goto label3;

     label2:
        virtualinvoke $r4.bindString(i0, $r3);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        $r7 = r0.__db;

        $r8 = virtualinvoke $r7.getInvalidationTracker();

        $r9 = newarray (java.lang.String)[3];

        $r9[0] = "WorkTag";

        $r9[1] = "WorkProgress";

        $r9[2] = "workspec";

        $r10 = new androidx.work.impl.model.WorkSpecDao_Impl$11;

        specialinvoke $r10.<init>(r0, $r4);

        $r11 = virtualinvoke $r8.createLiveData($r9, 1, $r10);

        return $r11;
    }

    public androidx.lifecycle.LiveData getWorkStatusPojoLiveDataForName(java.lang.String)
    {
        androidx.room.InvalidationTracker $r4;
        androidx.room.RoomSQLiteQuery $r2;
        androidx.lifecycle.LiveData $r7;
        androidx.room.RoomDatabase $r3;
        java.lang.String[] $r5;
        androidx.work.impl.model.WorkSpecDao_Impl$13 $r6;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        java.lang.String $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = androidx.room.RoomSQLiteQuery.acquire("SELECT id, state, output, run_attempt_count FROM workspec WHERE id IN (SELECT work_spec_id FROM workname WHERE name=?)", 1);

        if $r1 != null goto label1;

        virtualinvoke $r2.bindNull(1);

        goto label2;

     label1:
        virtualinvoke $r2.bindString(1, $r1);

     label2:
        $r3 = r0.__db;

        $r4 = virtualinvoke $r3.getInvalidationTracker();

        $r5 = newarray (java.lang.String)[4];

        $r5[0] = "WorkTag";

        $r5[1] = "WorkProgress";

        $r5[2] = "workspec";

        $r5[3] = "workname";

        $r6 = new androidx.work.impl.model.WorkSpecDao_Impl$13;

        specialinvoke $r6.<init>(r0, $r2);

        $r7 = virtualinvoke $r4.createLiveData($r5, 1, $r6);

        return $r7;
    }

    public androidx.lifecycle.LiveData getWorkStatusPojoLiveDataForTag(java.lang.String)
    {
        androidx.room.InvalidationTracker $r4;
        androidx.room.RoomSQLiteQuery $r2;
        androidx.lifecycle.LiveData $r7;
        androidx.room.RoomDatabase $r3;
        java.lang.String[] $r5;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.impl.model.WorkSpecDao_Impl$12 $r6;
        java.lang.String $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = androidx.room.RoomSQLiteQuery.acquire("SELECT id, state, output, run_attempt_count FROM workspec WHERE id IN (SELECT work_spec_id FROM worktag WHERE tag=?)", 1);

        if $r1 != null goto label1;

        virtualinvoke $r2.bindNull(1);

        goto label2;

     label1:
        virtualinvoke $r2.bindString(1, $r1);

     label2:
        $r3 = r0.__db;

        $r4 = virtualinvoke $r3.getInvalidationTracker();

        $r5 = newarray (java.lang.String)[4];

        $r5[0] = "WorkTag";

        $r5[1] = "WorkProgress";

        $r5[2] = "workspec";

        $r5[3] = "worktag";

        $r6 = new androidx.work.impl.model.WorkSpecDao_Impl$12;

        specialinvoke $r6.<init>(r0, $r2);

        $r7 = virtualinvoke $r4.createLiveData($r5, 1, $r6);

        return $r7;
    }

    public boolean hasUnfinishedWork()
    {
        java.lang.Throwable r4;
        androidx.room.RoomSQLiteQuery $r1;
        androidx.room.RoomDatabase r2;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        int $i0;
        boolean z0, $z1;
        android.database.Cursor $r3;

        r0 := @this;

        z0 = 0;

        $r1 = androidx.room.RoomSQLiteQuery.acquire("SELECT COUNT(*) > 0 FROM workspec WHERE state NOT IN (2, 3, 5) LIMIT 1", 0);

        r2 = r0.__db;

        virtualinvoke r2.assertNotSuspendingTransaction();

        r2 = r0.__db;

        $r3 = androidx.room.util.DBUtil.query(r2, $r1, 0, null);

     label1:
        $z1 = interfaceinvoke $r3.moveToFirst();

     label2:
        if $z1 == 0 goto label6;

     label3:
        $i0 = interfaceinvoke $r3.getInt(0);

     label4:
        if $i0 == 0 goto label5;

        z0 = 1;

     label5:
        goto label7;

     label6:
        z0 = 0;

     label7:
        interfaceinvoke $r3.close();

        virtualinvoke $r1.release();

        return z0;

     label8:
        r4 := @caughtexception;

        interfaceinvoke $r3.close();

        virtualinvoke $r1.release();

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
    }

    public int incrementWorkSpecRunAttemptCount(java.lang.String)
    {
        java.lang.Throwable r5;
        androidx.room.RoomDatabase r2;
        int $i0;
        androidx.room.SharedSQLiteStatement r3;
        java.lang.String $r1;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.sqlite.db.SupportSQLiteStatement $r4;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.__db;

        virtualinvoke r2.assertNotSuspendingTransaction();

        r3 = r0.__preparedStmtOfIncrementWorkSpecRunAttemptCount;

        $r4 = virtualinvoke r3.acquire();

        if $r1 != null goto label1;

        interfaceinvoke $r4.bindNull(1);

        goto label2;

     label1:
        interfaceinvoke $r4.bindString(1, $r1);

     label2:
        r2 = r0.__db;

        virtualinvoke r2.beginTransaction();

     label3:
        $i0 = interfaceinvoke $r4.executeUpdateDelete();

        r2 = r0.__db;

        virtualinvoke r2.setTransactionSuccessful();

     label4:
        r2 = r0.__db;

        virtualinvoke r2.endTransaction();

        r3 = r0.__preparedStmtOfIncrementWorkSpecRunAttemptCount;

        virtualinvoke r3.release($r4);

        return $i0;

     label5:
        r5 := @caughtexception;

        r2 = r0.__db;

        virtualinvoke r2.endTransaction();

        r3 = r0.__preparedStmtOfIncrementWorkSpecRunAttemptCount;

        virtualinvoke r3.release($r4);

        throw r5;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void insertWorkSpec(androidx.work.impl.model.WorkSpec)
    {
        java.lang.Throwable $r4;
        androidx.room.RoomDatabase $r2;
        androidx.room.EntityInsertionAdapter $r3;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.impl.model.WorkSpec $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.__db;

        virtualinvoke $r2.assertNotSuspendingTransaction();

        $r2 = r0.__db;

        virtualinvoke $r2.beginTransaction();

     label1:
        $r3 = r0.__insertionAdapterOfWorkSpec;

        virtualinvoke $r3.insert($r1);

        $r2 = r0.__db;

        virtualinvoke $r2.setTransactionSuccessful();

     label2:
        $r2 = r0.__db;

        virtualinvoke $r2.endTransaction();

        return;

     label3:
        $r4 := @caughtexception;

        $r2 = r0.__db;

        virtualinvoke $r2.endTransaction();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int markWorkSpecScheduled(java.lang.String, long)
    {
        java.lang.Throwable r5;
        androidx.room.RoomDatabase r2;
        long $l0;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        int $i1;
        androidx.room.SharedSQLiteStatement r3;
        java.lang.String $r1;
        androidx.sqlite.db.SupportSQLiteStatement $r4;

        r0 := @this;

        $r1 := @parameter0;

        $l0 := @parameter1;

        r2 = r0.__db;

        virtualinvoke r2.assertNotSuspendingTransaction();

        r3 = r0.__preparedStmtOfMarkWorkSpecScheduled;

        $r4 = virtualinvoke r3.acquire();

        interfaceinvoke $r4.bindLong(1, $l0);

        if $r1 != null goto label1;

        interfaceinvoke $r4.bindNull(2);

        goto label2;

     label1:
        interfaceinvoke $r4.bindString(2, $r1);

     label2:
        r2 = r0.__db;

        virtualinvoke r2.beginTransaction();

     label3:
        $i1 = interfaceinvoke $r4.executeUpdateDelete();

        r2 = r0.__db;

        virtualinvoke r2.setTransactionSuccessful();

     label4:
        r2 = r0.__db;

        virtualinvoke r2.endTransaction();

        r3 = r0.__preparedStmtOfMarkWorkSpecScheduled;

        virtualinvoke r3.release($r4);

        return $i1;

     label5:
        r5 := @caughtexception;

        r2 = r0.__db;

        virtualinvoke r2.endTransaction();

        r3 = r0.__preparedStmtOfMarkWorkSpecScheduled;

        virtualinvoke r3.release($r4);

        throw r5;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void pruneFinishedWorkWithZeroDependentsIgnoringKeepForAtLeast()
    {
        java.lang.Throwable $r4;
        androidx.room.RoomDatabase r2;
        androidx.room.SharedSQLiteStatement r3;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.sqlite.db.SupportSQLiteStatement $r1;

        r0 := @this;

        r2 = r0.__db;

        virtualinvoke r2.assertNotSuspendingTransaction();

        r3 = r0.__preparedStmtOfPruneFinishedWorkWithZeroDependentsIgnoringKeepForAtLeast;

        $r1 = virtualinvoke r3.acquire();

        r2 = r0.__db;

        virtualinvoke r2.beginTransaction();

     label1:
        interfaceinvoke $r1.executeUpdateDelete();

        r2 = r0.__db;

        virtualinvoke r2.setTransactionSuccessful();

     label2:
        r2 = r0.__db;

        virtualinvoke r2.endTransaction();

        r3 = r0.__preparedStmtOfPruneFinishedWorkWithZeroDependentsIgnoringKeepForAtLeast;

        virtualinvoke r3.release($r1);

        return;

     label3:
        $r4 := @caughtexception;

        r2 = r0.__db;

        virtualinvoke r2.endTransaction();

        r3 = r0.__preparedStmtOfPruneFinishedWorkWithZeroDependentsIgnoringKeepForAtLeast;

        virtualinvoke r3.release($r1);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int resetScheduledState()
    {
        java.lang.Throwable r4;
        androidx.room.RoomDatabase r1;
        int $i0;
        androidx.room.SharedSQLiteStatement r2;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.sqlite.db.SupportSQLiteStatement $r3;

        r0 := @this;

        r1 = r0.__db;

        virtualinvoke r1.assertNotSuspendingTransaction();

        r2 = r0.__preparedStmtOfResetScheduledState;

        $r3 = virtualinvoke r2.acquire();

        r1 = r0.__db;

        virtualinvoke r1.beginTransaction();

     label1:
        $i0 = interfaceinvoke $r3.executeUpdateDelete();

        r1 = r0.__db;

        virtualinvoke r1.setTransactionSuccessful();

     label2:
        r1 = r0.__db;

        virtualinvoke r1.endTransaction();

        r2 = r0.__preparedStmtOfResetScheduledState;

        virtualinvoke r2.release($r3);

        return $i0;

     label3:
        r4 := @caughtexception;

        r1 = r0.__db;

        virtualinvoke r1.endTransaction();

        r2 = r0.__preparedStmtOfResetScheduledState;

        virtualinvoke r2.release($r3);

        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int resetWorkSpecRunAttemptCount(java.lang.String)
    {
        java.lang.Throwable r5;
        androidx.room.RoomDatabase r2;
        int $i0;
        androidx.room.SharedSQLiteStatement r3;
        java.lang.String $r1;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.sqlite.db.SupportSQLiteStatement $r4;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.__db;

        virtualinvoke r2.assertNotSuspendingTransaction();

        r3 = r0.__preparedStmtOfResetWorkSpecRunAttemptCount;

        $r4 = virtualinvoke r3.acquire();

        if $r1 != null goto label1;

        interfaceinvoke $r4.bindNull(1);

        goto label2;

     label1:
        interfaceinvoke $r4.bindString(1, $r1);

     label2:
        r2 = r0.__db;

        virtualinvoke r2.beginTransaction();

     label3:
        $i0 = interfaceinvoke $r4.executeUpdateDelete();

        r2 = r0.__db;

        virtualinvoke r2.setTransactionSuccessful();

     label4:
        r2 = r0.__db;

        virtualinvoke r2.endTransaction();

        r3 = r0.__preparedStmtOfResetWorkSpecRunAttemptCount;

        virtualinvoke r3.release($r4);

        return $i0;

     label5:
        r5 := @caughtexception;

        r2 = r0.__db;

        virtualinvoke r2.endTransaction();

        r3 = r0.__preparedStmtOfResetWorkSpecRunAttemptCount;

        virtualinvoke r3.release($r4);

        throw r5;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void setOutput(java.lang.String, androidx.work.Data)
    {
        java.lang.Throwable $r7;
        byte[] $r6;
        androidx.room.RoomDatabase r3;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.room.SharedSQLiteStatement r4;
        java.lang.String $r1;
        androidx.work.Data $r2;
        androidx.sqlite.db.SupportSQLiteStatement $r5;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        r3 = r0.__db;

        virtualinvoke r3.assertNotSuspendingTransaction();

        r4 = r0.__preparedStmtOfSetOutput;

        $r5 = virtualinvoke r4.acquire();

        $r6 = androidx.work.Data.toByteArrayInternal($r2);

        if $r6 != null goto label1;

        interfaceinvoke $r5.bindNull(1);

        goto label2;

     label1:
        interfaceinvoke $r5.bindBlob(1, $r6);

     label2:
        if $r1 != null goto label3;

        interfaceinvoke $r5.bindNull(2);

        goto label4;

     label3:
        interfaceinvoke $r5.bindString(2, $r1);

     label4:
        r3 = r0.__db;

        virtualinvoke r3.beginTransaction();

     label5:
        interfaceinvoke $r5.executeUpdateDelete();

        r3 = r0.__db;

        virtualinvoke r3.setTransactionSuccessful();

     label6:
        r3 = r0.__db;

        virtualinvoke r3.endTransaction();

        r4 = r0.__preparedStmtOfSetOutput;

        virtualinvoke r4.release($r5);

        return;

     label7:
        $r7 := @caughtexception;

        r3 = r0.__db;

        virtualinvoke r3.endTransaction();

        r4 = r0.__preparedStmtOfSetOutput;

        virtualinvoke r4.release($r5);

        throw $r7;

        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void setPeriodStartTime(java.lang.String, long)
    {
        java.lang.Throwable $r5;
        androidx.room.RoomDatabase r3;
        androidx.room.SharedSQLiteStatement r4;
        long $l0;
        java.lang.String $r1;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.sqlite.db.SupportSQLiteStatement $r2;

        r0 := @this;

        $r1 := @parameter0;

        $l0 := @parameter1;

        r3 = r0.__db;

        virtualinvoke r3.assertNotSuspendingTransaction();

        r4 = r0.__preparedStmtOfSetPeriodStartTime;

        $r2 = virtualinvoke r4.acquire();

        interfaceinvoke $r2.bindLong(1, $l0);

        if $r1 != null goto label1;

        interfaceinvoke $r2.bindNull(2);

        goto label2;

     label1:
        interfaceinvoke $r2.bindString(2, $r1);

     label2:
        r3 = r0.__db;

        virtualinvoke r3.beginTransaction();

     label3:
        interfaceinvoke $r2.executeUpdateDelete();

        r3 = r0.__db;

        virtualinvoke r3.setTransactionSuccessful();

     label4:
        r3 = r0.__db;

        virtualinvoke r3.endTransaction();

        r4 = r0.__preparedStmtOfSetPeriodStartTime;

        virtualinvoke r4.release($r2);

        return;

     label5:
        $r5 := @caughtexception;

        r3 = r0.__db;

        virtualinvoke r3.endTransaction();

        r4 = r0.__preparedStmtOfSetPeriodStartTime;

        virtualinvoke r4.release($r2);

        throw $r5;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public transient int setState(androidx.work.WorkInfo$State, java.lang.String[])
    {
        java.lang.Throwable r7;
        androidx.room.RoomDatabase r4;
        java.lang.String[] $r2;
        long l1;
        androidx.work.impl.model.WorkSpecDao_Impl r0;
        androidx.work.WorkInfo$State $r1;
        int i0, i2, $i3;
        java.lang.StringBuilder $r5;
        java.lang.String r3;
        androidx.sqlite.db.SupportSQLiteStatement $r6;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        r4 = r0.__db;

        virtualinvoke r4.assertNotSuspendingTransaction();

        $r5 = androidx.room.util.StringUtil.newStringBuilder();

        virtualinvoke $r5.append("UPDATE workspec SET state=");

        virtualinvoke $r5.append("?");

        virtualinvoke $r5.append(" WHERE id IN (");

        i0 = lengthof $r2;

        androidx.room.util.StringUtil.appendPlaceholders($r5, i0);

        virtualinvoke $r5.append(")");

        r3 = virtualinvoke $r5.toString();

        r4 = r0.__db;

        $r6 = virtualinvoke r4.compileStatement(r3);

        i0 = androidx.work.impl.model.WorkTypeConverters.stateToInt($r1);

        l1 = (long) i0;

        interfaceinvoke $r6.bindLong(1, l1);

        i0 = 2;

        i2 = lengthof $r2;

        $i3 = 0;

     label1:
        if $i3 >= i2 goto label4;

        r3 = $r2[$i3];

        if r3 != null goto label2;

        interfaceinvoke $r6.bindNull(i0);

        goto label3;

     label2:
        interfaceinvoke $r6.bindString(i0, r3);

     label3:
        i0 = i0 + 1;

        $i3 = $i3 + 1;

        goto label1;

     label4:
        r4 = r0.__db;

        virtualinvoke r4.beginTransaction();

     label5:
        i0 = interfaceinvoke $r6.executeUpdateDelete();

        r4 = r0.__db;

        virtualinvoke r4.setTransactionSuccessful();

     label6:
        r4 = r0.__db;

        virtualinvoke r4.endTransaction();

        return i0;

     label7:
        r7 := @caughtexception;

        r4 = r0.__db;

        virtualinvoke r4.endTransaction();

        goto label8;

     label8:
        throw r7;

        catch java.lang.Throwable from label5 to label6 with label7;
    }
}
