abstract class androidx.appcompat.widget.AbsActionBarView extends android.view.ViewGroup
{
    private static final int FADE_DURATION;
    protected androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter;
    protected int mContentHeight;
    private boolean mEatingHover;
    private boolean mEatingTouch;
    protected androidx.appcompat.widget.ActionMenuView mMenuView;
    protected final android.content.Context mPopupContext;
    protected final androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener;
    protected androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim;

    void <init>(android.content.Context)
    {
        android.content.Context $r1;
        androidx.appcompat.widget.AbsActionBarView r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>($r1, null);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        androidx.appcompat.widget.AbsActionBarView r0;
        android.util.AttributeSet $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.<init>($r1, $r2, 0);

        return;
    }

    void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        androidx.appcompat.widget.AbsActionBarView r0;
        androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener r3;
        android.util.AttributeSet $r2;
        android.util.TypedValue r4;
        int $i0;
        android.view.ContextThemeWrapper $r6;
        android.content.res.Resources$Theme $r5;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 := @parameter2;

        specialinvoke r0.<init>($r1, $r2, $i0);

        r3 = new androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener;

        specialinvoke r3.<init>(r0);

        r0.mVisAnimListener = r3;

        r4 = new android.util.TypedValue;

        specialinvoke r4.<init>();

        $r5 = virtualinvoke $r1.getTheme();

        $i0 = androidx.appcompat.R$attr.actionBarPopupTheme;

        $z0 = virtualinvoke $r5.resolveAttribute($i0, r4, 1);

        if $z0 == 0 goto label1;

        $i0 = r4.resourceId;

        if $i0 == 0 goto label1;

        $r6 = new android.view.ContextThemeWrapper;

        $i0 = r4.resourceId;

        specialinvoke $r6.<init>($r1, $i0);

        r0.mPopupContext = $r6;

        return;

     label1:
        r0.mPopupContext = $r1;

        return;
    }

    static void access$001(androidx.appcompat.widget.AbsActionBarView, int)
    {
        int $i0;
        androidx.appcompat.widget.AbsActionBarView $r0;

        $r0 := @parameter0;

        $i0 := @parameter1;

        specialinvoke $r0.setVisibility($i0);

        return;
    }

    static void access$101(androidx.appcompat.widget.AbsActionBarView, int)
    {
        int $i0;
        androidx.appcompat.widget.AbsActionBarView $r0;

        $r0 := @parameter0;

        $i0 := @parameter1;

        specialinvoke $r0.setVisibility($i0);

        return;
    }

    protected static int next(int, int, boolean)
    {
        int $i0, $i1;
        boolean $z0;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $z0 := @parameter2;

        if $z0 == 0 goto label1;

        $i0 = $i0 - $i1;

        return $i0;

     label1:
        $i0 = $i0 + $i1;

        return $i0;
    }

    public void animateToVisibility(int)
    {
        int $i0;
        androidx.appcompat.widget.AbsActionBarView r0;
        androidx.core.view.ViewPropertyAnimatorCompat $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = virtualinvoke r0.setupAnimatorToVisibility($i0, 200L);

        virtualinvoke $r1.start();

        return;
    }

    public boolean canShowOverflowMenu()
    {
        int $i0;
        androidx.appcompat.widget.AbsActionBarView r0;
        boolean $z0;

        r0 := @this;

        $z0 = virtualinvoke r0.isOverflowReserved();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.getVisibility();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void dismissPopupMenus()
    {
        androidx.appcompat.widget.AbsActionBarView r0;
        androidx.appcompat.widget.ActionMenuPresenter $r1;

        r0 := @this;

        $r1 = r0.mActionMenuPresenter;

        if $r1 == null goto label1;

        virtualinvoke $r1.dismissPopupMenus();

     label1:
        return;
    }

    public int getAnimatedVisibility()
    {
        androidx.appcompat.widget.AbsActionBarView r0;
        androidx.core.view.ViewPropertyAnimatorCompat $r1;
        int $i0;
        androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener $r2;

        r0 := @this;

        $r1 = r0.mVisibilityAnim;

        if $r1 == null goto label1;

        $r2 = r0.mVisAnimListener;

        $i0 = $r2.mFinalVisibility;

        return $i0;

     label1:
        $i0 = virtualinvoke r0.getVisibility();

        return $i0;
    }

    public int getContentHeight()
    {
        int i0;
        androidx.appcompat.widget.AbsActionBarView r0;

        r0 := @this;

        i0 = r0.mContentHeight;

        return i0;
    }

    public boolean hideOverflowMenu()
    {
        androidx.appcompat.widget.AbsActionBarView r0;
        androidx.appcompat.widget.ActionMenuPresenter $r1;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mActionMenuPresenter;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.hideOverflowMenu();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowPending()
    {
        androidx.appcompat.widget.AbsActionBarView r0;
        androidx.appcompat.widget.ActionMenuPresenter $r1;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mActionMenuPresenter;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.isOverflowMenuShowPending();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowMenuShowing()
    {
        androidx.appcompat.widget.AbsActionBarView r0;
        androidx.appcompat.widget.ActionMenuPresenter $r1;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mActionMenuPresenter;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.isOverflowMenuShowing();

        return $z0;

     label1:
        return 0;
    }

    public boolean isOverflowReserved()
    {
        androidx.appcompat.widget.AbsActionBarView r0;
        androidx.appcompat.widget.ActionMenuPresenter $r1;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mActionMenuPresenter;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.isOverflowReserved();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected int measureChildView(android.view.View, int, int, int)
    {
        androidx.appcompat.widget.AbsActionBarView r0;
        int $i0, $i1, $i2, $i3;
        android.view.View $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i2 := @parameter1;

        $i0 := @parameter2;

        $i1 := @parameter3;

        $i3 = android.view.View$MeasureSpec.makeMeasureSpec($i2, -2147483648);

        virtualinvoke $r1.measure($i3, $i0);

        $i0 = virtualinvoke $r1.getMeasuredWidth();

        $i2 = $i2 - $i0;

        $i2 = $i2 - $i1;

        $i2 = java.lang.Math.max(0, $i2);

        return $i2;
    }

    protected void onConfigurationChanged(android.content.res.Configuration)
    {
        android.content.Context $r2;
        androidx.appcompat.widget.AbsActionBarView r0;
        int[] $r3;
        android.content.res.Configuration $r1;
        int $i0;
        androidx.appcompat.widget.ActionMenuPresenter $r5;
        android.content.res.TypedArray $r4;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.onConfigurationChanged($r1);

        $r2 = virtualinvoke r0.getContext();

        $r3 = androidx.appcompat.R$styleable.ActionBar;

        $i0 = androidx.appcompat.R$attr.actionBarStyle;

        $r4 = virtualinvoke $r2.obtainStyledAttributes(null, $r3, $i0, 0);

        $i0 = androidx.appcompat.R$styleable.ActionBar_height;

        $i0 = virtualinvoke $r4.getLayoutDimension($i0, 0);

        virtualinvoke r0.setContentHeight($i0);

        virtualinvoke $r4.recycle();

        $r5 = r0.mActionMenuPresenter;

        if $r5 == null goto label1;

        virtualinvoke $r5.onConfigurationChanged($r1);

     label1:
        return;
    }

    public boolean onHoverEvent(android.view.MotionEvent)
    {
        androidx.appcompat.widget.AbsActionBarView r0;
        android.view.MotionEvent $r1;
        int $i0;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 = virtualinvoke $r1.getActionMasked();

        if $i0 != 9 goto label1;

        r0.mEatingHover = 0;

     label1:
        z0 = r0.mEatingHover;

        if z0 != 0 goto label2;

        z0 = specialinvoke r0.onHoverEvent($r1);

        if $i0 != 9 goto label2;

        if z0 != 0 goto label2;

        r0.mEatingHover = 1;

     label2:
        if $i0 == 10 goto label3;

        if $i0 != 3 goto label4;

     label3:
        r0.mEatingHover = 0;

     label4:
        return 1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.appcompat.widget.AbsActionBarView r0;
        android.view.MotionEvent $r1;
        int $i0;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 = virtualinvoke $r1.getActionMasked();

        if $i0 != 0 goto label1;

        r0.mEatingTouch = 0;

     label1:
        z0 = r0.mEatingTouch;

        if z0 != 0 goto label2;

        z0 = specialinvoke r0.onTouchEvent($r1);

        if $i0 != 0 goto label2;

        if z0 != 0 goto label2;

        r0.mEatingTouch = 1;

     label2:
        if $i0 == 1 goto label3;

        if $i0 != 3 goto label4;

     label3:
        r0.mEatingTouch = 0;

     label4:
        return 1;
    }

    protected int positionChild(android.view.View, int, int, int, boolean)
    {
        androidx.appcompat.widget.AbsActionBarView r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        $i2 := @parameter3;

        $z0 := @parameter4;

        $i3 = virtualinvoke $r1.getMeasuredWidth();

        $i4 = virtualinvoke $r1.getMeasuredHeight();

        $i2 = $i2 - $i4;

        $i2 = $i2 / 2;

        $i1 = $i2 + $i1;

        if $z0 == 0 goto label1;

        $i2 = $i0 - $i3;

        $i4 = $i1 + $i4;

        virtualinvoke $r1.layout($i2, $i1, $i0, $i4);

        goto label2;

     label1:
        $i2 = $i0 + $i3;

        $i4 = $i1 + $i4;

        virtualinvoke $r1.layout($i0, $i1, $i2, $i4);

     label2:
        if $z0 == 0 goto label3;

        $i0 = neg $i3;

        return $i0;

     label3:
        return $i3;
    }

    public void postShowOverflowMenu()
    {
        androidx.appcompat.widget.AbsActionBarView r0;
        androidx.appcompat.widget.AbsActionBarView$1 $r1;

        r0 := @this;

        $r1 = new androidx.appcompat.widget.AbsActionBarView$1;

        specialinvoke $r1.<init>(r0);

        virtualinvoke r0.post($r1);

        return;
    }

    public void setContentHeight(int)
    {
        int $i0;
        androidx.appcompat.widget.AbsActionBarView r0;

        r0 := @this;

        $i0 := @parameter0;

        r0.mContentHeight = $i0;

        virtualinvoke r0.requestLayout();

        return;
    }

    public void setVisibility(int)
    {
        androidx.appcompat.widget.AbsActionBarView r0;
        androidx.core.view.ViewPropertyAnimatorCompat $r1;
        int $i0, $i1;

        r0 := @this;

        $i0 := @parameter0;

        $i1 = virtualinvoke r0.getVisibility();

        if $i0 == $i1 goto label2;

        $r1 = r0.mVisibilityAnim;

        if $r1 == null goto label1;

        virtualinvoke $r1.cancel();

     label1:
        specialinvoke r0.setVisibility($i0);

     label2:
        return;
    }

    public androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int, long)
    {
        androidx.appcompat.widget.AbsActionBarView r0;
        androidx.core.view.ViewPropertyAnimatorCompat r1;
        int $i0, $i2;
        long $l1;
        androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener $r2;

        r0 := @this;

        $i0 := @parameter0;

        $l1 := @parameter1;

        r1 = r0.mVisibilityAnim;

        if r1 == null goto label1;

        virtualinvoke r1.cancel();

     label1:
        if $i0 != 0 goto label3;

        $i2 = virtualinvoke r0.getVisibility();

        if $i2 == 0 goto label2;

        virtualinvoke r0.setAlpha(0.0F);

     label2:
        r1 = androidx.core.view.ViewCompat.animate(r0);

        r1 = virtualinvoke r1.alpha(1.0F);

        virtualinvoke r1.setDuration($l1);

        $r2 = r0.mVisAnimListener;

        $r2 = virtualinvoke $r2.withFinalVisibility(r1, $i0);

        virtualinvoke r1.setListener($r2);

        return r1;

     label3:
        r1 = androidx.core.view.ViewCompat.animate(r0);

        r1 = virtualinvoke r1.alpha(0.0F);

        virtualinvoke r1.setDuration($l1);

        $r2 = r0.mVisAnimListener;

        $r2 = virtualinvoke $r2.withFinalVisibility(r1, $i0);

        virtualinvoke r1.setListener($r2);

        return r1;
    }

    public boolean showOverflowMenu()
    {
        androidx.appcompat.widget.AbsActionBarView r0;
        androidx.appcompat.widget.ActionMenuPresenter $r1;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mActionMenuPresenter;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.showOverflowMenu();

        return $z0;

     label1:
        return 0;
    }
}
