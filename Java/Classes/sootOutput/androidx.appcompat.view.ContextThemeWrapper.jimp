public class androidx.appcompat.view.ContextThemeWrapper extends android.content.ContextWrapper
{
    private android.view.LayoutInflater mInflater;
    private android.content.res.Configuration mOverrideConfiguration;
    private android.content.res.Resources mResources;
    private android.content.res.Resources$Theme mTheme;
    private int mThemeResource;

    public void <init>()
    {
        androidx.appcompat.view.ContextThemeWrapper r0;

        r0 := @this;

        specialinvoke r0.<init>(null);

        return;
    }

    public void <init>(android.content.Context, int)
    {
        int $i0;
        android.content.Context $r1;
        androidx.appcompat.view.ContextThemeWrapper r0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        specialinvoke r0.<init>($r1);

        r0.mThemeResource = $i0;

        return;
    }

    public void <init>(android.content.Context, android.content.res.Resources$Theme)
    {
        android.content.Context $r1;
        android.content.res.Resources$Theme $r2;
        androidx.appcompat.view.ContextThemeWrapper r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.<init>($r1);

        r0.mTheme = $r2;

        return;
    }

    private android.content.res.Resources getResourcesInternal()
    {
        android.content.Context $r3;
        android.content.res.Configuration r2;
        androidx.appcompat.view.ContextThemeWrapper r0;
        android.content.res.Resources r1;

        r0 := @this;

        r1 = r0.mResources;

        if r1 != null goto label2;

        r2 = r0.mOverrideConfiguration;

        if r2 != null goto label1;

        r1 = specialinvoke r0.getResources();

        r0.mResources = r1;

        goto label2;

     label1:
        r2 = r0.mOverrideConfiguration;

        $r3 = virtualinvoke r0.createConfigurationContext(r2);

        r1 = virtualinvoke $r3.getResources();

        r0.mResources = r1;

     label2:
        r1 = r0.mResources;

        return r1;
    }

    private void initializeTheme()
    {
        android.content.Context $r3;
        int $i0;
        android.content.res.Resources$Theme r1, $r4;
        androidx.appcompat.view.ContextThemeWrapper r0;
        boolean z0;
        android.content.res.Resources $r2;

        r0 := @this;

        r1 = r0.mTheme;

        if r1 != null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if z0 == 0 goto label3;

        $r2 = virtualinvoke r0.getResources();

        r1 = virtualinvoke $r2.newTheme();

        r0.mTheme = r1;

        $r3 = virtualinvoke r0.getBaseContext();

        r1 = virtualinvoke $r3.getTheme();

        if r1 == null goto label3;

        $r4 = r0.mTheme;

        virtualinvoke $r4.setTo(r1);

     label3:
        r1 = r0.mTheme;

        $i0 = r0.mThemeResource;

        virtualinvoke r0.onApplyThemeResource(r1, $i0, z0);

        return;
    }

    public void applyOverrideConfiguration(android.content.res.Configuration)
    {
        java.lang.IllegalStateException $r4;
        android.content.res.Configuration $r1, $r3;
        androidx.appcompat.view.ContextThemeWrapper r0;
        android.content.res.Resources $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mResources;

        if $r2 != null goto label2;

        $r3 = r0.mOverrideConfiguration;

        if $r3 != null goto label1;

        $r3 = new android.content.res.Configuration;

        specialinvoke $r3.<init>($r1);

        r0.mOverrideConfiguration = $r3;

        return;

     label1:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<init>("Override configuration has already been set");

        throw $r4;

     label2:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<init>("getResources() or getAssets() has already been called");

        throw $r4;
    }

    protected void attachBaseContext(android.content.Context)
    {
        android.content.Context $r1;
        androidx.appcompat.view.ContextThemeWrapper r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.attachBaseContext($r1);

        return;
    }

    public android.content.res.AssetManager getAssets()
    {
        android.content.res.AssetManager $r2;
        androidx.appcompat.view.ContextThemeWrapper r0;
        android.content.res.Resources $r1;

        r0 := @this;

        $r1 = virtualinvoke r0.getResources();

        $r2 = virtualinvoke $r1.getAssets();

        return $r2;
    }

    public android.content.res.Resources getResources()
    {
        androidx.appcompat.view.ContextThemeWrapper r0;
        android.content.res.Resources $r1;

        r0 := @this;

        $r1 = specialinvoke r0.getResourcesInternal();

        return $r1;
    }

    public java.lang.Object getSystemService(java.lang.String)
    {
        android.content.Context $r4;
        android.view.LayoutInflater $r3;
        java.lang.Object $r5;
        java.lang.String $r1, $r2;
        androidx.appcompat.view.ContextThemeWrapper r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = "layout_inflater";

        $z0 = virtualinvoke $r2.equals($r1);

        if $z0 == 0 goto label2;

        $r3 = r0.mInflater;

        if $r3 != null goto label1;

        $r4 = virtualinvoke r0.getBaseContext();

        $r3 = android.view.LayoutInflater.from($r4);

        $r3 = virtualinvoke $r3.cloneInContext(r0);

        r0.mInflater = $r3;

     label1:
        $r3 = r0.mInflater;

        return $r3;

     label2:
        $r4 = virtualinvoke r0.getBaseContext();

        $r5 = virtualinvoke $r4.getSystemService($r1);

        return $r5;
    }

    public android.content.res.Resources$Theme getTheme()
    {
        int $i0;
        android.content.res.Resources$Theme $r1;
        androidx.appcompat.view.ContextThemeWrapper r0;

        r0 := @this;

        $r1 = r0.mTheme;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $i0 = r0.mThemeResource;

        if $i0 != 0 goto label2;

        $i0 = androidx.appcompat.R$style.Theme_AppCompat_Light;

        r0.mThemeResource = $i0;

     label2:
        specialinvoke r0.initializeTheme();

        $r1 = r0.mTheme;

        return $r1;
    }

    public int getThemeResId()
    {
        int i0;
        androidx.appcompat.view.ContextThemeWrapper r0;

        r0 := @this;

        i0 = r0.mThemeResource;

        return i0;
    }

    protected void onApplyThemeResource(android.content.res.Resources$Theme, int, boolean)
    {
        int $i0;
        android.content.res.Resources$Theme $r1;
        androidx.appcompat.view.ContextThemeWrapper r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $z0 := @parameter2;

        virtualinvoke $r1.applyStyle($i0, 1);

        return;
    }

    public void setTheme(int)
    {
        int $i0, $i1;
        androidx.appcompat.view.ContextThemeWrapper r0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 = r0.mThemeResource;

        if $i1 == $i0 goto label1;

        r0.mThemeResource = $i0;

        specialinvoke r0.initializeTheme();

     label1:
        return;
    }
}
