public class androidx.work.impl.foreground.SystemForegroundService extends androidx.lifecycle.LifecycleService implements androidx.work.impl.foreground.SystemForegroundDispatcher$Callback
{
    private static final java.lang.String TAG;
    private static androidx.work.impl.foreground.SystemForegroundService sForegroundService;
    androidx.work.impl.foreground.SystemForegroundDispatcher mDispatcher;
    private android.os.Handler mHandler;
    private boolean mIsShutdown;
    android.app.NotificationManager mNotificationManager;

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = androidx.work.Logger.tagWithPrefix("SystemFgService");

        androidx.work.impl.foreground.SystemForegroundService.TAG = $r0;

        androidx.work.impl.foreground.SystemForegroundService.sForegroundService = null;

        return;
    }

    public void <init>()
    {
        androidx.work.impl.foreground.SystemForegroundService r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static androidx.work.impl.foreground.SystemForegroundService getInstance()
    {
        androidx.work.impl.foreground.SystemForegroundService r0;

        r0 = androidx.work.impl.foreground.SystemForegroundService.sForegroundService;

        return r0;
    }

    private void initializeDispatcher()
    {
        android.content.Context $r3;
        android.app.NotificationManager $r5;
        android.os.Handler $r1;
        android.os.Looper $r2;
        androidx.work.impl.foreground.SystemForegroundService r0;
        java.lang.Object $r4;
        androidx.work.impl.foreground.SystemForegroundDispatcher $r6;

        r0 := @this;

        $r1 = new android.os.Handler;

        $r2 = android.os.Looper.getMainLooper();

        specialinvoke $r1.<init>($r2);

        r0.mHandler = $r1;

        $r3 = virtualinvoke r0.getApplicationContext();

        $r4 = virtualinvoke $r3.getSystemService("notification");

        $r5 = (android.app.NotificationManager) $r4;

        r0.mNotificationManager = $r5;

        $r6 = new androidx.work.impl.foreground.SystemForegroundDispatcher;

        $r3 = virtualinvoke r0.getApplicationContext();

        specialinvoke $r6.<init>($r3);

        r0.mDispatcher = $r6;

        virtualinvoke $r6.setCallback(r0);

        return;
    }

    public void cancelNotification(int)
    {
        androidx.work.impl.foreground.SystemForegroundService$3 $r2;
        android.os.Handler $r1;
        androidx.work.impl.foreground.SystemForegroundService r0;
        int $i0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mHandler;

        $r2 = new androidx.work.impl.foreground.SystemForegroundService$3;

        specialinvoke $r2.<init>(r0, $i0);

        virtualinvoke $r1.post($r2);

        return;
    }

    public void notify(int, android.app.Notification)
    {
        androidx.work.impl.foreground.SystemForegroundService$2 $r3;
        android.os.Handler $r2;
        androidx.work.impl.foreground.SystemForegroundService r0;
        int $i0;
        android.app.Notification $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $r2 = r0.mHandler;

        $r3 = new androidx.work.impl.foreground.SystemForegroundService$2;

        specialinvoke $r3.<init>(r0, $i0, $r1);

        virtualinvoke $r2.post($r3);

        return;
    }

    public void onCreate()
    {
        androidx.work.impl.foreground.SystemForegroundService r0;

        r0 := @this;

        specialinvoke r0.onCreate();

        androidx.work.impl.foreground.SystemForegroundService.sForegroundService = r0;

        specialinvoke r0.initializeDispatcher();

        return;
    }

    public void onDestroy()
    {
        androidx.work.impl.foreground.SystemForegroundService r0;
        androidx.work.impl.foreground.SystemForegroundDispatcher $r1;

        r0 := @this;

        specialinvoke r0.onDestroy();

        $r1 = r0.mDispatcher;

        virtualinvoke $r1.onDestroy();

        return;
    }

    public int onStartCommand(android.content.Intent, int, int)
    {
        androidx.work.impl.foreground.SystemForegroundService r0;
        android.content.Intent $r1;
        androidx.work.Logger $r4;
        java.lang.Throwable[] $r3;
        int $i0, $i1;
        java.lang.String $r2;
        androidx.work.impl.foreground.SystemForegroundDispatcher $r5;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        specialinvoke r0.onStartCommand($r1, $i0, $i1);

        $z0 = r0.mIsShutdown;

        if $z0 == 0 goto label1;

        $r4 = androidx.work.Logger.get();

        $r2 = androidx.work.impl.foreground.SystemForegroundService.TAG;

        $r3 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r4.info($r2, "Re-initializing SystemForegroundService after a request to shut-down.", $r3);

        $r5 = r0.mDispatcher;

        virtualinvoke $r5.onDestroy();

        specialinvoke r0.initializeDispatcher();

        r0.mIsShutdown = 0;

     label1:
        if $r1 == null goto label2;

        $r5 = r0.mDispatcher;

        virtualinvoke $r5.onStartCommand($r1);

     label2:
        return 3;
    }

    public void startForeground(int, int, android.app.Notification)
    {
        androidx.work.impl.foreground.SystemForegroundService$1 $r3;
        android.os.Handler $r2;
        androidx.work.impl.foreground.SystemForegroundService r0;
        int $i0, $i1;
        android.app.Notification $r1;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $r1 := @parameter2;

        $r2 = r0.mHandler;

        $r3 = new androidx.work.impl.foreground.SystemForegroundService$1;

        specialinvoke $r3.<init>(r0, $i0, $r1, $i1);

        virtualinvoke $r2.post($r3);

        return;
    }

    public void stop()
    {
        androidx.work.Logger $r1;
        java.lang.Throwable[] $r3;
        androidx.work.impl.foreground.SystemForegroundService r0;
        int $i0;
        java.lang.String $r2;

        r0 := @this;

        r0.mIsShutdown = 1;

        $r1 = androidx.work.Logger.get();

        $r2 = androidx.work.impl.foreground.SystemForegroundService.TAG;

        $r3 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r1.debug($r2, "All commands completed.", $r3);

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 26 goto label1;

        virtualinvoke r0.stopForeground(1);

     label1:
        androidx.work.impl.foreground.SystemForegroundService.sForegroundService = null;

        virtualinvoke r0.stopSelf();

        return;
    }
}
