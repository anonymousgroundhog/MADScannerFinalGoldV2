public final class androidx.core.location.LocationManagerCompat extends java.lang.Object
{
    private static final long GET_CURRENT_LOCATION_TIMEOUT_MS;
    private static final long MAX_CURRENT_LOCATION_AGE_MS;
    private static final long PRE_N_LOOPER_TIMEOUT_S;
    private static java.lang.reflect.Field sContextField;
    private static final androidx.collection.SimpleArrayMap sGnssStatusListeners;

    static void <clinit>()
    {
        androidx.collection.SimpleArrayMap $r0;

        $r0 = new androidx.collection.SimpleArrayMap;

        specialinvoke $r0.<init>();

        androidx.core.location.LocationManagerCompat.sGnssStatusListeners = $r0;

        return;
    }

    private void <init>()
    {
        androidx.core.location.LocationManagerCompat r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static void getCurrentLocation(android.location.LocationManager, java.lang.String, androidx.core.os.CancellationSignal, java.util.concurrent.Executor, androidx.core.util.Consumer)
    {
        java.util.concurrent.Executor $r3;
        androidx.core.os.CancellationSignal $r2;
        long $l2, $l3;
        androidx.core.util.Consumer r4;
        byte $b0;
        androidx.core.location.LocationManagerCompat$CancellableLocationListener r6, $r9;
        android.os.Looper $r7;
        int i1;
        java.lang.String $r1;
        android.location.Location $r5;
        androidx.core.location.LocationManagerCompat$1 $r8;
        android.location.LocationManager $r0;
        androidx.core.location.LocationManagerCompat$2 $r10;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        $r3 := @parameter3;

        r4 := @parameter4;

        i1 = android.os.Build$VERSION.SDK_INT;

        if i1 < 30 goto label1;

        androidx.core.location.LocationManagerCompat$Api30Impl.getCurrentLocation($r0, $r1, $r2, $r3, r4);

        return;

     label1:
        if $r2 == null goto label2;

        virtualinvoke $r2.throwIfCanceled();

     label2:
        $r5 = virtualinvoke $r0.getLastKnownLocation($r1);

        if $r5 == null goto label3;

        $l2 = android.os.SystemClock.elapsedRealtime();

        $l3 = androidx.core.location.LocationCompat.getElapsedRealtimeMillis($r5);

        $l2 = $l2 - $l3;

        $b0 = $l2 cmp 10000L;

        i1 = (int) $b0;

        if i1 >= 0 goto label3;

        $r8 = new androidx.core.location.LocationManagerCompat$1;

        specialinvoke $r8.<init>(r4, $r5);

        interfaceinvoke $r3.execute($r8);

        return;

     label3:
        $r9 = new androidx.core.location.LocationManagerCompat$CancellableLocationListener;

        r6 = $r9;

        specialinvoke $r9.<init>($r0, $r3, r4);

        $r7 = android.os.Looper.getMainLooper();

        virtualinvoke $r0.requestLocationUpdates($r1, 0L, 0.0F, r6, $r7);

        if $r2 == null goto label4;

        $r10 = new androidx.core.location.LocationManagerCompat$2;

        specialinvoke $r10.<init>(r6);

        virtualinvoke $r2.setOnCancelListener($r10);

     label4:
        virtualinvoke r6.startTimeout(30000L);

        return;
    }

    public static java.lang.String getGnssHardwareModelName(android.location.LocationManager)
    {
        int $i0;
        java.lang.String $r1;
        android.location.LocationManager $r0;

        $r0 := @parameter0;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 28 goto label1;

        $r1 = androidx.core.location.LocationManagerCompat$Api28Impl.getGnssHardwareModelName($r0);

        return $r1;

     label1:
        return null;
    }

    public static int getGnssYearOfHardware(android.location.LocationManager)
    {
        int $i0;
        android.location.LocationManager $r0;

        $r0 := @parameter0;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 28 goto label1;

        $i0 = androidx.core.location.LocationManagerCompat$Api28Impl.getGnssYearOfHardware($r0);

        return $i0;

     label1:
        return 0;
    }

    public static boolean isLocationEnabled(android.location.LocationManager)
    {
        android.content.Context r4;
        java.lang.IllegalAccessException r7;
        java.lang.reflect.Field r1;
        java.lang.ClassCastException r10;
        java.lang.NoSuchFieldException r8;
        android.content.ContentResolver $r5;
        int i0;
        java.lang.Class r2;
        java.lang.Object $r3;
        java.lang.SecurityException r9;
        java.lang.String $r6;
        android.location.LocationManager $r0;
        boolean $z0;

        $r0 := @parameter0;

        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 < 28 goto label01;

        $z0 = androidx.core.location.LocationManagerCompat$Api28Impl.isLocationEnabled($r0);

        return $z0;

     label01:
        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 > 19 goto label18;

        r1 = androidx.core.location.LocationManagerCompat.sContextField;

        if r1 != null goto label05;

        r2 = class "Landroid/location/LocationManager;";

     label02:
        r1 = virtualinvoke r2.getDeclaredField("mContext");

     label03:
        androidx.core.location.LocationManagerCompat.sContextField = r1;

     label04:
        virtualinvoke r1.setAccessible(1);

     label05:
        r1 = androidx.core.location.LocationManagerCompat.sContextField;

     label06:
        $r3 = virtualinvoke r1.get($r0);

     label07:
        r4 = (android.content.Context) $r3;

     label08:
        if r4 == null goto label13;

        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 != 19 goto label11;

     label09:
        $r5 = virtualinvoke r4.getContentResolver();

        i0 = android.provider.Settings$Secure.getInt($r5, "location_mode", 0);

     label10:
        if i0 == 0 goto label20;

        return 1;

     label11:
        $r5 = virtualinvoke r4.getContentResolver();

        $r6 = android.provider.Settings$Secure.getString($r5, "location_providers_allowed");

        $z0 = android.text.TextUtils.isEmpty($r6);

     label12:
        $z0 = $z0 ^ 1;

        return $z0;

     label13:
        goto label18;

     label14:
        r7 := @caughtexception;

        goto label18;

     label15:
        r8 := @caughtexception;

        goto label18;

     label16:
        r9 := @caughtexception;

        goto label18;

     label17:
        r10 := @caughtexception;

     label18:
        $z0 = virtualinvoke $r0.isProviderEnabled("network");

        if $z0 != 0 goto label19;

        $z0 = virtualinvoke $r0.isProviderEnabled("gps");

        if $z0 == 0 goto label20;

     label19:
        return 1;

     label20:
        return 0;

        catch java.lang.ClassCastException from label02 to label03 with label17;
        catch java.lang.ClassCastException from label04 to label05 with label17;
        catch java.lang.ClassCastException from label06 to label08 with label17;
        catch java.lang.ClassCastException from label09 to label10 with label17;
        catch java.lang.ClassCastException from label11 to label12 with label17;
        catch java.lang.SecurityException from label02 to label03 with label16;
        catch java.lang.SecurityException from label04 to label05 with label16;
        catch java.lang.SecurityException from label06 to label07 with label16;
        catch java.lang.SecurityException from label09 to label10 with label16;
        catch java.lang.SecurityException from label11 to label12 with label16;
        catch java.lang.NoSuchFieldException from label02 to label03 with label15;
        catch java.lang.NoSuchFieldException from label04 to label05 with label15;
        catch java.lang.NoSuchFieldException from label06 to label07 with label15;
        catch java.lang.NoSuchFieldException from label09 to label10 with label15;
        catch java.lang.NoSuchFieldException from label11 to label12 with label15;
        catch java.lang.IllegalAccessException from label02 to label03 with label14;
        catch java.lang.IllegalAccessException from label04 to label05 with label14;
        catch java.lang.IllegalAccessException from label06 to label07 with label14;
        catch java.lang.IllegalAccessException from label09 to label10 with label14;
        catch java.lang.IllegalAccessException from label11 to label12 with label14;
    }

    private static boolean registerGnssStatusCallback(android.location.LocationManager, android.os.Handler, java.util.concurrent.Executor, androidx.core.location.GnssStatusCompat$Callback)
    {
        java.lang.IllegalStateException $r23;
        java.util.concurrent.TimeoutException r22;
        android.os.Handler r1;
        android.os.Looper $r14, $r15;
        java.lang.Thread $r19;
        androidx.core.location.LocationManagerCompat$GnssStatusTransport r7;
        boolean $z0, $z1;
        java.lang.StringBuilder $r24;
        android.location.LocationManager r0;
        java.lang.Throwable r8, r10, r21, r29;
        java.util.concurrent.FutureTask r12;
        java.lang.Error $r27;
        long $l1, l2, $l3;
        androidx.core.location.GnssStatusCompat$Callback r3;
        androidx.core.location.LocationManagerCompat$GpsStatusTransport r4, r11;
        int i0;
        java.lang.Boolean r17;
        java.lang.String $r25;
        androidx.core.location.LocationManagerCompat$3 r13;
        androidx.collection.SimpleArrayMap $r5, r18;
        java.util.concurrent.Executor r2;
        java.lang.RuntimeException $r28;
        java.util.concurrent.TimeUnit r16;
        java.util.concurrent.ExecutionException r26;
        java.lang.InterruptedException r20;
        java.lang.Object $r6;
        androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport r9;

        r0 := @parameter0;

        r1 := @parameter1;

        r2 := @parameter2;

        r3 := @parameter3;

        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 < 30 goto label08;

        $r5 = androidx.core.location.LocationManagerCompat.sGnssStatusListeners;

        entermonitor $r5;

     label01:
        $r6 = virtualinvoke $r5.get(r3);

        r7 = (androidx.core.location.LocationManagerCompat$GnssStatusTransport) $r6;

        if r7 != null goto label02;

        r7 = new androidx.core.location.LocationManagerCompat$GnssStatusTransport;

        specialinvoke r7.<init>(r3);

     label02:
        $z0 = virtualinvoke r0.registerGnssStatusCallback(r2, r7);

        if $z0 == 0 goto label04;

        virtualinvoke $r5.put(r3, r7);

        exitmonitor $r5;

     label03:
        return 1;

     label04:
        exitmonitor $r5;

     label05:
        return 0;

     label06:
        r8 := @caughtexception;

        exitmonitor $r5;

     label07:
        throw r8;

     label08:
        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 < 24 goto label19;

        if r1 == null goto label09;

        $z0 = 1;

        goto label10;

     label09:
        $z0 = 0;

     label10:
        androidx.core.util.Preconditions.checkArgument($z0);

        $r5 = androidx.core.location.LocationManagerCompat.sGnssStatusListeners;

        entermonitor $r5;

     label11:
        $r6 = virtualinvoke $r5.get(r3);

        r9 = (androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport) $r6;

        if r9 != null goto label12;

        r9 = new androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport;

        specialinvoke r9.<init>(r3);

        goto label13;

     label12:
        virtualinvoke r9.unregister();

     label13:
        virtualinvoke r9.register(r2);

        $z0 = virtualinvoke r0.registerGnssStatusCallback(r9, r1);

        if $z0 == 0 goto label15;

        virtualinvoke $r5.put(r3, r9);

        exitmonitor $r5;

     label14:
        return 1;

     label15:
        exitmonitor $r5;

     label16:
        return 0;

     label17:
        r10 := @caughtexception;

        exitmonitor $r5;

     label18:
        throw r10;

     label19:
        if r1 == null goto label20;

        $z0 = 1;

        goto label21;

     label20:
        $z0 = 0;

     label21:
        androidx.core.util.Preconditions.checkArgument($z0);

        $r5 = androidx.core.location.LocationManagerCompat.sGnssStatusListeners;

        entermonitor $r5;

     label22:
        $r6 = virtualinvoke $r5.get(r3);

        r4 = (androidx.core.location.LocationManagerCompat$GpsStatusTransport) $r6;

        if r4 != null goto label23;

        r11 = new androidx.core.location.LocationManagerCompat$GpsStatusTransport;

        specialinvoke r11.<init>(r0, r3);

        goto label24;

     label23:
        virtualinvoke r4.unregister();

        r11 = r4;

     label24:
        virtualinvoke r11.register(r2);

        r4 = r11;

        r12 = new java.util.concurrent.FutureTask;

        r13 = new androidx.core.location.LocationManagerCompat$3;

        specialinvoke r13.<init>(r0, r11);

        specialinvoke r12.<init>(r13);

        $r14 = android.os.Looper.myLooper();

        $r15 = virtualinvoke r1.getLooper();

        if $r14 != $r15 goto label25;

        virtualinvoke r12.run();

        goto label27;

     label25:
        $z0 = virtualinvoke r1.post(r12);

     label26:
        if $z0 == 0 goto label58;

     label27:
        $z0 = 0;

     label28:
        r16 = java.util.concurrent.TimeUnit.SECONDS;

     label29:
        $l1 = virtualinvoke r16.toNanos(5L);

     label30:
        l2 = $l1;

     label31:
        $l3 = java.lang.System.nanoTime();

     label32:
        $l1 = $l3 + $l1;

     label33:
        r16 = java.util.concurrent.TimeUnit.NANOSECONDS;

     label34:
        $r6 = virtualinvoke r12.get(l2, r16);

     label35:
        r17 = (java.lang.Boolean) $r6;

     label36:
        $z1 = virtualinvoke r17.booleanValue();

     label37:
        if $z1 == 0 goto label43;

        r18 = androidx.core.location.LocationManagerCompat.sGnssStatusListeners;

     label38:
        virtualinvoke r18.put(r3, r4);

     label39:
        if $z0 == 0 goto label41;

     label40:
        $r19 = java.lang.Thread.currentThread();

        virtualinvoke $r19.interrupt();

     label41:
        exitmonitor $r5;

     label42:
        return 1;

     label43:
        if $z0 == 0 goto label44;

        $r19 = java.lang.Thread.currentThread();

        virtualinvoke $r19.interrupt();

     label44:
        exitmonitor $r5;

     label45:
        return 0;

     label46:
        r20 := @caughtexception;

        $z0 = 1;

     label47:
        l2 = java.lang.System.nanoTime();

     label48:
        l2 = $l1 - l2;

        goto label33;

     label49:
        r21 := @caughtexception;

        goto label55;

     label50:
        r22 := @caughtexception;

     label51:
        $r23 = new java.lang.IllegalStateException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<init>();

        $r24 = virtualinvoke $r24.append(r1);

        $r24 = virtualinvoke $r24.append(" appears to be blocked, please run registerGnssStatusCallback() directly on a Looper thread or ensure the main Looper is not blocked by this thread");

        $r25 = virtualinvoke $r24.toString();

        specialinvoke $r23.<init>($r25, r22);

        throw $r23;

     label52:
        r26 := @caughtexception;

        r8 = virtualinvoke r26.getCause();

        $z1 = r8 instanceof java.lang.RuntimeException;

        if $z1 != 0 goto label54;

        r8 = virtualinvoke r26.getCause();

        $z1 = r8 instanceof java.lang.Error;

        if $z1 == 0 goto label53;

        r8 = virtualinvoke r26.getCause();

        $r27 = (java.lang.Error) r8;

        throw $r27;

     label53:
        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<init>(r26);

        throw $r23;

     label54:
        r8 = virtualinvoke r26.getCause();

        $r28 = (java.lang.RuntimeException) r8;

        throw $r28;

     label55:
        if $z0 == 0 goto label57;

     label56:
        $r19 = java.lang.Thread.currentThread();

        virtualinvoke $r19.interrupt();

     label57:
        throw r21;

     label58:
        $r23 = new java.lang.IllegalStateException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<init>();

        $r24 = virtualinvoke $r24.append(r1);

        $r24 = virtualinvoke $r24.append(" is shutting down");

        $r25 = virtualinvoke $r24.toString();

        specialinvoke $r23.<init>($r25);

        throw $r23;

     label59:
        r29 := @caughtexception;

        exitmonitor $r5;

     label60:
        goto label61;

     label61:
        throw r29;

        catch java.lang.Throwable from label01 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label11 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.Throwable from label22 to label26 with label59;
        catch java.util.concurrent.ExecutionException from label29 to label30 with label52;
        catch java.util.concurrent.ExecutionException from label31 to label32 with label52;
        catch java.util.concurrent.TimeoutException from label29 to label30 with label50;
        catch java.util.concurrent.TimeoutException from label31 to label32 with label50;
        catch java.lang.Throwable from label28 to label32 with label49;
        catch java.lang.InterruptedException from label34 to label35 with label46;
        catch java.lang.InterruptedException from label36 to label37 with label46;
        catch java.lang.InterruptedException from label38 to label39 with label46;
        catch java.util.concurrent.ExecutionException from label34 to label35 with label52;
        catch java.util.concurrent.ExecutionException from label36 to label37 with label52;
        catch java.util.concurrent.ExecutionException from label38 to label39 with label52;
        catch java.util.concurrent.TimeoutException from label34 to label35 with label50;
        catch java.util.concurrent.TimeoutException from label36 to label37 with label50;
        catch java.util.concurrent.TimeoutException from label38 to label39 with label50;
        catch java.lang.Throwable from label33 to label39 with label49;
        catch java.lang.Throwable from label40 to label42 with label59;
        catch java.lang.Throwable from label43 to label45 with label59;
        catch java.util.concurrent.ExecutionException from label47 to label48 with label52;
        catch java.util.concurrent.TimeoutException from label47 to label48 with label50;
        catch java.lang.Throwable from label47 to label48 with label49;
        catch java.lang.Throwable from label51 to label55 with label49;
        catch java.lang.Throwable from label56 to label60 with label59;
    }

    public static boolean registerGnssStatusCallback(android.location.LocationManager, androidx.core.location.GnssStatusCompat$Callback, android.os.Handler)
    {
        java.util.concurrent.Executor $r3;
        androidx.core.location.LocationManagerCompat$InlineHandlerExecutor $r4;
        android.os.Handler $r2;
        int $i0;
        androidx.core.location.GnssStatusCompat$Callback $r1;
        android.location.LocationManager $r0;
        boolean $z0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 30 goto label1;

        $r3 = androidx.core.os.ExecutorCompat.create($r2);

        $z0 = androidx.core.location.LocationManagerCompat.registerGnssStatusCallback($r0, $r3, $r1);

        return $z0;

     label1:
        $r4 = new androidx.core.location.LocationManagerCompat$InlineHandlerExecutor;

        specialinvoke $r4.<init>($r2);

        $z0 = androidx.core.location.LocationManagerCompat.registerGnssStatusCallback($r0, $r4, $r1);

        return $z0;
    }

    public static boolean registerGnssStatusCallback(android.location.LocationManager, java.util.concurrent.Executor, androidx.core.location.GnssStatusCompat$Callback)
    {
        java.util.concurrent.Executor $r1;
        androidx.core.location.GnssStatusCompat$Callback $r2;
        android.os.Looper $r3, r4;
        android.os.Handler $r5;
        int i0;
        android.location.LocationManager $r0;
        boolean $z0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 < 30 goto label1;

        $z0 = androidx.core.location.LocationManagerCompat.registerGnssStatusCallback($r0, null, $r1, $r2);

        return $z0;

     label1:
        $r3 = android.os.Looper.myLooper();

        r4 = $r3;

        if $r3 != null goto label2;

        r4 = android.os.Looper.getMainLooper();

     label2:
        $r5 = new android.os.Handler;

        specialinvoke $r5.<init>(r4);

        $z0 = androidx.core.location.LocationManagerCompat.registerGnssStatusCallback($r0, $r5, $r1, $r2);

        return $z0;
    }

    public static void unregisterGnssStatusCallback(android.location.LocationManager, androidx.core.location.GnssStatusCompat$Callback)
    {
        java.lang.Throwable r5, r7, r9;
        androidx.core.location.GnssStatusCompat$Callback $r1;
        androidx.core.location.LocationManagerCompat$GpsStatusTransport r8;
        int $i0;
        androidx.core.location.LocationManagerCompat$GnssStatusTransport r4;
        java.lang.Object $r3;
        androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport r6;
        android.location.LocationManager $r0;
        androidx.collection.SimpleArrayMap $r2;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 30 goto label06;

        $r2 = androidx.core.location.LocationManagerCompat.sGnssStatusListeners;

        entermonitor $r2;

     label01:
        $r3 = virtualinvoke $r2.remove($r1);

        r4 = (androidx.core.location.LocationManagerCompat$GnssStatusTransport) $r3;

        if r4 == null goto label02;

        virtualinvoke $r0.unregisterGnssStatusCallback(r4);

     label02:
        exitmonitor $r2;

     label03:
        return;

     label04:
        r5 := @caughtexception;

        exitmonitor $r2;

     label05:
        throw r5;

     label06:
        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 24 goto label12;

        $r2 = androidx.core.location.LocationManagerCompat.sGnssStatusListeners;

        entermonitor $r2;

     label07:
        $r3 = virtualinvoke $r2.remove($r1);

        r6 = (androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport) $r3;

        if r6 == null goto label08;

        virtualinvoke r6.unregister();

        virtualinvoke $r0.unregisterGnssStatusCallback(r6);

     label08:
        exitmonitor $r2;

     label09:
        return;

     label10:
        r7 := @caughtexception;

        exitmonitor $r2;

     label11:
        throw r7;

     label12:
        $r2 = androidx.core.location.LocationManagerCompat.sGnssStatusListeners;

        entermonitor $r2;

     label13:
        $r3 = virtualinvoke $r2.remove($r1);

        r8 = (androidx.core.location.LocationManagerCompat$GpsStatusTransport) $r3;

        if r8 == null goto label14;

        virtualinvoke r8.unregister();

        virtualinvoke $r0.removeGpsStatusListener(r8);

     label14:
        exitmonitor $r2;

     label15:
        return;

     label16:
        r9 := @caughtexception;

        exitmonitor $r2;

     label17:
        throw r9;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label13 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }
}
