public final class androidx.activity.OnBackPressedDispatcher extends java.lang.Object
{
    private final java.lang.Runnable mFallbackOnBackPressed;
    final java.util.ArrayDeque mOnBackPressedCallbacks;

    public void <init>()
    {
        androidx.activity.OnBackPressedDispatcher r0;

        r0 := @this;

        specialinvoke r0.<init>(null);

        return;
    }

    public void <init>(java.lang.Runnable)
    {
        androidx.activity.OnBackPressedDispatcher r0;
        java.util.ArrayDeque $r2;
        java.lang.Runnable $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        $r2 = new java.util.ArrayDeque;

        specialinvoke $r2.<init>();

        r0.mOnBackPressedCallbacks = $r2;

        r0.mFallbackOnBackPressed = $r1;

        return;
    }

    public void addCallback(androidx.activity.OnBackPressedCallback)
    {
        androidx.activity.OnBackPressedDispatcher r0;
        androidx.activity.OnBackPressedCallback $r1;

        r0 := @this;

        $r1 := @parameter0;

        virtualinvoke r0.addCancellableCallback($r1);

        return;
    }

    public void addCallback(androidx.lifecycle.LifecycleOwner, androidx.activity.OnBackPressedCallback)
    {
        androidx.lifecycle.Lifecycle $r4;
        androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable $r6;
        androidx.activity.OnBackPressedCallback $r2;
        androidx.lifecycle.Lifecycle$State $r3, $r5;
        androidx.lifecycle.LifecycleOwner $r1;
        androidx.activity.OnBackPressedDispatcher r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r4 = interfaceinvoke $r1.getLifecycle();

        $r5 = virtualinvoke $r4.getCurrentState();

        $r3 = androidx.lifecycle.Lifecycle$State.DESTROYED;

        if $r5 != $r3 goto label1;

        return;

     label1:
        $r6 = new androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable;

        specialinvoke $r6.<init>(r0, $r4, $r2);

        virtualinvoke $r2.addCancellable($r6);

        return;
    }

    androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)
    {
        androidx.activity.OnBackPressedCallback $r1;
        androidx.activity.OnBackPressedDispatcher r0;
        java.util.ArrayDeque r2;
        androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable r3;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mOnBackPressedCallbacks;

        virtualinvoke r2.add($r1);

        r3 = new androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable;

        specialinvoke r3.<init>(r0, $r1);

        virtualinvoke $r1.addCancellable(r3);

        return r3;
    }

    public boolean hasEnabledCallbacks()
    {
        androidx.activity.OnBackPressedCallback $r4;
        java.util.Iterator $r2;
        androidx.activity.OnBackPressedDispatcher r0;
        java.lang.Object $r3;
        java.util.ArrayDeque r1;
        boolean $z0;

        r0 := @this;

        r1 = r0.mOnBackPressedCallbacks;

        $r2 = virtualinvoke r1.descendingIterator();

     label1:
        $z0 = interfaceinvoke $r2.hasNext();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.next();

        $r4 = (androidx.activity.OnBackPressedCallback) $r3;

        $z0 = virtualinvoke $r4.isEnabled();

        if $z0 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }

    public void onBackPressed()
    {
        androidx.activity.OnBackPressedCallback r4;
        java.util.Iterator $r2;
        androidx.activity.OnBackPressedDispatcher r0;
        java.lang.Object $r3;
        java.util.ArrayDeque r1;
        java.lang.Runnable r5;
        boolean $z0;

        r0 := @this;

        r1 = r0.mOnBackPressedCallbacks;

        $r2 = virtualinvoke r1.descendingIterator();

     label1:
        $z0 = interfaceinvoke $r2.hasNext();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.next();

        r4 = (androidx.activity.OnBackPressedCallback) $r3;

        $z0 = virtualinvoke r4.isEnabled();

        if $z0 == 0 goto label1;

        virtualinvoke r4.handleOnBackPressed();

        return;

     label2:
        r5 = r0.mFallbackOnBackPressed;

        if r5 == null goto label3;

        interfaceinvoke r5.run();

     label3:
        return;
    }
}
