class androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase extends java.lang.Object implements androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImpl
{
    private static final int DOUBLE_TAP_TIMEOUT;
    private static final int LONG_PRESS;
    private static final int SHOW_PRESS;
    private static final int TAP;
    private static final int TAP_TIMEOUT;
    private boolean mAlwaysInBiggerTapRegion;
    private boolean mAlwaysInTapRegion;
    android.view.MotionEvent mCurrentDownEvent;
    boolean mDeferConfirmSingleTap;
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener;
    private int mDoubleTapSlopSquare;
    private float mDownFocusX;
    private float mDownFocusY;
    private final android.os.Handler mHandler;
    private boolean mInLongPress;
    private boolean mIsDoubleTapping;
    private boolean mIsLongpressEnabled;
    private float mLastFocusX;
    private float mLastFocusY;
    final android.view.GestureDetector$OnGestureListener mListener;
    private int mMaximumFlingVelocity;
    private int mMinimumFlingVelocity;
    private android.view.MotionEvent mPreviousUpEvent;
    boolean mStillDown;
    private int mTouchSlopSquare;
    private android.view.VelocityTracker mVelocityTracker;

    static void <clinit>()
    {
        int $i0;

        $i0 = android.view.ViewConfiguration.getTapTimeout();

        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase.TAP_TIMEOUT = $i0;

        $i0 = android.view.ViewConfiguration.getDoubleTapTimeout();

        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase.DOUBLE_TAP_TIMEOUT = $i0;

        return;
    }

    void <init>(android.content.Context, android.view.GestureDetector$OnGestureListener, android.os.Handler)
    {
        android.content.Context $r1;
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler $r4;
        android.os.Handler $r3;
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase r0;
        android.view.GestureDetector$OnGestureListener $r2;
        android.view.GestureDetector$OnDoubleTapListener $r5;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        specialinvoke r0.<init>();

        if $r3 == null goto label1;

        $r4 = new androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler;

        specialinvoke $r4.<init>(r0, $r3);

        r0.mHandler = $r4;

        goto label2;

     label1:
        $r4 = new androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler;

        specialinvoke $r4.<init>(r0);

        r0.mHandler = $r4;

     label2:
        r0.mListener = $r2;

        $z0 = $r2 instanceof android.view.GestureDetector$OnDoubleTapListener;

        if $z0 == 0 goto label3;

        $r5 = (android.view.GestureDetector$OnDoubleTapListener) $r2;

        virtualinvoke r0.setOnDoubleTapListener($r5);

     label3:
        specialinvoke r0.init($r1);

        return;
    }

    private void cancel()
    {
        android.view.VelocityTracker $r2;
        android.os.Handler $r1;
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase r0;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mHandler;

        virtualinvoke $r1.removeMessages(1);

        $r1 = r0.mHandler;

        virtualinvoke $r1.removeMessages(2);

        $r1 = r0.mHandler;

        virtualinvoke $r1.removeMessages(3);

        $r2 = r0.mVelocityTracker;

        virtualinvoke $r2.recycle();

        r0.mVelocityTracker = null;

        r0.mIsDoubleTapping = 0;

        r0.mStillDown = 0;

        r0.mAlwaysInTapRegion = 0;

        r0.mAlwaysInBiggerTapRegion = 0;

        r0.mDeferConfirmSingleTap = 0;

        $z0 = r0.mInLongPress;

        if $z0 == 0 goto label1;

        r0.mInLongPress = 0;

     label1:
        return;
    }

    private void cancelTaps()
    {
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase r0;
        android.os.Handler $r1;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mHandler;

        virtualinvoke $r1.removeMessages(1);

        $r1 = r0.mHandler;

        virtualinvoke $r1.removeMessages(2);

        $r1 = r0.mHandler;

        virtualinvoke $r1.removeMessages(3);

        r0.mIsDoubleTapping = 0;

        r0.mAlwaysInTapRegion = 0;

        r0.mAlwaysInBiggerTapRegion = 0;

        r0.mDeferConfirmSingleTap = 0;

        $z0 = r0.mInLongPress;

        if $z0 == 0 goto label1;

        r0.mInLongPress = 0;

     label1:
        return;
    }

    private void init(android.content.Context)
    {
        android.content.Context $r1;
        java.lang.IllegalArgumentException r4;
        android.view.ViewConfiguration $r3;
        int $i0, $i1, $i2;
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase r0;
        android.view.GestureDetector$OnGestureListener r2;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 == null goto label2;

        r2 = r0.mListener;

        if r2 == null goto label1;

        r0.mIsLongpressEnabled = 1;

        $r3 = android.view.ViewConfiguration.get($r1);

        $i0 = virtualinvoke $r3.getScaledTouchSlop();

        $i1 = virtualinvoke $r3.getScaledDoubleTapSlop();

        $i2 = virtualinvoke $r3.getScaledMinimumFlingVelocity();

        r0.mMinimumFlingVelocity = $i2;

        $i2 = virtualinvoke $r3.getScaledMaximumFlingVelocity();

        r0.mMaximumFlingVelocity = $i2;

        $i0 = $i0 * $i0;

        r0.mTouchSlopSquare = $i0;

        $i1 = $i1 * $i1;

        r0.mDoubleTapSlopSquare = $i1;

        return;

     label1:
        r4 = new java.lang.IllegalArgumentException;

        specialinvoke r4.<init>("OnGestureListener must not be null");

        throw r4;

     label2:
        r4 = new java.lang.IllegalArgumentException;

        specialinvoke r4.<init>("Context must not be null");

        throw r4;
    }

    private boolean isConsideredDoubleTap(android.view.MotionEvent, android.view.MotionEvent, android.view.MotionEvent)
    {
        long $l0, $l1;
        byte b3;
        android.view.MotionEvent $r1, $r2, $r3;
        int i2, i4, $i5;
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase r0;
        float $f0;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        z0 = r0.mAlwaysInBiggerTapRegion;

        if z0 != 0 goto label1;

        return 0;

     label1:
        $l0 = virtualinvoke $r3.getEventTime();

        $l1 = virtualinvoke $r2.getEventTime();

        $l0 = $l0 - $l1;

        i2 = androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase.DOUBLE_TAP_TIMEOUT;

        $l1 = (long) i2;

        b3 = $l0 cmp $l1;

        i2 = (int) b3;

        if i2 <= 0 goto label2;

        return 0;

     label2:
        $f0 = virtualinvoke $r1.getX();

        i2 = (int) $f0;

        $f0 = virtualinvoke $r3.getX();

        i4 = (int) $f0;

        i2 = i2 - i4;

        $f0 = virtualinvoke $r1.getY();

        i4 = (int) $f0;

        $f0 = virtualinvoke $r3.getY();

        $i5 = (int) $f0;

        i4 = i4 - $i5;

        i2 = i2 * i2;

        i4 = i4 * i4;

        i2 = i2 + i4;

        i4 = r0.mDoubleTapSlopSquare;

        if i2 >= i4 goto label3;

        return 1;

     label3:
        return 0;
    }

    void dispatchLongPress()
    {
        android.view.MotionEvent $r3;
        android.os.Handler $r1;
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase r0;
        android.view.GestureDetector$OnGestureListener $r2;

        r0 := @this;

        $r1 = r0.mHandler;

        virtualinvoke $r1.removeMessages(3);

        r0.mDeferConfirmSingleTap = 0;

        r0.mInLongPress = 1;

        $r2 = r0.mListener;

        $r3 = r0.mCurrentDownEvent;

        interfaceinvoke $r2.onLongPress($r3);

        return;
    }

    public boolean isLongpressEnabled()
    {
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mIsLongpressEnabled;

        return z0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        long l5, l6;
        android.view.GestureDetector$OnDoubleTapListener r3;
        android.view.VelocityTracker r2;
        byte b4;
        android.view.MotionEvent $r1, r5, r7;
        android.os.Handler r6;
        int $i0, i1, i2, i3;
        boolean z0, z1;
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase r0;
        float f0, f1, f2, $f3, f4;
        android.view.GestureDetector$OnGestureListener r4;

        r0 := @this;

        $r1 := @parameter0;

        $i0 = virtualinvoke $r1.getAction();

        r2 = r0.mVelocityTracker;

        if r2 != null goto label01;

        r2 = android.view.VelocityTracker.obtain();

        r0.mVelocityTracker = r2;

     label01:
        r2 = r0.mVelocityTracker;

        virtualinvoke r2.addMovement($r1);

        i1 = $i0 & 255;

        if i1 != 6 goto label02;

        z0 = 1;

        goto label03;

     label02:
        z0 = 0;

     label03:
        if z0 == 0 goto label04;

        i2 = virtualinvoke $r1.getActionIndex();

        goto label05;

     label04:
        i2 = -1;

     label05:
        f1 = 0.0F;

        f2 = 0.0F;

        i1 = virtualinvoke $r1.getPointerCount();

        i3 = 0;

     label06:
        if i3 >= i1 goto label09;

        if i2 != i3 goto label07;

        goto label08;

     label07:
        f0 = virtualinvoke $r1.getX(i3);

        f1 = f1 + f0;

        f0 = virtualinvoke $r1.getY(i3);

        f2 = f2 + f0;

     label08:
        i3 = i3 + 1;

        goto label06;

     label09:
        if z0 == 0 goto label10;

        i2 = -1;

        i2 = i1 + i2;

        goto label11;

     label10:
        i2 = i1;

     label11:
        f0 = (float) i2;

        f1 = f1 / f0;

        f0 = (float) i2;

        f2 = f2 / f0;

        z0 = 0;

        $i0 = $i0 & 255;

        lookupswitch($i0)
        {
            case 0: goto label35;
            case 1: goto label27;
            case 2: goto label20;
            case 3: goto label19;
            case 4: goto label12;
            case 5: goto label18;
            case 6: goto label13;
            default: goto label12;
        };

     label12:
        return 0;

     label13:
        r0.mLastFocusX = f1;

        r0.mDownFocusX = f1;

        r0.mLastFocusY = f2;

        r0.mDownFocusY = f2;

        r2 = r0.mVelocityTracker;

        $i0 = r0.mMaximumFlingVelocity;

        f1 = (float) $i0;

        virtualinvoke r2.computeCurrentVelocity(1000, f1);

        i2 = virtualinvoke $r1.getActionIndex();

        $i0 = i2;

        i2 = virtualinvoke $r1.getPointerId(i2);

        r2 = r0.mVelocityTracker;

        f1 = virtualinvoke r2.getXVelocity(i2);

        r2 = r0.mVelocityTracker;

        f2 = virtualinvoke r2.getYVelocity(i2);

        i2 = 0;

     label14:
        if i2 >= i1 goto label17;

        if i2 != $i0 goto label15;

        goto label16;

     label15:
        i3 = virtualinvoke $r1.getPointerId(i2);

        r2 = r0.mVelocityTracker;

        f0 = virtualinvoke r2.getXVelocity(i3);

        f0 = f0 * f1;

        r2 = r0.mVelocityTracker;

        $f3 = virtualinvoke r2.getYVelocity(i3);

        $f3 = $f3 * f2;

        f0 = f0 + $f3;

        b4 = f0 cmpg 0.0F;

        i3 = (int) b4;

        if i3 >= 0 goto label16;

        r2 = r0.mVelocityTracker;

        virtualinvoke r2.clear();

        goto label17;

     label16:
        i2 = i2 + 1;

        goto label14;

     label17:
        return 0;

     label18:
        r0.mLastFocusX = f1;

        r0.mDownFocusX = f1;

        r0.mLastFocusY = f2;

        r0.mDownFocusY = f2;

        specialinvoke r0.cancelTaps();

        return 0;

     label19:
        specialinvoke r0.cancel();

        return 0;

     label20:
        z1 = r0.mInLongPress;

        if z1 == 0 goto label21;

        return 0;

     label21:
        f0 = r0.mLastFocusX;

        f0 = f0 - f1;

        $f3 = r0.mLastFocusY;

        $f3 = $f3 - f2;

        z1 = r0.mIsDoubleTapping;

        if z1 == 0 goto label22;

        r3 = r0.mDoubleTapListener;

        z0 = interfaceinvoke r3.onDoubleTapEvent($r1);

        return z0;

     label22:
        z1 = r0.mAlwaysInTapRegion;

        if z1 == 0 goto label25;

        f4 = r0.mDownFocusX;

        f4 = f1 - f4;

        $i0 = (int) f4;

        f4 = r0.mDownFocusY;

        f4 = f2 - f4;

        i1 = (int) f4;

        $i0 = $i0 * $i0;

        i1 = i1 * i1;

        i1 = $i0 + i1;

        $i0 = r0.mTouchSlopSquare;

        if i1 <= $i0 goto label23;

        r4 = r0.mListener;

        r5 = r0.mCurrentDownEvent;

        z0 = interfaceinvoke r4.onScroll(r5, $r1, f0, $f3);

        r0.mLastFocusX = f1;

        r0.mLastFocusY = f2;

        r0.mAlwaysInTapRegion = 0;

        r6 = r0.mHandler;

        virtualinvoke r6.removeMessages(3);

        r6 = r0.mHandler;

        virtualinvoke r6.removeMessages(1);

        r6 = r0.mHandler;

        virtualinvoke r6.removeMessages(2);

     label23:
        $i0 = r0.mTouchSlopSquare;

        if i1 <= $i0 goto label24;

        r0.mAlwaysInBiggerTapRegion = 0;

     label24:
        return z0;

     label25:
        f4 = java.lang.Math.abs(f0);

        b4 = f4 cmpl 1.0F;

        i1 = (int) b4;

        if i1 >= 0 goto label26;

        f4 = java.lang.Math.abs($f3);

        b4 = f4 cmpl 1.0F;

        i1 = (int) b4;

        if i1 < 0 goto label24;

     label26:
        r4 = r0.mListener;

        r5 = r0.mCurrentDownEvent;

        z0 = interfaceinvoke r4.onScroll(r5, $r1, f0, $f3);

        r0.mLastFocusX = f1;

        r0.mLastFocusY = f2;

        return z0;

     label27:
        r0.mStillDown = 0;

        r5 = android.view.MotionEvent.obtain($r1);

        z1 = r0.mIsDoubleTapping;

        if z1 == 0 goto label28;

        r3 = r0.mDoubleTapListener;

        z0 = interfaceinvoke r3.onDoubleTapEvent($r1);

        goto label32;

     label28:
        z1 = r0.mInLongPress;

        if z1 == 0 goto label29;

        r6 = r0.mHandler;

        virtualinvoke r6.removeMessages(3);

        r0.mInLongPress = 0;

        goto label32;

     label29:
        z1 = r0.mAlwaysInTapRegion;

        if z1 == 0 goto label30;

        r4 = r0.mListener;

        z0 = interfaceinvoke r4.onSingleTapUp($r1);

        z1 = r0.mDeferConfirmSingleTap;

        if z1 == 0 goto label32;

        r3 = r0.mDoubleTapListener;

        if r3 == null goto label32;

        interfaceinvoke r3.onSingleTapConfirmed($r1);

        goto label32;

     label30:
        r2 = r0.mVelocityTracker;

        i1 = virtualinvoke $r1.getPointerId(0);

        $i0 = r0.mMaximumFlingVelocity;

        f1 = (float) $i0;

        virtualinvoke r2.computeCurrentVelocity(1000, f1);

        f1 = virtualinvoke r2.getYVelocity(i1);

        f2 = virtualinvoke r2.getXVelocity(i1);

        f0 = java.lang.Math.abs(f1);

        i1 = r0.mMinimumFlingVelocity;

        $f3 = (float) i1;

        b4 = f0 cmpl $f3;

        i1 = (int) b4;

        if i1 > 0 goto label31;

        f0 = java.lang.Math.abs(f2);

        i1 = r0.mMinimumFlingVelocity;

        $f3 = (float) i1;

        b4 = f0 cmpl $f3;

        i1 = (int) b4;

        if i1 <= 0 goto label32;

     label31:
        r4 = r0.mListener;

        r7 = r0.mCurrentDownEvent;

        z0 = interfaceinvoke r4.onFling(r7, $r1, f2, f1);

     label32:
        $r1 = r0.mPreviousUpEvent;

        if $r1 == null goto label33;

        virtualinvoke $r1.recycle();

     label33:
        r0.mPreviousUpEvent = r5;

        r2 = r0.mVelocityTracker;

        if r2 == null goto label34;

        virtualinvoke r2.recycle();

        r0.mVelocityTracker = null;

     label34:
        r0.mIsDoubleTapping = 0;

        r0.mDeferConfirmSingleTap = 0;

        r6 = r0.mHandler;

        virtualinvoke r6.removeMessages(1);

        r6 = r0.mHandler;

        virtualinvoke r6.removeMessages(2);

        return z0;

     label35:
        r3 = r0.mDoubleTapListener;

        if r3 == null goto label38;

        r6 = r0.mHandler;

        z1 = virtualinvoke r6.hasMessages(3);

        if z1 == 0 goto label36;

        r6 = r0.mHandler;

        virtualinvoke r6.removeMessages(3);

     label36:
        r5 = r0.mCurrentDownEvent;

        if r5 == null goto label37;

        r7 = r0.mPreviousUpEvent;

        if r7 == null goto label37;

        if z1 == 0 goto label37;

        z1 = specialinvoke r0.isConsideredDoubleTap(r5, r7, $r1);

        if z1 == 0 goto label37;

        r0.mIsDoubleTapping = 1;

        r3 = r0.mDoubleTapListener;

        r5 = r0.mCurrentDownEvent;

        z0 = interfaceinvoke r3.onDoubleTap(r5);

        r3 = r0.mDoubleTapListener;

        z1 = interfaceinvoke r3.onDoubleTapEvent($r1);

        z0 = z0 | z1;

        goto label38;

     label37:
        r6 = r0.mHandler;

        i1 = androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase.DOUBLE_TAP_TIMEOUT;

        l5 = (long) i1;

        virtualinvoke r6.sendEmptyMessageDelayed(3, l5);

     label38:
        r0.mLastFocusX = f1;

        r0.mDownFocusX = f1;

        r0.mLastFocusY = f2;

        r0.mDownFocusY = f2;

        r5 = r0.mCurrentDownEvent;

        if r5 == null goto label39;

        virtualinvoke r5.recycle();

     label39:
        r5 = android.view.MotionEvent.obtain($r1);

        r0.mCurrentDownEvent = r5;

        r0.mAlwaysInTapRegion = 1;

        r0.mAlwaysInBiggerTapRegion = 1;

        r0.mStillDown = 1;

        r0.mInLongPress = 0;

        r0.mDeferConfirmSingleTap = 0;

        z1 = r0.mIsLongpressEnabled;

        if z1 == 0 goto label40;

        r6 = r0.mHandler;

        virtualinvoke r6.removeMessages(2);

        r6 = r0.mHandler;

        r5 = r0.mCurrentDownEvent;

        l5 = virtualinvoke r5.getDownTime();

        i1 = androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase.TAP_TIMEOUT;

        l6 = (long) i1;

        l5 = l5 + l6;

        i1 = android.view.ViewConfiguration.getLongPressTimeout();

        l6 = (long) i1;

        l5 = l5 + l6;

        virtualinvoke r6.sendEmptyMessageAtTime(2, l5);

     label40:
        r6 = r0.mHandler;

        r5 = r0.mCurrentDownEvent;

        l5 = virtualinvoke r5.getDownTime();

        i1 = androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase.TAP_TIMEOUT;

        l6 = (long) i1;

        l5 = l5 + l6;

        virtualinvoke r6.sendEmptyMessageAtTime(1, l5);

        r4 = r0.mListener;

        z1 = interfaceinvoke r4.onDown($r1);

        z0 = z0 | z1;

        return z0;
    }

    public void setIsLongpressEnabled(boolean)
    {
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        r0.mIsLongpressEnabled = $z0;

        return;
    }

    public void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener)
    {
        androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase r0;
        android.view.GestureDetector$OnDoubleTapListener $r1;

        r0 := @this;

        $r1 := @parameter0;

        r0.mDoubleTapListener = $r1;

        return;
    }
}
