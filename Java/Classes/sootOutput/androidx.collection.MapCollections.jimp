abstract class androidx.collection.MapCollections extends java.lang.Object
{
    androidx.collection.MapCollections$EntrySet mEntrySet;
    androidx.collection.MapCollections$KeySet mKeySet;
    androidx.collection.MapCollections$ValuesCollection mValues;

    void <init>()
    {
        androidx.collection.MapCollections r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static boolean containsAllHelper(java.util.Map, java.util.Collection)
    {
        java.util.Iterator $r2;
        java.util.Map r0;
        java.util.Collection r1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @parameter0;

        r1 := @parameter1;

        $r2 = interfaceinvoke r1.iterator();

     label1:
        $z0 = interfaceinvoke $r2.hasNext();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.next();

        $z0 = interfaceinvoke r0.containsKey($r3);

        if $z0 != 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    public static boolean equalsSetHelper(java.util.Set, java.lang.Object)
    {
        java.util.Set r0, r2;
        java.lang.ClassCastException r3;
        java.lang.NullPointerException r4;
        int $i0, $i1;
        java.lang.Object $r1;
        boolean z0;

        r0 := @parameter0;

        $r1 := @parameter1;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        z0 = $r1 instanceof java.util.Set;

        if z0 == 0 goto label9;

        r2 = (java.util.Set) $r1;

     label2:
        $i0 = interfaceinvoke r0.size();

        $i1 = interfaceinvoke r2.size();

     label3:
        if $i0 != $i1 goto label6;

     label4:
        z0 = interfaceinvoke r0.containsAll(r2);

     label5:
        if z0 == 0 goto label6;

        return 1;

     label6:
        return 0;

     label7:
        r3 := @caughtexception;

        return 0;

     label8:
        r4 := @caughtexception;

     label9:
        return 0;

        catch java.lang.NullPointerException from label2 to label3 with label8;
        catch java.lang.NullPointerException from label4 to label5 with label8;
        catch java.lang.ClassCastException from label2 to label3 with label7;
        catch java.lang.ClassCastException from label4 to label5 with label7;
    }

    public static boolean removeAllHelper(java.util.Map, java.util.Collection)
    {
        java.util.Iterator $r2;
        java.util.Map r0;
        java.util.Collection r1;
        int $i0, $i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @parameter0;

        r1 := @parameter1;

        $i0 = interfaceinvoke r0.size();

        $r2 = interfaceinvoke r1.iterator();

     label1:
        $z0 = interfaceinvoke $r2.hasNext();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.next();

        interfaceinvoke r0.remove($r3);

        goto label1;

     label2:
        $i1 = interfaceinvoke r0.size();

        if $i0 == $i1 goto label3;

        return 1;

     label3:
        return 0;
    }

    public static boolean retainAllHelper(java.util.Map, java.util.Collection)
    {
        java.util.Iterator $r3;
        java.util.Collection r1;
        java.util.Set $r2;
        java.util.Map r0;
        int $i0, $i1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @parameter0;

        r1 := @parameter1;

        $i0 = interfaceinvoke r0.size();

        $r2 = interfaceinvoke r0.keySet();

        $r3 = interfaceinvoke $r2.iterator();

     label1:
        $z0 = interfaceinvoke $r3.hasNext();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.next();

        $z0 = interfaceinvoke r1.contains($r4);

        if $z0 != 0 goto label1;

        interfaceinvoke $r3.remove();

        goto label1;

     label2:
        $i1 = interfaceinvoke r0.size();

        if $i0 == $i1 goto label3;

        return 1;

     label3:
        return 0;
    }

    protected abstract void colClear();

    protected abstract java.lang.Object colGetEntry(int, int);

    protected abstract java.util.Map colGetMap();

    protected abstract int colGetSize();

    protected abstract int colIndexOfKey(java.lang.Object);

    protected abstract int colIndexOfValue(java.lang.Object);

    protected abstract void colPut(java.lang.Object, java.lang.Object);

    protected abstract void colRemoveAt(int);

    protected abstract java.lang.Object colSetValue(int, java.lang.Object);

    public java.util.Set getEntrySet()
    {
        androidx.collection.MapCollections$EntrySet $r1;
        androidx.collection.MapCollections r0;

        r0 := @this;

        $r1 = r0.mEntrySet;

        if $r1 != null goto label1;

        $r1 = new androidx.collection.MapCollections$EntrySet;

        specialinvoke $r1.<init>(r0);

        r0.mEntrySet = $r1;

     label1:
        $r1 = r0.mEntrySet;

        return $r1;
    }

    public java.util.Set getKeySet()
    {
        androidx.collection.MapCollections$KeySet $r1;
        androidx.collection.MapCollections r0;

        r0 := @this;

        $r1 = r0.mKeySet;

        if $r1 != null goto label1;

        $r1 = new androidx.collection.MapCollections$KeySet;

        specialinvoke $r1.<init>(r0);

        r0.mKeySet = $r1;

     label1:
        $r1 = r0.mKeySet;

        return $r1;
    }

    public java.util.Collection getValues()
    {
        androidx.collection.MapCollections r0;
        androidx.collection.MapCollections$ValuesCollection $r1;

        r0 := @this;

        $r1 = r0.mValues;

        if $r1 != null goto label1;

        $r1 = new androidx.collection.MapCollections$ValuesCollection;

        specialinvoke $r1.<init>(r0);

        r0.mValues = $r1;

     label1:
        $r1 = r0.mValues;

        return $r1;
    }

    public java.lang.Object[] toArrayHelper(int)
    {
        java.lang.Object[] r1;
        int $i0, $i1, i2;
        androidx.collection.MapCollections r0;
        java.lang.Object $r2;

        r0 := @this;

        $i0 := @parameter0;

        $i1 = virtualinvoke r0.colGetSize();

        r1 = newarray (java.lang.Object)[$i1];

        i2 = 0;

     label1:
        if i2 >= $i1 goto label2;

        $r2 = virtualinvoke r0.colGetEntry(i2, $i0);

        r1[i2] = $r2;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public java.lang.Object[] toArrayHelper(java.lang.Object[], int)
    {
        java.lang.Object[] r1;
        int $i0, $i1, i2;
        androidx.collection.MapCollections r0;
        java.lang.Class $r2;
        java.lang.Object $r3;

        r0 := @this;

        r1 := @parameter0;

        $i0 := @parameter1;

        $i1 = virtualinvoke r0.colGetSize();

        i2 = lengthof r1;

        if i2 >= $i1 goto label1;

        $r2 = virtualinvoke r1.getClass();

        $r2 = virtualinvoke $r2.getComponentType();

        $r3 = java.lang.reflect.Array.newInstance($r2, $i1);

        r1 = (java.lang.Object[]) $r3;

     label1:
        i2 = 0;

     label2:
        if i2 >= $i1 goto label3;

        $r3 = virtualinvoke r0.colGetEntry(i2, $i0);

        r1[i2] = $r3;

        i2 = i2 + 1;

        goto label2;

     label3:
        $i0 = lengthof r1;

        if $i0 <= $i1 goto label4;

        r1[$i1] = null;

     label4:
        return r1;
    }
}
