class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup extends androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject
{
    int mChangingConfigurations;
    final java.util.ArrayList mChildren;
    private java.lang.String mGroupName;
    final android.graphics.Matrix mLocalMatrix;
    private float mPivotX;
    private float mPivotY;
    float mRotate;
    private float mScaleX;
    private float mScaleY;
    final android.graphics.Matrix mStackedMatrix;
    private int[] mThemeAttrs;
    private float mTranslateX;
    private float mTranslateY;

    public void <init>()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        android.graphics.Matrix $r1;
        java.util.ArrayList $r2;

        r0 := @this;

        specialinvoke r0.<init>(null);

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<init>();

        r0.mStackedMatrix = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<init>();

        r0.mChildren = $r2;

        r0.mRotate = 0.0F;

        r0.mPivotX = 0.0F;

        r0.mPivotY = 0.0F;

        r0.mScaleX = 1.0F;

        r0.mScaleY = 1.0F;

        r0.mTranslateX = 0.0F;

        r0.mTranslateY = 0.0F;

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<init>();

        r0.mLocalMatrix = $r1;

        r0.mGroupName = null;

        return;
    }

    public void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup, androidx.collection.ArrayMap)
    {
        java.lang.IllegalStateException $r17;
        java.util.ArrayList r4, $r10;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath $r12, $r15;
        int[] r5;
        int i0, $i1;
        java.lang.String r6;
        android.graphics.Matrix r3, r7;
        androidx.collection.ArrayMap r2;
        boolean z0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath $r13, $r16;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0, $r1, r9, $r14;
        float f0;
        java.lang.Object $r8;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath r11;

        r0 := @this;

        $r1 := @parameter0;

        r2 := @parameter1;

        specialinvoke r0.<init>(null);

        r7 = new android.graphics.Matrix;

        specialinvoke r7.<init>();

        r0.mStackedMatrix = r7;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<init>();

        r0.mChildren = $r10;

        r0.mRotate = 0.0F;

        r0.mPivotX = 0.0F;

        r0.mPivotY = 0.0F;

        r0.mScaleX = 1.0F;

        r0.mScaleY = 1.0F;

        r0.mTranslateX = 0.0F;

        r0.mTranslateY = 0.0F;

        r7 = new android.graphics.Matrix;

        r3 = r7;

        specialinvoke r7.<init>();

        r0.mLocalMatrix = r3;

        r0.mGroupName = null;

        f0 = $r1.mRotate;

        r0.mRotate = f0;

        f0 = $r1.mPivotX;

        r0.mPivotX = f0;

        f0 = $r1.mPivotY;

        r0.mPivotY = f0;

        f0 = $r1.mScaleX;

        r0.mScaleX = f0;

        f0 = $r1.mScaleY;

        r0.mScaleY = f0;

        f0 = $r1.mTranslateX;

        r0.mTranslateX = f0;

        f0 = $r1.mTranslateY;

        r0.mTranslateY = f0;

        r5 = $r1.mThemeAttrs;

        r0.mThemeAttrs = r5;

        r6 = $r1.mGroupName;

        r0.mGroupName = r6;

        i0 = $r1.mChangingConfigurations;

        r0.mChangingConfigurations = i0;

        if r6 == null goto label1;

        virtualinvoke r2.put(r6, r0);

     label1:
        r7 = $r1.mLocalMatrix;

        virtualinvoke r3.set(r7);

        r4 = $r1.mChildren;

        i0 = 0;

     label2:
        $i1 = virtualinvoke r4.size();

        if i0 >= $i1 goto label8;

        $r8 = virtualinvoke r4.get(i0);

        z0 = $r8 instanceof androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup;

        if z0 == 0 goto label3;

        r9 = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup) $r8;

        $r10 = r0.mChildren;

        $r14 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup;

        specialinvoke $r14.<init>(r9, r2);

        virtualinvoke $r10.add($r14);

        goto label6;

     label3:
        z0 = $r8 instanceof androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath;

        if z0 == 0 goto label4;

        $r15 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath;

        r11 = $r15;

        $r12 = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) $r8;

        specialinvoke $r15.<init>($r12);

        goto label5;

     label4:
        z0 = $r8 instanceof androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath;

        if z0 == 0 goto label7;

        $r16 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath;

        r11 = $r16;

        $r13 = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) $r8;

        specialinvoke $r16.<init>($r13);

     label5:
        $r10 = r0.mChildren;

        virtualinvoke $r10.add(r11);

        r6 = r11.mPathName;

        if r6 == null goto label6;

        r6 = r11.mPathName;

        virtualinvoke r2.put(r6, r11);

     label6:
        i0 = i0 + 1;

        goto label2;

     label7:
        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<init>("Unknown object in the tree!");

        throw $r17;

     label8:
        return;
    }

    private void updateLocalMatrix()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        float $f0, $f1, $f2;
        android.graphics.Matrix $r1;

        r0 := @this;

        $r1 = r0.mLocalMatrix;

        virtualinvoke $r1.reset();

        $r1 = r0.mLocalMatrix;

        $f1 = r0.mPivotX;

        $f1 = neg $f1;

        $f0 = r0.mPivotY;

        $f0 = neg $f0;

        virtualinvoke $r1.postTranslate($f1, $f0);

        $r1 = r0.mLocalMatrix;

        $f1 = r0.mScaleX;

        $f0 = r0.mScaleY;

        virtualinvoke $r1.postScale($f1, $f0);

        $r1 = r0.mLocalMatrix;

        $f1 = r0.mRotate;

        virtualinvoke $r1.postRotate($f1, 0.0F, 0.0F);

        $r1 = r0.mLocalMatrix;

        $f1 = r0.mTranslateX;

        $f0 = r0.mPivotX;

        $f1 = $f1 + $f0;

        $f2 = r0.mTranslateY;

        $f0 = r0.mPivotY;

        $f0 = $f2 + $f0;

        virtualinvoke $r1.postTranslate($f1, $f0);

        return;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray, org.xmlpull.v1.XmlPullParser)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        float $f0;
        java.lang.String $r3;
        android.content.res.TypedArray $r1;
        org.xmlpull.v1.XmlPullParser $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        r0.mThemeAttrs = null;

        $f0 = r0.mRotate;

        $f0 = androidx.core.content.res.TypedArrayUtils.getNamedFloat($r1, $r2, "rotation", 5, $f0);

        r0.mRotate = $f0;

        $f0 = r0.mPivotX;

        $f0 = virtualinvoke $r1.getFloat(1, $f0);

        r0.mPivotX = $f0;

        $f0 = r0.mPivotY;

        $f0 = virtualinvoke $r1.getFloat(2, $f0);

        r0.mPivotY = $f0;

        $f0 = r0.mScaleX;

        $f0 = androidx.core.content.res.TypedArrayUtils.getNamedFloat($r1, $r2, "scaleX", 3, $f0);

        r0.mScaleX = $f0;

        $f0 = r0.mScaleY;

        $f0 = androidx.core.content.res.TypedArrayUtils.getNamedFloat($r1, $r2, "scaleY", 4, $f0);

        r0.mScaleY = $f0;

        $f0 = r0.mTranslateX;

        $f0 = androidx.core.content.res.TypedArrayUtils.getNamedFloat($r1, $r2, "translateX", 6, $f0);

        r0.mTranslateX = $f0;

        $f0 = r0.mTranslateY;

        $f0 = androidx.core.content.res.TypedArrayUtils.getNamedFloat($r1, $r2, "translateY", 7, $f0);

        r0.mTranslateY = $f0;

        $r3 = virtualinvoke $r1.getString(0);

        if $r3 == null goto label1;

        r0.mGroupName = $r3;

     label1:
        specialinvoke r0.updateLocalMatrix();

        return;
    }

    public java.lang.String getGroupName()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        java.lang.String r1;

        r0 := @this;

        r1 = r0.mGroupName;

        return r1;
    }

    public android.graphics.Matrix getLocalMatrix()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        android.graphics.Matrix r1;

        r0 := @this;

        r1 = r0.mLocalMatrix;

        return r1;
    }

    public float getPivotX()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        float f0;

        r0 := @this;

        f0 = r0.mPivotX;

        return f0;
    }

    public float getPivotY()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        float f0;

        r0 := @this;

        f0 = r0.mPivotY;

        return f0;
    }

    public float getRotation()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        float f0;

        r0 := @this;

        f0 = r0.mRotate;

        return f0;
    }

    public float getScaleX()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        float f0;

        r0 := @this;

        f0 = r0.mScaleX;

        return f0;
    }

    public float getScaleY()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        float f0;

        r0 := @this;

        f0 = r0.mScaleY;

        return f0;
    }

    public float getTranslateX()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        float f0;

        r0 := @this;

        f0 = r0.mTranslateX;

        return f0;
    }

    public float getTranslateY()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        float f0;

        r0 := @this;

        f0 = r0.mTranslateY;

        return f0;
    }

    public void inflate(android.content.res.Resources, android.util.AttributeSet, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser)
    {
        android.util.AttributeSet $r2;
        int[] r6;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        android.content.res.Resources$Theme $r3;
        android.content.res.Resources $r1;
        org.xmlpull.v1.XmlPullParser $r4;
        android.content.res.TypedArray $r5;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 := @parameter3;

        r6 = androidx.vectordrawable.graphics.drawable.AndroidResources.STYLEABLE_VECTOR_DRAWABLE_GROUP;

        $r5 = androidx.core.content.res.TypedArrayUtils.obtainAttributes($r1, $r3, $r2, r6);

        specialinvoke r0.updateStateFromTypedArray($r5, $r4);

        virtualinvoke $r5.recycle();

        return;
    }

    public boolean isStateful()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        int i0, $i1;
        java.lang.Object $r2;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject $r3;
        java.util.ArrayList $r1;
        boolean $z0;

        r0 := @this;

        i0 = 0;

     label1:
        $r1 = r0.mChildren;

        $i1 = virtualinvoke $r1.size();

        if i0 >= $i1 goto label3;

        $r1 = r0.mChildren;

        $r2 = virtualinvoke $r1.get(i0);

        $r3 = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject) $r2;

        $z0 = virtualinvoke $r3.isStateful();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    public boolean onStateChanged(int[])
    {
        java.util.ArrayList $r2;
        int[] $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        int i0, $i1;
        java.lang.Object $r3;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject $r4;
        boolean z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        z0 = 0;

        i0 = 0;

     label1:
        $r2 = r0.mChildren;

        $i1 = virtualinvoke $r2.size();

        if i0 >= $i1 goto label2;

        $r2 = r0.mChildren;

        $r3 = virtualinvoke $r2.get(i0);

        $r4 = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject) $r3;

        $z1 = virtualinvoke $r4.onStateChanged($r1);

        z0 = z0 | $z1;

        i0 = i0 + 1;

        goto label1;

     label2:
        return z0;
    }

    public void setPivotX(float)
    {
        byte $b0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        float $f0, $f1;

        r0 := @this;

        $f0 := @parameter0;

        $f1 = r0.mPivotX;

        $b0 = $f0 cmpl $f1;

        if $b0 == 0 goto label1;

        r0.mPivotX = $f0;

        specialinvoke r0.updateLocalMatrix();

     label1:
        return;
    }

    public void setPivotY(float)
    {
        byte $b0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        float $f0, $f1;

        r0 := @this;

        $f0 := @parameter0;

        $f1 = r0.mPivotY;

        $b0 = $f0 cmpl $f1;

        if $b0 == 0 goto label1;

        r0.mPivotY = $f0;

        specialinvoke r0.updateLocalMatrix();

     label1:
        return;
    }

    public void setRotation(float)
    {
        byte $b0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        float $f0, $f1;

        r0 := @this;

        $f0 := @parameter0;

        $f1 = r0.mRotate;

        $b0 = $f0 cmpl $f1;

        if $b0 == 0 goto label1;

        r0.mRotate = $f0;

        specialinvoke r0.updateLocalMatrix();

     label1:
        return;
    }

    public void setScaleX(float)
    {
        byte $b0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        float $f0, $f1;

        r0 := @this;

        $f0 := @parameter0;

        $f1 = r0.mScaleX;

        $b0 = $f0 cmpl $f1;

        if $b0 == 0 goto label1;

        r0.mScaleX = $f0;

        specialinvoke r0.updateLocalMatrix();

     label1:
        return;
    }

    public void setScaleY(float)
    {
        byte $b0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        float $f0, $f1;

        r0 := @this;

        $f0 := @parameter0;

        $f1 = r0.mScaleY;

        $b0 = $f0 cmpl $f1;

        if $b0 == 0 goto label1;

        r0.mScaleY = $f0;

        specialinvoke r0.updateLocalMatrix();

     label1:
        return;
    }

    public void setTranslateX(float)
    {
        byte $b0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        float $f0, $f1;

        r0 := @this;

        $f0 := @parameter0;

        $f1 = r0.mTranslateX;

        $b0 = $f0 cmpl $f1;

        if $b0 == 0 goto label1;

        r0.mTranslateX = $f0;

        specialinvoke r0.updateLocalMatrix();

     label1:
        return;
    }

    public void setTranslateY(float)
    {
        byte $b0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup r0;
        float $f0, $f1;

        r0 := @this;

        $f0 := @parameter0;

        $f1 = r0.mTranslateY;

        $b0 = $f0 cmpl $f1;

        if $b0 == 0 goto label1;

        r0.mTranslateY = $f0;

        specialinvoke r0.updateLocalMatrix();

     label1:
        return;
    }
}
