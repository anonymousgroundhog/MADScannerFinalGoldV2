class androidx.versionedparcelable.VersionedParcelStream$FieldBuffer extends java.lang.Object
{
    final java.io.DataOutputStream mDataStream;
    private final int mFieldId;
    final java.io.ByteArrayOutputStream mOutput;
    private final java.io.DataOutputStream mTarget;

    void <init>(int, java.io.DataOutputStream)
    {
        java.io.DataOutputStream $r1, $r3;
        java.io.ByteArrayOutputStream $r2;
        int $i0;
        androidx.versionedparcelable.VersionedParcelStream$FieldBuffer r0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        specialinvoke r0.<init>();

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<init>();

        r0.mOutput = $r2;

        $r3 = new java.io.DataOutputStream;

        specialinvoke $r3.<init>($r2);

        r0.mDataStream = $r3;

        r0.mFieldId = $i0;

        r0.mTarget = $r1;

        return;
    }

    void flushField() throws java.io.IOException
    {
        java.io.DataOutputStream r1;
        java.io.ByteArrayOutputStream r2;
        int $i0, i1, $i2;
        androidx.versionedparcelable.VersionedParcelStream$FieldBuffer r0;

        r0 := @this;

        r1 = r0.mDataStream;

        virtualinvoke r1.flush();

        r2 = r0.mOutput;

        $i0 = virtualinvoke r2.size();

        i1 = r0.mFieldId;

        i1 = i1 << 16;

        if $i0 < 65535 goto label1;

        $i2 = 65535;

        goto label2;

     label1:
        $i2 = $i0;

     label2:
        i1 = i1 | $i2;

        r1 = r0.mTarget;

        virtualinvoke r1.writeInt(i1);

        i1 = 65535;

        if $i0 < i1 goto label3;

        r1 = r0.mTarget;

        virtualinvoke r1.writeInt($i0);

     label3:
        r2 = r0.mOutput;

        r1 = r0.mTarget;

        virtualinvoke r2.writeTo(r1);

        return;
    }
}
