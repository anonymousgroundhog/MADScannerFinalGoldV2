public class androidx.appcompat.view.menu.ActionMenuItemView extends androidx.appcompat.widget.AppCompatTextView implements androidx.appcompat.view.menu.MenuView$ItemView, android.view.View$OnClickListener, androidx.appcompat.widget.ActionMenuView$ActionMenuChildView
{
    private static final int MAX_ICON_SIZE;
    private static final java.lang.String TAG;
    private boolean mAllowTextWithIcon;
    private boolean mExpandedFormat;
    private androidx.appcompat.widget.ForwardingListener mForwardingListener;
    private android.graphics.drawable.Drawable mIcon;
    androidx.appcompat.view.menu.MenuItemImpl mItemData;
    androidx.appcompat.view.menu.MenuBuilder$ItemInvoker mItemInvoker;
    private int mMaxIconSize;
    private int mMinWidth;
    androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback mPopupCallback;
    private int mSavedPaddingLeft;
    private java.lang.CharSequence mTitle;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        androidx.appcompat.view.menu.ActionMenuItemView r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        androidx.appcompat.view.menu.ActionMenuItemView r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.<init>($r1, $r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        android.util.DisplayMetrics $r6;
        android.content.res.TypedArray $r5;
        android.util.AttributeSet $r2;
        int[] r4;
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        int $i0;
        float f0;
        android.content.res.Resources $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 := @parameter2;

        specialinvoke r0.<init>($r1, $r2, $i0);

        $r3 = virtualinvoke $r1.getResources();

        $z0 = specialinvoke r0.shouldAllowTextWithIcon();

        r0.mAllowTextWithIcon = $z0;

        r4 = androidx.appcompat.R$styleable.ActionMenuItemView;

        $r5 = virtualinvoke $r1.obtainStyledAttributes($r2, r4, $i0, 0);

        $i0 = androidx.appcompat.R$styleable.ActionMenuItemView_android_minWidth;

        $i0 = virtualinvoke $r5.getDimensionPixelSize($i0, 0);

        r0.mMinWidth = $i0;

        virtualinvoke $r5.recycle();

        $r6 = virtualinvoke $r3.getDisplayMetrics();

        f0 = $r6.density;

        f0 = 32.0F * f0;

        f0 = f0 + 0.5F;

        $i0 = (int) f0;

        r0.mMaxIconSize = $i0;

        virtualinvoke r0.setOnClickListener(r0);

        r0.mSavedPaddingLeft = -1;

        virtualinvoke r0.setSaveEnabled(0);

        return;
    }

    private boolean shouldAllowTextWithIcon()
    {
        android.content.Context $r1;
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        android.content.res.Configuration $r3;
        int i0, i1;
        android.content.res.Resources $r2;

        r0 := @this;

        $r1 = virtualinvoke r0.getContext();

        $r2 = virtualinvoke $r1.getResources();

        $r3 = virtualinvoke $r2.getConfiguration();

        i0 = $r3.screenWidthDp;

        i1 = $r3.screenHeightDp;

        if i0 >= 480 goto label3;

        if i0 < 640 goto label1;

        if i1 >= 480 goto label3;

     label1:
        i0 = $r3.orientation;

        if i0 != 2 goto label2;

        goto label3;

     label2:
        return 0;

     label3:
        return 1;
    }

    private void updateTextButtonVisibility()
    {
        androidx.appcompat.view.menu.MenuItemImpl r3;
        java.lang.CharSequence r1, r4;
        android.graphics.drawable.Drawable r2;
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        boolean $z0, $z1, $z2;

        r0 := @this;

        r1 = r0.mTitle;

        $z0 = android.text.TextUtils.isEmpty(r1);

        $z1 = 1;

        $z0 = $z0 ^ 1;

        r2 = r0.mIcon;

        if r2 == null goto label03;

        r3 = r0.mItemData;

        $z2 = virtualinvoke r3.showsTextAsAction();

        if $z2 == 0 goto label02;

        $z2 = r0.mAllowTextWithIcon;

        if $z2 != 0 goto label01;

        $z2 = r0.mExpandedFormat;

        if $z2 == 0 goto label02;

     label01:
        goto label03;

     label02:
        $z1 = 0;

        goto label03;

     label03:
        $z1 = $z0 & $z1;

        r1 = null;

        if $z1 == 0 goto label04;

        r4 = r0.mTitle;

        goto label05;

     label04:
        r4 = null;

     label05:
        virtualinvoke r0.setText(r4);

        r3 = r0.mItemData;

        r4 = virtualinvoke r3.getContentDescription();

        $z0 = android.text.TextUtils.isEmpty(r4);

        if $z0 == 0 goto label08;

        if $z1 == 0 goto label06;

        r4 = null;

        goto label07;

     label06:
        r3 = r0.mItemData;

        r4 = virtualinvoke r3.getTitle();

     label07:
        virtualinvoke r0.setContentDescription(r4);

        goto label09;

     label08:
        virtualinvoke r0.setContentDescription(r4);

     label09:
        r3 = r0.mItemData;

        r4 = virtualinvoke r3.getTooltipText();

        $z0 = android.text.TextUtils.isEmpty(r4);

        if $z0 == 0 goto label12;

        if $z1 == 0 goto label10;

        goto label11;

     label10:
        r3 = r0.mItemData;

        r1 = virtualinvoke r3.getTitle();

     label11:
        androidx.appcompat.widget.TooltipCompat.setTooltipText(r0, r1);

        return;

     label12:
        androidx.appcompat.widget.TooltipCompat.setTooltipText(r0, r4);

        return;
    }

    public androidx.appcompat.view.menu.MenuItemImpl getItemData()
    {
        androidx.appcompat.view.menu.MenuItemImpl r1;
        androidx.appcompat.view.menu.ActionMenuItemView r0;

        r0 := @this;

        r1 = r0.mItemData;

        return r1;
    }

    public boolean hasText()
    {
        java.lang.CharSequence $r1;
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        boolean $z0;

        r0 := @this;

        $r1 = virtualinvoke r0.getText();

        $z0 = android.text.TextUtils.isEmpty($r1);

        $z0 = $z0 ^ 1;

        return $z0;
    }

    public void initialize(androidx.appcompat.view.menu.MenuItemImpl, int)
    {
        androidx.appcompat.view.menu.MenuItemImpl $r1;
        java.lang.CharSequence $r3;
        androidx.appcompat.widget.ForwardingListener $r4;
        android.graphics.drawable.Drawable $r2;
        androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener $r5;
        byte $b1;
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        int $i0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        r0.mItemData = $r1;

        $r2 = virtualinvoke $r1.getIcon();

        virtualinvoke r0.setIcon($r2);

        $r3 = virtualinvoke $r1.getTitleForItemView(r0);

        virtualinvoke r0.setTitle($r3);

        $i0 = virtualinvoke $r1.getItemId();

        virtualinvoke r0.setId($i0);

        $z0 = virtualinvoke $r1.isVisible();

        if $z0 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 8;

     label2:
        virtualinvoke r0.setVisibility($b1);

        $z0 = virtualinvoke $r1.isEnabled();

        virtualinvoke r0.setEnabled($z0);

        $z0 = virtualinvoke $r1.hasSubMenu();

        if $z0 == 0 goto label3;

        $r4 = r0.mForwardingListener;

        if $r4 != null goto label3;

        $r5 = new androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener;

        specialinvoke $r5.<init>(r0);

        r0.mForwardingListener = $r5;

     label3:
        return;
    }

    public boolean needsDividerAfter()
    {
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        boolean $z0;

        r0 := @this;

        $z0 = virtualinvoke r0.hasText();

        return $z0;
    }

    public boolean needsDividerBefore()
    {
        androidx.appcompat.view.menu.MenuItemImpl $r1;
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        r0 := @this;

        $z0 = virtualinvoke r0.hasText();

        if $z0 == 0 goto label1;

        $r1 = r0.mItemData;

        $r2 = virtualinvoke $r1.getIcon();

        if $r2 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onClick(android.view.View)
    {
        androidx.appcompat.view.menu.MenuItemImpl $r3;
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        androidx.appcompat.view.menu.MenuBuilder$ItemInvoker $r2;
        android.view.View $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mItemInvoker;

        if $r2 == null goto label1;

        $r3 = r0.mItemData;

        interfaceinvoke $r2.invokeItem($r3);

     label1:
        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        android.content.res.Configuration $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.onConfigurationChanged($r1);

        $z0 = specialinvoke r0.shouldAllowTextWithIcon();

        r0.mAllowTextWithIcon = $z0;

        specialinvoke r0.updateTextButtonVisibility();

        return;
    }

    protected void onMeasure(int, int)
    {
        android.graphics.Rect $r2;
        android.graphics.drawable.Drawable r1;
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        int $i0, $i1, i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $z0 = virtualinvoke r0.hasText();

        if $z0 == 0 goto label1;

        i2 = r0.mSavedPaddingLeft;

        if i2 < 0 goto label1;

        $i3 = virtualinvoke r0.getPaddingTop();

        $i4 = virtualinvoke r0.getPaddingRight();

        $i5 = virtualinvoke r0.getPaddingBottom();

        specialinvoke r0.setPadding(i2, $i3, $i4, $i5);

     label1:
        specialinvoke r0.onMeasure($i0, $i1);

        i2 = android.view.View$MeasureSpec.getMode($i0);

        $i3 = android.view.View$MeasureSpec.getSize($i0);

        $i0 = virtualinvoke r0.getMeasuredWidth();

        if i2 != -2147483648 goto label2;

        $i4 = r0.mMinWidth;

        $i3 = java.lang.Math.min($i3, $i4);

        goto label3;

     label2:
        $i3 = r0.mMinWidth;

     label3:
        if i2 == 1073741824 goto label4;

        i2 = r0.mMinWidth;

        if i2 <= 0 goto label4;

        if $i0 >= $i3 goto label4;

        $i0 = android.view.View$MeasureSpec.makeMeasureSpec($i3, 1073741824);

        specialinvoke r0.onMeasure($i0, $i1);

     label4:
        if $z0 != 0 goto label5;

        r1 = r0.mIcon;

        if r1 == null goto label5;

        $i0 = virtualinvoke r0.getMeasuredWidth();

        r1 = r0.mIcon;

        $r2 = virtualinvoke r1.getBounds();

        $i1 = virtualinvoke $r2.width();

        $i0 = $i0 - $i1;

        $i0 = $i0 / 2;

        $i1 = virtualinvoke r0.getPaddingTop();

        i2 = virtualinvoke r0.getPaddingRight();

        $i3 = virtualinvoke r0.getPaddingBottom();

        specialinvoke r0.setPadding($i0, $i1, i2, $i3);

     label5:
        return;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.os.Parcelable $r1;
        androidx.appcompat.view.menu.ActionMenuItemView r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.onRestoreInstanceState(null);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.appcompat.view.menu.MenuItemImpl $r2;
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        android.view.MotionEvent $r1;
        androidx.appcompat.widget.ForwardingListener $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mItemData;

        $z0 = virtualinvoke $r2.hasSubMenu();

        if $z0 == 0 goto label1;

        $r3 = r0.mForwardingListener;

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.onTouch(r0, $r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.onTouchEvent($r1);

        return $z0;
    }

    public boolean prefersCondensedTitle()
    {
        androidx.appcompat.view.menu.ActionMenuItemView r0;

        r0 := @this;

        return 1;
    }

    public void setCheckable(boolean)
    {
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        return;
    }

    public void setChecked(boolean)
    {
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        return;
    }

    public void setExpandedFormat(boolean)
    {
        androidx.appcompat.view.menu.MenuItemImpl $r1;
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 := @parameter0;

        $z1 = r0.mExpandedFormat;

        if $z1 == $z0 goto label1;

        r0.mExpandedFormat = $z0;

        $r1 = r0.mItemData;

        if $r1 == null goto label1;

        virtualinvoke $r1.actionFormatChanged();

     label1:
        return;
    }

    public void setIcon(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        int $i0, i1, $i2, i3, i4;
        float f0, $f1;

        r0 := @this;

        $r1 := @parameter0;

        r0.mIcon = $r1;

        if $r1 == null goto label3;

        $i0 = virtualinvoke $r1.getIntrinsicWidth();

        i1 = $i0;

        $i2 = virtualinvoke $r1.getIntrinsicHeight();

        i3 = $i2;

        i4 = r0.mMaxIconSize;

        if $i0 <= i4 goto label1;

        f0 = (float) i4;

        $f1 = (float) $i0;

        f0 = f0 / $f1;

        i1 = r0.mMaxIconSize;

        $f1 = (float) $i2;

        f0 = $f1 * f0;

        i3 = (int) f0;

     label1:
        if i3 <= i4 goto label2;

        f0 = (float) i4;

        $f1 = (float) i3;

        f0 = f0 / $f1;

        i3 = r0.mMaxIconSize;

        $f1 = (float) i1;

        f0 = $f1 * f0;

        i1 = (int) f0;

     label2:
        virtualinvoke $r1.setBounds(0, 0, i1, i3);

     label3:
        virtualinvoke r0.setCompoundDrawables($r1, null, null, null);

        specialinvoke r0.updateTextButtonVisibility();

        return;
    }

    public void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
    {
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        androidx.appcompat.view.menu.MenuBuilder$ItemInvoker $r1;

        r0 := @this;

        $r1 := @parameter0;

        r0.mItemInvoker = $r1;

        return;
    }

    public void setPadding(int, int, int, int)
    {
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        $i3 := @parameter3;

        r0.mSavedPaddingLeft = $i0;

        specialinvoke r0.setPadding($i0, $i1, $i2, $i3);

        return;
    }

    public void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
    {
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback $r1;

        r0 := @this;

        $r1 := @parameter0;

        r0.mPopupCallback = $r1;

        return;
    }

    public void setShortcut(boolean, char)
    {
        char $c0;
        androidx.appcompat.view.menu.ActionMenuItemView r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        $c0 := @parameter1;

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        androidx.appcompat.view.menu.ActionMenuItemView r0;

        r0 := @this;

        $r1 := @parameter0;

        r0.mTitle = $r1;

        specialinvoke r0.updateTextButtonVisibility();

        return;
    }

    public boolean showsIcon()
    {
        androidx.appcompat.view.menu.ActionMenuItemView r0;

        r0 := @this;

        return 1;
    }
}
