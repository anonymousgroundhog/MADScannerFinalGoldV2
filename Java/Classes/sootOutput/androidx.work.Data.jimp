public final class androidx.work.Data extends java.lang.Object
{
    public static final androidx.work.Data EMPTY;
    public static final int MAX_DATA_BYTES;
    private static final java.lang.String TAG;
    java.util.Map mValues;

    static void <clinit>()
    {
        java.lang.String $r0;
        androidx.work.Data$Builder $r1;
        androidx.work.Data $r2;

        $r0 = androidx.work.Logger.tagWithPrefix("Data");

        androidx.work.Data.TAG = $r0;

        $r1 = new androidx.work.Data$Builder;

        specialinvoke $r1.<init>();

        $r2 = virtualinvoke $r1.build();

        androidx.work.Data.EMPTY = $r2;

        return;
    }

    void <init>()
    {
        androidx.work.Data r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public void <init>(androidx.work.Data)
    {
        java.util.Map $r3;
        java.util.HashMap $r2;
        androidx.work.Data r0, $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        $r2 = new java.util.HashMap;

        $r3 = $r1.mValues;

        specialinvoke $r2.<init>($r3);

        r0.mValues = $r2;

        return;
    }

    public void <init>(java.util.Map)
    {
        java.util.HashMap $r2;
        androidx.work.Data r0;
        java.util.Map r1;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<init>(r1);

        r0.mValues = $r2;

        return;
    }

    public static java.lang.Boolean[] convertPrimitiveBooleanArray(boolean[])
    {
        boolean[] $r0;
        int i0, $i1;
        java.lang.Boolean $r1;
        java.lang.Boolean[] r2;
        boolean $z0;

        $r0 := @parameter0;

        i0 = lengthof $r0;

        r2 = newarray (java.lang.Boolean)[i0];

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 >= $i1 goto label2;

        $z0 = $r0[i0];

        $r1 = java.lang.Boolean.valueOf($z0);

        r2[i0] = $r1;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r2;
    }

    public static java.lang.Byte[] convertPrimitiveByteArray(byte[])
    {
        byte[] $r0;
        java.lang.Byte[] r2;
        byte $b2;
        int i0, $i1;
        java.lang.Byte $r1;

        $r0 := @parameter0;

        i0 = lengthof $r0;

        r2 = newarray (java.lang.Byte)[i0];

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 >= $i1 goto label2;

        $b2 = $r0[i0];

        $r1 = java.lang.Byte.valueOf($b2);

        r2[i0] = $r1;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r2;
    }

    public static java.lang.Double[] convertPrimitiveDoubleArray(double[])
    {
        java.lang.Double $r1;
        double[] $r0;
        int i0, $i1;
        java.lang.Double[] r2;
        double $d0;

        $r0 := @parameter0;

        i0 = lengthof $r0;

        r2 = newarray (java.lang.Double)[i0];

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 >= $i1 goto label2;

        $d0 = $r0[i0];

        $r1 = java.lang.Double.valueOf($d0);

        r2[i0] = $r1;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r2;
    }

    public static java.lang.Float[] convertPrimitiveFloatArray(float[])
    {
        java.lang.Float $r1;
        int i0, $i1;
        float $f0;
        float[] $r0;
        java.lang.Float[] r2;

        $r0 := @parameter0;

        i0 = lengthof $r0;

        r2 = newarray (java.lang.Float)[i0];

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 >= $i1 goto label2;

        $f0 = $r0[i0];

        $r1 = java.lang.Float.valueOf($f0);

        r2[i0] = $r1;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r2;
    }

    public static java.lang.Integer[] convertPrimitiveIntArray(int[])
    {
        int[] $r0;
        int i0, $i1;
        java.lang.Integer $r1;
        java.lang.Integer[] r2;

        $r0 := @parameter0;

        i0 = lengthof $r0;

        r2 = newarray (java.lang.Integer)[i0];

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 >= $i1 goto label2;

        $i1 = $r0[i0];

        $r1 = java.lang.Integer.valueOf($i1);

        r2[i0] = $r1;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r2;
    }

    public static java.lang.Long[] convertPrimitiveLongArray(long[])
    {
        java.lang.Long[] r2;
        long[] $r0;
        java.lang.Long $r1;
        int i0, $i1;
        long $l2;

        $r0 := @parameter0;

        i0 = lengthof $r0;

        r2 = newarray (java.lang.Long)[i0];

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 >= $i1 goto label2;

        $l2 = $r0[i0];

        $r1 = java.lang.Long.valueOf($l2);

        r2[i0] = $r1;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r2;
    }

    public static byte[] convertToPrimitiveArray(java.lang.Byte[])
    {
        byte[] r1;
        java.lang.Byte[] $r0;
        byte $b0;
        int i1, $i2;
        java.lang.Byte $r2;

        $r0 := @parameter0;

        i1 = lengthof $r0;

        r1 = newarray (byte)[i1];

        i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if i1 >= $i2 goto label2;

        $r2 = $r0[i1];

        $b0 = virtualinvoke $r2.byteValue();

        r1[i1] = $b0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static double[] convertToPrimitiveArray(java.lang.Double[])
    {
        java.lang.Double $r2;
        java.lang.Double[] $r0;
        int i0, $i1;
        double[] r1;
        double $d0;

        $r0 := @parameter0;

        i0 = lengthof $r0;

        r1 = newarray (double)[i0];

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 >= $i1 goto label2;

        $r2 = $r0[i0];

        $d0 = virtualinvoke $r2.doubleValue();

        r1[i0] = $d0;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static float[] convertToPrimitiveArray(java.lang.Float[])
    {
        java.lang.Float $r2;
        int i0, $i1;
        float $f0;
        float[] r1;
        java.lang.Float[] $r0;

        $r0 := @parameter0;

        i0 = lengthof $r0;

        r1 = newarray (float)[i0];

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 >= $i1 goto label2;

        $r2 = $r0[i0];

        $f0 = virtualinvoke $r2.floatValue();

        r1[i0] = $f0;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static int[] convertToPrimitiveArray(java.lang.Integer[])
    {
        int[] r1;
        int $i0, i1;
        java.lang.Integer $r2;
        java.lang.Integer[] $r0;

        $r0 := @parameter0;

        i1 = lengthof $r0;

        r1 = newarray (int)[i1];

        i1 = 0;

     label1:
        $i0 = lengthof $r0;

        if i1 >= $i0 goto label2;

        $r2 = $r0[i1];

        $i0 = virtualinvoke $r2.intValue();

        r1[i1] = $i0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static long[] convertToPrimitiveArray(java.lang.Long[])
    {
        java.lang.Long[] $r0;
        long[] r1;
        java.lang.Long $r2;
        int i1, $i2;
        long $l0;

        $r0 := @parameter0;

        i1 = lengthof $r0;

        r1 = newarray (long)[i1];

        i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if i1 >= $i2 goto label2;

        $r2 = $r0[i1];

        $l0 = virtualinvoke $r2.longValue();

        r1[i1] = $l0;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static boolean[] convertToPrimitiveArray(java.lang.Boolean[])
    {
        int i0, $i1;
        boolean[] r1;
        java.lang.Boolean $r2;
        java.lang.Boolean[] $r0;
        boolean $z0;

        $r0 := @parameter0;

        i0 = lengthof $r0;

        r1 = newarray (boolean)[i0];

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 >= $i1 goto label2;

        $r2 = $r0[i0];

        $z0 = virtualinvoke $r2.booleanValue();

        r1[i0] = $z0;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static androidx.work.Data fromByteArray(byte[])
    {
        java.lang.Throwable r9;
        byte[] $r0;
        java.lang.IllegalStateException $r18;
        java.io.ObjectInputStream r3, r4, $r16;
        java.util.HashMap r1, $r14;
        java.io.ByteArrayInputStream r2, $r15;
        int i0;
        java.lang.String $r5;
        androidx.work.Data $r17;
        java.io.IOException r7, r8, r11, r12, r13;
        java.lang.Exception r10;
        java.lang.Object $r6;

        $r0 := @parameter0;

        i0 = lengthof $r0;

        if i0 > 10240 goto label34;

        $r14 = new java.util.HashMap;

        r1 = $r14;

        specialinvoke $r14.<init>();

        $r15 = new java.io.ByteArrayInputStream;

        r2 = $r15;

        specialinvoke $r15.<init>($r0);

        r3 = null;

     label01:
        $r16 = new java.io.ObjectInputStream;

     label02:
        r4 = $r16;

     label03:
        specialinvoke $r16.<init>(r2);

     label04:
        r3 = r4;

     label05:
        i0 = virtualinvoke r4.readInt();

     label06:
        if i0 <= 0 goto label09;

     label07:
        $r5 = virtualinvoke r4.readUTF();

        $r6 = virtualinvoke r4.readObject();

        interfaceinvoke r1.put($r5, $r6);

     label08:
        i0 = i0 + -1;

        goto label06;

     label09:
        virtualinvoke r4.close();

     label10:
        goto label12;

     label11:
        r7 := @caughtexception;

        $r5 = androidx.work.Data.TAG;

        android.util.Log.e($r5, "Error in Data#fromByteArray: ", r7);

     label12:
        virtualinvoke r2.close();

     label13:
        goto label25;

     label14:
        r8 := @caughtexception;

        $r5 = androidx.work.Data.TAG;

        android.util.Log.e($r5, "Error in Data#fromByteArray: ", r8);

        goto label25;

     label15:
        r9 := @caughtexception;

        goto label26;

     label16:
        r10 := @caughtexception;

        goto label18;

     label17:
        r10 := @caughtexception;

     label18:
        $r5 = androidx.work.Data.TAG;

        android.util.Log.e($r5, "Error in Data#fromByteArray: ", r10);

     label19:
        if r3 == null goto label23;

     label20:
        virtualinvoke r3.close();

     label21:
        goto label23;

     label22:
        r11 := @caughtexception;

        $r5 = androidx.work.Data.TAG;

        android.util.Log.e($r5, "Error in Data#fromByteArray: ", r11);

     label23:
        virtualinvoke r2.close();

     label24:
        goto label13;

     label25:
        $r17 = new androidx.work.Data;

        specialinvoke $r17.<init>(r1);

        return $r17;

     label26:
        if r3 == null goto label30;

     label27:
        virtualinvoke r3.close();

     label28:
        goto label30;

     label29:
        r12 := @caughtexception;

        $r5 = androidx.work.Data.TAG;

        android.util.Log.e($r5, "Error in Data#fromByteArray: ", r12);

     label30:
        virtualinvoke r2.close();

     label31:
        goto label33;

     label32:
        r13 := @caughtexception;

        $r5 = androidx.work.Data.TAG;

        android.util.Log.e($r5, "Error in Data#fromByteArray: ", r13);

     label33:
        throw r9;

     label34:
        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<init>("Data cannot occupy more than 10240 bytes when serialized");

        goto label35;

     label35:
        throw $r18;

        catch java.io.IOException from label03 to label04 with label17;
        catch java.io.IOException from label05 to label06 with label17;
        catch java.io.IOException from label07 to label08 with label17;
        catch java.lang.ClassNotFoundException from label03 to label04 with label16;
        catch java.lang.ClassNotFoundException from label05 to label06 with label16;
        catch java.lang.ClassNotFoundException from label07 to label08 with label16;
        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label18 to label19 with label15;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.io.IOException from label23 to label24 with label14;
        catch java.io.IOException from label27 to label28 with label29;
        catch java.io.IOException from label30 to label31 with label32;
    }

    public static byte[] toByteArrayInternal(androidx.work.Data)
    {
        java.lang.Throwable r14;
        byte[] $r12;
        java.lang.IllegalStateException $r13;
        java.io.ByteArrayOutputStream r1;
        java.util.Map r4;
        int $i0;
        java.io.ObjectOutputStream r2, r3;
        java.lang.String r9;
        androidx.work.Data $r0;
        boolean $z0;
        java.util.Map$Entry r8;
        java.util.Iterator $r6;
        java.util.Set $r5;
        java.io.IOException r10, r11, r15, r16, r17, r18, r19;
        java.lang.Object $r7;

        $r0 := @parameter0;

        r1 = new java.io.ByteArrayOutputStream;

        specialinvoke r1.<init>();

        r2 = null;

     label01:
        r3 = new java.io.ObjectOutputStream;

     label02:
        specialinvoke r3.<init>(r1);

     label03:
        r2 = r3;

     label04:
        $i0 = virtualinvoke $r0.size();

        virtualinvoke r3.writeInt($i0);

     label05:
        r4 = $r0.mValues;

     label06:
        $r5 = interfaceinvoke r4.entrySet();

        $r6 = interfaceinvoke $r5.iterator();

     label07:
        $z0 = interfaceinvoke $r6.hasNext();

     label08:
        if $z0 == 0 goto label15;

     label09:
        $r7 = interfaceinvoke $r6.next();

     label10:
        r8 = (java.util.Map$Entry) $r7;

     label11:
        $r7 = interfaceinvoke r8.getKey();

     label12:
        r9 = (java.lang.String) $r7;

     label13:
        virtualinvoke r3.writeUTF(r9);

        $r7 = interfaceinvoke r8.getValue();

        virtualinvoke r3.writeObject($r7);

     label14:
        goto label07;

     label15:
        virtualinvoke r3.close();

     label16:
        goto label18;

     label17:
        r10 := @caughtexception;

        r9 = androidx.work.Data.TAG;

        android.util.Log.e(r9, "Error in Data#toByteArray: ", r10);

     label18:
        virtualinvoke r1.close();

     label19:
        goto label21;

     label20:
        r11 := @caughtexception;

        r9 = androidx.work.Data.TAG;

        android.util.Log.e(r9, "Error in Data#toByteArray: ", r11);

     label21:
        $i0 = virtualinvoke r1.size();

        if $i0 > 10240 goto label22;

        $r12 = virtualinvoke r1.toByteArray();

        return $r12;

     label22:
        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<init>("Data cannot occupy more than 10240 bytes when serialized");

        throw $r13;

     label23:
        r14 := @caughtexception;

        goto label33;

     label24:
        r15 := @caughtexception;

     label25:
        r9 = androidx.work.Data.TAG;

        android.util.Log.e(r9, "Error in Data#toByteArray: ", r15);

        $r12 = virtualinvoke r1.toByteArray();

     label26:
        if r2 == null goto label30;

     label27:
        virtualinvoke r2.close();

     label28:
        goto label30;

     label29:
        r16 := @caughtexception;

        r9 = androidx.work.Data.TAG;

        android.util.Log.e(r9, "Error in Data#toByteArray: ", r16);

     label30:
        virtualinvoke r1.close();

     label31:
        return $r12;

     label32:
        r17 := @caughtexception;

        r9 = androidx.work.Data.TAG;

        android.util.Log.e(r9, "Error in Data#toByteArray: ", r17);

        return $r12;

     label33:
        if r2 == null goto label37;

     label34:
        virtualinvoke r2.close();

     label35:
        goto label37;

     label36:
        r18 := @caughtexception;

        r9 = androidx.work.Data.TAG;

        android.util.Log.e(r9, "Error in Data#toByteArray: ", r18);

     label37:
        virtualinvoke r1.close();

     label38:
        goto label40;

     label39:
        r19 := @caughtexception;

        r9 = androidx.work.Data.TAG;

        android.util.Log.e(r9, "Error in Data#toByteArray: ", r19);

     label40:
        goto label41;

     label41:
        throw r14;

        catch java.io.IOException from label02 to label03 with label24;
        catch java.io.IOException from label04 to label05 with label24;
        catch java.io.IOException from label06 to label08 with label24;
        catch java.io.IOException from label09 to label10 with label24;
        catch java.io.IOException from label11 to label12 with label24;
        catch java.io.IOException from label13 to label14 with label24;
        catch java.lang.Throwable from label01 to label03 with label23;
        catch java.lang.Throwable from label04 to label08 with label23;
        catch java.lang.Throwable from label09 to label14 with label23;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.lang.Throwable from label25 to label26 with label23;
        catch java.io.IOException from label27 to label28 with label29;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.io.IOException from label34 to label35 with label36;
        catch java.io.IOException from label37 to label38 with label39;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object[] r11, $r12;
        java.util.Iterator $r8;
        java.util.Set $r6, $r7;
        java.util.Map r5;
        java.lang.Object $r1, $r10;
        java.lang.Class $r2, $r3;
        java.lang.String r9;
        androidx.work.Data r0, r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        if r0 != $r1 goto label01;

        return 1;

     label01:
        if $r1 == null goto label11;

        $r2 = virtualinvoke r0.getClass();

        $r3 = virtualinvoke $r1.getClass();

        if $r2 == $r3 goto label02;

        return 0;

     label02:
        r4 = (androidx.work.Data) $r1;

        r5 = r0.mValues;

        $r6 = interfaceinvoke r5.keySet();

        r5 = r4.mValues;

        $r7 = interfaceinvoke r5.keySet();

        $z0 = interfaceinvoke $r6.equals($r7);

        if $z0 != 0 goto label03;

        return 0;

     label03:
        $r8 = interfaceinvoke $r6.iterator();

     label04:
        $z0 = interfaceinvoke $r8.hasNext();

        if $z0 == 0 goto label10;

        $r1 = interfaceinvoke $r8.next();

        r9 = (java.lang.String) $r1;

        r5 = r0.mValues;

        $r1 = interfaceinvoke r5.get(r9);

        r5 = r4.mValues;

        $r10 = interfaceinvoke r5.get(r9);

        if $r1 == null goto label07;

        if $r10 != null goto label05;

        goto label07;

     label05:
        $z0 = $r1 instanceof java.lang.Object[];

        if $z0 == 0 goto label06;

        $z0 = $r10 instanceof java.lang.Object[];

        if $z0 == 0 goto label06;

        r11 = (java.lang.Object[]) $r1;

        $r12 = (java.lang.Object[]) $r10;

        $z0 = java.util.Arrays.deepEquals(r11, $r12);

        goto label09;

     label06:
        $z0 = virtualinvoke $r1.equals($r10);

        goto label09;

     label07:
        if $r1 != $r10 goto label08;

        $z0 = 1;

        goto label09;

     label08:
        $z0 = 0;

     label09:
        if $z0 != 0 goto label04;

        return 0;

     label10:
        return 1;

     label11:
        return 0;
    }

    public boolean getBoolean(java.lang.String, boolean)
    {
        java.util.Map r2;
        java.lang.Boolean $r4;
        java.lang.Object $r3;
        java.lang.String $r1;
        androidx.work.Data r0;
        boolean $z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        r2 = r0.mValues;

        $r3 = interfaceinvoke r2.get($r1);

        $z1 = $r3 instanceof java.lang.Boolean;

        if $z1 == 0 goto label1;

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.booleanValue();

     label1:
        return $z0;
    }

    public boolean[] getBooleanArray(java.lang.String)
    {
        java.util.Map r2;
        boolean[] $r5;
        java.lang.Object $r3;
        java.lang.String $r1;
        androidx.work.Data r0;
        java.lang.Boolean[] r4;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mValues;

        $r3 = interfaceinvoke r2.get($r1);

        z0 = $r3 instanceof java.lang.Boolean[];

        if z0 == 0 goto label1;

        r4 = (java.lang.Boolean[]) $r3;

        $r5 = androidx.work.Data.convertToPrimitiveArray(r4);

        return $r5;

     label1:
        return null;
    }

    public byte getByte(java.lang.String, byte)
    {
        byte $b0;
        java.util.Map r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        androidx.work.Data r0;
        java.lang.Byte $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $b0 := @parameter1;

        r2 = r0.mValues;

        $r3 = interfaceinvoke r2.get($r1);

        $z0 = $r3 instanceof java.lang.Byte;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Byte) $r3;

        $b0 = virtualinvoke $r4.byteValue();

     label1:
        return $b0;
    }

    public byte[] getByteArray(java.lang.String)
    {
        byte[] $r5;
        java.lang.Byte[] r4;
        java.util.Map r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        androidx.work.Data r0;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mValues;

        $r3 = interfaceinvoke r2.get($r1);

        z0 = $r3 instanceof java.lang.Byte[];

        if z0 == 0 goto label1;

        r4 = (java.lang.Byte[]) $r3;

        $r5 = androidx.work.Data.convertToPrimitiveArray(r4);

        return $r5;

     label1:
        return null;
    }

    public double getDouble(java.lang.String, double)
    {
        java.lang.Double $r4;
        java.util.Map r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        androidx.work.Data r0;
        double $d0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $d0 := @parameter1;

        r2 = r0.mValues;

        $r3 = interfaceinvoke r2.get($r1);

        $z0 = $r3 instanceof java.lang.Double;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Double) $r3;

        $d0 = virtualinvoke $r4.doubleValue();

     label1:
        return $d0;
    }

    public double[] getDoubleArray(java.lang.String)
    {
        java.util.Map r2;
        java.lang.Double[] r4;
        double[] $r5;
        java.lang.Object $r3;
        java.lang.String $r1;
        androidx.work.Data r0;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mValues;

        $r3 = interfaceinvoke r2.get($r1);

        z0 = $r3 instanceof java.lang.Double[];

        if z0 == 0 goto label1;

        r4 = (java.lang.Double[]) $r3;

        $r5 = androidx.work.Data.convertToPrimitiveArray(r4);

        return $r5;

     label1:
        return null;
    }

    public float getFloat(java.lang.String, float)
    {
        java.lang.Float $r4;
        java.util.Map r2;
        float $f0;
        java.lang.Object $r3;
        java.lang.String $r1;
        androidx.work.Data r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $f0 := @parameter1;

        r2 = r0.mValues;

        $r3 = interfaceinvoke r2.get($r1);

        $z0 = $r3 instanceof java.lang.Float;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Float) $r3;

        $f0 = virtualinvoke $r4.floatValue();

     label1:
        return $f0;
    }

    public float[] getFloatArray(java.lang.String)
    {
        java.util.Map r2;
        java.lang.Object $r3;
        float[] $r5;
        java.lang.String $r1;
        androidx.work.Data r0;
        java.lang.Float[] r4;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mValues;

        $r3 = interfaceinvoke r2.get($r1);

        z0 = $r3 instanceof java.lang.Float[];

        if z0 == 0 goto label1;

        r4 = (java.lang.Float[]) $r3;

        $r5 = androidx.work.Data.convertToPrimitiveArray(r4);

        return $r5;

     label1:
        return null;
    }

    public int getInt(java.lang.String, int)
    {
        java.util.Map r2;
        int $i0;
        java.lang.Object $r3;
        java.lang.String $r1;
        androidx.work.Data r0;
        java.lang.Integer $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        r2 = r0.mValues;

        $r3 = interfaceinvoke r2.get($r1);

        $z0 = $r3 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.intValue();

     label1:
        return $i0;
    }

    public int[] getIntArray(java.lang.String)
    {
        int[] $r5;
        java.util.Map r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        androidx.work.Data r0;
        java.lang.Integer[] r4;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mValues;

        $r3 = interfaceinvoke r2.get($r1);

        z0 = $r3 instanceof java.lang.Integer[];

        if z0 == 0 goto label1;

        r4 = (java.lang.Integer[]) $r3;

        $r5 = androidx.work.Data.convertToPrimitiveArray(r4);

        return $r5;

     label1:
        return null;
    }

    public java.util.Map getKeyValueMap()
    {
        androidx.work.Data r0;
        java.util.Map $r1;

        r0 := @this;

        $r1 = r0.mValues;

        $r1 = java.util.Collections.unmodifiableMap($r1);

        return $r1;
    }

    public long getLong(java.lang.String, long)
    {
        java.lang.Long $r4;
        java.util.Map r2;
        long $l0;
        java.lang.Object $r3;
        java.lang.String $r1;
        androidx.work.Data r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $l0 := @parameter1;

        r2 = r0.mValues;

        $r3 = interfaceinvoke r2.get($r1);

        $z0 = $r3 instanceof java.lang.Long;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Long) $r3;

        $l0 = virtualinvoke $r4.longValue();

     label1:
        return $l0;
    }

    public long[] getLongArray(java.lang.String)
    {
        java.lang.Long[] r4;
        long[] $r5;
        java.util.Map r2;
        java.lang.Object $r3;
        java.lang.String $r1;
        androidx.work.Data r0;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mValues;

        $r3 = interfaceinvoke r2.get($r1);

        z0 = $r3 instanceof java.lang.Long[];

        if z0 == 0 goto label1;

        r4 = (java.lang.Long[]) $r3;

        $r5 = androidx.work.Data.convertToPrimitiveArray(r4);

        return $r5;

     label1:
        return null;
    }

    public java.lang.String getString(java.lang.String)
    {
        java.util.Map r3;
        java.lang.Object $r2;
        java.lang.String $r1;
        androidx.work.Data r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        r3 = r0.mValues;

        $r2 = interfaceinvoke r3.get($r1);

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.String) $r2;

        return $r1;

     label1:
        return null;
    }

    public java.lang.String[] getStringArray(java.lang.String)
    {
        java.util.Map r3;
        java.lang.Object $r2;
        java.lang.String[] $r4;
        java.lang.String $r1;
        androidx.work.Data r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        r3 = r0.mValues;

        $r2 = interfaceinvoke r3.get($r1);

        $z0 = $r2 instanceof java.lang.String[];

        if $z0 == 0 goto label1;

        $r4 = (java.lang.String[]) $r2;

        return $r4;

     label1:
        return null;
    }

    public boolean hasKeyWithValueOfType(java.lang.String, java.lang.Class)
    {
        java.util.Map r3;
        java.lang.Class r2, $r5;
        java.lang.Object $r4;
        java.lang.String $r1;
        androidx.work.Data r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        r2 := @parameter1;

        r3 = r0.mValues;

        $r4 = interfaceinvoke r3.get($r1);

        if $r4 == null goto label1;

        $r5 = virtualinvoke $r4.getClass();

        $z0 = virtualinvoke r2.isAssignableFrom($r5);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        int $i0;
        androidx.work.Data r0;
        java.util.Map $r1;

        r0 := @this;

        $r1 = r0.mValues;

        $i0 = interfaceinvoke $r1.hashCode();

        $i0 = $i0 * 31;

        return $i0;
    }

    public int size()
    {
        int $i0;
        androidx.work.Data r0;
        java.util.Map $r1;

        r0 := @this;

        $r1 = r0.mValues;

        $i0 = interfaceinvoke $r1.size();

        return $i0;
    }

    public byte[] toByteArray()
    {
        byte[] $r1;
        androidx.work.Data r0;

        r0 := @this;

        $r1 = androidx.work.Data.toByteArrayInternal(r0);

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r8;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.util.Map $r2;
        java.lang.StringBuilder r1, $r7;
        java.lang.Object $r5;
        java.lang.String r6;
        androidx.work.Data r0;
        boolean $z0;

        r0 := @this;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<init>("Data {");

        $r2 = r0.mValues;

        $z0 = interfaceinvoke $r2.isEmpty();

        if $z0 != 0 goto label4;

        $r2 = r0.mValues;

        $r3 = interfaceinvoke $r2.keySet();

        $r4 = interfaceinvoke $r3.iterator();

     label1:
        $z0 = interfaceinvoke $r4.hasNext();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.next();

        r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke r1.append(r6);

        virtualinvoke $r7.append(" : ");

        $r2 = r0.mValues;

        $r5 = interfaceinvoke $r2.get(r6);

        $z0 = $r5 instanceof java.lang.Object[];

        if $z0 == 0 goto label2;

        $r8 = (java.lang.Object[]) $r5;

        r6 = java.util.Arrays.toString($r8);

        virtualinvoke r1.append(r6);

        goto label3;

     label2:
        virtualinvoke r1.append($r5);

     label3:
        virtualinvoke r1.append(", ");

        goto label1;

     label4:
        virtualinvoke r1.append("}");

        r6 = virtualinvoke r1.toString();

        return r6;
    }
}
