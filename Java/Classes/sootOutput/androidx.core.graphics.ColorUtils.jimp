public final class androidx.core.graphics.ColorUtils extends java.lang.Object
{
    private static final int MIN_ALPHA_SEARCH_MAX_ITERATIONS;
    private static final int MIN_ALPHA_SEARCH_PRECISION;
    private static final java.lang.ThreadLocal TEMP_ARRAY;
    private static final double XYZ_EPSILON;
    private static final double XYZ_KAPPA;
    private static final double XYZ_WHITE_REFERENCE_X;
    private static final double XYZ_WHITE_REFERENCE_Y;
    private static final double XYZ_WHITE_REFERENCE_Z;

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<init>();

        androidx.core.graphics.ColorUtils.TEMP_ARRAY = $r0;

        return;
    }

    private void <init>()
    {
        androidx.core.graphics.ColorUtils r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static int HSLToColor(float[])
    {
        float[] $r0;
        int i0, i1, i2, i3;
        float f0, f1, f2, f3;

        $r0 := @parameter0;

        f0 = $r0[0];

        f1 = $r0[1];

        f2 = $r0[2];

        f3 = f2 * 2.0F;

        f3 = f3 - 1.0F;

        f3 = java.lang.Math.abs(f3);

        f3 = 1.0F - f3;

        f1 = f3 * f1;

        f3 = 0.5F * f1;

        f2 = f2 - f3;

        f3 = f0 / 60.0F;

        f3 = f3 % 2.0F;

        f3 = f3 - 1.0F;

        f3 = java.lang.Math.abs(f3);

        f3 = 1.0F - f3;

        f3 = f3 * f1;

        i0 = (int) f0;

        i1 = i0 / 60;

        i0 = 0;

        i2 = 0;

        i3 = 0;

        lookupswitch(i1)
        {
            case 0: goto label7;
            case 1: goto label6;
            case 2: goto label5;
            case 3: goto label4;
            case 4: goto label3;
            case 5: goto label2;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        goto label8;

     label2:
        f1 = f1 + f2;

        f1 = f1 * 255.0F;

        i0 = java.lang.Math.round(f1);

        f1 = f2 * 255.0F;

        i2 = java.lang.Math.round(f1);

        f2 = f3 + f2;

        f2 = f2 * 255.0F;

        i3 = java.lang.Math.round(f2);

        goto label8;

     label3:
        f0 = f3 + f2;

        f0 = f0 * 255.0F;

        i0 = java.lang.Math.round(f0);

        f0 = f2 * 255.0F;

        i2 = java.lang.Math.round(f0);

        f2 = f1 + f2;

        f2 = f2 * 255.0F;

        i3 = java.lang.Math.round(f2);

        goto label8;

     label4:
        f0 = f2 * 255.0F;

        i0 = java.lang.Math.round(f0);

        f0 = f3 + f2;

        f0 = f0 * 255.0F;

        i2 = java.lang.Math.round(f0);

        f2 = f1 + f2;

        f2 = f2 * 255.0F;

        i3 = java.lang.Math.round(f2);

        goto label8;

     label5:
        f0 = f2 * 255.0F;

        i0 = java.lang.Math.round(f0);

        f1 = f1 + f2;

        f1 = f1 * 255.0F;

        i2 = java.lang.Math.round(f1);

        f2 = f3 + f2;

        f2 = f2 * 255.0F;

        i3 = java.lang.Math.round(f2);

        goto label8;

     label6:
        f0 = f3 + f2;

        f0 = f0 * 255.0F;

        i0 = java.lang.Math.round(f0);

        f1 = f1 + f2;

        f1 = f1 * 255.0F;

        i2 = java.lang.Math.round(f1);

        f2 = 255.0F * f2;

        i3 = java.lang.Math.round(f2);

        goto label8;

     label7:
        f1 = f1 + f2;

        f1 = f1 * 255.0F;

        i0 = java.lang.Math.round(f1);

        f1 = f3 + f2;

        f1 = f1 * 255.0F;

        i2 = java.lang.Math.round(f1);

        f2 = 255.0F * f2;

        i3 = java.lang.Math.round(f2);

     label8:
        i0 = androidx.core.graphics.ColorUtils.constrain(i0, 0, 255);

        i2 = androidx.core.graphics.ColorUtils.constrain(i2, 0, 255);

        i3 = androidx.core.graphics.ColorUtils.constrain(i3, 0, 255);

        i0 = android.graphics.Color.rgb(i0, i2, i3);

        return i0;
    }

    public static int LABToColor(double, double, double)
    {
        double[] $r0;
        int $i0;
        double $d0, $d1, $d2;

        $d0 := @parameter0;

        $d1 := @parameter1;

        $d2 := @parameter2;

        $r0 = androidx.core.graphics.ColorUtils.getTempDouble3Array();

        androidx.core.graphics.ColorUtils.LABToXYZ($d0, $d1, $d2, $r0);

        $d0 = $r0[0];

        $d1 = $r0[1];

        $d2 = $r0[2];

        $i0 = androidx.core.graphics.ColorUtils.XYZToColor($d0, $d1, $d2);

        return $i0;
    }

    public static void LABToXYZ(double, double, double, double[])
    {
        double[] $r0;
        byte $b0;
        int $i1;
        double $d0, $d1, $d2, d3, d4;

        $d0 := @parameter0;

        $d1 := @parameter1;

        $d2 := @parameter2;

        $r0 := @parameter3;

        d3 = $d0 + 16.0;

        d3 = d3 / 116.0;

        $d1 = $d1 / 500.0;

        d4 = $d1 + d3;

        $d1 = $d2 / 200.0;

        $d1 = d3 - $d1;

        $d2 = java.lang.Math.pow(d4, 3.0);

        $b0 = $d2 cmpl 0.008856;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        goto label2;

     label1:
        $d2 = d4 * 116.0;

        $d2 = $d2 - 16.0;

        $d2 = $d2 / 903.3;

     label2:
        $b0 = $d0 cmpl 7.9996247999999985;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label3;

        $d0 = java.lang.Math.pow(d3, 3.0);

        goto label4;

     label3:
        $d0 = $d0 / 903.3;

     label4:
        d3 = java.lang.Math.pow($d1, 3.0);

        $b0 = d3 cmpl 0.008856;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label5;

        $d1 = d3;

        goto label6;

     label5:
        $d1 = 116.0 * $d1;

        $d1 = $d1 - 16.0;

        $d1 = $d1 / 903.3;

     label6:
        $d2 = 95.047 * $d2;

        $r0[0] = $d2;

        $d0 = 100.0 * $d0;

        $r0[1] = $d0;

        $d0 = 108.883 * $d1;

        $r0[2] = $d0;

        return;
    }

    public static void RGBToHSL(int, int, int, float[])
    {
        float[] $r0;
        byte b3;
        int $i0, $i1, $i2;
        float f0, f1, f2, f3, f4, $f5, $f6;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        $r0 := @parameter3;

        f1 = (float) $i0;

        f2 = f1 / 255.0F;

        f1 = (float) $i1;

        f3 = f1 / 255.0F;

        f1 = (float) $i2;

        f4 = f1 / 255.0F;

        f1 = java.lang.Math.max(f3, f4);

        $f5 = java.lang.Math.max(f2, f1);

        f1 = java.lang.Math.min(f3, f4);

        $f6 = java.lang.Math.min(f2, f1);

        f0 = $f5 - $f6;

        f1 = $f5 + $f6;

        f1 = f1 / 2.0F;

        b3 = $f5 cmpl $f6;

        if b3 != 0 goto label1;

        f0 = 0.0F;

        f2 = 0.0F;

        goto label5;

     label1:
        b3 = $f5 cmpl f2;

        if b3 != 0 goto label2;

        f2 = f3 - f4;

        f2 = f2 / f0;

        f2 = f2 % 6.0F;

        goto label4;

     label2:
        b3 = $f5 cmpl f3;

        if b3 != 0 goto label3;

        f2 = f4 - f2;

        f2 = f2 / f0;

        f2 = f2 + 2.0F;

        goto label4;

     label3:
        f2 = f2 - f3;

        f2 = f2 / f0;

        f2 = f2 + 4.0F;

     label4:
        f3 = 2.0F * f1;

        f3 = f3 - 1.0F;

        f3 = java.lang.Math.abs(f3);

        f3 = 1.0F - f3;

        f0 = f0 / f3;

     label5:
        f2 = 60.0F * f2;

        f2 = f2 % 360.0F;

        b3 = f2 cmpg 0.0F;

        $i0 = (int) b3;

        if $i0 >= 0 goto label6;

        f2 = f2 + 360.0F;

     label6:
        f2 = androidx.core.graphics.ColorUtils.constrain(f2, 0.0F, 360.0F);

        $r0[0] = f2;

        f0 = androidx.core.graphics.ColorUtils.constrain(f0, 0.0F, 1.0F);

        $r0[1] = f0;

        f1 = androidx.core.graphics.ColorUtils.constrain(f1, 0.0F, 1.0F);

        $r0[2] = f1;

        return;
    }

    public static void RGBToLAB(int, int, int, double[])
    {
        int $i0, $i1, $i2;
        double[] $r0;
        double $d0, $d1, $d2;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        $r0 := @parameter3;

        androidx.core.graphics.ColorUtils.RGBToXYZ($i0, $i1, $i2, $r0);

        $d0 = $r0[0];

        $d1 = $r0[1];

        $d2 = $r0[2];

        androidx.core.graphics.ColorUtils.XYZToLAB($d0, $d1, $d2, $r0);

        return;
    }

    public static void RGBToXYZ(int, int, int, double[])
    {
        double[] $r0;
        java.lang.IllegalArgumentException $r1;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        double d0, d1, d2, d3, $d4;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        $r0 := @parameter3;

        $i3 = lengthof $r0;

        if $i3 != 3 goto label7;

        d0 = (double) $i0;

        java.lang.Double.isNaN(d0);

        d0 = d0 / 255.0;

        $b4 = d0 cmpg 0.04045;

        $i0 = (int) $b4;

        if $i0 >= 0 goto label1;

        d0 = d0 / 12.92;

        goto label2;

     label1:
        d0 = d0 + 0.055;

        d0 = d0 / 1.055;

        d0 = java.lang.Math.pow(d0, 2.4);

     label2:
        d1 = (double) $i1;

        java.lang.Double.isNaN(d1);

        d1 = d1 / 255.0;

        $b4 = d1 cmpg 0.04045;

        $i0 = (int) $b4;

        if $i0 >= 0 goto label3;

        d1 = d1 / 12.92;

        goto label4;

     label3:
        d1 = d1 + 0.055;

        d1 = d1 / 1.055;

        d1 = java.lang.Math.pow(d1, 2.4);

     label4:
        d2 = (double) $i2;

        java.lang.Double.isNaN(d2);

        d2 = d2 / 255.0;

        $b4 = d2 cmpg 0.04045;

        $i0 = (int) $b4;

        if $i0 >= 0 goto label5;

        d2 = d2 / 12.92;

        goto label6;

     label5:
        d2 = 0.055 + d2;

        d2 = d2 / 1.055;

        d2 = java.lang.Math.pow(d2, 2.4);

     label6:
        d3 = 0.4124 * d0;

        $d4 = 0.3576 * d1;

        d3 = d3 + $d4;

        $d4 = 0.1805 * d2;

        d3 = d3 + $d4;

        d3 = d3 * 100.0;

        $r0[0] = d3;

        d3 = 0.2126 * d0;

        $d4 = 0.7152 * d1;

        d3 = d3 + $d4;

        $d4 = 0.0722 * d2;

        d3 = d3 + $d4;

        d3 = d3 * 100.0;

        $r0[1] = d3;

        d0 = 0.0193 * d0;

        d1 = 0.1192 * d1;

        d0 = d0 + d1;

        d1 = 0.9505 * d2;

        d0 = d0 + d1;

        d0 = d0 * 100.0;

        $r0[2] = d0;

        return;

     label7:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<init>("outXyz must have a length of 3.");

        throw $r1;
    }

    public static int XYZToColor(double, double, double)
    {
        long $l2;
        byte $b1;
        int $i0, $i3, $i4;
        double $d0, $d1, $d2, d3, d4, d5;

        $d0 := @parameter0;

        $d1 := @parameter1;

        $d2 := @parameter2;

        d3 = 3.2406 * $d0;

        d4 = -1.5372 * $d1;

        d3 = d3 + d4;

        d4 = -0.4986 * $d2;

        d3 = d3 + d4;

        d3 = d3 / 100.0;

        d4 = -0.9689 * $d0;

        d5 = 1.8758 * $d1;

        d4 = d4 + d5;

        d5 = 0.0415 * $d2;

        d4 = d4 + d5;

        d4 = d4 / 100.0;

        $d0 = 0.0557 * $d0;

        $d1 = -0.204 * $d1;

        $d0 = $d0 + $d1;

        $d1 = 1.057 * $d2;

        $d0 = $d0 + $d1;

        $d0 = $d0 / 100.0;

        $b1 = d3 cmpl 0.0031308;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        $d1 = java.lang.Math.pow(d3, 0.4166666666666667);

        $d1 = $d1 * 1.055;

        $d1 = $d1 - 0.055;

        goto label2;

     label1:
        $d1 = d3 * 12.92;

     label2:
        $b1 = d4 cmpl 0.0031308;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label3;

        $d2 = java.lang.Math.pow(d4, 0.4166666666666667);

        $d2 = $d2 * 1.055;

        $d2 = $d2 - 0.055;

        goto label4;

     label3:
        $d2 = d4 * 12.92;

     label4:
        $b1 = $d0 cmpl 0.0031308;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label5;

        $d0 = java.lang.Math.pow($d0, 0.4166666666666667);

        $d0 = $d0 * 1.055;

        $d0 = $d0 - 0.055;

        goto label6;

     label5:
        $d0 = $d0 * 12.92;

     label6:
        $d1 = $d1 * 255.0;

        $l2 = java.lang.Math.round($d1);

        $i3 = (int) $l2;

        $i3 = androidx.core.graphics.ColorUtils.constrain($i3, 0, 255);

        $d1 = $d2 * 255.0;

        $l2 = java.lang.Math.round($d1);

        $i4 = (int) $l2;

        $i4 = androidx.core.graphics.ColorUtils.constrain($i4, 0, 255);

        $d0 = 255.0 * $d0;

        $l2 = java.lang.Math.round($d0);

        $i0 = (int) $l2;

        $i0 = androidx.core.graphics.ColorUtils.constrain($i0, 0, 255);

        $i3 = android.graphics.Color.rgb($i3, $i4, $i0);

        return $i3;
    }

    public static void XYZToLAB(double, double, double, double[])
    {
        double[] $r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        double $d0, $d1, $d2, $d3;

        $d0 := @parameter0;

        $d1 := @parameter1;

        $d2 := @parameter2;

        $r0 := @parameter3;

        $i0 = lengthof $r0;

        if $i0 != 3 goto label1;

        $d0 = $d0 / 95.047;

        $d0 = androidx.core.graphics.ColorUtils.pivotXyzComponent($d0);

        $d1 = $d1 / 100.0;

        $d1 = androidx.core.graphics.ColorUtils.pivotXyzComponent($d1);

        $d2 = $d2 / 108.883;

        $d2 = androidx.core.graphics.ColorUtils.pivotXyzComponent($d2);

        $d3 = 116.0 * $d1;

        $d3 = $d3 - 16.0;

        $d3 = java.lang.Math.max(0.0, $d3);

        $r0[0] = $d3;

        $d0 = $d0 - $d1;

        $d0 = $d0 * 500.0;

        $r0[1] = $d0;

        $d0 = $d1 - $d2;

        $d0 = $d0 * 200.0;

        $r0[2] = $d0;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<init>("outLab must have a length of 3.");

        throw $r1;
    }

    public static int blendARGB(int, int, float)
    {
        int $i0, $i1, $i2, $i3;
        float $f0, f1, f2, f3, f4, f5;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $f0 := @parameter2;

        f1 = 1.0F - $f0;

        $i2 = android.graphics.Color.alpha($i0);

        f2 = (float) $i2;

        f2 = f2 * f1;

        $i2 = android.graphics.Color.alpha($i1);

        f3 = (float) $i2;

        f3 = f3 * $f0;

        f2 = f2 + f3;

        $i2 = android.graphics.Color.red($i0);

        f3 = (float) $i2;

        f3 = f3 * f1;

        $i2 = android.graphics.Color.red($i1);

        f4 = (float) $i2;

        f4 = f4 * $f0;

        f3 = f3 + f4;

        $i2 = android.graphics.Color.green($i0);

        f4 = (float) $i2;

        f4 = f4 * f1;

        $i2 = android.graphics.Color.green($i1);

        f5 = (float) $i2;

        f5 = f5 * $f0;

        f4 = f4 + f5;

        $i0 = android.graphics.Color.blue($i0);

        f5 = (float) $i0;

        f1 = f5 * f1;

        $i0 = android.graphics.Color.blue($i1);

        f5 = (float) $i0;

        $f0 = f5 * $f0;

        $f0 = f1 + $f0;

        $i3 = (int) f2;

        $i0 = (int) f3;

        $i1 = (int) f4;

        $i2 = (int) $f0;

        $i0 = android.graphics.Color.argb($i3, $i0, $i1, $i2);

        return $i0;
    }

    public static void blendHSL(float[], float[], float, float[])
    {
        float[] $r0, $r1, $r2;
        java.lang.IllegalArgumentException r3;
        int i0;
        float $f0, $f1, f2, $f3;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $f0 := @parameter2;

        $r2 := @parameter3;

        i0 = lengthof $r2;

        if i0 != 3 goto label1;

        f2 = 1.0F - $f0;

        $f1 = $r0[0];

        $f3 = $r1[0];

        $f1 = androidx.core.graphics.ColorUtils.circularInterpolate($f1, $f3, $f0);

        $r2[0] = $f1;

        $f1 = $r0[1];

        $f1 = $f1 * f2;

        $f3 = $r1[1];

        $f3 = $f3 * $f0;

        $f1 = $f1 + $f3;

        $r2[1] = $f1;

        $f1 = $r0[2];

        f2 = $f1 * f2;

        $f1 = $r1[2];

        $f0 = $f1 * $f0;

        $f0 = f2 + $f0;

        $r2[2] = $f0;

        return;

     label1:
        r3 = new java.lang.IllegalArgumentException;

        specialinvoke r3.<init>("result must have a length of 3.");

        throw r3;
    }

    public static void blendLAB(double[], double[], double, double[])
    {
        double[] $r0, $r1, $r2;
        java.lang.IllegalArgumentException r3;
        int i0;
        double $d0, d1, $d2, $d3;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $d0 := @parameter2;

        $r2 := @parameter3;

        i0 = lengthof $r2;

        if i0 != 3 goto label1;

        d1 = 1.0 - $d0;

        $d2 = $r0[0];

        $d2 = $d2 * d1;

        $d3 = $r1[0];

        $d3 = $d3 * $d0;

        $d2 = $d2 + $d3;

        $r2[0] = $d2;

        $d2 = $r0[1];

        $d2 = $d2 * d1;

        $d3 = $r1[1];

        $d3 = $d3 * $d0;

        $d2 = $d2 + $d3;

        $r2[1] = $d2;

        $d2 = $r0[2];

        d1 = $d2 * d1;

        $d2 = $r1[2];

        $d0 = $d2 * $d0;

        $d0 = d1 + $d0;

        $r2[2] = $d0;

        return;

     label1:
        r3 = new java.lang.IllegalArgumentException;

        specialinvoke r3.<init>("outResult must have a length of 3.");

        throw r3;
    }

    public static double calculateContrast(int, int)
    {
        java.lang.IllegalArgumentException r0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        double $d0, $d1, d2;

        $i1 := @parameter0;

        $i0 := @parameter1;

        $i2 = android.graphics.Color.alpha($i0);

        if $i2 != 255 goto label2;

        $i2 = android.graphics.Color.alpha($i1);

        if $i2 >= 255 goto label1;

        $i1 = androidx.core.graphics.ColorUtils.compositeColors($i1, $i0);

     label1:
        $d0 = androidx.core.graphics.ColorUtils.calculateLuminance($i1);

        $d0 = $d0 + 0.05;

        $d1 = androidx.core.graphics.ColorUtils.calculateLuminance($i0);

        d2 = $d1 + 0.05;

        $d1 = java.lang.Math.max($d0, d2);

        $d0 = java.lang.Math.min($d0, d2);

        $d0 = $d1 / $d0;

        return $d0;

     label2:
        r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>();

        $r1 = virtualinvoke $r1.append("background can not be translucent: #");

        $r2 = java.lang.Integer.toHexString($i0);

        $r1 = virtualinvoke $r1.append($r2);

        $r2 = virtualinvoke $r1.toString();

        specialinvoke r0.<init>($r2);

        throw r0;
    }

    public static double calculateLuminance(int)
    {
        int $i0;
        double[] $r0;
        double $d0;

        $i0 := @parameter0;

        $r0 = androidx.core.graphics.ColorUtils.getTempDouble3Array();

        androidx.core.graphics.ColorUtils.colorToXYZ($i0, $r0);

        $d0 = $r0[1];

        $d0 = $d0 / 100.0;

        return $d0;
    }

    public static int calculateMinimumAlpha(int, int, float)
    {
        java.lang.IllegalArgumentException $r3;
        byte $b2;
        int $i0, $i1, $i3, i4, i5, i6, $i7;
        float $f0;
        java.lang.StringBuilder r0, $r2;
        java.lang.String $r1;
        double $d0, d1;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $f0 := @parameter2;

        $i3 = android.graphics.Color.alpha($i1);

        if $i3 != 255 goto label6;

        $i3 = androidx.core.graphics.ColorUtils.setAlphaComponent($i0, 255);

        $d0 = androidx.core.graphics.ColorUtils.calculateContrast($i3, $i1);

        d1 = (double) $f0;

        $b2 = $d0 cmpg d1;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label1;

        return -1;

     label1:
        $i3 = 0;

        i4 = 0;

        i5 = 255;

     label2:
        if $i3 > 10 goto label5;

        i6 = i5 - i4;

        if i6 <= 1 goto label8;

        i6 = i4 + i5;

        i6 = i6 / 2;

        $i7 = androidx.core.graphics.ColorUtils.setAlphaComponent($i0, i6);

        $d0 = androidx.core.graphics.ColorUtils.calculateContrast($i7, $i1);

        d1 = (double) $f0;

        $b2 = $d0 cmpg d1;

        $i7 = (int) $b2;

        if $i7 >= 0 goto label3;

        i4 = i6;

        goto label4;

     label3:
        i5 = i6;

     label4:
        $i3 = $i3 + 1;

        goto label2;

     label5:
        return i5;

     label6:
        $r3 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<init>();

        r0 = virtualinvoke $r2.append("background can not be translucent: #");

        $r1 = java.lang.Integer.toHexString($i1);

        r0 = virtualinvoke r0.append($r1);

        $r1 = virtualinvoke r0.toString();

        specialinvoke $r3.<init>($r1);

        goto label7;

     label7:
        throw $r3;

     label8:
        return i5;
    }

    static float circularInterpolate(float, float, float)
    {
        byte $b0;
        int $i1;
        float $f0, $f1, $f2, $f3;

        $f2 := @parameter0;

        $f3 := @parameter1;

        $f0 := @parameter2;

        $f1 = $f3 - $f2;

        $f1 = java.lang.Math.abs($f1);

        $b0 = $f1 cmpl 180.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        $b0 = $f3 cmpl $f2;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        $f2 = $f2 + 360.0F;

        goto label2;

     label1:
        $f3 = $f3 + 360.0F;

     label2:
        $f3 = $f3 - $f2;

        $f3 = $f3 * $f0;

        $f2 = $f3 + $f2;

        $f2 = $f2 % 360.0F;

        return $f2;
    }

    public static void colorToHSL(int, float[])
    {
        int $i0, $i1, $i2;
        float[] $r0;

        $i0 := @parameter0;

        $r0 := @parameter1;

        $i1 = android.graphics.Color.red($i0);

        $i2 = android.graphics.Color.green($i0);

        $i0 = android.graphics.Color.blue($i0);

        androidx.core.graphics.ColorUtils.RGBToHSL($i1, $i2, $i0, $r0);

        return;
    }

    public static void colorToLAB(int, double[])
    {
        int $i0, $i1, $i2;
        double[] $r0;

        $i0 := @parameter0;

        $r0 := @parameter1;

        $i1 = android.graphics.Color.red($i0);

        $i2 = android.graphics.Color.green($i0);

        $i0 = android.graphics.Color.blue($i0);

        androidx.core.graphics.ColorUtils.RGBToLAB($i1, $i2, $i0, $r0);

        return;
    }

    public static void colorToXYZ(int, double[])
    {
        int $i0, $i1, $i2;
        double[] $r0;

        $i0 := @parameter0;

        $r0 := @parameter1;

        $i1 = android.graphics.Color.red($i0);

        $i2 = android.graphics.Color.green($i0);

        $i0 = android.graphics.Color.blue($i0);

        androidx.core.graphics.ColorUtils.RGBToXYZ($i1, $i2, $i0, $r0);

        return;
    }

    private static int compositeAlpha(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i1 = 255 - $i1;

        $i0 = 255 - $i0;

        $i0 = $i1 * $i0;

        $i0 = $i0 / 255;

        $i0 = 255 - $i0;

        return $i0;
    }

    public static int compositeColors(int, int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 = android.graphics.Color.alpha($i1);

        $i3 = android.graphics.Color.alpha($i0);

        $i4 = androidx.core.graphics.ColorUtils.compositeAlpha($i3, $i2);

        $i5 = android.graphics.Color.red($i0);

        $i6 = android.graphics.Color.red($i1);

        $i5 = androidx.core.graphics.ColorUtils.compositeComponent($i5, $i3, $i6, $i2, $i4);

        $i6 = android.graphics.Color.green($i0);

        $i7 = android.graphics.Color.green($i1);

        $i6 = androidx.core.graphics.ColorUtils.compositeComponent($i6, $i3, $i7, $i2, $i4);

        $i0 = android.graphics.Color.blue($i0);

        $i1 = android.graphics.Color.blue($i1);

        $i0 = androidx.core.graphics.ColorUtils.compositeComponent($i0, $i3, $i1, $i2, $i4);

        $i0 = android.graphics.Color.argb($i4, $i5, $i6, $i0);

        return $i0;
    }

    public static android.graphics.Color compositeColors(android.graphics.Color, android.graphics.Color)
    {
        float[] $r6, $r7;
        byte b1;
        int $i0, i2;
        java.lang.String $r9;
        boolean $z0;
        java.lang.IllegalArgumentException $r11;
        android.graphics.Color $r0, $r1;
        float $f0, f1, $f2, f3;
        java.lang.StringBuilder r8, $r10;
        android.graphics.ColorSpace $r4, $r5;
        android.graphics.ColorSpace$Model $r2, $r3;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 = virtualinvoke $r0.getModel();

        $r3 = virtualinvoke $r1.getModel();

        $z0 = java.util.Objects.equals($r2, $r3);

        if $z0 == 0 goto label6;

        $r4 = virtualinvoke $r1.getColorSpace();

        $r5 = virtualinvoke $r0.getColorSpace();

        $z0 = java.util.Objects.equals($r4, $r5);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r4 = virtualinvoke $r1.getColorSpace();

        $r0 = virtualinvoke $r0.convert($r4);

     label2:
        $r6 = virtualinvoke $r0.getComponents();

        $r7 = virtualinvoke $r1.getComponents();

        $f0 = virtualinvoke $r0.alpha();

        f1 = $f0;

        $f2 = virtualinvoke $r1.alpha();

        f3 = 1.0F - $f0;

        $f2 = $f2 * f3;

        $i0 = virtualinvoke $r1.getComponentCount();

        i2 = -1;

        $i0 = $i0 + i2;

        f3 = $f0 + $f2;

        $r7[$i0] = f3;

        f3 = $r7[$i0];

        b1 = f3 cmpl 0.0F;

        i2 = (int) b1;

        if i2 <= 0 goto label3;

        f1 = $r7[$i0];

        f1 = $f0 / f1;

        $f0 = $r7[$i0];

        $f2 = $f2 / $f0;

     label3:
        i2 = 0;

     label4:
        if i2 >= $i0 goto label5;

        $f0 = $r6[i2];

        $f0 = $f0 * f1;

        f3 = $r7[i2];

        f3 = f3 * $f2;

        $f0 = $f0 + f3;

        $r7[i2] = $f0;

        i2 = i2 + 1;

        goto label4;

     label5:
        $r4 = virtualinvoke $r1.getColorSpace();

        $r0 = android.graphics.Color.valueOf($r7, $r4);

        return $r0;

     label6:
        $r11 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<init>();

        r8 = virtualinvoke $r10.append("Color models must match (");

        $r2 = virtualinvoke $r0.getModel();

        r8 = virtualinvoke r8.append($r2);

        r8 = virtualinvoke r8.append(" vs. ");

        $r2 = virtualinvoke $r1.getModel();

        r8 = virtualinvoke r8.append($r2);

        r8 = virtualinvoke r8.append(")");

        $r9 = virtualinvoke r8.toString();

        specialinvoke $r11.<init>($r9);

        goto label7;

     label7:
        throw $r11;
    }

    private static int compositeComponent(int, int, int, int, int)
    {
        int $i0, $i1, $i2, $i3, $i4;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        $i3 := @parameter3;

        $i4 := @parameter4;

        if $i4 != 0 goto label1;

        return 0;

     label1:
        $i0 = $i0 * 255;

        $i0 = $i0 * $i1;

        $i2 = $i2 * $i3;

        $i1 = 255 - $i1;

        $i1 = $i2 * $i1;

        $i0 = $i0 + $i1;

        $i1 = $i4 * 255;

        $i0 = $i0 / $i1;

        return $i0;
    }

    private static float constrain(float, float, float)
    {
        byte $b0;
        int $i1;
        float $f0, $f1, $f2;

        $f0 := @parameter0;

        $f1 := @parameter1;

        $f2 := @parameter2;

        $b0 = $f0 cmpg $f1;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label1;

        return $f1;

     label1:
        $b0 = $f0 cmpl $f2;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        return $f2;

     label2:
        return $f0;
    }

    private static int constrain(int, int, int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        if $i0 >= $i1 goto label1;

        return $i1;

     label1:
        if $i0 <= $i2 goto label2;

        return $i2;

     label2:
        return $i0;
    }

    public static double distanceEuclidean(double[], double[])
    {
        double[] $r0, $r1;
        double $d0, $d1, $d2;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $d0 = $r0[0];

        $d1 = $r1[0];

        $d0 = $d0 - $d1;

        $d0 = java.lang.Math.pow($d0, 2.0);

        $d1 = $r0[1];

        $d2 = $r1[1];

        $d1 = $d1 - $d2;

        $d1 = java.lang.Math.pow($d1, 2.0);

        $d0 = $d0 + $d1;

        $d1 = $r0[2];

        $d2 = $r1[2];

        $d1 = $d1 - $d2;

        $d1 = java.lang.Math.pow($d1, 2.0);

        $d0 = $d0 + $d1;

        $d0 = java.lang.Math.sqrt($d0);

        return $d0;
    }

    private static double[] getTempDouble3Array()
    {
        double[] r2;
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;

        $r0 = androidx.core.graphics.ColorUtils.TEMP_ARRAY;

        $r1 = virtualinvoke $r0.get();

        r2 = (double[]) $r1;

        if r2 != null goto label1;

        r2 = newarray (double)[3];

        virtualinvoke $r0.set(r2);

     label1:
        return r2;
    }

    private static double pivotXyzComponent(double)
    {
        int $i1;
        byte $b0;
        double $d0;

        $d0 := @parameter0;

        $b0 = $d0 cmpl 0.008856;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        $d0 = java.lang.Math.pow($d0, 0.3333333333333333);

        return $d0;

     label1:
        $d0 = 903.3 * $d0;

        $d0 = $d0 + 16.0;

        $d0 = $d0 / 116.0;

        return $d0;
    }

    public static int setAlphaComponent(int, int)
    {
        int $i0, $i1;
        java.lang.IllegalArgumentException $r0;

        $i0 := @parameter0;

        $i1 := @parameter1;

        if $i1 < 0 goto label1;

        if $i1 > 255 goto label1;

        $i0 = 16777215 & $i0;

        $i1 = $i1 << 24;

        $i0 = $i0 | $i1;

        return $i0;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<init>("alpha must be between 0 and 255.");

        throw $r0;
    }
}
