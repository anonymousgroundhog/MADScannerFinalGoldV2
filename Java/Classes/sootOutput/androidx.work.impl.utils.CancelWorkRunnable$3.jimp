class androidx.work.impl.utils.CancelWorkRunnable$3 extends androidx.work.impl.utils.CancelWorkRunnable
{
    final boolean val$allowReschedule;
    final java.lang.String val$name;
    final androidx.work.impl.WorkManagerImpl val$workManagerImpl;

    void <init>(androidx.work.impl.WorkManagerImpl, java.lang.String, boolean)
    {
        androidx.work.impl.utils.CancelWorkRunnable$3 r0;
        androidx.work.impl.WorkManagerImpl $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $z0 := @parameter2;

        r0.val$workManagerImpl = $r1;

        r0.val$name = $r2;

        r0.val$allowReschedule = $z0;

        specialinvoke r0.<init>();

        return;
    }

    void runInternal()
    {
        java.lang.Throwable r8;
        java.util.Iterator $r6;
        androidx.work.impl.model.WorkSpecDao $r3;
        androidx.work.impl.utils.CancelWorkRunnable$3 r0;
        java.util.List $r5;
        androidx.work.impl.WorkDatabase $r2;
        androidx.work.impl.WorkManagerImpl $r1;
        java.lang.Object $r7;
        java.lang.String r4;
        boolean $z0;

        r0 := @this;

        $r1 = r0.val$workManagerImpl;

        $r2 = virtualinvoke $r1.getWorkDatabase();

        virtualinvoke $r2.beginTransaction();

     label01:
        $r3 = virtualinvoke $r2.workSpecDao();

        r4 = r0.val$name;

        $r5 = interfaceinvoke $r3.getUnfinishedWorkWithName(r4);

        $r6 = interfaceinvoke $r5.iterator();

     label02:
        $z0 = interfaceinvoke $r6.hasNext();

     label03:
        if $z0 == 0 goto label06;

     label04:
        $r7 = interfaceinvoke $r6.next();

        r4 = (java.lang.String) $r7;

        $r1 = r0.val$workManagerImpl;

        virtualinvoke r0.cancel($r1, r4);

     label05:
        goto label02;

     label06:
        virtualinvoke $r2.setTransactionSuccessful();

     label07:
        virtualinvoke $r2.endTransaction();

        $z0 = r0.val$allowReschedule;

        if $z0 == 0 goto label10;

        $r1 = r0.val$workManagerImpl;

        virtualinvoke r0.reschedulePendingWorkers($r1);

        return;

     label08:
        r8 := @caughtexception;

        virtualinvoke $r2.endTransaction();

        goto label09;

     label09:
        throw r8;

     label10:
        return;

        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
    }
}
