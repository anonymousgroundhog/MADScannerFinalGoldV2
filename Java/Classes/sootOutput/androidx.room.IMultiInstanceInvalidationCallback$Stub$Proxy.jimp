class androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy extends java.lang.Object implements androidx.room.IMultiInstanceInvalidationCallback
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.mRemote = $r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this;

        r1 = r0.mRemote;

        return r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy r0;

        r0 := @this;

        return "androidx.room.IMultiInstanceInvalidationCallback";
    }

    public void onInvalidation(java.lang.String[]) throws android.os.RemoteException
    {
        java.lang.Throwable $r4;
        androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy r0;
        java.lang.String[] $r1;
        android.os.Parcel $r2;
        android.os.IBinder $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = android.os.Parcel.obtain();

     label1:
        virtualinvoke $r2.writeInterfaceToken("androidx.room.IMultiInstanceInvalidationCallback");

        virtualinvoke $r2.writeStringArray($r1);

        $r3 = r0.mRemote;

        interfaceinvoke $r3.transact(1, $r2, null, 1);

     label2:
        virtualinvoke $r2.recycle();

        return;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r2.recycle();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
