class androidx.work.impl.WorkerWrapper$1 extends java.lang.Object implements java.lang.Runnable
{
    final androidx.work.impl.WorkerWrapper this$0;
    final androidx.work.impl.utils.futures.SettableFuture val$future;
    final com.google.common.util.concurrent.ListenableFuture val$runExpedited;

    void <init>(androidx.work.impl.WorkerWrapper, com.google.common.util.concurrent.ListenableFuture, androidx.work.impl.utils.futures.SettableFuture)
    {
        androidx.work.impl.WorkerWrapper$1 r0;
        com.google.common.util.concurrent.ListenableFuture $r2;
        androidx.work.impl.WorkerWrapper $r1;
        androidx.work.impl.utils.futures.SettableFuture $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        r0.this$0 = $r1;

        r0.val$runExpedited = $r2;

        r0.val$future = $r3;

        specialinvoke r0.<init>();

        return;
    }

    public void run()
    {
        androidx.work.impl.WorkerWrapper$1 r0;
        java.lang.Throwable r11;
        java.lang.Object[] $r4;
        com.google.common.util.concurrent.ListenableFuture r1;
        androidx.work.ListenableWorker $r9;
        androidx.work.impl.model.WorkSpec $r6;
        androidx.work.Logger $r2;
        java.lang.Throwable[] $r8;
        androidx.work.impl.WorkerWrapper $r5;
        java.lang.String $r3, $r7;
        androidx.work.impl.utils.futures.SettableFuture r10;

        r0 := @this;

     label1:
        r1 = r0.val$runExpedited;

        interfaceinvoke r1.get();

        $r2 = androidx.work.Logger.get();

        $r3 = androidx.work.impl.WorkerWrapper.TAG;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = r0.this$0;

        $r6 = $r5.mWorkSpec;

        $r7 = $r6.workerClassName;

        $r4[0] = $r7;

        $r7 = java.lang.String.format("Starting work for %s", $r4);

        $r8 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r2.debug($r3, $r7, $r8);

        $r5 = r0.this$0;

        $r9 = $r5.mWorker;

        r1 = virtualinvoke $r9.startWork();

        $r5.mInnerFuture = r1;

        r10 = r0.val$future;

        $r5 = r0.this$0;

        r1 = $r5.mInnerFuture;

        virtualinvoke r10.setFuture(r1);

     label2:
        return;

     label3:
        r11 := @caughtexception;

        r10 = r0.val$future;

        virtualinvoke r10.setException(r11);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
