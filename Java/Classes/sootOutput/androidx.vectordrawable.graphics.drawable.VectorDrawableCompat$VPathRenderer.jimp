class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer extends java.lang.Object
{
    private static final android.graphics.Matrix IDENTITY_MATRIX;
    float mBaseHeight;
    float mBaseWidth;
    private int mChangingConfigurations;
    android.graphics.Paint mFillPaint;
    private final android.graphics.Matrix mFinalPathMatrix;
    java.lang.Boolean mIsStateful;
    private final android.graphics.Path mPath;
    private android.graphics.PathMeasure mPathMeasure;
    private final android.graphics.Path mRenderPath;
    int mRootAlpha;
    final androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup;
    java.lang.String mRootName;
    android.graphics.Paint mStrokePaint;
    final androidx.collection.ArrayMap mVGTargetsMap;
    float mViewportHeight;
    float mViewportWidth;

    static void <clinit>()
    {
        android.graphics.Matrix $r0;

        $r0 = new android.graphics.Matrix;

        specialinvoke $r0.<init>();

        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.IDENTITY_MATRIX = $r0;

        return;
    }

    public void <init>()
    {
        android.graphics.Path $r4;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $r3;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;
        android.graphics.Matrix $r1;
        androidx.collection.ArrayMap $r2;

        r0 := @this;

        specialinvoke r0.<init>();

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<init>();

        r0.mFinalPathMatrix = $r1;

        r0.mBaseWidth = 0.0F;

        r0.mBaseHeight = 0.0F;

        r0.mViewportWidth = 0.0F;

        r0.mViewportHeight = 0.0F;

        r0.mRootAlpha = 255;

        r0.mRootName = null;

        r0.mIsStateful = null;

        $r2 = new androidx.collection.ArrayMap;

        specialinvoke $r2.<init>();

        r0.mVGTargetsMap = $r2;

        $r3 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup;

        specialinvoke $r3.<init>();

        r0.mRootGroup = $r3;

        $r4 = new android.graphics.Path;

        specialinvoke $r4.<init>();

        r0.mPath = $r4;

        $r4 = new android.graphics.Path;

        specialinvoke $r4.<init>();

        r0.mRenderPath = $r4;

        return;
    }

    public void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)
    {
        android.graphics.Path $r6, $r7;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer r0, $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $r4, $r5;
        int $i0;
        float $f0;
        java.lang.Boolean $r9;
        java.lang.String $r8;
        android.graphics.Matrix $r2;
        androidx.collection.ArrayMap $r3;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<init>();

        r0.mFinalPathMatrix = $r2;

        r0.mBaseWidth = 0.0F;

        r0.mBaseHeight = 0.0F;

        r0.mViewportWidth = 0.0F;

        r0.mViewportHeight = 0.0F;

        r0.mRootAlpha = 255;

        r0.mRootName = null;

        r0.mIsStateful = null;

        $r3 = new androidx.collection.ArrayMap;

        specialinvoke $r3.<init>();

        r0.mVGTargetsMap = $r3;

        $r4 = new androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup;

        $r5 = $r1.mRootGroup;

        specialinvoke $r4.<init>($r5, $r3);

        r0.mRootGroup = $r4;

        $r6 = new android.graphics.Path;

        $r7 = $r1.mPath;

        specialinvoke $r6.<init>($r7);

        r0.mPath = $r6;

        $r6 = new android.graphics.Path;

        $r7 = $r1.mRenderPath;

        specialinvoke $r6.<init>($r7);

        r0.mRenderPath = $r6;

        $f0 = $r1.mBaseWidth;

        r0.mBaseWidth = $f0;

        $f0 = $r1.mBaseHeight;

        r0.mBaseHeight = $f0;

        $f0 = $r1.mViewportWidth;

        r0.mViewportWidth = $f0;

        $f0 = $r1.mViewportHeight;

        r0.mViewportHeight = $f0;

        $i0 = $r1.mChangingConfigurations;

        r0.mChangingConfigurations = $i0;

        $i0 = $r1.mRootAlpha;

        r0.mRootAlpha = $i0;

        $r8 = $r1.mRootName;

        r0.mRootName = $r8;

        $r8 = $r1.mRootName;

        if $r8 == null goto label1;

        virtualinvoke $r3.put($r8, r0);

     label1:
        $r9 = $r1.mIsStateful;

        r0.mIsStateful = $r9;

        return;
    }

    private static float cross(float, float, float, float)
    {
        float $f0, $f1, $f2, $f3;

        $f0 := @parameter0;

        $f1 := @parameter1;

        $f2 := @parameter2;

        $f3 := @parameter3;

        $f0 = $f0 * $f3;

        $f1 = $f1 * $f2;

        $f0 = $f0 - $f1;

        return $f0;
    }

    private void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup, android.graphics.Matrix, android.graphics.Canvas, int, int, android.graphics.ColorFilter)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;
        java.util.ArrayList r6;
        int $i0, $i1, i2, $i3;
        android.graphics.Canvas $r3;
        android.graphics.Matrix $r2, r5;
        boolean z0;
        android.graphics.ColorFilter $r4;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $r1, r9;
        java.lang.Object $r7;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject r8;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath r10;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $i0 := @parameter3;

        $i1 := @parameter4;

        $r4 := @parameter5;

        r5 = $r1.mStackedMatrix;

        virtualinvoke r5.set($r2);

        $r2 = $r1.mStackedMatrix;

        r5 = $r1.mLocalMatrix;

        virtualinvoke $r2.preConcat(r5);

        virtualinvoke $r3.save();

        i2 = 0;

     label1:
        r6 = $r1.mChildren;

        $i3 = virtualinvoke r6.size();

        if i2 >= $i3 goto label4;

        r6 = $r1.mChildren;

        $r7 = virtualinvoke r6.get(i2);

        r8 = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject) $r7;

        z0 = r8 instanceof androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup;

        if z0 == 0 goto label2;

        r9 = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup) r8;

        $r2 = $r1.mStackedMatrix;

        specialinvoke r0.drawGroupTree(r9, $r2, $r3, $i0, $i1, $r4);

        goto label3;

     label2:
        z0 = r8 instanceof androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath;

        if z0 == 0 goto label3;

        r10 = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) r8;

        specialinvoke r0.drawPath($r1, r10, $r3, $i0, $i1, $r4);

        goto label3;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        virtualinvoke $r3.restore();

        return;
    }

    private void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup, androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath, android.graphics.Canvas, int, int, android.graphics.ColorFilter)
    {
        android.graphics.Path r7, r8;
        androidx.core.content.res.ComplexColorCompat r12;
        android.graphics.Paint$Join r16;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath r10;
        android.graphics.Paint$Style r14;
        byte b2;
        int $i0, $i1;
        android.graphics.Shader $r15;
        android.graphics.Canvas $r3;
        android.graphics.Matrix r5, r6;
        boolean $z0;
        android.graphics.ColorFilter $r4;
        android.graphics.Path$FillType r9;
        android.graphics.PathMeasure r11, $r18;
        android.graphics.Paint$Cap r17;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $r1;
        float f0, $f1, f2, f3, f4;
        android.graphics.Paint r13, $r19;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $i0 := @parameter3;

        $i1 := @parameter4;

        $r4 := @parameter5;

        f0 = (float) $i0;

        $f1 = r0.mViewportWidth;

        $f1 = f0 / $f1;

        f0 = (float) $i1;

        f2 = r0.mViewportHeight;

        f2 = f0 / f2;

        f0 = java.lang.Math.min($f1, f2);

        r5 = $r1.mStackedMatrix;

        r6 = r0.mFinalPathMatrix;

        virtualinvoke r6.set(r5);

        r6 = r0.mFinalPathMatrix;

        virtualinvoke r6.postScale($f1, f2);

        $f1 = specialinvoke r0.getMatrixScale(r5);

        b2 = $f1 cmpl 0.0F;

        if b2 != 0 goto label01;

        return;

     label01:
        r7 = r0.mPath;

        virtualinvoke $r2.toPath(r7);

        r7 = r0.mPath;

        r8 = r0.mRenderPath;

        virtualinvoke r8.reset();

        $z0 = virtualinvoke $r2.isClipPath();

        if $z0 == 0 goto label04;

        r8 = r0.mRenderPath;

        $i0 = $r2.mFillRule;

        if $i0 != 0 goto label02;

        r9 = android.graphics.Path$FillType.WINDING;

        goto label03;

     label02:
        r9 = android.graphics.Path$FillType.EVEN_ODD;

     label03:
        virtualinvoke r8.setFillType(r9);

        r8 = r0.mRenderPath;

        r5 = r0.mFinalPathMatrix;

        virtualinvoke r8.addPath(r7, r5);

        r7 = r0.mRenderPath;

        virtualinvoke $r3.clipPath(r7);

        return;

     label04:
        r10 = (androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) $r2;

        f2 = r10.mTrimPathStart;

        b2 = f2 cmpl 0.0F;

        if b2 != 0 goto label06;

        f2 = r10.mTrimPathEnd;

        b2 = f2 cmpl 1.0F;

        if b2 == 0 goto label05;

        goto label06;

     label05:
        goto label10;

     label06:
        f2 = r10.mTrimPathStart;

        f3 = r10.mTrimPathOffset;

        f2 = f2 + f3;

        f2 = f2 % 1.0F;

        f3 = r10.mTrimPathEnd;

        f4 = r10.mTrimPathOffset;

        f3 = f3 + f4;

        f4 = f3 % 1.0F;

        r11 = r0.mPathMeasure;

        if r11 != null goto label07;

        $r18 = new android.graphics.PathMeasure;

        specialinvoke $r18.<init>();

        r0.mPathMeasure = $r18;

     label07:
        r11 = r0.mPathMeasure;

        r8 = r0.mPath;

        virtualinvoke r11.setPath(r8, 0);

        r11 = r0.mPathMeasure;

        f3 = virtualinvoke r11.getLength();

        f2 = f2 * f3;

        f4 = f4 * f3;

        virtualinvoke r7.reset();

        b2 = f2 cmpl f4;

        $i0 = (int) b2;

        if $i0 <= 0 goto label08;

        r11 = r0.mPathMeasure;

        virtualinvoke r11.getSegment(f2, f3, r7, 1);

        r11 = r0.mPathMeasure;

        virtualinvoke r11.getSegment(0.0F, f4, r7, 1);

        goto label09;

     label08:
        r11 = r0.mPathMeasure;

        virtualinvoke r11.getSegment(f2, f4, r7, 1);

     label09:
        virtualinvoke r7.rLineTo(0.0F, 0.0F);

     label10:
        r8 = r0.mRenderPath;

        r5 = r0.mFinalPathMatrix;

        virtualinvoke r8.addPath(r7, r5);

        r12 = r10.mFillColor;

        $z0 = virtualinvoke r12.willDraw();

        if $z0 == 0 goto label16;

        r12 = r10.mFillColor;

        r13 = r0.mFillPaint;

        if r13 != null goto label11;

        $r19 = new android.graphics.Paint;

        r13 = $r19;

        specialinvoke $r19.<init>(1);

        r0.mFillPaint = r13;

        r14 = android.graphics.Paint$Style.FILL;

        virtualinvoke r13.setStyle(r14);

     label11:
        r13 = r0.mFillPaint;

        $z0 = virtualinvoke r12.isGradient();

        if $z0 == 0 goto label12;

        $r15 = virtualinvoke r12.getShader();

        r5 = r0.mFinalPathMatrix;

        virtualinvoke $r15.setLocalMatrix(r5);

        virtualinvoke r13.setShader($r15);

        f2 = r10.mFillAlpha;

        f2 = f2 * 255.0F;

        $i0 = java.lang.Math.round(f2);

        virtualinvoke r13.setAlpha($i0);

        goto label13;

     label12:
        virtualinvoke r13.setShader(null);

        virtualinvoke r13.setAlpha(255);

        $i0 = virtualinvoke r12.getColor();

        f2 = r10.mFillAlpha;

        $i0 = androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.applyAlpha($i0, f2);

        virtualinvoke r13.setColor($i0);

     label13:
        virtualinvoke r13.setColorFilter($r4);

        r7 = r0.mRenderPath;

        $i0 = r10.mFillRule;

        if $i0 != 0 goto label14;

        r9 = android.graphics.Path$FillType.WINDING;

        goto label15;

     label14:
        r9 = android.graphics.Path$FillType.EVEN_ODD;

     label15:
        virtualinvoke r7.setFillType(r9);

        r7 = r0.mRenderPath;

        virtualinvoke $r3.drawPath(r7, r13);

     label16:
        r12 = r10.mStrokeColor;

        $z0 = virtualinvoke r12.willDraw();

        if $z0 == 0 goto label22;

        r12 = r10.mStrokeColor;

        r13 = r0.mStrokePaint;

        if r13 != null goto label17;

        $r19 = new android.graphics.Paint;

        r13 = $r19;

        specialinvoke $r19.<init>(1);

        r0.mStrokePaint = r13;

        r14 = android.graphics.Paint$Style.STROKE;

        virtualinvoke r13.setStyle(r14);

     label17:
        r13 = r0.mStrokePaint;

        r16 = r10.mStrokeLineJoin;

        if r16 == null goto label18;

        r16 = r10.mStrokeLineJoin;

        virtualinvoke r13.setStrokeJoin(r16);

     label18:
        r17 = r10.mStrokeLineCap;

        if r17 == null goto label19;

        r17 = r10.mStrokeLineCap;

        virtualinvoke r13.setStrokeCap(r17);

     label19:
        f2 = r10.mStrokeMiterlimit;

        virtualinvoke r13.setStrokeMiter(f2);

        $z0 = virtualinvoke r12.isGradient();

        if $z0 == 0 goto label20;

        $r15 = virtualinvoke r12.getShader();

        r5 = r0.mFinalPathMatrix;

        virtualinvoke $r15.setLocalMatrix(r5);

        virtualinvoke r13.setShader($r15);

        f2 = r10.mStrokeAlpha;

        f2 = f2 * 255.0F;

        $i0 = java.lang.Math.round(f2);

        virtualinvoke r13.setAlpha($i0);

        goto label21;

     label20:
        virtualinvoke r13.setShader(null);

        virtualinvoke r13.setAlpha(255);

        $i0 = virtualinvoke r12.getColor();

        f2 = r10.mStrokeAlpha;

        $i0 = androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.applyAlpha($i0, f2);

        virtualinvoke r13.setColor($i0);

     label21:
        virtualinvoke r13.setColorFilter($r4);

        f0 = f0 * $f1;

        $f1 = r10.mStrokeWidth;

        f0 = $f1 * f0;

        virtualinvoke r13.setStrokeWidth(f0);

        r7 = r0.mRenderPath;

        virtualinvoke $r3.drawPath(r7, r13);

     label22:
        return;
    }

    private float getMatrixScale(android.graphics.Matrix)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;
        float[] r2;
        byte $b0;
        int $i1;
        float f0, f1, f2, f3, f4, $f5;
        android.graphics.Matrix $r1;
        double d0, d1;

        r0 := @this;

        $r1 := @parameter0;

        r2 = newarray (float)[4];

        r2[0] = 0.0F;

        r2[1] = 1.0F;

        r2[2] = 1.0F;

        r2[3] = 0.0F;

        virtualinvoke $r1.mapVectors(r2);

        f0 = r2[0];

        d0 = (double) f0;

        f0 = r2[1];

        d1 = (double) f0;

        d0 = java.lang.Math.hypot(d0, d1);

        f0 = (float) d0;

        f1 = r2[2];

        d0 = (double) f1;

        f1 = r2[3];

        d1 = (double) f1;

        d0 = java.lang.Math.hypot(d0, d1);

        f1 = (float) d0;

        f2 = r2[0];

        f3 = r2[1];

        f4 = r2[2];

        $f5 = r2[3];

        f2 = androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.cross(f2, f3, f4, $f5);

        f0 = java.lang.Math.max(f0, f1);

        $b0 = f0 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        f1 = java.lang.Math.abs(f2);

        f0 = f1 / f0;

        return f0;

     label1:
        return 0.0F;
    }

    public void draw(android.graphics.Canvas, int, int, android.graphics.ColorFilter)
    {
        android.graphics.ColorFilter $r2;
        int $i0, $i1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $r3;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;
        android.graphics.Canvas $r1;
        android.graphics.Matrix $r4;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        $r2 := @parameter3;

        $r3 = r0.mRootGroup;

        $r4 = androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer.IDENTITY_MATRIX;

        specialinvoke r0.drawGroupTree($r3, $r4, $r1, $i0, $i1, $r2);

        return;
    }

    public float getAlpha()
    {
        int $i0;
        float $f0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;

        r0 := @this;

        $i0 = virtualinvoke r0.getRootAlpha();

        $f0 = (float) $i0;

        $f0 = $f0 / 255.0F;

        return $f0;
    }

    public int getRootAlpha()
    {
        int i0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;

        r0 := @this;

        i0 = r0.mRootAlpha;

        return i0;
    }

    public boolean isStateful()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $r2;
        java.lang.Boolean $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mIsStateful;

        if $r1 != null goto label1;

        $r2 = r0.mRootGroup;

        $z0 = virtualinvoke $r2.isStateful();

        $r1 = java.lang.Boolean.valueOf($z0);

        r0.mIsStateful = $r1;

     label1:
        $r1 = r0.mIsStateful;

        $z0 = virtualinvoke $r1.booleanValue();

        return $z0;
    }

    public boolean onStateChanged(int[])
    {
        int[] $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup $r2;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mRootGroup;

        $z0 = virtualinvoke $r2.onStateChanged($r1);

        return $z0;
    }

    public void setAlpha(float)
    {
        int $i0;
        float $f0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;

        r0 := @this;

        $f0 := @parameter0;

        $f0 = 255.0F * $f0;

        $i0 = (int) $f0;

        virtualinvoke r0.setRootAlpha($i0);

        return;
    }

    public void setRootAlpha(int)
    {
        int $i0;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer r0;

        r0 := @this;

        $i0 := @parameter0;

        r0.mRootAlpha = $i0;

        return;
    }
}
