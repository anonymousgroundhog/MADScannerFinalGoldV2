final class com.google.android.gms.tasks.zzd extends java.lang.Object implements com.google.android.gms.tasks.zzq
{
    private final java.util.concurrent.Executor zza;
    private final com.google.android.gms.tasks.Continuation zzb;
    private final com.google.android.gms.tasks.zzw zzc;

    public void <init>(java.util.concurrent.Executor, com.google.android.gms.tasks.Continuation, com.google.android.gms.tasks.zzw)
    {
        com.google.android.gms.tasks.zzw $r3;
        com.google.android.gms.tasks.zzd r0;
        java.util.concurrent.Executor $r1;
        com.google.android.gms.tasks.Continuation $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        specialinvoke r0.<init>();

        r0.zza = $r1;

        r0.zzb = $r2;

        r0.zzc = $r3;

        return;
    }

    static volatile com.google.android.gms.tasks.Continuation zza(com.google.android.gms.tasks.zzd)
    {
        com.google.android.gms.tasks.Continuation r1;
        com.google.android.gms.tasks.zzd $r0;

        $r0 := @parameter0;

        r1 = $r0.zzb;

        return r1;
    }

    static volatile com.google.android.gms.tasks.zzw zzb(com.google.android.gms.tasks.zzd)
    {
        com.google.android.gms.tasks.zzw r1;
        com.google.android.gms.tasks.zzd $r0;

        $r0 := @parameter0;

        r1 = $r0.zzc;

        return r1;
    }

    public final void zzc()
    {
        java.lang.UnsupportedOperationException $r1;
        com.google.android.gms.tasks.zzd r0;

        r0 := @this;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<init>();

        throw $r1;
    }

    public final void zzd(com.google.android.gms.tasks.Task)
    {
        com.google.android.gms.tasks.zzd r0;
        java.util.concurrent.Executor $r2;
        com.google.android.gms.tasks.zzc $r3;
        com.google.android.gms.tasks.Task $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.zza;

        $r3 = new com.google.android.gms.tasks.zzc;

        specialinvoke $r3.<init>(r0, $r1);

        interfaceinvoke $r2.execute($r3);

        return;
    }
}
