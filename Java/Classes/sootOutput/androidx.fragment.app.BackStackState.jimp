final class androidx.fragment.app.BackStackState extends java.lang.Object implements android.os.Parcelable
{
    public static final android.os.Parcelable$Creator CREATOR;
    final int mBreadCrumbShortTitleRes;
    final java.lang.CharSequence mBreadCrumbShortTitleText;
    final int mBreadCrumbTitleRes;
    final java.lang.CharSequence mBreadCrumbTitleText;
    final int[] mCurrentMaxLifecycleStates;
    final java.util.ArrayList mFragmentWhos;
    final int mIndex;
    final java.lang.String mName;
    final int[] mOldMaxLifecycleStates;
    final int[] mOps;
    final boolean mReorderingAllowed;
    final java.util.ArrayList mSharedElementSourceNames;
    final java.util.ArrayList mSharedElementTargetNames;
    final int mTransition;
    final int mTransitionStyle;

    static void <clinit>()
    {
        androidx.fragment.app.BackStackState$1 $r0;

        $r0 = new androidx.fragment.app.BackStackState$1;

        specialinvoke $r0.<init>();

        androidx.fragment.app.BackStackState.CREATOR = $r0;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        java.lang.CharSequence $r7;
        android.os.Parcelable$Creator $r5;
        android.os.Parcel $r1;
        androidx.fragment.app.BackStackState r0;
        java.util.ArrayList $r3;
        int[] $r2;
        int $i0;
        java.lang.Object $r6;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        $r2 = virtualinvoke $r1.createIntArray();

        r0.mOps = $r2;

        $r3 = virtualinvoke $r1.createStringArrayList();

        r0.mFragmentWhos = $r3;

        $r2 = virtualinvoke $r1.createIntArray();

        r0.mOldMaxLifecycleStates = $r2;

        $r2 = virtualinvoke $r1.createIntArray();

        r0.mCurrentMaxLifecycleStates = $r2;

        $i0 = virtualinvoke $r1.readInt();

        r0.mTransition = $i0;

        $i0 = virtualinvoke $r1.readInt();

        r0.mTransitionStyle = $i0;

        $r4 = virtualinvoke $r1.readString();

        r0.mName = $r4;

        $i0 = virtualinvoke $r1.readInt();

        r0.mIndex = $i0;

        $i0 = virtualinvoke $r1.readInt();

        r0.mBreadCrumbTitleRes = $i0;

        $r5 = android.text.TextUtils.CHAR_SEQUENCE_CREATOR;

        $r6 = interfaceinvoke $r5.createFromParcel($r1);

        $r7 = (java.lang.CharSequence) $r6;

        r0.mBreadCrumbTitleText = $r7;

        $i0 = virtualinvoke $r1.readInt();

        r0.mBreadCrumbShortTitleRes = $i0;

        $r5 = android.text.TextUtils.CHAR_SEQUENCE_CREATOR;

        $r6 = interfaceinvoke $r5.createFromParcel($r1);

        $r7 = (java.lang.CharSequence) $r6;

        r0.mBreadCrumbShortTitleText = $r7;

        $r3 = virtualinvoke $r1.createStringArrayList();

        r0.mSharedElementSourceNames = $r3;

        $r3 = virtualinvoke $r1.createStringArrayList();

        r0.mSharedElementTargetNames = $r3;

        $i0 = virtualinvoke $r1.readInt();

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.mReorderingAllowed = $z0;

        return;
    }

    public void <init>(androidx.fragment.app.BackStackRecord)
    {
        java.lang.IllegalStateException r10;
        androidx.fragment.app.FragmentTransaction$Op r5;
        androidx.fragment.app.BackStackRecord $r1;
        java.util.ArrayList r2;
        int[] r3;
        int $i0, i1, i2, i3, $i4;
        androidx.fragment.app.Fragment r6;
        java.lang.String r7;
        boolean z0;
        java.lang.CharSequence r9;
        androidx.fragment.app.BackStackState r0;
        androidx.lifecycle.Lifecycle$State r8;
        java.lang.Object $r4;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        r2 = $r1.mOps;

        $i0 = virtualinvoke r2.size();

        i1 = $i0 * 5;

        r3 = newarray (int)[i1];

        r0.mOps = r3;

        z0 = $r1.mAddToBackStack;

        if z0 == 0 goto label5;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<init>($i0);

        r0.mFragmentWhos = r2;

        r3 = newarray (int)[$i0];

        r0.mOldMaxLifecycleStates = r3;

        r3 = newarray (int)[$i0];

        r0.mCurrentMaxLifecycleStates = r3;

        i2 = 0;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label4;

        r2 = $r1.mOps;

        $r4 = virtualinvoke r2.get(i1);

        r5 = (androidx.fragment.app.FragmentTransaction$Op) $r4;

        r3 = r0.mOps;

        i3 = i2 + 1;

        $i4 = r5.mCmd;

        r3[i2] = $i4;

        r2 = r0.mFragmentWhos;

        r6 = r5.mFragment;

        if r6 == null goto label2;

        r6 = r5.mFragment;

        r7 = r6.mWho;

        goto label3;

     label2:
        r7 = null;

     label3:
        virtualinvoke r2.add(r7);

        r3 = r0.mOps;

        i2 = i3 + 1;

        $i4 = r5.mEnterAnim;

        r3[i3] = $i4;

        r3 = r0.mOps;

        i3 = i2 + 1;

        $i4 = r5.mExitAnim;

        r3[i2] = $i4;

        r3 = r0.mOps;

        i2 = i3 + 1;

        $i4 = r5.mPopEnterAnim;

        r3[i3] = $i4;

        r3 = r0.mOps;

        i3 = i2 + 1;

        $i4 = r5.mPopExitAnim;

        r3[i2] = $i4;

        r3 = r0.mOldMaxLifecycleStates;

        r8 = r5.mOldMaxState;

        i2 = virtualinvoke r8.ordinal();

        r3[i1] = i2;

        r3 = r0.mCurrentMaxLifecycleStates;

        r8 = r5.mCurrentMaxState;

        i2 = virtualinvoke r8.ordinal();

        r3[i1] = i2;

        i1 = i1 + 1;

        i2 = i3;

        goto label1;

     label4:
        $i0 = $r1.mTransition;

        r0.mTransition = $i0;

        $i0 = $r1.mTransitionStyle;

        r0.mTransitionStyle = $i0;

        r7 = $r1.mName;

        r0.mName = r7;

        $i0 = $r1.mIndex;

        r0.mIndex = $i0;

        $i0 = $r1.mBreadCrumbTitleRes;

        r0.mBreadCrumbTitleRes = $i0;

        r9 = $r1.mBreadCrumbTitleText;

        r0.mBreadCrumbTitleText = r9;

        $i0 = $r1.mBreadCrumbShortTitleRes;

        r0.mBreadCrumbShortTitleRes = $i0;

        r9 = $r1.mBreadCrumbShortTitleText;

        r0.mBreadCrumbShortTitleText = r9;

        r2 = $r1.mSharedElementSourceNames;

        r0.mSharedElementSourceNames = r2;

        r2 = $r1.mSharedElementTargetNames;

        r0.mSharedElementTargetNames = r2;

        z0 = $r1.mReorderingAllowed;

        r0.mReorderingAllowed = z0;

        return;

     label5:
        r10 = new java.lang.IllegalStateException;

        specialinvoke r10.<init>("Not on back stack");

        goto label6;

     label6:
        throw r10;
    }

    public int describeContents()
    {
        androidx.fragment.app.BackStackState r0;

        r0 := @this;

        return 0;
    }

    public androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl)
    {
        androidx.fragment.app.FragmentManagerImpl $r1;
        androidx.fragment.app.FragmentTransaction$Op r4;
        androidx.fragment.app.BackStackRecord r2;
        java.util.HashMap r9;
        java.util.ArrayList r7;
        int[] r3;
        int i0, i1, i2;
        androidx.fragment.app.Fragment r10;
        java.lang.String $r6;
        boolean z0;
        java.lang.CharSequence r13;
        androidx.lifecycle.Lifecycle$State[] $r11;
        androidx.fragment.app.BackStackState r0;
        androidx.lifecycle.Lifecycle$State r12;
        java.lang.StringBuilder r5;
        java.lang.Object $r8;

        r0 := @this;

        $r1 := @parameter0;

        r2 = new androidx.fragment.app.BackStackRecord;

        specialinvoke r2.<init>($r1);

        i0 = 0;

        i1 = 0;

     label1:
        r3 = r0.mOps;

        i2 = lengthof r3;

        if i0 >= i2 goto label5;

        r4 = new androidx.fragment.app.FragmentTransaction$Op;

        specialinvoke r4.<init>();

        r3 = r0.mOps;

        i2 = i0 + 1;

        i0 = r3[i0];

        r4.mCmd = i0;

        z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if z0 == 0 goto label2;

        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<init>();

        r5 = virtualinvoke r5.append("Instantiate ");

        r5 = virtualinvoke r5.append(r2);

        r5 = virtualinvoke r5.append(" op #");

        r5 = virtualinvoke r5.append(i1);

        r5 = virtualinvoke r5.append(" base fragment #");

        r3 = r0.mOps;

        i0 = r3[i2];

        r5 = virtualinvoke r5.append(i0);

        $r6 = virtualinvoke r5.toString();

        android.util.Log.v("FragmentManager", $r6);

     label2:
        r7 = r0.mFragmentWhos;

        $r8 = virtualinvoke r7.get(i1);

        $r6 = (java.lang.String) $r8;

        if $r6 == null goto label3;

        r9 = $r1.mActive;

        $r8 = virtualinvoke r9.get($r6);

        r10 = (androidx.fragment.app.Fragment) $r8;

        r4.mFragment = r10;

        goto label4;

     label3:
        r4.mFragment = null;

     label4:
        $r11 = androidx.lifecycle.Lifecycle$State.values();

        r3 = r0.mOldMaxLifecycleStates;

        i0 = r3[i1];

        r12 = $r11[i0];

        r4.mOldMaxState = r12;

        $r11 = androidx.lifecycle.Lifecycle$State.values();

        r3 = r0.mCurrentMaxLifecycleStates;

        i0 = r3[i1];

        r12 = $r11[i0];

        r4.mCurrentMaxState = r12;

        r3 = r0.mOps;

        i0 = i2 + 1;

        i2 = r3[i2];

        r4.mEnterAnim = i2;

        r3 = r0.mOps;

        i2 = i0 + 1;

        i0 = r3[i0];

        r4.mExitAnim = i0;

        r3 = r0.mOps;

        i0 = i2 + 1;

        i2 = r3[i2];

        r4.mPopEnterAnim = i2;

        r3 = r0.mOps;

        i2 = i0 + 1;

        i0 = r3[i0];

        r4.mPopExitAnim = i0;

        i0 = r4.mEnterAnim;

        r2.mEnterAnim = i0;

        i0 = r4.mExitAnim;

        r2.mExitAnim = i0;

        i0 = r4.mPopEnterAnim;

        r2.mPopEnterAnim = i0;

        i0 = r4.mPopExitAnim;

        r2.mPopExitAnim = i0;

        virtualinvoke r2.addOp(r4);

        i1 = i1 + 1;

        i0 = i2;

        goto label1;

     label5:
        i1 = r0.mTransition;

        r2.mTransition = i1;

        i1 = r0.mTransitionStyle;

        r2.mTransitionStyle = i1;

        $r6 = r0.mName;

        r2.mName = $r6;

        i1 = r0.mIndex;

        r2.mIndex = i1;

        r2.mAddToBackStack = 1;

        i1 = r0.mBreadCrumbTitleRes;

        r2.mBreadCrumbTitleRes = i1;

        r13 = r0.mBreadCrumbTitleText;

        r2.mBreadCrumbTitleText = r13;

        i1 = r0.mBreadCrumbShortTitleRes;

        r2.mBreadCrumbShortTitleRes = i1;

        r13 = r0.mBreadCrumbShortTitleText;

        r2.mBreadCrumbShortTitleText = r13;

        r7 = r0.mSharedElementSourceNames;

        r2.mSharedElementSourceNames = r7;

        r7 = r0.mSharedElementTargetNames;

        r2.mSharedElementTargetNames = r7;

        z0 = r0.mReorderingAllowed;

        r2.mReorderingAllowed = z0;

        virtualinvoke r2.bumpBackStackNesting(1);

        return r2;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        java.lang.CharSequence $r5;
        android.os.Parcel $r1;
        androidx.fragment.app.BackStackState r0;
        java.util.ArrayList $r3;
        int[] $r2;
        int $i0;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 = r0.mOps;

        virtualinvoke $r1.writeIntArray($r2);

        $r3 = r0.mFragmentWhos;

        virtualinvoke $r1.writeStringList($r3);

        $r2 = r0.mOldMaxLifecycleStates;

        virtualinvoke $r1.writeIntArray($r2);

        $r2 = r0.mCurrentMaxLifecycleStates;

        virtualinvoke $r1.writeIntArray($r2);

        $i0 = r0.mTransition;

        virtualinvoke $r1.writeInt($i0);

        $i0 = r0.mTransitionStyle;

        virtualinvoke $r1.writeInt($i0);

        $r4 = r0.mName;

        virtualinvoke $r1.writeString($r4);

        $i0 = r0.mIndex;

        virtualinvoke $r1.writeInt($i0);

        $i0 = r0.mBreadCrumbTitleRes;

        virtualinvoke $r1.writeInt($i0);

        $r5 = r0.mBreadCrumbTitleText;

        android.text.TextUtils.writeToParcel($r5, $r1, 0);

        $i0 = r0.mBreadCrumbShortTitleRes;

        virtualinvoke $r1.writeInt($i0);

        $r5 = r0.mBreadCrumbShortTitleText;

        android.text.TextUtils.writeToParcel($r5, $r1, 0);

        $r3 = r0.mSharedElementSourceNames;

        virtualinvoke $r1.writeStringList($r3);

        $r3 = r0.mSharedElementTargetNames;

        virtualinvoke $r1.writeStringList($r3);

        $z0 = r0.mReorderingAllowed;

        $i0 = (int) $z0;

        virtualinvoke $r1.writeInt($i0);

        return;
    }
}
