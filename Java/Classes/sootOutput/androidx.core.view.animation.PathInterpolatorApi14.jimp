class androidx.core.view.animation.PathInterpolatorApi14 extends java.lang.Object implements android.view.animation.Interpolator
{
    private static final float PRECISION;
    private final float[] mX;
    private final float[] mY;

    void <init>(float, float)
    {
        android.graphics.Path $r1;
        float $f0, $f1;
        androidx.core.view.animation.PathInterpolatorApi14 r0;

        r0 := @this;

        $f0 := @parameter0;

        $f1 := @parameter1;

        $r1 = androidx.core.view.animation.PathInterpolatorApi14.createQuad($f0, $f1);

        specialinvoke r0.<init>($r1);

        return;
    }

    void <init>(float, float, float, float)
    {
        android.graphics.Path $r1;
        float $f0, $f1, $f2, $f3;
        androidx.core.view.animation.PathInterpolatorApi14 r0;

        r0 := @this;

        $f0 := @parameter0;

        $f1 := @parameter1;

        $f2 := @parameter2;

        $f3 := @parameter3;

        $r1 = androidx.core.view.animation.PathInterpolatorApi14.createCubic($f0, $f1, $f2, $f3);

        specialinvoke r0.<init>($r1);

        return;
    }

    void <init>(android.graphics.Path)
    {
        android.graphics.Path $r1;
        android.graphics.PathMeasure r2, $r5;
        float[] r3, $r4;
        int i0, i1, $i2;
        float $f0, f1, $f2;
        androidx.core.view.animation.PathInterpolatorApi14 r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        $r5 = new android.graphics.PathMeasure;

        r2 = $r5;

        specialinvoke $r5.<init>($r1, 0);

        $f0 = virtualinvoke r2.getLength();

        f1 = $f0 / 0.002F;

        i0 = (int) f1;

        i0 = i0 + 1;

        r3 = newarray (float)[i0];

        r0.mX = r3;

        r3 = newarray (float)[i0];

        r0.mY = r3;

        r3 = newarray (float)[2];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        f1 = (float) i1;

        f1 = f1 * $f0;

        $i2 = i0 + -1;

        $f2 = (float) $i2;

        f1 = f1 / $f2;

        virtualinvoke r2.getPosTan(f1, r3, null);

        $r4 = r0.mX;

        f1 = r3[0];

        $r4[i1] = f1;

        $r4 = r0.mY;

        f1 = r3[1];

        $r4[i1] = f1;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private static android.graphics.Path createCubic(float, float, float, float)
    {
        android.graphics.Path r0;
        float $f0, $f1, $f2, $f3;

        $f0 := @parameter0;

        $f1 := @parameter1;

        $f2 := @parameter2;

        $f3 := @parameter3;

        r0 = new android.graphics.Path;

        specialinvoke r0.<init>();

        virtualinvoke r0.moveTo(0.0F, 0.0F);

        virtualinvoke r0.cubicTo($f0, $f1, $f2, $f3, 1.0F, 1.0F);

        return r0;
    }

    private static android.graphics.Path createQuad(float, float)
    {
        float $f0, $f1;
        android.graphics.Path r0;

        $f0 := @parameter0;

        $f1 := @parameter1;

        r0 = new android.graphics.Path;

        specialinvoke r0.<init>();

        virtualinvoke r0.moveTo(0.0F, 0.0F);

        virtualinvoke r0.quadTo($f0, $f1, 1.0F, 1.0F);

        return r0;
    }

    public float getInterpolation(float)
    {
        float[] r1;
        byte b0;
        int i1, i2, i3, $i4;
        float $f0, f1, f2;
        androidx.core.view.animation.PathInterpolatorApi14 r0;

        r0 := @this;

        $f0 := @parameter0;

        b0 = $f0 cmpg 0.0F;

        i1 = (int) b0;

        if i1 > 0 goto label1;

        return 0.0F;

     label1:
        b0 = $f0 cmpl 1.0F;

        i1 = (int) b0;

        if i1 < 0 goto label2;

        return 1.0F;

     label2:
        i1 = 0;

        r1 = r0.mX;

        i2 = lengthof r1;

        i2 = i2 - 1;

     label3:
        i3 = i2 - i1;

        if i3 <= 1 goto label5;

        i3 = i1 + i2;

        i3 = i3 / 2;

        r1 = r0.mX;

        f1 = r1[i3];

        b0 = $f0 cmpg f1;

        $i4 = (int) b0;

        if $i4 >= 0 goto label4;

        i2 = i3;

        goto label3;

     label4:
        i1 = i3;

        goto label3;

     label5:
        r1 = r0.mX;

        f2 = r1[i2];

        f1 = r1[i1];

        f2 = f2 - f1;

        b0 = f2 cmpl 0.0F;

        if b0 != 0 goto label6;

        r1 = r0.mY;

        $f0 = r1[i1];

        return $f0;

     label6:
        $f0 = $f0 - f1;

        f1 = $f0 / f2;

        r1 = r0.mY;

        $f0 = r1[i1];

        f2 = r1[i2];

        f2 = f2 - $f0;

        f1 = f2 * f1;

        $f0 = f1 + $f0;

        return $f0;
    }
}
