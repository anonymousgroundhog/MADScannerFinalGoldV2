public class androidx.work.impl.background.greedy.DelayedWorkTracker extends java.lang.Object
{
    static final java.lang.String TAG;
    final androidx.work.impl.background.greedy.GreedyScheduler mGreedyScheduler;
    private final androidx.work.RunnableScheduler mRunnableScheduler;
    private final java.util.Map mRunnables;

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = androidx.work.Logger.tagWithPrefix("DelayedWorkTracker");

        androidx.work.impl.background.greedy.DelayedWorkTracker.TAG = $r0;

        return;
    }

    public void <init>(androidx.work.impl.background.greedy.GreedyScheduler, androidx.work.RunnableScheduler)
    {
        androidx.work.impl.background.greedy.GreedyScheduler $r1;
        java.util.HashMap $r3;
        androidx.work.impl.background.greedy.DelayedWorkTracker r0;
        androidx.work.RunnableScheduler $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.<init>();

        r0.mGreedyScheduler = $r1;

        r0.mRunnableScheduler = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<init>();

        r0.mRunnables = $r3;

        return;
    }

    public void schedule(androidx.work.impl.model.WorkSpec)
    {
        long $l0, $l1;
        java.lang.Runnable r6;
        androidx.work.impl.background.greedy.DelayedWorkTracker r0;
        androidx.work.impl.model.WorkSpec $r1;
        androidx.work.impl.background.greedy.DelayedWorkTracker$1 r7;
        java.util.Map r4;
        java.lang.Object $r5;
        java.lang.String $r2;
        androidx.work.RunnableScheduler $r3;

        r0 := @this;

        $r1 := @parameter0;

        r4 = r0.mRunnables;

        $r2 = $r1.id;

        $r5 = interfaceinvoke r4.remove($r2);

        r6 = (java.lang.Runnable) $r5;

        if r6 == null goto label1;

        $r3 = r0.mRunnableScheduler;

        interfaceinvoke $r3.cancel(r6);

     label1:
        r7 = new androidx.work.impl.background.greedy.DelayedWorkTracker$1;

        specialinvoke r7.<init>(r0, $r1);

        r4 = r0.mRunnables;

        $r2 = $r1.id;

        interfaceinvoke r4.put($r2, r7);

        $l0 = java.lang.System.currentTimeMillis();

        $l1 = virtualinvoke $r1.calculateNextRunTime();

        $l0 = $l1 - $l0;

        $r3 = r0.mRunnableScheduler;

        interfaceinvoke $r3.scheduleWithDelay($l0, r7);

        return;
    }

    public void unschedule(java.lang.String)
    {
        java.util.Map r4;
        java.lang.Object $r3;
        java.lang.String $r1;
        java.lang.Runnable r5;
        androidx.work.impl.background.greedy.DelayedWorkTracker r0;
        androidx.work.RunnableScheduler $r2;

        r0 := @this;

        $r1 := @parameter0;

        r4 = r0.mRunnables;

        $r3 = interfaceinvoke r4.remove($r1);

        r5 = (java.lang.Runnable) $r3;

        if r5 == null goto label1;

        $r2 = r0.mRunnableScheduler;

        interfaceinvoke $r2.cancel(r5);

     label1:
        return;
    }
}
