class androidx.work.impl.utils.LiveDataUtils$1 extends java.lang.Object implements androidx.lifecycle.Observer
{
    java.lang.Object mCurrentOutput;
    final java.lang.Object val$lock;
    final androidx.arch.core.util.Function val$mappingMethod;
    final androidx.lifecycle.MediatorLiveData val$outputLiveData;
    final androidx.work.impl.utils.taskexecutor.TaskExecutor val$workTaskExecutor;

    void <init>(androidx.work.impl.utils.taskexecutor.TaskExecutor, java.lang.Object, androidx.arch.core.util.Function, androidx.lifecycle.MediatorLiveData)
    {
        androidx.work.impl.utils.taskexecutor.TaskExecutor $r4;
        androidx.work.impl.utils.LiveDataUtils$1 r0;
        java.lang.Object $r1;
        androidx.arch.core.util.Function $r2;
        androidx.lifecycle.MediatorLiveData $r3;

        r0 := @this;

        $r4 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        $r3 := @parameter3;

        r0.val$workTaskExecutor = $r4;

        r0.val$lock = $r1;

        r0.val$mappingMethod = $r2;

        r0.val$outputLiveData = $r3;

        specialinvoke r0.<init>();

        r0.mCurrentOutput = null;

        return;
    }

    public void onChanged(java.lang.Object)
    {
        androidx.work.impl.utils.taskexecutor.TaskExecutor $r2;
        androidx.work.impl.utils.LiveDataUtils$1 r0;
        androidx.work.impl.utils.LiveDataUtils$1$1 $r3;
        java.lang.Object r1;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.val$workTaskExecutor;

        $r3 = new androidx.work.impl.utils.LiveDataUtils$1$1;

        specialinvoke $r3.<init>(r0, r1);

        interfaceinvoke $r2.executeOnBackgroundThread($r3);

        return;
    }
}
