class androidx.browser.trusted.TrustedWebActivityService$1 extends android.support.customtabs.trusted.ITrustedWebActivityService$Stub
{
    final androidx.browser.trusted.TrustedWebActivityService this$0;

    void <init>(androidx.browser.trusted.TrustedWebActivityService)
    {
        androidx.browser.trusted.TrustedWebActivityService$1 r0;
        androidx.browser.trusted.TrustedWebActivityService $r1;

        r0 := @this;

        $r1 := @parameter0;

        r0.this$0 = $r1;

        specialinvoke r0.<init>();

        return;
    }

    private void checkCaller()
    {
        android.content.pm.PackageManager $r3;
        java.lang.String[] $r4, r5;
        androidx.browser.trusted.TrustedWebActivityService$1 r0;
        androidx.browser.trusted.TrustedWebActivityService r2;
        androidx.browser.trusted.Token $r7;
        int i0, $i1;
        androidx.browser.trusted.TokenStore $r6;
        java.lang.SecurityException $r8;
        java.lang.String r1;
        boolean $z0;

        r0 := @this;

        r2 = r0.this$0;

        i0 = r2.mVerifiedUid;

        if i0 != -1 goto label4;

        r2 = r0.this$0;

        $r3 = virtualinvoke r2.getPackageManager();

        i0 = androidx.browser.trusted.TrustedWebActivityService$1.getCallingUid();

        $r4 = virtualinvoke $r3.getPackagesForUid(i0);

        r5 = $r4;

        i0 = 0;

        if $r4 != null goto label1;

        r5 = newarray (java.lang.String)[0];

     label1:
        r2 = r0.this$0;

        $r6 = virtualinvoke r2.getTokenStore();

        $r7 = interfaceinvoke $r6.load();

        r2 = r0.this$0;

        $r3 = virtualinvoke r2.getPackageManager();

        if $r7 == null goto label4;

        $i1 = lengthof r5;

     label2:
        if i0 >= $i1 goto label4;

        r1 = r5[i0];

        $z0 = virtualinvoke $r7.matches(r1, $r3);

        if $z0 == 0 goto label3;

        r2 = r0.this$0;

        i0 = androidx.browser.trusted.TrustedWebActivityService$1.getCallingUid();

        r2.mVerifiedUid = i0;

        goto label4;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        r2 = r0.this$0;

        i0 = r2.mVerifiedUid;

        $i1 = androidx.browser.trusted.TrustedWebActivityService$1.getCallingUid();

        if i0 != $i1 goto label5;

        return;

     label5:
        $r8 = new java.lang.SecurityException;

        specialinvoke $r8.<init>("Caller is not verified as Trusted Web Activity provider.");

        goto label6;

     label6:
        throw $r8;
    }

    public android.os.Bundle areNotificationsEnabled(android.os.Bundle)
    {
        androidx.browser.trusted.TrustedWebActivityServiceConnection$NotificationsEnabledArgs $r2;
        android.os.Bundle $r1;
        androidx.browser.trusted.TrustedWebActivityServiceConnection$ResultArgs $r5;
        java.lang.String $r4;
        androidx.browser.trusted.TrustedWebActivityService$1 r0;
        androidx.browser.trusted.TrustedWebActivityService r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.checkCaller();

        $r2 = androidx.browser.trusted.TrustedWebActivityServiceConnection$NotificationsEnabledArgs.fromBundle($r1);

        r3 = r0.this$0;

        $r4 = $r2.channelName;

        $z0 = virtualinvoke r3.onAreNotificationsEnabled($r4);

        $r5 = new androidx.browser.trusted.TrustedWebActivityServiceConnection$ResultArgs;

        specialinvoke $r5.<init>($z0);

        $r1 = virtualinvoke $r5.toBundle();

        return $r1;
    }

    public void cancelNotification(android.os.Bundle)
    {
        android.os.Bundle $r1;
        int $i0;
        java.lang.String $r3;
        androidx.browser.trusted.TrustedWebActivityService$1 r0;
        androidx.browser.trusted.TrustedWebActivityService $r2;
        androidx.browser.trusted.TrustedWebActivityServiceConnection$CancelNotificationArgs $r4;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.checkCaller();

        $r4 = androidx.browser.trusted.TrustedWebActivityServiceConnection$CancelNotificationArgs.fromBundle($r1);

        $r2 = r0.this$0;

        $r3 = $r4.platformTag;

        $i0 = $r4.platformId;

        virtualinvoke $r2.onCancelNotification($r3, $i0);

        return;
    }

    public android.os.Bundle extraCommand(java.lang.String, android.os.Bundle, android.os.IBinder)
    {
        androidx.browser.trusted.TrustedWebActivityCallbackRemote $r5;
        android.os.Bundle $r2;
        java.lang.String $r1;
        androidx.browser.trusted.TrustedWebActivityService$1 r0;
        android.os.IBinder $r3;
        androidx.browser.trusted.TrustedWebActivityService $r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        specialinvoke r0.checkCaller();

        $r4 = r0.this$0;

        $r5 = androidx.browser.trusted.TrustedWebActivityCallbackRemote.fromBinder($r3);

        $r2 = virtualinvoke $r4.onExtraCommand($r1, $r2, $r5);

        return $r2;
    }

    public android.os.Bundle getActiveNotifications()
    {
        android.os.Bundle $r4;
        android.os.Parcelable[] $r3;
        androidx.browser.trusted.TrustedWebActivityServiceConnection$ActiveNotificationsArgs $r1;
        androidx.browser.trusted.TrustedWebActivityService$1 r0;
        androidx.browser.trusted.TrustedWebActivityService $r2;

        r0 := @this;

        specialinvoke r0.checkCaller();

        $r1 = new androidx.browser.trusted.TrustedWebActivityServiceConnection$ActiveNotificationsArgs;

        $r2 = r0.this$0;

        $r3 = virtualinvoke $r2.onGetActiveNotifications();

        specialinvoke $r1.<init>($r3);

        $r4 = virtualinvoke $r1.toBundle();

        return $r4;
    }

    public android.os.Bundle getSmallIconBitmap()
    {
        android.os.Bundle $r1;
        androidx.browser.trusted.TrustedWebActivityService$1 r0;
        androidx.browser.trusted.TrustedWebActivityService $r2;

        r0 := @this;

        specialinvoke r0.checkCaller();

        $r2 = r0.this$0;

        $r1 = virtualinvoke $r2.onGetSmallIconBitmap();

        return $r1;
    }

    public int getSmallIconId()
    {
        int $i0;
        androidx.browser.trusted.TrustedWebActivityService$1 r0;
        androidx.browser.trusted.TrustedWebActivityService $r1;

        r0 := @this;

        specialinvoke r0.checkCaller();

        $r1 = r0.this$0;

        $i0 = virtualinvoke $r1.onGetSmallIconId();

        return $i0;
    }

    public android.os.Bundle notifyNotificationWithChannel(android.os.Bundle)
    {
        android.os.Bundle $r1;
        androidx.browser.trusted.TrustedWebActivityServiceConnection$ResultArgs $r7;
        androidx.browser.trusted.TrustedWebActivityServiceConnection$NotifyNotificationArgs $r4;
        androidx.browser.trusted.TrustedWebActivityService$1 r0;
        androidx.browser.trusted.TrustedWebActivityService r5;
        int $i0;
        android.app.Notification $r2;
        java.lang.String $r3, $r6;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.checkCaller();

        $r4 = androidx.browser.trusted.TrustedWebActivityServiceConnection$NotifyNotificationArgs.fromBundle($r1);

        r5 = r0.this$0;

        $r6 = $r4.platformTag;

        $i0 = $r4.platformId;

        $r2 = $r4.notification;

        $r3 = $r4.channelName;

        $z0 = virtualinvoke r5.onNotifyNotificationWithChannel($r6, $i0, $r2, $r3);

        $r7 = new androidx.browser.trusted.TrustedWebActivityServiceConnection$ResultArgs;

        specialinvoke $r7.<init>($z0);

        $r1 = virtualinvoke $r7.toBundle();

        return $r1;
    }
}
