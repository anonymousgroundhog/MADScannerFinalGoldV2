class androidx.work.impl.Processor$FutureListener extends java.lang.Object implements java.lang.Runnable
{
    private androidx.work.impl.ExecutionListener mExecutionListener;
    private com.google.common.util.concurrent.ListenableFuture mFuture;
    private java.lang.String mWorkSpecId;

    void <init>(androidx.work.impl.ExecutionListener, java.lang.String, com.google.common.util.concurrent.ListenableFuture)
    {
        com.google.common.util.concurrent.ListenableFuture r3;
        androidx.work.impl.Processor$FutureListener r0;
        androidx.work.impl.ExecutionListener $r1;
        java.lang.String $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        r3 := @parameter2;

        specialinvoke r0.<init>();

        r0.mExecutionListener = $r1;

        r0.mWorkSpecId = $r2;

        r0.mFuture = r3;

        return;
    }

    public void run()
    {
        com.google.common.util.concurrent.ListenableFuture r2;
        java.util.concurrent.ExecutionException r5;
        java.lang.InterruptedException r6;
        java.lang.Boolean r4;
        androidx.work.impl.Processor$FutureListener r0;
        java.lang.Object $r3;
        androidx.work.impl.ExecutionListener $r7;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this;

        r2 = r0.mFuture;

     label1:
        $r3 = interfaceinvoke r2.get();

     label2:
        r4 = (java.lang.Boolean) $r3;

     label3:
        $z0 = virtualinvoke r4.booleanValue();

     label4:
        goto label8;

     label5:
        r5 := @caughtexception;

        goto label7;

     label6:
        r6 := @caughtexception;

     label7:
        $z0 = 1;

     label8:
        $r7 = r0.mExecutionListener;

        $r1 = r0.mWorkSpecId;

        interfaceinvoke $r7.onExecuted($r1, $z0);

        return;

        catch java.lang.InterruptedException from label1 to label2 with label6;
        catch java.lang.InterruptedException from label3 to label4 with label6;
        catch java.util.concurrent.ExecutionException from label1 to label2 with label5;
        catch java.util.concurrent.ExecutionException from label3 to label4 with label5;
    }
}
