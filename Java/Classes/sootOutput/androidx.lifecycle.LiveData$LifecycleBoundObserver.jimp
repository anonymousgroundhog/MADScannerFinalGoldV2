class androidx.lifecycle.LiveData$LifecycleBoundObserver extends androidx.lifecycle.LiveData$ObserverWrapper implements androidx.lifecycle.LifecycleEventObserver
{
    final androidx.lifecycle.LifecycleOwner mOwner;
    final androidx.lifecycle.LiveData this$0;

    void <init>(androidx.lifecycle.LiveData, androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Observer)
    {
        androidx.lifecycle.LiveData $r1;
        androidx.lifecycle.LiveData$LifecycleBoundObserver r0;
        androidx.lifecycle.Observer r3;
        androidx.lifecycle.LifecycleOwner $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        r3 := @parameter2;

        r0.this$0 = $r1;

        specialinvoke r0.<init>($r1, r3);

        r0.mOwner = $r2;

        return;
    }

    void detachObserver()
    {
        androidx.lifecycle.Lifecycle $r1;
        androidx.lifecycle.LiveData$LifecycleBoundObserver r0;
        androidx.lifecycle.LifecycleOwner $r2;

        r0 := @this;

        $r2 = r0.mOwner;

        $r1 = interfaceinvoke $r2.getLifecycle();

        virtualinvoke $r1.removeObserver(r0);

        return;
    }

    boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
    {
        androidx.lifecycle.LiveData$LifecycleBoundObserver r0;
        androidx.lifecycle.LifecycleOwner $r1, $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mOwner;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onStateChanged(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event)
    {
        androidx.lifecycle.LiveData $r6;
        androidx.lifecycle.LiveData$LifecycleBoundObserver r0;
        androidx.lifecycle.Lifecycle$Event $r2;
        androidx.lifecycle.Lifecycle $r3;
        androidx.lifecycle.Lifecycle$State $r4, $r5;
        androidx.lifecycle.Observer $r7;
        androidx.lifecycle.LifecycleOwner $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r1 = r0.mOwner;

        $r3 = interfaceinvoke $r1.getLifecycle();

        $r4 = virtualinvoke $r3.getCurrentState();

        $r5 = androidx.lifecycle.Lifecycle$State.DESTROYED;

        if $r4 != $r5 goto label1;

        $r6 = r0.this$0;

        $r7 = r0.mObserver;

        virtualinvoke $r6.removeObserver($r7);

        return;

     label1:
        $z0 = virtualinvoke r0.shouldBeActive();

        virtualinvoke r0.activeStateChanged($z0);

        return;
    }

    boolean shouldBeActive()
    {
        androidx.lifecycle.Lifecycle $r3;
        androidx.lifecycle.LiveData$LifecycleBoundObserver r0;
        androidx.lifecycle.Lifecycle$State $r1, $r4;
        androidx.lifecycle.LifecycleOwner $r2;
        boolean $z0;

        r0 := @this;

        $r2 = r0.mOwner;

        $r3 = interfaceinvoke $r2.getLifecycle();

        $r4 = virtualinvoke $r3.getCurrentState();

        $r1 = androidx.lifecycle.Lifecycle$State.STARTED;

        $z0 = virtualinvoke $r4.isAtLeast($r1);

        return $z0;
    }
}
