class androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager extends java.lang.Object implements android.view.ViewTreeObserver$OnGlobalLayoutListener, android.view.View$OnAttachStateChangeListener
{
    private java.util.WeakHashMap mPanesToVisible;

    void <init>()
    {
        androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager r0;
        java.util.WeakHashMap $r1;

        r0 := @this;

        specialinvoke r0.<init>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<init>();

        r0.mPanesToVisible = $r1;

        return;
    }

    private void checkPaneVisibility(android.view.View, boolean)
    {
        byte b1;
        androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager r0;
        int $i0;
        android.view.View $r1;
        java.lang.Boolean $r3;
        java.util.WeakHashMap $r2;
        boolean $z0, z1;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        $i0 = virtualinvoke $r1.getVisibility();

        if $i0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        if $z0 == z1 goto label5;

        if z1 == 0 goto label3;

        b1 = 16;

        goto label4;

     label3:
        b1 = 32;

     label4:
        androidx.core.view.ViewCompat.notifyViewAccessibilityStateChangedIfNeeded($r1, b1);

        $r2 = r0.mPanesToVisible;

        $r3 = java.lang.Boolean.valueOf(z1);

        virtualinvoke $r2.put($r1, $r3);

     label5:
        return;
    }

    private void registerForLayoutCallback(android.view.View)
    {
        android.view.View $r1;
        android.view.ViewTreeObserver $r2;
        androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke $r1.getViewTreeObserver();

        virtualinvoke $r2.addOnGlobalLayoutListener(r0);

        return;
    }

    private void unregisterForLayoutCallback(android.view.View)
    {
        android.view.View $r1;
        android.view.ViewTreeObserver $r2;
        androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke $r1.getViewTreeObserver();

        virtualinvoke $r2.removeOnGlobalLayoutListener(r0);

        return;
    }

    void addAccessibilityPane(android.view.View)
    {
        androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager r0;
        int $i0;
        android.view.View $r1;
        java.lang.Boolean $r3;
        java.util.WeakHashMap $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mPanesToVisible;

        $i0 = virtualinvoke $r1.getVisibility();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = java.lang.Boolean.valueOf($z0);

        virtualinvoke $r2.put($r1, $r3);

        virtualinvoke $r1.addOnAttachStateChangeListener(r0);

        $z0 = virtualinvoke $r1.isAttachedToWindow();

        if $z0 == 0 goto label3;

        specialinvoke r0.registerForLayoutCallback($r1);

     label3:
        return;
    }

    public void onGlobalLayout()
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Set $r2;
        androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager r0;
        int $i0;
        android.view.View $r6;
        java.lang.Boolean $r7;
        java.lang.Object $r4;
        java.util.WeakHashMap $r1;
        boolean $z0;

        r0 := @this;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 >= 28 goto label2;

        $r1 = r0.mPanesToVisible;

        $r2 = virtualinvoke $r1.entrySet();

        $r3 = interfaceinvoke $r2.iterator();

     label1:
        $z0 = interfaceinvoke $r3.hasNext();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.next();

        r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke r5.getKey();

        $r6 = (android.view.View) $r4;

        $r4 = interfaceinvoke r5.getValue();

        $r7 = (java.lang.Boolean) $r4;

        $z0 = virtualinvoke $r7.booleanValue();

        specialinvoke r0.checkPaneVisibility($r6, $z0);

        goto label1;

     label2:
        return;
    }

    public void onViewAttachedToWindow(android.view.View)
    {
        android.view.View $r1;
        androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.registerForLayoutCallback($r1);

        return;
    }

    public void onViewDetachedFromWindow(android.view.View)
    {
        android.view.View $r1;
        androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager r0;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    void removeAccessibilityPane(android.view.View)
    {
        android.view.View $r1;
        androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager r0;
        java.util.WeakHashMap $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mPanesToVisible;

        virtualinvoke $r2.remove($r1);

        virtualinvoke $r1.removeOnAttachStateChangeListener(r0);

        specialinvoke r0.unregisterForLayoutCallback($r1);

        return;
    }
}
