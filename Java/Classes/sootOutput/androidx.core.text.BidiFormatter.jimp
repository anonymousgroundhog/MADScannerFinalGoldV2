public final class androidx.core.text.BidiFormatter extends java.lang.Object
{
    private static final int DEFAULT_FLAGS;
    static final androidx.core.text.BidiFormatter DEFAULT_LTR_INSTANCE;
    static final androidx.core.text.BidiFormatter DEFAULT_RTL_INSTANCE;
    static final androidx.core.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC;
    private static final int DIR_LTR;
    private static final int DIR_RTL;
    private static final int DIR_UNKNOWN;
    private static final java.lang.String EMPTY_STRING;
    private static final int FLAG_STEREO_RESET;
    private static final char LRE;
    private static final char LRM;
    private static final java.lang.String LRM_STRING;
    private static final char PDF;
    private static final char RLE;
    private static final char RLM;
    private static final java.lang.String RLM_STRING;
    private final androidx.core.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat;
    private final int mFlags;
    private final boolean mIsRtlContext;

    static void <clinit>()
    {
        java.lang.String $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r0;
        androidx.core.text.BidiFormatter $r2;

        $r0 = androidx.core.text.TextDirectionHeuristicsCompat.FIRSTSTRONG_LTR;

        androidx.core.text.BidiFormatter.DEFAULT_TEXT_DIRECTION_HEURISTIC = $r0;

        $r1 = java.lang.Character.toString(8206);

        androidx.core.text.BidiFormatter.LRM_STRING = $r1;

        $r1 = java.lang.Character.toString(8207);

        androidx.core.text.BidiFormatter.RLM_STRING = $r1;

        $r2 = new androidx.core.text.BidiFormatter;

        specialinvoke $r2.<init>(0, 2, $r0);

        androidx.core.text.BidiFormatter.DEFAULT_LTR_INSTANCE = $r2;

        $r2 = new androidx.core.text.BidiFormatter;

        specialinvoke $r2.<init>(1, 2, $r0);

        androidx.core.text.BidiFormatter.DEFAULT_RTL_INSTANCE = $r2;

        return;
    }

    void <init>(boolean, int, androidx.core.text.TextDirectionHeuristicCompat)
    {
        androidx.core.text.TextDirectionHeuristicCompat $r1;
        androidx.core.text.BidiFormatter r0;
        int $i0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        $i0 := @parameter1;

        $r1 := @parameter2;

        specialinvoke r0.<init>();

        r0.mIsRtlContext = $z0;

        r0.mFlags = $i0;

        r0.mDefaultTextDirectionHeuristicCompat = $r1;

        return;
    }

    private static int getEntryDir(java.lang.CharSequence)
    {
        int $i0;
        java.lang.CharSequence $r0;
        androidx.core.text.BidiFormatter$DirectionalityEstimator $r1;

        $r0 := @parameter0;

        $r1 = new androidx.core.text.BidiFormatter$DirectionalityEstimator;

        specialinvoke $r1.<init>($r0, 0);

        $i0 = virtualinvoke $r1.getEntryDir();

        return $i0;
    }

    private static int getExitDir(java.lang.CharSequence)
    {
        int $i0;
        java.lang.CharSequence $r0;
        androidx.core.text.BidiFormatter$DirectionalityEstimator $r1;

        $r0 := @parameter0;

        $r1 = new androidx.core.text.BidiFormatter$DirectionalityEstimator;

        specialinvoke $r1.<init>($r0, 0);

        $i0 = virtualinvoke $r1.getExitDir();

        return $i0;
    }

    public static androidx.core.text.BidiFormatter getInstance()
    {
        androidx.core.text.BidiFormatter$Builder $r1;
        androidx.core.text.BidiFormatter $r0;

        $r1 = new androidx.core.text.BidiFormatter$Builder;

        specialinvoke $r1.<init>();

        $r0 = virtualinvoke $r1.build();

        return $r0;
    }

    public static androidx.core.text.BidiFormatter getInstance(java.util.Locale)
    {
        androidx.core.text.BidiFormatter$Builder $r2;
        java.util.Locale $r0;
        androidx.core.text.BidiFormatter $r1;

        $r0 := @parameter0;

        $r2 = new androidx.core.text.BidiFormatter$Builder;

        specialinvoke $r2.<init>($r0);

        $r1 = virtualinvoke $r2.build();

        return $r1;
    }

    public static androidx.core.text.BidiFormatter getInstance(boolean)
    {
        androidx.core.text.BidiFormatter$Builder $r1;
        androidx.core.text.BidiFormatter $r0;
        boolean $z0;

        $z0 := @parameter0;

        $r1 = new androidx.core.text.BidiFormatter$Builder;

        specialinvoke $r1.<init>($z0);

        $r0 = virtualinvoke $r1.build();

        return $r0;
    }

    static boolean isRtlLocale(java.util.Locale)
    {
        int $i0;
        java.util.Locale $r0;

        $r0 := @parameter0;

        $i0 = androidx.core.text.TextUtilsCompat.getLayoutDirectionFromLocale($r0);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private java.lang.String markAfter(java.lang.CharSequence, androidx.core.text.TextDirectionHeuristicCompat)
    {
        java.lang.CharSequence $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        androidx.core.text.BidiFormatter r0;
        int $i0;
        java.lang.String r3;
        boolean $z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 = interfaceinvoke $r1.length();

        $z0 = interfaceinvoke $r2.isRtl($r1, 0, $i0);

        $z1 = r0.mIsRtlContext;

        if $z1 != 0 goto label2;

        if $z0 != 0 goto label1;

        $i0 = androidx.core.text.BidiFormatter.getExitDir($r1);

        if $i0 != 1 goto label2;

     label1:
        r3 = androidx.core.text.BidiFormatter.LRM_STRING;

        return r3;

     label2:
        $z1 = r0.mIsRtlContext;

        if $z1 == 0 goto label4;

        if $z0 == 0 goto label3;

        $i0 = androidx.core.text.BidiFormatter.getExitDir($r1);

        if $i0 != -1 goto label4;

     label3:
        r3 = androidx.core.text.BidiFormatter.RLM_STRING;

        return r3;

     label4:
        return "";
    }

    private java.lang.String markBefore(java.lang.CharSequence, androidx.core.text.TextDirectionHeuristicCompat)
    {
        java.lang.CharSequence $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        androidx.core.text.BidiFormatter r0;
        int $i0;
        java.lang.String r3;
        boolean $z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 = interfaceinvoke $r1.length();

        $z0 = interfaceinvoke $r2.isRtl($r1, 0, $i0);

        $z1 = r0.mIsRtlContext;

        if $z1 != 0 goto label2;

        if $z0 != 0 goto label1;

        $i0 = androidx.core.text.BidiFormatter.getEntryDir($r1);

        if $i0 != 1 goto label2;

     label1:
        r3 = androidx.core.text.BidiFormatter.LRM_STRING;

        return r3;

     label2:
        $z1 = r0.mIsRtlContext;

        if $z1 == 0 goto label4;

        if $z0 == 0 goto label3;

        $i0 = androidx.core.text.BidiFormatter.getEntryDir($r1);

        if $i0 != -1 goto label4;

     label3:
        r3 = androidx.core.text.BidiFormatter.RLM_STRING;

        return r3;

     label4:
        return "";
    }

    public boolean getStereoReset()
    {
        int $i0;
        androidx.core.text.BidiFormatter r0;

        r0 := @this;

        $i0 = r0.mFlags;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isRtl(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        androidx.core.text.BidiFormatter r0;
        int $i0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDefaultTextDirectionHeuristicCompat;

        $i0 = interfaceinvoke $r1.length();

        $z0 = interfaceinvoke $r2.isRtl($r1, 0, $i0);

        return $z0;
    }

    public boolean isRtl(java.lang.String)
    {
        java.lang.String $r1;
        androidx.core.text.BidiFormatter r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = virtualinvoke r0.isRtl($r1);

        return $z0;
    }

    public boolean isRtlContext()
    {
        androidx.core.text.BidiFormatter r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mIsRtlContext;

        return z0;
    }

    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        androidx.core.text.BidiFormatter r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDefaultTextDirectionHeuristicCompat;

        $r1 = virtualinvoke r0.unicodeWrap($r1, $r2, 1);

        return $r1;
    }

    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence, androidx.core.text.TextDirectionHeuristicCompat)
    {
        java.lang.CharSequence $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        androidx.core.text.BidiFormatter r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r1 = virtualinvoke r0.unicodeWrap($r1, $r2, 1);

        return $r1;
    }

    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence, androidx.core.text.TextDirectionHeuristicCompat, boolean)
    {
        java.lang.CharSequence $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        char $c1;
        android.text.SpannableStringBuilder r3;
        androidx.core.text.BidiFormatter r0;
        int $i0;
        java.lang.String $r4;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $z0 := @parameter2;

        if $r1 != null goto label01;

        return null;

     label01:
        $i0 = interfaceinvoke $r1.length();

        $z1 = interfaceinvoke $r2.isRtl($r1, 0, $i0);

        r3 = new android.text.SpannableStringBuilder;

        specialinvoke r3.<init>();

        $z2 = virtualinvoke r0.getStereoReset();

        if $z2 == 0 goto label04;

        if $z0 == 0 goto label04;

        if $z1 == 0 goto label02;

        $r2 = androidx.core.text.TextDirectionHeuristicsCompat.RTL;

        goto label03;

     label02:
        $r2 = androidx.core.text.TextDirectionHeuristicsCompat.LTR;

     label03:
        $r4 = specialinvoke r0.markBefore($r1, $r2);

        virtualinvoke r3.append($r4);

     label04:
        $z2 = r0.mIsRtlContext;

        if $z1 == $z2 goto label07;

        if $z1 == 0 goto label05;

        $c1 = 8235;

        goto label06;

     label05:
        $c1 = 8234;

     label06:
        virtualinvoke r3.append($c1);

        virtualinvoke r3.append($r1);

        virtualinvoke r3.append(8236);

        goto label08;

     label07:
        virtualinvoke r3.append($r1);

     label08:
        if $z0 == 0 goto label11;

        if $z1 == 0 goto label09;

        $r2 = androidx.core.text.TextDirectionHeuristicsCompat.RTL;

        goto label10;

     label09:
        $r2 = androidx.core.text.TextDirectionHeuristicsCompat.LTR;

     label10:
        $r4 = specialinvoke r0.markAfter($r1, $r2);

        virtualinvoke r3.append($r4);

     label11:
        return r3;
    }

    public java.lang.CharSequence unicodeWrap(java.lang.CharSequence, boolean)
    {
        java.lang.CharSequence $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        androidx.core.text.BidiFormatter r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        $r2 = r0.mDefaultTextDirectionHeuristicCompat;

        $r1 = virtualinvoke r0.unicodeWrap($r1, $r2, $z0);

        return $r1;
    }

    public java.lang.String unicodeWrap(java.lang.String)
    {
        java.lang.String $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        androidx.core.text.BidiFormatter r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDefaultTextDirectionHeuristicCompat;

        $r1 = virtualinvoke r0.unicodeWrap($r1, $r2, 1);

        return $r1;
    }

    public java.lang.String unicodeWrap(java.lang.String, androidx.core.text.TextDirectionHeuristicCompat)
    {
        java.lang.String $r1;
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        androidx.core.text.BidiFormatter r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r1 = virtualinvoke r0.unicodeWrap($r1, $r2, 1);

        return $r1;
    }

    public java.lang.String unicodeWrap(java.lang.String, androidx.core.text.TextDirectionHeuristicCompat, boolean)
    {
        java.lang.CharSequence $r3;
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        androidx.core.text.BidiFormatter r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $z0 := @parameter2;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.unicodeWrap($r1, $r2, $z0);

        $r1 = interfaceinvoke $r3.toString();

        return $r1;
    }

    public java.lang.String unicodeWrap(java.lang.String, boolean)
    {
        androidx.core.text.TextDirectionHeuristicCompat $r2;
        androidx.core.text.BidiFormatter r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        $r2 = r0.mDefaultTextDirectionHeuristicCompat;

        $r1 = virtualinvoke r0.unicodeWrap($r1, $r2, $z0);

        return $r1;
    }
}
