public class androidx.lifecycle.ViewModelProvider extends java.lang.Object
{
    private static final java.lang.String DEFAULT_KEY;
    private final androidx.lifecycle.ViewModelProvider$Factory mFactory;
    private final androidx.lifecycle.ViewModelStore mViewModelStore;

    public void <init>(androidx.lifecycle.ViewModelStore, androidx.lifecycle.ViewModelProvider$Factory)
    {
        androidx.lifecycle.ViewModelStore $r1;
        androidx.lifecycle.ViewModelProvider$Factory $r2;
        androidx.lifecycle.ViewModelProvider r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.<init>();

        r0.mFactory = $r2;

        r0.mViewModelStore = $r1;

        return;
    }

    public void <init>(androidx.lifecycle.ViewModelStoreOwner, androidx.lifecycle.ViewModelProvider$Factory)
    {
        androidx.lifecycle.ViewModelStore $r3;
        androidx.lifecycle.ViewModelProvider r0;
        androidx.lifecycle.ViewModelProvider$Factory $r2;
        androidx.lifecycle.ViewModelStoreOwner $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = interfaceinvoke $r1.getViewModelStore();

        specialinvoke r0.<init>($r3, $r2);

        return;
    }

    public androidx.lifecycle.ViewModel get(java.lang.Class)
    {
        androidx.lifecycle.ViewModelProvider r0;
        androidx.lifecycle.ViewModel $r4;
        java.lang.Class r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r5;

        r0 := @this;

        r1 := @parameter0;

        $r2 = virtualinvoke r1.getCanonicalName();

        if $r2 == null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("androidx.lifecycle.ViewModelProvider.DefaultKey:");

        $r3 = virtualinvoke $r3.append($r2);

        $r2 = virtualinvoke $r3.toString();

        $r4 = virtualinvoke r0.get($r2, r1);

        return $r4;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<init>("Local and anonymous classes can not be ViewModels");

        throw $r5;
    }

    public androidx.lifecycle.ViewModel get(java.lang.String, java.lang.Class)
    {
        androidx.lifecycle.ViewModelProvider r0;
        androidx.lifecycle.ViewModelProvider$KeyedFactory $r6;
        androidx.lifecycle.ViewModel $r4;
        androidx.lifecycle.ViewModelStore r3;
        androidx.lifecycle.ViewModelProvider$Factory $r5;
        java.lang.Class r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        r2 := @parameter1;

        r3 = r0.mViewModelStore;

        $r4 = virtualinvoke r3.get($r1);

        $z0 = virtualinvoke r2.isInstance($r4);

        if $z0 == 0 goto label1;

        return $r4;

     label1:
        $r5 = r0.mFactory;

        $z0 = $r5 instanceof androidx.lifecycle.ViewModelProvider$KeyedFactory;

        if $z0 == 0 goto label2;

        $r6 = (androidx.lifecycle.ViewModelProvider$KeyedFactory) $r5;

        $r4 = virtualinvoke $r6.create($r1, r2);

        goto label3;

     label2:
        $r4 = interfaceinvoke $r5.create(r2);

     label3:
        r3 = r0.mViewModelStore;

        virtualinvoke r3.put($r1, $r4);

        return $r4;
    }
}
