class androidx.appcompat.widget.AppCompatSeekBarHelper extends androidx.appcompat.widget.AppCompatProgressBarHelper
{
    private boolean mHasTickMarkTint;
    private boolean mHasTickMarkTintMode;
    private android.graphics.drawable.Drawable mTickMark;
    private android.content.res.ColorStateList mTickMarkTintList;
    private android.graphics.PorterDuff$Mode mTickMarkTintMode;
    private final android.widget.SeekBar mView;

    void <init>(android.widget.SeekBar)
    {
        androidx.appcompat.widget.AppCompatSeekBarHelper r0;
        android.widget.SeekBar $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>($r1);

        r0.mTickMarkTintList = null;

        r0.mTickMarkTintMode = null;

        r0.mHasTickMarkTint = 0;

        r0.mHasTickMarkTintMode = 0;

        r0.mView = $r1;

        return;
    }

    private void applyTickMarkTint()
    {
        android.content.res.ColorStateList $r2;
        androidx.appcompat.widget.AppCompatSeekBarHelper r0;
        android.widget.SeekBar $r4;
        int[] $r5;
        android.graphics.drawable.Drawable $r1;
        android.graphics.PorterDuff$Mode $r3;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mTickMark;

        if $r1 == null goto label4;

        $z0 = r0.mHasTickMarkTint;

        if $z0 != 0 goto label1;

        $z0 = r0.mHasTickMarkTintMode;

        if $z0 == 0 goto label4;

     label1:
        $r1 = virtualinvoke $r1.mutate();

        $r1 = androidx.core.graphics.drawable.DrawableCompat.wrap($r1);

        r0.mTickMark = $r1;

        $z0 = r0.mHasTickMarkTint;

        if $z0 == 0 goto label2;

        $r2 = r0.mTickMarkTintList;

        androidx.core.graphics.drawable.DrawableCompat.setTintList($r1, $r2);

     label2:
        $z0 = r0.mHasTickMarkTintMode;

        if $z0 == 0 goto label3;

        $r1 = r0.mTickMark;

        $r3 = r0.mTickMarkTintMode;

        androidx.core.graphics.drawable.DrawableCompat.setTintMode($r1, $r3);

     label3:
        $r1 = r0.mTickMark;

        $z0 = virtualinvoke $r1.isStateful();

        if $z0 == 0 goto label4;

        $r1 = r0.mTickMark;

        $r4 = r0.mView;

        $r5 = virtualinvoke $r4.getDrawableState();

        virtualinvoke $r1.setState($r5);

     label4:
        return;
    }

    void drawTickMarks(android.graphics.Canvas)
    {
        androidx.appcompat.widget.AppCompatSeekBarHelper r0;
        android.graphics.drawable.Drawable r2;
        android.widget.SeekBar r3;
        int $i0, i1, $i2, $i3, i4;
        float f0, f1, $f2;
        android.graphics.Canvas $r1;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mTickMark;

        if r2 == null goto label6;

        r3 = r0.mView;

        $i0 = virtualinvoke r3.getMax();

        i1 = 1;

        if $i0 <= 1 goto label6;

        r2 = r0.mTickMark;

        $i2 = virtualinvoke r2.getIntrinsicWidth();

        r2 = r0.mTickMark;

        $i3 = virtualinvoke r2.getIntrinsicHeight();

        if $i2 < 0 goto label1;

        $i2 = $i2 / 2;

        goto label2;

     label1:
        $i2 = 1;

     label2:
        if $i3 < 0 goto label3;

        i1 = $i3 / 2;

     label3:
        r2 = r0.mTickMark;

        $i3 = neg $i2;

        i4 = neg i1;

        virtualinvoke r2.setBounds($i3, i4, $i2, i1);

        r3 = r0.mView;

        i1 = virtualinvoke r3.getWidth();

        r3 = r0.mView;

        $i2 = virtualinvoke r3.getPaddingLeft();

        i1 = i1 - $i2;

        r3 = r0.mView;

        $i2 = virtualinvoke r3.getPaddingRight();

        i1 = i1 - $i2;

        f0 = (float) i1;

        f1 = (float) $i0;

        f0 = f0 / f1;

        i1 = virtualinvoke $r1.save();

        r3 = r0.mView;

        $i2 = virtualinvoke r3.getPaddingLeft();

        f1 = (float) $i2;

        r3 = r0.mView;

        $i2 = virtualinvoke r3.getHeight();

        $i2 = $i2 / 2;

        $f2 = (float) $i2;

        virtualinvoke $r1.translate(f1, $f2);

        $i2 = 0;

     label4:
        if $i2 > $i0 goto label5;

        r2 = r0.mTickMark;

        virtualinvoke r2.draw($r1);

        virtualinvoke $r1.translate(f0, 0.0F);

        $i2 = $i2 + 1;

        goto label4;

     label5:
        virtualinvoke $r1.restoreToCount(i1);

     label6:
        return;
    }

    void drawableStateChanged()
    {
        androidx.appcompat.widget.AppCompatSeekBarHelper r0;
        android.widget.SeekBar $r2;
        int[] $r3;
        android.graphics.drawable.Drawable r1;
        boolean $z0;

        r0 := @this;

        r1 = r0.mTickMark;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.isStateful();

        if $z0 == 0 goto label1;

        $r2 = r0.mView;

        $r3 = virtualinvoke $r2.getDrawableState();

        $z0 = virtualinvoke r1.setState($r3);

        if $z0 == 0 goto label1;

        $r2 = r0.mView;

        virtualinvoke $r2.invalidateDrawable(r1);

     label1:
        return;
    }

    android.graphics.drawable.Drawable getTickMark()
    {
        androidx.appcompat.widget.AppCompatSeekBarHelper r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this;

        r1 = r0.mTickMark;

        return r1;
    }

    android.content.res.ColorStateList getTickMarkTintList()
    {
        android.content.res.ColorStateList r1;
        androidx.appcompat.widget.AppCompatSeekBarHelper r0;

        r0 := @this;

        r1 = r0.mTickMarkTintList;

        return r1;
    }

    android.graphics.PorterDuff$Mode getTickMarkTintMode()
    {
        androidx.appcompat.widget.AppCompatSeekBarHelper r0;
        android.graphics.PorterDuff$Mode r1;

        r0 := @this;

        r1 = r0.mTickMarkTintMode;

        return r1;
    }

    void jumpDrawablesToCurrentState()
    {
        androidx.appcompat.widget.AppCompatSeekBarHelper r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r1 = r0.mTickMark;

        if $r1 == null goto label1;

        virtualinvoke $r1.jumpToCurrentState();

     label1:
        return;
    }

    void loadFromAttributes(android.util.AttributeSet, int)
    {
        androidx.appcompat.widget.AppCompatSeekBarHelper r0;
        android.content.Context $r3;
        android.graphics.drawable.Drawable $r7;
        android.graphics.PorterDuff$Mode $r8;
        android.content.res.TypedArray $r6;
        android.content.res.ColorStateList $r9;
        android.widget.SeekBar r2;
        android.util.AttributeSet $r1;
        int[] r4;
        androidx.appcompat.widget.TintTypedArray $r5;
        int $i0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        specialinvoke r0.loadFromAttributes($r1, $i0);

        r2 = r0.mView;

        $r3 = virtualinvoke r2.getContext();

        r4 = androidx.appcompat.R$styleable.AppCompatSeekBar;

        $r5 = androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes($r3, $r1, r4, $i0, 0);

        r2 = r0.mView;

        $r3 = virtualinvoke r2.getContext();

        r4 = androidx.appcompat.R$styleable.AppCompatSeekBar;

        $r6 = virtualinvoke $r5.getWrappedTypeArray();

        androidx.core.view.ViewCompat.saveAttributeDataForStyleable(r2, $r3, r4, $r1, $r6, $i0, 0);

        $i0 = androidx.appcompat.R$styleable.AppCompatSeekBar_android_thumb;

        $r7 = virtualinvoke $r5.getDrawableIfKnown($i0);

        if $r7 == null goto label1;

        r2 = r0.mView;

        virtualinvoke r2.setThumb($r7);

     label1:
        $i0 = androidx.appcompat.R$styleable.AppCompatSeekBar_tickMark;

        $r7 = virtualinvoke $r5.getDrawable($i0);

        virtualinvoke r0.setTickMark($r7);

        $i0 = androidx.appcompat.R$styleable.AppCompatSeekBar_tickMarkTintMode;

        $z0 = virtualinvoke $r5.hasValue($i0);

        if $z0 == 0 goto label2;

        $i0 = androidx.appcompat.R$styleable.AppCompatSeekBar_tickMarkTintMode;

        $i0 = virtualinvoke $r5.getInt($i0, -1);

        $r8 = r0.mTickMarkTintMode;

        $r8 = androidx.appcompat.widget.DrawableUtils.parseTintMode($i0, $r8);

        r0.mTickMarkTintMode = $r8;

        r0.mHasTickMarkTintMode = 1;

     label2:
        $i0 = androidx.appcompat.R$styleable.AppCompatSeekBar_tickMarkTint;

        $z0 = virtualinvoke $r5.hasValue($i0);

        if $z0 == 0 goto label3;

        $i0 = androidx.appcompat.R$styleable.AppCompatSeekBar_tickMarkTint;

        $r9 = virtualinvoke $r5.getColorStateList($i0);

        r0.mTickMarkTintList = $r9;

        r0.mHasTickMarkTint = 1;

     label3:
        virtualinvoke $r5.recycle();

        specialinvoke r0.applyTickMarkTint();

        return;
    }

    void setTickMark(android.graphics.drawable.Drawable)
    {
        androidx.appcompat.widget.AppCompatSeekBarHelper r0;
        android.widget.SeekBar $r3;
        int[] $r4;
        int $i0;
        android.graphics.drawable.Drawable $r1, $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mTickMark;

        if $r2 == null goto label1;

        virtualinvoke $r2.setCallback(null);

     label1:
        r0.mTickMark = $r1;

        if $r1 == null goto label3;

        $r3 = r0.mView;

        virtualinvoke $r1.setCallback($r3);

        $r3 = r0.mView;

        $i0 = androidx.core.view.ViewCompat.getLayoutDirection($r3);

        androidx.core.graphics.drawable.DrawableCompat.setLayoutDirection($r1, $i0);

        $z0 = virtualinvoke $r1.isStateful();

        if $z0 == 0 goto label2;

        $r3 = r0.mView;

        $r4 = virtualinvoke $r3.getDrawableState();

        virtualinvoke $r1.setState($r4);

     label2:
        specialinvoke r0.applyTickMarkTint();

     label3:
        $r3 = r0.mView;

        virtualinvoke $r3.invalidate();

        return;
    }

    void setTickMarkTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        androidx.appcompat.widget.AppCompatSeekBarHelper r0;

        r0 := @this;

        $r1 := @parameter0;

        r0.mTickMarkTintList = $r1;

        r0.mHasTickMarkTint = 1;

        specialinvoke r0.applyTickMarkTint();

        return;
    }

    void setTickMarkTintMode(android.graphics.PorterDuff$Mode)
    {
        androidx.appcompat.widget.AppCompatSeekBarHelper r0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this;

        $r1 := @parameter0;

        r0.mTickMarkTintMode = $r1;

        r0.mHasTickMarkTintMode = 1;

        specialinvoke r0.applyTickMarkTint();

        return;
    }
}
