public final class com.google.android.gms.common.internal.Asserts extends java.lang.Object
{

    private void <init>()
    {
        com.google.android.gms.common.internal.Asserts r0;
        java.lang.AssertionError $r1;

        r0 := @this;

        specialinvoke r0.<init>();

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<init>("Uninstantiable");

        throw $r1;
    }

    public static void checkMainThread(java.lang.String)
    {
        java.lang.IllegalStateException $r8;
        android.os.Looper $r2;
        java.lang.Thread $r3, $r4;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r0, $r5, $r6, $r7;

        $r0 := @parameter0;

        $r2 = android.os.Looper.getMainLooper();

        $r3 = virtualinvoke $r2.getThread();

        $r4 = java.lang.Thread.currentThread();

        if $r3 != $r4 goto label1;

        return;

     label1:
        $r3 = java.lang.Thread.currentThread();

        $r5 = java.lang.String.valueOf($r3);

        $r2 = android.os.Looper.getMainLooper();

        $r3 = virtualinvoke $r2.getThread();

        $r6 = java.lang.String.valueOf($r3);

        $r7 = java.lang.String.valueOf($r5);

        $i0 = virtualinvoke $r7.length();

        $r7 = java.lang.String.valueOf($r6);

        $i1 = virtualinvoke $r7.length();

        $r1 = new java.lang.StringBuilder;

        $i0 = $i0 + 57;

        $i1 = $i0 + $i1;

        specialinvoke $r1.<init>($i1);

        virtualinvoke $r1.append("checkMainThread: current thread ");

        virtualinvoke $r1.append($r5);

        virtualinvoke $r1.append(" IS NOT the main thread ");

        virtualinvoke $r1.append($r6);

        virtualinvoke $r1.append("!");

        $r5 = virtualinvoke $r1.toString();

        android.util.Log.e("Asserts", $r5);

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<init>($r0);

        throw $r8;
    }

    public static void checkNotMainThread(java.lang.String)
    {
        java.lang.IllegalStateException $r8;
        android.os.Looper $r2;
        java.lang.Thread $r3, $r4;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r0, $r5, $r6, $r7;

        $r0 := @parameter0;

        $r2 = android.os.Looper.getMainLooper();

        $r3 = virtualinvoke $r2.getThread();

        $r4 = java.lang.Thread.currentThread();

        if $r3 == $r4 goto label1;

        return;

     label1:
        $r3 = java.lang.Thread.currentThread();

        $r5 = java.lang.String.valueOf($r3);

        $r2 = android.os.Looper.getMainLooper();

        $r3 = virtualinvoke $r2.getThread();

        $r6 = java.lang.String.valueOf($r3);

        $r7 = java.lang.String.valueOf($r5);

        $i0 = virtualinvoke $r7.length();

        $r7 = java.lang.String.valueOf($r6);

        $i1 = virtualinvoke $r7.length();

        $r1 = new java.lang.StringBuilder;

        $i0 = $i0 + 56;

        $i1 = $i0 + $i1;

        specialinvoke $r1.<init>($i1);

        virtualinvoke $r1.append("checkNotMainThread: current thread ");

        virtualinvoke $r1.append($r5);

        virtualinvoke $r1.append(" IS the main thread ");

        virtualinvoke $r1.append($r6);

        virtualinvoke $r1.append("!");

        $r5 = virtualinvoke $r1.toString();

        android.util.Log.e("Asserts", $r5);

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<init>($r0);

        throw $r8;
    }

    public static void checkNotNull(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.IllegalArgumentException $r1;

        $r0 := @parameter0;

        if $r0 == null goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<init>("null reference");

        throw $r1;
    }

    public static void checkNotNull(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r1, $r2;
        java.lang.String $r0;
        java.lang.IllegalArgumentException $r3;

        $r1 := @parameter0;

        $r2 := @parameter1;

        if $r1 == null goto label1;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r0 = java.lang.String.valueOf($r2);

        specialinvoke $r3.<init>($r0);

        throw $r3;
    }

    public static void checkNull(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.IllegalArgumentException $r1;

        $r0 := @parameter0;

        if $r0 != null goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<init>("non-null reference");

        throw $r1;
    }

    public static void checkState(boolean)
    {
        java.lang.IllegalStateException $r0;
        boolean $z0;

        $z0 := @parameter0;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<init>();

        throw $r0;
    }

    public static void checkState(boolean, java.lang.Object)
    {
        java.lang.IllegalStateException $r2;
        java.lang.Object $r1;
        java.lang.String $r0;
        boolean $z0;

        $z0 := @parameter0;

        $r1 := @parameter1;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r0 = java.lang.String.valueOf($r1);

        specialinvoke $r2.<init>($r0);

        throw $r2;
    }
}
