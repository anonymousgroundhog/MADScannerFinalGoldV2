public class androidx.core.util.Pools$SynchronizedPool extends androidx.core.util.Pools$SimplePool
{
    private final java.lang.Object mLock;

    public void <init>(int)
    {
        int $i0;
        java.lang.Object $r1;
        androidx.core.util.Pools$SynchronizedPool r0;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.<init>($i0);

        $r1 = new java.lang.Object;

        specialinvoke $r1.<init>();

        r0.mLock = $r1;

        return;
    }

    public java.lang.Object acquire()
    {
        java.lang.Throwable $r3;
        androidx.core.util.Pools$SynchronizedPool r0;
        java.lang.Object $r1, $r2;

        r0 := @this;

        $r1 = r0.mLock;

        entermonitor $r1;

     label1:
        $r2 = specialinvoke r0.acquire();

        exitmonitor $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean release(java.lang.Object)
    {
        java.lang.Throwable $r3;
        androidx.core.util.Pools$SynchronizedPool r0;
        java.lang.Object r1, $r2;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.mLock;

        entermonitor $r2;

     label1:
        $z0 = specialinvoke r0.release(r1);

        exitmonitor $r2;

     label2:
        return $z0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
