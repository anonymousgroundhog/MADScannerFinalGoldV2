public class androidx.appcompat.graphics.drawable.DrawerArrowDrawable extends android.graphics.drawable.Drawable
{
    public static final int ARROW_DIRECTION_END;
    public static final int ARROW_DIRECTION_LEFT;
    public static final int ARROW_DIRECTION_RIGHT;
    public static final int ARROW_DIRECTION_START;
    private static final float ARROW_HEAD_ANGLE;
    private float mArrowHeadLength;
    private float mArrowShaftLength;
    private float mBarGap;
    private float mBarLength;
    private int mDirection;
    private float mMaxCutForBarSize;
    private final android.graphics.Paint mPaint;
    private final android.graphics.Path mPath;
    private float mProgress;
    private final int mSize;
    private boolean mSpin;
    private boolean mVerticalMirror;

    static void <clinit>()
    {
        float $f0;
        double $d0;

        $d0 = java.lang.Math.toRadians(45.0);

        $f0 = (float) $d0;

        androidx.appcompat.graphics.drawable.DrawerArrowDrawable.ARROW_HEAD_ANGLE = $f0;

        return;
    }

    public void <init>(android.content.Context)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        android.content.Context $r1;
        android.graphics.Path $r3;
        android.graphics.Paint$Join $r5;
        android.content.res.TypedArray $r9;
        android.graphics.Paint$Style $r4;
        android.graphics.Paint$Cap $r6;
        int[] $r8;
        int $i0, $i1;
        float $f0;
        android.graphics.Paint r2;
        android.content.res.Resources$Theme $r7;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        r2 = new android.graphics.Paint;

        specialinvoke r2.<init>();

        r0.mPaint = r2;

        $r3 = new android.graphics.Path;

        specialinvoke $r3.<init>();

        r0.mPath = $r3;

        r0.mVerticalMirror = 0;

        r0.mDirection = 2;

        $r4 = android.graphics.Paint$Style.STROKE;

        virtualinvoke r2.setStyle($r4);

        $r5 = android.graphics.Paint$Join.MITER;

        virtualinvoke r2.setStrokeJoin($r5);

        $r6 = android.graphics.Paint$Cap.BUTT;

        virtualinvoke r2.setStrokeCap($r6);

        virtualinvoke r2.setAntiAlias(1);

        $r7 = virtualinvoke $r1.getTheme();

        $r8 = androidx.appcompat.R$styleable.DrawerArrowToggle;

        $i1 = androidx.appcompat.R$attr.drawerArrowStyle;

        $i0 = androidx.appcompat.R$style.Base_Widget_AppCompat_DrawerArrowToggle;

        $r9 = virtualinvoke $r7.obtainStyledAttributes(null, $r8, $i1, $i0);

        $i0 = androidx.appcompat.R$styleable.DrawerArrowToggle_color;

        $i0 = virtualinvoke $r9.getColor($i0, 0);

        virtualinvoke r0.setColor($i0);

        $i0 = androidx.appcompat.R$styleable.DrawerArrowToggle_thickness;

        $f0 = virtualinvoke $r9.getDimension($i0, 0.0F);

        virtualinvoke r0.setBarThickness($f0);

        $i0 = androidx.appcompat.R$styleable.DrawerArrowToggle_spinBars;

        $z0 = virtualinvoke $r9.getBoolean($i0, 1);

        virtualinvoke r0.setSpinEnabled($z0);

        $i0 = androidx.appcompat.R$styleable.DrawerArrowToggle_gapBetweenBars;

        $f0 = virtualinvoke $r9.getDimension($i0, 0.0F);

        $i0 = java.lang.Math.round($f0);

        $f0 = (float) $i0;

        virtualinvoke r0.setGapSize($f0);

        $i0 = androidx.appcompat.R$styleable.DrawerArrowToggle_drawableSize;

        $i0 = virtualinvoke $r9.getDimensionPixelSize($i0, 0);

        r0.mSize = $i0;

        $i0 = androidx.appcompat.R$styleable.DrawerArrowToggle_barLength;

        $f0 = virtualinvoke $r9.getDimension($i0, 0.0F);

        $i0 = java.lang.Math.round($f0);

        $f0 = (float) $i0;

        r0.mBarLength = $f0;

        $i0 = androidx.appcompat.R$styleable.DrawerArrowToggle_arrowHeadLength;

        $f0 = virtualinvoke $r9.getDimension($i0, 0.0F);

        $i0 = java.lang.Math.round($f0);

        $f0 = (float) $i0;

        r0.mArrowHeadLength = $f0;

        $i0 = androidx.appcompat.R$styleable.DrawerArrowToggle_arrowShaftLength;

        $f0 = virtualinvoke $r9.getDimension($i0, 0.0F);

        r0.mArrowShaftLength = $f0;

        virtualinvoke $r9.recycle();

        return;
    }

    private static float lerp(float, float, float)
    {
        float $f0, $f1, $f2;

        $f0 := @parameter0;

        $f1 := @parameter1;

        $f2 := @parameter2;

        $f1 = $f1 - $f0;

        $f1 = $f1 * $f2;

        $f0 = $f1 + $f0;

        return $f0;
    }

    public void draw(android.graphics.Canvas)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        android.graphics.Rect $r2;
        android.graphics.Path r3;
        long $l1;
        byte $b2;
        int i0;
        android.graphics.Canvas $r1;
        boolean z0, $z1;
        double d0, d1;
        float f0, f1, f2, $f3, f4, $f5, $f6, $f7;
        android.graphics.Paint r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke r0.getBounds();

        i0 = r0.mDirection;

        z0 = 0;

        lookupswitch(i0)
        {
            case 0: goto label05;
            case 1: goto label04;
            case 2: goto label01;
            case 3: goto label02;
            default: goto label01;
        };

     label01:
        i0 = androidx.core.graphics.drawable.DrawableCompat.getLayoutDirection(r0);

        if i0 != 1 goto label06;

        z0 = 1;

        goto label06;

     label02:
        i0 = androidx.core.graphics.drawable.DrawableCompat.getLayoutDirection(r0);

        if i0 != 0 goto label03;

        z0 = 1;

     label03:
        goto label06;

     label04:
        z0 = 1;

        goto label06;

     label05:
        z0 = 0;

        goto label06;

     label06:
        f0 = r0.mArrowHeadLength;

        f0 = f0 * f0;

        f0 = f0 * 2.0F;

        d0 = (double) f0;

        d0 = java.lang.Math.sqrt(d0);

        f0 = (float) d0;

        f1 = r0.mBarLength;

        f2 = r0.mProgress;

        $f3 = androidx.appcompat.graphics.drawable.DrawerArrowDrawable.lerp(f1, f0, f2);

        f0 = r0.mBarLength;

        f1 = r0.mArrowShaftLength;

        f2 = r0.mProgress;

        f1 = androidx.appcompat.graphics.drawable.DrawerArrowDrawable.lerp(f0, f1, f2);

        f0 = r0.mMaxCutForBarSize;

        f2 = r0.mProgress;

        f0 = androidx.appcompat.graphics.drawable.DrawerArrowDrawable.lerp(0.0F, f0, f2);

        i0 = java.lang.Math.round(f0);

        f2 = (float) i0;

        f0 = androidx.appcompat.graphics.drawable.DrawerArrowDrawable.ARROW_HEAD_ANGLE;

        f4 = r0.mProgress;

        $f5 = androidx.appcompat.graphics.drawable.DrawerArrowDrawable.lerp(0.0F, f0, f4);

        if z0 == 0 goto label07;

        f0 = 0.0F;

        goto label08;

     label07:
        f0 = -180.0F;

     label08:
        if z0 == 0 goto label09;

        f4 = 180.0F;

        goto label10;

     label09:
        f4 = 0.0F;

     label10:
        $f6 = r0.mProgress;

        f0 = androidx.appcompat.graphics.drawable.DrawerArrowDrawable.lerp(f0, f4, $f6);

        d0 = (double) $f3;

        d1 = (double) $f5;

        d1 = java.lang.Math.cos(d1);

        java.lang.Double.isNaN(d0);

        d0 = d0 * d1;

        $l1 = java.lang.Math.round(d0);

        f4 = (float) $l1;

        d0 = (double) $f3;

        d1 = (double) $f5;

        d1 = java.lang.Math.sin(d1);

        java.lang.Double.isNaN(d0);

        d0 = d0 * d1;

        $l1 = java.lang.Math.round(d0);

        $f3 = (float) $l1;

        r3 = r0.mPath;

        virtualinvoke r3.rewind();

        $f5 = r0.mBarGap;

        r4 = r0.mPaint;

        $f6 = virtualinvoke r4.getStrokeWidth();

        $f5 = $f5 + $f6;

        $f6 = r0.mMaxCutForBarSize;

        $f6 = neg $f6;

        $f7 = r0.mProgress;

        $f5 = androidx.appcompat.graphics.drawable.DrawerArrowDrawable.lerp($f5, $f6, $f7);

        $f6 = neg f1;

        $f6 = $f6 / 2.0F;

        r3 = r0.mPath;

        $f7 = $f6 + f2;

        virtualinvoke r3.moveTo($f7, 0.0F);

        r3 = r0.mPath;

        f2 = f2 * 2.0F;

        f1 = f1 - f2;

        virtualinvoke r3.rLineTo(f1, 0.0F);

        r3 = r0.mPath;

        virtualinvoke r3.moveTo($f6, $f5);

        r3 = r0.mPath;

        virtualinvoke r3.rLineTo(f4, $f3);

        r3 = r0.mPath;

        f1 = neg $f5;

        virtualinvoke r3.moveTo($f6, f1);

        r3 = r0.mPath;

        f1 = neg $f3;

        virtualinvoke r3.rLineTo(f4, f1);

        r3 = r0.mPath;

        virtualinvoke r3.close();

        virtualinvoke $r1.save();

        r4 = r0.mPaint;

        f1 = virtualinvoke r4.getStrokeWidth();

        i0 = virtualinvoke $r2.height();

        f2 = (float) i0;

        f4 = 3.0F * f1;

        f4 = f2 - f4;

        f2 = r0.mBarGap;

        $f3 = 2.0F * f2;

        f4 = f4 - $f3;

        i0 = (int) f4;

        i0 = i0 / 4;

        i0 = i0 * 2;

        f4 = (float) i0;

        f1 = 1.5F * f1;

        f1 = f1 + f2;

        f1 = f4 + f1;

        i0 = virtualinvoke $r2.centerX();

        f2 = (float) i0;

        virtualinvoke $r1.translate(f2, f1);

        $z1 = r0.mSpin;

        if $z1 == 0 goto label13;

        $z1 = r0.mVerticalMirror;

        z0 = $z1 ^ z0;

        if z0 == 0 goto label11;

        $b2 = -1;

        goto label12;

     label11:
        $b2 = 1;

     label12:
        f1 = (float) $b2;

        f0 = f1 * f0;

        virtualinvoke $r1.rotate(f0);

        goto label14;

     label13:
        if z0 == 0 goto label14;

        virtualinvoke $r1.rotate(180.0F);

     label14:
        r3 = r0.mPath;

        r4 = r0.mPaint;

        virtualinvoke $r1.drawPath(r3, r4);

        virtualinvoke $r1.restore();

        return;
    }

    public float getArrowHeadLength()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        float f0;

        r0 := @this;

        f0 = r0.mArrowHeadLength;

        return f0;
    }

    public float getArrowShaftLength()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        float f0;

        r0 := @this;

        f0 = r0.mArrowShaftLength;

        return f0;
    }

    public float getBarLength()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        float f0;

        r0 := @this;

        f0 = r0.mBarLength;

        return f0;
    }

    public float getBarThickness()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        float $f0;
        android.graphics.Paint $r1;

        r0 := @this;

        $r1 = r0.mPaint;

        $f0 = virtualinvoke $r1.getStrokeWidth();

        return $f0;
    }

    public int getColor()
    {
        int $i0;
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        android.graphics.Paint $r1;

        r0 := @this;

        $r1 = r0.mPaint;

        $i0 = virtualinvoke $r1.getColor();

        return $i0;
    }

    public int getDirection()
    {
        int i0;
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;

        r0 := @this;

        i0 = r0.mDirection;

        return i0;
    }

    public float getGapSize()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        float f0;

        r0 := @this;

        f0 = r0.mBarGap;

        return f0;
    }

    public int getIntrinsicHeight()
    {
        int i0;
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;

        r0 := @this;

        i0 = r0.mSize;

        return i0;
    }

    public int getIntrinsicWidth()
    {
        int i0;
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;

        r0 := @this;

        i0 = r0.mSize;

        return i0;
    }

    public int getOpacity()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;

        r0 := @this;

        return -3;
    }

    public final android.graphics.Paint getPaint()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        android.graphics.Paint r1;

        r0 := @this;

        r1 = r0.mPaint;

        return r1;
    }

    public float getProgress()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        float f0;

        r0 := @this;

        f0 = r0.mProgress;

        return f0;
    }

    public boolean isSpinEnabled()
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mSpin;

        return z0;
    }

    public void setAlpha(int)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        int $i0, $i1;
        android.graphics.Paint $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mPaint;

        $i1 = virtualinvoke $r1.getAlpha();

        if $i0 == $i1 goto label1;

        $r1 = r0.mPaint;

        virtualinvoke $r1.setAlpha($i0);

        virtualinvoke r0.invalidateSelf();

     label1:
        return;
    }

    public void setArrowHeadLength(float)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        byte $b0;
        float $f0, $f1;

        r0 := @this;

        $f0 := @parameter0;

        $f1 = r0.mArrowHeadLength;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        r0.mArrowHeadLength = $f0;

        virtualinvoke r0.invalidateSelf();

     label1:
        return;
    }

    public void setArrowShaftLength(float)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        byte $b0;
        float $f0, $f1;

        r0 := @this;

        $f0 := @parameter0;

        $f1 = r0.mArrowShaftLength;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        r0.mArrowShaftLength = $f0;

        virtualinvoke r0.invalidateSelf();

     label1:
        return;
    }

    public void setBarLength(float)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        byte $b0;
        float $f0, $f1;

        r0 := @this;

        $f0 := @parameter0;

        $f1 = r0.mBarLength;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        r0.mBarLength = $f0;

        virtualinvoke r0.invalidateSelf();

     label1:
        return;
    }

    public void setBarThickness(float)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        byte $b0;
        float $f0, $f1;
        android.graphics.Paint $r1;
        double $d0, $d1;

        r0 := @this;

        $f0 := @parameter0;

        $r1 = r0.mPaint;

        $f1 = virtualinvoke $r1.getStrokeWidth();

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        $r1 = r0.mPaint;

        virtualinvoke $r1.setStrokeWidth($f0);

        $f0 = $f0 / 2.0F;

        $d0 = (double) $f0;

        $f0 = androidx.appcompat.graphics.drawable.DrawerArrowDrawable.ARROW_HEAD_ANGLE;

        $d1 = (double) $f0;

        $d1 = java.lang.Math.cos($d1);

        java.lang.Double.isNaN($d0);

        $d0 = $d0 * $d1;

        $f0 = (float) $d0;

        r0.mMaxCutForBarSize = $f0;

        virtualinvoke r0.invalidateSelf();

     label1:
        return;
    }

    public void setColor(int)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        int $i0, $i1;
        android.graphics.Paint $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mPaint;

        $i1 = virtualinvoke $r1.getColor();

        if $i0 == $i1 goto label1;

        $r1 = r0.mPaint;

        virtualinvoke $r1.setColor($i0);

        virtualinvoke r0.invalidateSelf();

     label1:
        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.ColorFilter $r1;
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        android.graphics.Paint $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mPaint;

        virtualinvoke $r2.setColorFilter($r1);

        virtualinvoke r0.invalidateSelf();

        return;
    }

    public void setDirection(int)
    {
        int $i0, $i1;
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 = r0.mDirection;

        if $i0 == $i1 goto label1;

        r0.mDirection = $i0;

        virtualinvoke r0.invalidateSelf();

     label1:
        return;
    }

    public void setGapSize(float)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        byte $b0;
        float $f0, $f1;

        r0 := @this;

        $f0 := @parameter0;

        $f1 = r0.mBarGap;

        $b0 = $f0 cmpl $f1;

        if $b0 == 0 goto label1;

        r0.mBarGap = $f0;

        virtualinvoke r0.invalidateSelf();

     label1:
        return;
    }

    public void setProgress(float)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        byte $b0;
        float $f0, $f1;

        r0 := @this;

        $f0 := @parameter0;

        $f1 = r0.mProgress;

        $b0 = $f1 cmpl $f0;

        if $b0 == 0 goto label1;

        r0.mProgress = $f0;

        virtualinvoke r0.invalidateSelf();

     label1:
        return;
    }

    public void setSpinEnabled(boolean)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 := @parameter0;

        $z1 = r0.mSpin;

        if $z1 == $z0 goto label1;

        r0.mSpin = $z0;

        virtualinvoke r0.invalidateSelf();

     label1:
        return;
    }

    public void setVerticalMirror(boolean)
    {
        androidx.appcompat.graphics.drawable.DrawerArrowDrawable r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 := @parameter0;

        $z1 = r0.mVerticalMirror;

        if $z1 == $z0 goto label1;

        r0.mVerticalMirror = $z0;

        virtualinvoke r0.invalidateSelf();

     label1:
        return;
    }
}
