public final class androidx.savedstate.SavedStateRegistry extends java.lang.Object
{
    private static final java.lang.String SAVED_COMPONENTS_KEY;
    boolean mAllowingSavingState;
    private androidx.arch.core.internal.SafeIterableMap mComponents;
    private androidx.savedstate.Recreator$SavedStateProvider mRecreatorProvider;
    private boolean mRestored;
    private android.os.Bundle mRestoredState;

    void <init>()
    {
        androidx.arch.core.internal.SafeIterableMap $r1;
        androidx.savedstate.SavedStateRegistry r0;

        r0 := @this;

        specialinvoke r0.<init>();

        $r1 = new androidx.arch.core.internal.SafeIterableMap;

        specialinvoke $r1.<init>();

        r0.mComponents = $r1;

        r0.mAllowingSavingState = 1;

        return;
    }

    public android.os.Bundle consumeRestoredStateForKey(java.lang.String)
    {
        java.lang.IllegalStateException r4;
        android.os.Bundle r2, $r3;
        java.lang.String $r1;
        androidx.savedstate.SavedStateRegistry r0;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        z0 = r0.mRestored;

        if z0 == 0 goto label2;

        r2 = r0.mRestoredState;

        if r2 == null goto label1;

        r2 = virtualinvoke r2.getBundle($r1);

        $r3 = r0.mRestoredState;

        virtualinvoke $r3.remove($r1);

        $r3 = r0.mRestoredState;

        z0 = virtualinvoke $r3.isEmpty();

        if z0 == 0 goto label3;

        r0.mRestoredState = null;

        return r2;

     label1:
        return null;

     label2:
        r4 = new java.lang.IllegalStateException;

        specialinvoke r4.<init>("You can consumeRestoredStateForKey only after super.onCreate of corresponding component");

        throw r4;

     label3:
        return r2;
    }

    public boolean isRestored()
    {
        androidx.savedstate.SavedStateRegistry r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mRestored;

        return z0;
    }

    void performRestore(androidx.lifecycle.Lifecycle, android.os.Bundle)
    {
        androidx.lifecycle.Lifecycle $r1;
        java.lang.IllegalStateException $r4;
        android.os.Bundle $r2;
        androidx.savedstate.SavedStateRegistry$1 $r3;
        androidx.savedstate.SavedStateRegistry r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $z0 = r0.mRestored;

        if $z0 != 0 goto label2;

        if $r2 == null goto label1;

        $r2 = virtualinvoke $r2.getBundle("androidx.lifecycle.BundlableSavedStateRegistry.key");

        r0.mRestoredState = $r2;

     label1:
        $r3 = new androidx.savedstate.SavedStateRegistry$1;

        specialinvoke $r3.<init>(r0);

        virtualinvoke $r1.addObserver($r3);

        r0.mRestored = 1;

        return;

     label2:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<init>("SavedStateRegistry was already restored.");

        throw $r4;
    }

    void performSave(android.os.Bundle)
    {
        java.util.Map$Entry r7;
        android.os.Bundle $r1, r2, r3;
        androidx.arch.core.internal.SafeIterableMap r4;
        androidx.savedstate.SavedStateRegistry$SavedStateProvider $r9;
        androidx.savedstate.SavedStateRegistry r0;
        androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions $r5;
        java.lang.Object $r6;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        r2 = new android.os.Bundle;

        specialinvoke r2.<init>();

        r3 = r0.mRestoredState;

        if r3 == null goto label1;

        virtualinvoke r2.putAll(r3);

     label1:
        r4 = r0.mComponents;

        $r5 = virtualinvoke r4.iteratorWithAdditions();

     label2:
        $z0 = interfaceinvoke $r5.hasNext();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.next();

        r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke r7.getKey();

        $r8 = (java.lang.String) $r6;

        $r6 = interfaceinvoke r7.getValue();

        $r9 = (androidx.savedstate.SavedStateRegistry$SavedStateProvider) $r6;

        r3 = interfaceinvoke $r9.saveState();

        virtualinvoke r2.putBundle($r8, r3);

        goto label2;

     label3:
        virtualinvoke $r1.putBundle("androidx.lifecycle.BundlableSavedStateRegistry.key", r2);

        return;
    }

    public void registerSavedStateProvider(java.lang.String, androidx.savedstate.SavedStateRegistry$SavedStateProvider)
    {
        androidx.arch.core.internal.SafeIterableMap r5;
        java.lang.Object $r4;
        java.lang.String $r1;
        androidx.savedstate.SavedStateRegistry$SavedStateProvider $r2;
        java.lang.IllegalArgumentException $r3;
        androidx.savedstate.SavedStateRegistry r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        r5 = r0.mComponents;

        $r4 = virtualinvoke r5.putIfAbsent($r1, $r2);

        $r2 = (androidx.savedstate.SavedStateRegistry$SavedStateProvider) $r4;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<init>("SavedStateProvider with the given key is already registered");

        throw $r3;
    }

    public void runOnNextRecreation(java.lang.Class)
    {
        java.lang.IllegalStateException r8;
        java.lang.NoSuchMethodException r5;
        java.lang.Class[] r3;
        java.lang.IllegalArgumentException $r6;
        androidx.savedstate.SavedStateRegistry r0;
        androidx.savedstate.Recreator$SavedStateProvider r2;
        java.lang.Class r1;
        java.lang.StringBuilder $r7;
        java.lang.String $r4;
        boolean z0;

        r0 := @this;

        r1 := @parameter0;

        z0 = r0.mAllowingSavingState;

        if z0 == 0 goto label5;

        r2 = r0.mRecreatorProvider;

        if r2 != null goto label1;

        r2 = new androidx.savedstate.Recreator$SavedStateProvider;

        specialinvoke r2.<init>(r0);

        r0.mRecreatorProvider = r2;

     label1:
        r3 = newarray (java.lang.Class)[0];

     label2:
        virtualinvoke r1.getDeclaredConstructor(r3);

     label3:
        r2 = r0.mRecreatorProvider;

        $r4 = virtualinvoke r1.getName();

        virtualinvoke r2.add($r4);

        return;

     label4:
        r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<init>();

        $r7 = virtualinvoke $r7.append("Class");

        $r4 = virtualinvoke r1.getSimpleName();

        $r7 = virtualinvoke $r7.append($r4);

        $r7 = virtualinvoke $r7.append(" must have default constructor in order to be automatically recreated");

        $r4 = virtualinvoke $r7.toString();

        specialinvoke $r6.<init>($r4, r5);

        throw $r6;

     label5:
        r8 = new java.lang.IllegalStateException;

        specialinvoke r8.<init>("Can not perform this action after onSaveInstanceState");

        throw r8;

        catch java.lang.NoSuchMethodException from label2 to label3 with label4;
    }

    public void unregisterSavedStateProvider(java.lang.String)
    {
        java.lang.String $r1;
        androidx.arch.core.internal.SafeIterableMap $r2;
        androidx.savedstate.SavedStateRegistry r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mComponents;

        virtualinvoke $r2.remove($r1);

        return;
    }
}
