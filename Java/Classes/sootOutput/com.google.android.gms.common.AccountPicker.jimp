public final class com.google.android.gms.common.AccountPicker extends java.lang.Object
{

    private void <init>()
    {
        com.google.android.gms.common.AccountPicker r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static android.content.Intent newChooseAccountIntent(android.accounts.Account, java.util.ArrayList, java.lang.String[], boolean, java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle)
    {
        android.os.Bundle $r4;
        android.accounts.Account $r6;
        java.lang.String[] $r0, $r3;
        android.content.Intent $r5;
        java.util.ArrayList $r7;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r6 := @parameter0;

        $r7 := @parameter1;

        $r0 := @parameter2;

        $z0 := @parameter3;

        $r1 := @parameter4;

        $r2 := @parameter5;

        $r3 := @parameter6;

        $r4 := @parameter7;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<init>();

        com.google.android.gms.common.internal.Preconditions.checkArgument(1, "We only support hostedDomain filter for account chip styled account picker");

        virtualinvoke $r5.setAction("com.google.android.gms.common.account.CHOOSE_ACCOUNT");

        virtualinvoke $r5.setPackage("com.google.android.gms");

        virtualinvoke $r5.putExtra("allowableAccounts", $r7);

        virtualinvoke $r5.putExtra("allowableAccountTypes", $r0);

        virtualinvoke $r5.putExtra("addAccountOptions", $r4);

        virtualinvoke $r5.putExtra("selectedAccount", $r6);

        virtualinvoke $r5.putExtra("alwaysPromptForAccount", $z0);

        virtualinvoke $r5.putExtra("descriptionTextOverride", $r1);

        virtualinvoke $r5.putExtra("authTokenType", $r2);

        virtualinvoke $r5.putExtra("addAccountRequiredFeatures", $r3);

        virtualinvoke $r5.putExtra("setGmsCoreAccount", 0);

        virtualinvoke $r5.putExtra("overrideTheme", 0);

        virtualinvoke $r5.putExtra("overrideCustomTheme", 0);

        virtualinvoke $r5.putExtra("hostedDomainFilter", null);

        return $r5;
    }

    public static android.content.Intent newChooseAccountIntent(com.google.android.gms.common.AccountPicker$AccountChooserOptions)
    {
        java.lang.Object[] $r4;
        android.os.Bundle $r5;
        android.accounts.Account $r6;
        com.google.android.gms.common.AccountPicker$AccountChooserOptions $r1;
        android.content.Intent $r0;
        java.lang.String[] $r3;
        java.util.ArrayList $r2;
        java.lang.String $r7;
        boolean $z0;

        $r1 := @parameter0;

        $r0 = new android.content.Intent;

        specialinvoke $r0.<init>();

        com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzD($r1);

        com.google.android.gms.common.AccountPicker$AccountChooserOptions.zze($r1);

        com.google.android.gms.common.internal.Preconditions.checkArgument(1, "We only support hostedDomain filter for account chip styled account picker");

        com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzd($r1);

        com.google.android.gms.common.internal.Preconditions.checkArgument(1, "Consent is only valid for account chip styled account picker");

        com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzB($r1);

        com.google.android.gms.common.internal.Preconditions.checkArgument(1, "Making the selected account non-clickable is only supported for the theme THEME_DAY_NIGHT_GOOGLE_MATERIAL2");

        com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzD($r1);

        virtualinvoke $r0.setAction("com.google.android.gms.common.account.CHOOSE_ACCOUNT");

        virtualinvoke $r0.setPackage("com.google.android.gms");

        $r2 = com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzi($r1);

        virtualinvoke $r0.putExtra("allowableAccounts", $r2);

        $r2 = com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzh($r1);

        if $r2 == null goto label1;

        $r2 = com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzh($r1);

        $r3 = newarray (java.lang.String)[0];

        $r4 = virtualinvoke $r2.toArray($r3);

        $r3 = (java.lang.String[]) $r4;

        virtualinvoke $r0.putExtra("allowableAccountTypes", $r3);

     label1:
        $r5 = com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzc($r1);

        virtualinvoke $r0.putExtra("addAccountOptions", $r5);

        $r6 = com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzb($r1);

        virtualinvoke $r0.putExtra("selectedAccount", $r6);

        com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzB($r1);

        virtualinvoke $r0.putExtra("selectedAccountIsNotClickable", 0);

        $z0 = com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzy($r1);

        virtualinvoke $r0.putExtra("alwaysPromptForAccount", $z0);

        $r7 = com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzg($r1);

        virtualinvoke $r0.putExtra("descriptionTextOverride", $r7);

        com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzC($r1);

        virtualinvoke $r0.putExtra("setGmsCoreAccount", 0);

        com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzf($r1);

        virtualinvoke $r0.putExtra("realClientPackage", null);

        com.google.android.gms.common.AccountPicker$AccountChooserOptions.zza($r1);

        virtualinvoke $r0.putExtra("overrideTheme", 0);

        com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzD($r1);

        virtualinvoke $r0.putExtra("overrideCustomTheme", 0);

        com.google.android.gms.common.AccountPicker$AccountChooserOptions.zze($r1);

        virtualinvoke $r0.putExtra("hostedDomainFilter", null);

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<init>();

        com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzD($r1);

        com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzd($r1);

        com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzz($r1);

        com.google.android.gms.common.AccountPicker$AccountChooserOptions.zzA($r1);

        $z0 = virtualinvoke $r5.isEmpty();

        if $z0 != 0 goto label2;

        virtualinvoke $r0.putExtra("first_party_options_bundle", $r5);

     label2:
        return $r0;
    }
}
