public class com.google.android.ump.ConsentDebugSettings$Builder extends java.lang.Object
{
    private final java.util.List zza;
    private final android.content.Context zzb;
    private int zzc;
    private boolean zzd;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        com.google.android.ump.ConsentDebugSettings$Builder r0;
        java.util.ArrayList $r2;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<init>();

        r0.zza = $r2;

        r0.zzc = 0;

        $r1 = virtualinvoke $r1.getApplicationContext();

        r0.zzb = $r1;

        return;
    }

    static int zza(com.google.android.ump.ConsentDebugSettings$Builder)
    {
        int i0;
        com.google.android.ump.ConsentDebugSettings$Builder $r0;

        $r0 := @parameter0;

        i0 = $r0.zzc;

        return i0;
    }

    public com.google.android.ump.ConsentDebugSettings$Builder addTestDeviceHashedId(java.lang.String)
    {
        java.util.List $r2;
        java.lang.String $r1;
        com.google.android.ump.ConsentDebugSettings$Builder r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.zza;

        interfaceinvoke $r2.add($r1);

        return r0;
    }

    public com.google.android.ump.ConsentDebugSettings build()
    {
        com.google.android.ump.ConsentDebugSettings $r4;
        android.content.Context $r1;
        java.util.List $r2;
        com.google.android.ump.ConsentDebugSettings$Builder r0;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @this;

        $r1 = r0.zzb;

        $r2 = r0.zza;

        $z0 = com.google.android.gms.internal.consent_sdk.zzbx.zzb();

        $z1 = 1;

        if $z0 != 0 goto label3;

        $r3 = com.google.android.gms.internal.consent_sdk.zzbx.zza($r1);

        $z0 = interfaceinvoke $r2.contains($r3);

        if $z0 == 0 goto label1;

        goto label3;

     label1:
        $z0 = r0.zzd;

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $z1 = 0;

        goto label3;

     label3:
        $r4 = new com.google.android.ump.ConsentDebugSettings;

        specialinvoke $r4.<init>($z1, r0, null);

        return $r4;
    }

    public com.google.android.ump.ConsentDebugSettings$Builder setDebugGeography(int)
    {
        int $i0;
        com.google.android.ump.ConsentDebugSettings$Builder r0;

        r0 := @this;

        $i0 := @parameter0;

        r0.zzc = $i0;

        return r0;
    }

    public com.google.android.ump.ConsentDebugSettings$Builder setForceTesting(boolean)
    {
        com.google.android.ump.ConsentDebugSettings$Builder r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        r0.zzd = $z0;

        return r0;
    }
}
