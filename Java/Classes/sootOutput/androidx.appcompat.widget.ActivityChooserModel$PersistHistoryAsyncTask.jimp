final class androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask extends android.os.AsyncTask
{
    final androidx.appcompat.widget.ActivityChooserModel this$0;

    void <init>(androidx.appcompat.widget.ActivityChooserModel)
    {
        androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask r0;
        androidx.appcompat.widget.ActivityChooserModel $r1;

        r0 := @this;

        $r1 := @parameter0;

        r0.this$0 = $r1;

        specialinvoke r0.<init>();

        return;
    }

    public volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        java.lang.Void $r1;
        androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask r0;
        java.lang.Object[] $r2;

        r0 := @this;

        $r2 := @parameter0;

        $r1 = virtualinvoke r0.doInBackground($r2);

        return $r1;
    }

    public transient java.lang.Void doInBackground(java.lang.Object[])
    {
        java.lang.Throwable r16, r19;
        android.content.Context r6;
        java.lang.IllegalStateException r14;
        java.lang.Object[] $r1;
        long $l2;
        org.xmlpull.v1.XmlSerializer $r8;
        androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask r0;
        int $i0, i1;
        java.lang.Boolean $r9;
        java.lang.String r4, $r12;
        android.content.ComponentName $r11;
        java.io.FileOutputStream $r7;
        java.io.IOException r13, r18, r20;
        java.lang.IllegalArgumentException r15;
        java.io.FileNotFoundException r21;
        java.util.List r3;
        float f0;
        java.lang.Object r2;
        java.lang.StringBuilder $r17;
        androidx.appcompat.widget.ActivityChooserModel r5;
        androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord r10;

        r0 := @this;

        $r1 := @parameter0;

        r2 = $r1[0];

        r3 = (java.util.List) r2;

        r2 = $r1[1];

        r4 = (java.lang.String) r2;

        r5 = r0.this$0;

        r6 = r5.mContext;

     label01:
        $r7 = virtualinvoke r6.openFileOutput(r4, 0);

     label02:
        $r8 = android.util.Xml.newSerializer();

     label03:
        interfaceinvoke $r8.setOutput($r7, null);

        $r9 = java.lang.Boolean.valueOf(1);

        interfaceinvoke $r8.startDocument("UTF-8", $r9);

        interfaceinvoke $r8.startTag(null, "historical-records");

        $i0 = interfaceinvoke r3.size();

     label04:
        i1 = 0;

     label05:
        if i1 >= $i0 goto label16;

     label06:
        r2 = interfaceinvoke r3.remove(0);

     label07:
        r10 = (androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord) r2;

     label08:
        interfaceinvoke $r8.startTag(null, "historical-record");

     label09:
        $r11 = r10.activity;

     label10:
        $r12 = virtualinvoke $r11.flattenToString();

        interfaceinvoke $r8.attribute(null, "activity", $r12);

     label11:
        $l2 = r10.time;

     label12:
        $r12 = java.lang.String.valueOf($l2);

        interfaceinvoke $r8.attribute(null, "time", $r12);

     label13:
        f0 = r10.weight;

     label14:
        $r12 = java.lang.String.valueOf(f0);

        interfaceinvoke $r8.attribute(null, "weight", $r12);

        interfaceinvoke $r8.endTag(null, "historical-record");

     label15:
        i1 = i1 + 1;

        goto label05;

     label16:
        interfaceinvoke $r8.endTag(null, "historical-records");

        interfaceinvoke $r8.endDocument();

     label17:
        r5 = r0.this$0;

        r5.mCanReadHistoricalData = 1;

        if $r7 == null goto label40;

     label18:
        virtualinvoke $r7.close();

     label19:
        goto label38;

     label20:
        r13 := @caughtexception;

        goto label25;

     label21:
        r14 := @caughtexception;

        goto label30;

     label22:
        r15 := @caughtexception;

        goto label35;

     label23:
        r16 := @caughtexception;

        goto label42;

     label24:
        r13 := @caughtexception;

     label25:
        $r12 = androidx.appcompat.widget.ActivityChooserModel.LOG_TAG;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<init>();

        $r17 = virtualinvoke $r17.append("Error writing historical record file: ");

        r5 = r0.this$0;

        r4 = r5.mHistoryFileName;

        $r17 = virtualinvoke $r17.append(r4);

        r4 = virtualinvoke $r17.toString();

        android.util.Log.e($r12, r4, r13);

     label26:
        r5 = r0.this$0;

        r5.mCanReadHistoricalData = 1;

        if $r7 == null goto label48;

     label27:
        virtualinvoke $r7.close();

     label28:
        goto label38;

     label29:
        r14 := @caughtexception;

     label30:
        $r12 = androidx.appcompat.widget.ActivityChooserModel.LOG_TAG;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<init>();

        $r17 = virtualinvoke $r17.append("Error writing historical record file: ");

        r5 = r0.this$0;

        r4 = r5.mHistoryFileName;

        $r17 = virtualinvoke $r17.append(r4);

        r4 = virtualinvoke $r17.toString();

        android.util.Log.e($r12, r4, r14);

     label31:
        r5 = r0.this$0;

        r5.mCanReadHistoricalData = 1;

        if $r7 == null goto label48;

     label32:
        virtualinvoke $r7.close();

     label33:
        goto label38;

     label34:
        r15 := @caughtexception;

     label35:
        $r12 = androidx.appcompat.widget.ActivityChooserModel.LOG_TAG;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<init>();

        $r17 = virtualinvoke $r17.append("Error writing historical record file: ");

        r5 = r0.this$0;

        r4 = r5.mHistoryFileName;

        $r17 = virtualinvoke $r17.append(r4);

        r4 = virtualinvoke $r17.toString();

        android.util.Log.e($r12, r4, r15);

     label36:
        r5 = r0.this$0;

        r5.mCanReadHistoricalData = 1;

        if $r7 == null goto label48;

     label37:
        virtualinvoke $r7.close();

     label38:
        return null;

     label39:
        r18 := @caughtexception;

        goto label38;

     label40:
        return null;

     label41:
        r19 := @caughtexception;

        r16 = r19;

     label42:
        r5 = r0.this$0;

        r5.mCanReadHistoricalData = 1;

        if $r7 == null goto label46;

     label43:
        virtualinvoke $r7.close();

     label44:
        goto label46;

     label45:
        r20 := @caughtexception;

     label46:
        throw r16;

     label47:
        r21 := @caughtexception;

        $r12 = androidx.appcompat.widget.ActivityChooserModel.LOG_TAG;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<init>();

        $r17 = virtualinvoke $r17.append("Error writing historical record file: ");

        $r17 = virtualinvoke $r17.append(r4);

        r4 = virtualinvoke $r17.toString();

        android.util.Log.e($r12, r4, r21);

     label48:
        return null;

        catch java.io.FileNotFoundException from label01 to label02 with label47;
        catch java.lang.IllegalArgumentException from label03 to label04 with label34;
        catch java.lang.IllegalArgumentException from label06 to label07 with label34;
        catch java.lang.IllegalArgumentException from label08 to label09 with label34;
        catch java.lang.IllegalArgumentException from label10 to label11 with label34;
        catch java.lang.IllegalStateException from label03 to label04 with label29;
        catch java.lang.IllegalStateException from label06 to label07 with label29;
        catch java.lang.IllegalStateException from label08 to label09 with label29;
        catch java.lang.IllegalStateException from label10 to label11 with label29;
        catch java.io.IOException from label03 to label04 with label24;
        catch java.io.IOException from label06 to label07 with label24;
        catch java.io.IOException from label08 to label09 with label24;
        catch java.io.IOException from label10 to label11 with label24;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label06 to label11 with label23;
        catch java.lang.IllegalArgumentException from label12 to label13 with label22;
        catch java.lang.IllegalArgumentException from label14 to label15 with label22;
        catch java.lang.IllegalArgumentException from label16 to label17 with label22;
        catch java.lang.IllegalStateException from label12 to label13 with label21;
        catch java.lang.IllegalStateException from label14 to label15 with label21;
        catch java.lang.IllegalStateException from label16 to label17 with label21;
        catch java.io.IOException from label12 to label13 with label20;
        catch java.io.IOException from label14 to label15 with label20;
        catch java.io.IOException from label16 to label17 with label20;
        catch java.lang.Throwable from label11 to label15 with label41;
        catch java.lang.Throwable from label16 to label17 with label41;
        catch java.io.IOException from label18 to label19 with label39;
        catch java.lang.Throwable from label25 to label26 with label41;
        catch java.io.IOException from label27 to label28 with label39;
        catch java.lang.Throwable from label30 to label31 with label41;
        catch java.io.IOException from label32 to label33 with label39;
        catch java.lang.Throwable from label35 to label36 with label41;
        catch java.io.IOException from label37 to label38 with label39;
        catch java.io.IOException from label43 to label44 with label45;
    }
}
