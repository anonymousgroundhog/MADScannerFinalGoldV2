class androidx.core.widget.TextViewCompat$OreoCallback extends java.lang.Object implements android.view.ActionMode$Callback
{
    private static final int MENU_ITEM_ORDER_PROCESS_TEXT_INTENT_ACTIONS_START;
    private final android.view.ActionMode$Callback mCallback;
    private boolean mCanUseMenuBuilderReferences;
    private boolean mInitializedMenuBuilderReferences;
    private java.lang.Class mMenuBuilderClass;
    private java.lang.reflect.Method mMenuBuilderRemoveItemAtMethod;
    private final android.widget.TextView mTextView;

    void <init>(android.view.ActionMode$Callback, android.widget.TextView)
    {
        androidx.core.widget.TextViewCompat$OreoCallback r0;
        android.widget.TextView $r2;
        android.view.ActionMode$Callback $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.<init>();

        r0.mCallback = $r1;

        r0.mTextView = $r2;

        r0.mInitializedMenuBuilderReferences = 0;

        return;
    }

    private android.content.Intent createProcessTextIntent()
    {
        androidx.core.widget.TextViewCompat$OreoCallback r0;
        android.content.Intent $r1;

        r0 := @this;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<init>();

        $r1 = virtualinvoke $r1.setAction("android.intent.action.PROCESS_TEXT");

        $r1 = virtualinvoke $r1.setType("text/plain");

        return $r1;
    }

    private android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo, android.widget.TextView)
    {
        android.content.Intent $r3;
        android.content.pm.ResolveInfo $r1;
        androidx.core.widget.TextViewCompat$OreoCallback r0;
        android.widget.TextView $r2;
        android.content.pm.ActivityInfo $r4;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = specialinvoke r0.createProcessTextIntent();

        $z0 = specialinvoke r0.isEditable($r2);

        $z0 = $z0 ^ 1;

        $r3 = virtualinvoke $r3.putExtra("android.intent.extra.PROCESS_TEXT_READONLY", $z0);

        $r4 = $r1.activityInfo;

        $r5 = $r4.packageName;

        $r4 = $r1.activityInfo;

        $r6 = $r4.name;

        $r3 = virtualinvoke $r3.setClassName($r5, $r6);

        return $r3;
    }

    private java.util.List getSupportedActivities(android.content.Context, android.content.pm.PackageManager)
    {
        android.content.Context $r1;
        java.util.Iterator $r6;
        android.content.pm.PackageManager $r2;
        android.content.Intent $r4;
        java.util.ArrayList r3;
        android.content.pm.ResolveInfo r8;
        androidx.core.widget.TextViewCompat$OreoCallback r0;
        java.util.List $r5;
        java.lang.Object $r7;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<init>();

        z0 = $r1 instanceof android.app.Activity;

        if z0 != 0 goto label1;

        return r3;

     label1:
        $r4 = specialinvoke r0.createProcessTextIntent();

        $r5 = virtualinvoke $r2.queryIntentActivities($r4, 0);

        $r6 = interfaceinvoke $r5.iterator();

     label2:
        z0 = interfaceinvoke $r6.hasNext();

        if z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.next();

        r8 = (android.content.pm.ResolveInfo) $r7;

        z0 = specialinvoke r0.isSupportedActivity(r8, $r1);

        if z0 == 0 goto label2;

        interfaceinvoke r3.add(r8);

        goto label2;

     label3:
        return r3;
    }

    private boolean isEditable(android.widget.TextView)
    {
        androidx.core.widget.TextViewCompat$OreoCallback r0;
        android.widget.TextView $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = $r1 instanceof android.text.Editable;

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r1.onCheckIsTextEditor();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r1.isEnabled();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isSupportedActivity(android.content.pm.ResolveInfo, android.content.Context)
    {
        android.content.Context $r2;
        android.content.pm.ResolveInfo $r1;
        androidx.core.widget.TextViewCompat$OreoCallback r0;
        android.content.pm.ActivityInfo $r4;
        int $i0;
        java.lang.String $r3, $r5;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = virtualinvoke $r2.getPackageName();

        $r4 = $r1.activityInfo;

        $r5 = $r4.packageName;

        $z0 = virtualinvoke $r3.equals($r5);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r4 = $r1.activityInfo;

        $z0 = $r4.exported;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r4 = $r1.activityInfo;

        $r3 = $r4.permission;

        if $r3 == null goto label4;

        $r4 = $r1.activityInfo;

        $r3 = $r4.permission;

        $i0 = virtualinvoke $r2.checkSelfPermission($r3);

        if $i0 != 0 goto label3;

        goto label4;

     label3:
        return 0;

     label4:
        return 1;
    }

    private void recomputeProcessTextMenuItems(android.view.Menu)
    {
        android.content.Context $r3;
        java.lang.Object[] $r15;
        android.content.pm.PackageManager $r4;
        java.lang.NoSuchMethodException r9, r23;
        android.content.Intent $r12;
        java.lang.Integer $r16;
        android.view.MenuItem $r11;
        androidx.core.widget.TextViewCompat$OreoCallback r0;
        android.view.Menu $r1;
        int $i0, $i1;
        java.lang.String $r13, $r14;
        java.lang.reflect.Method $r8;
        boolean z0;
        java.lang.IllegalAccessException r22;
        java.lang.CharSequence $r20;
        java.lang.Class[] r6;
        android.content.pm.ResolveInfo r19;
        java.lang.reflect.InvocationTargetException r21;
        java.util.List $r17;
        android.widget.TextView r2;
        java.lang.Class $r5, $r7;
        java.lang.ClassNotFoundException r10;
        java.lang.Object $r18;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mTextView;

        $r3 = virtualinvoke r2.getContext();

        $r4 = virtualinvoke $r3.getPackageManager();

        z0 = r0.mInitializedMenuBuilderReferences;

        if z0 != 0 goto label08;

        r0.mInitializedMenuBuilderReferences = 1;

     label01:
        $r5 = java.lang.Class.forName("com.android.internal.view.menu.MenuBuilder");

     label02:
        r0.mMenuBuilderClass = $r5;

        r6 = newarray (java.lang.Class)[1];

        $r7 = java.lang.Integer.TYPE;

        r6[0] = $r7;

     label03:
        $r8 = virtualinvoke $r5.getDeclaredMethod("removeItemAt", r6);

     label04:
        r0.mMenuBuilderRemoveItemAtMethod = $r8;

        r0.mCanUseMenuBuilderReferences = 1;

        goto label08;

     label05:
        r9 := @caughtexception;

        goto label07;

     label06:
        r10 := @caughtexception;

     label07:
        r0.mMenuBuilderClass = null;

        r0.mMenuBuilderRemoveItemAtMethod = null;

        r0.mCanUseMenuBuilderReferences = 0;

     label08:
        z0 = r0.mCanUseMenuBuilderReferences;

        if z0 == 0 goto label11;

        $r5 = r0.mMenuBuilderClass;

     label09:
        z0 = virtualinvoke $r5.isInstance($r1);

     label10:
        if z0 == 0 goto label11;

        $r8 = r0.mMenuBuilderRemoveItemAtMethod;

        goto label14;

     label11:
        $r5 = virtualinvoke $r1.getClass();

     label12:
        r6 = newarray (java.lang.Class)[1];

        $r7 = java.lang.Integer.TYPE;

        r6[0] = $r7;

     label13:
        $r8 = virtualinvoke $r5.getDeclaredMethod("removeItemAt", r6);

     label14:
        $i0 = interfaceinvoke $r1.size();

     label15:
        $i0 = $i0 - 1;

     label16:
        if $i0 < 0 goto label25;

     label17:
        $r11 = interfaceinvoke $r1.getItem($i0);

        $r12 = interfaceinvoke $r11.getIntent();

     label18:
        if $r12 == null goto label24;

        $r13 = "android.intent.action.PROCESS_TEXT";

     label19:
        $r12 = interfaceinvoke $r11.getIntent();

        $r14 = virtualinvoke $r12.getAction();

        z0 = virtualinvoke $r13.equals($r14);

     label20:
        if z0 == 0 goto label24;

        $r15 = newarray (java.lang.Object)[1];

     label21:
        $r16 = java.lang.Integer.valueOf($i0);

     label22:
        $r15[0] = $r16;

     label23:
        virtualinvoke $r8.invoke($r1, $r15);

     label24:
        $i0 = $i0 + -1;

        goto label16;

     label25:
        $r17 = specialinvoke r0.getSupportedActivities($r3, $r4);

        $i0 = 0;

     label26:
        $i1 = interfaceinvoke $r17.size();

        if $i0 >= $i1 goto label27;

        $r18 = interfaceinvoke $r17.get($i0);

        r19 = (android.content.pm.ResolveInfo) $r18;

        $i1 = $i0 + 100;

        $r20 = virtualinvoke r19.loadLabel($r4);

        $r11 = interfaceinvoke $r1.add(0, 0, $i1, $r20);

        r2 = r0.mTextView;

        $r12 = specialinvoke r0.createProcessTextIntentForResolveInfo(r19, r2);

        $r11 = interfaceinvoke $r11.setIntent($r12);

        interfaceinvoke $r11.setShowAsAction(1);

        $i0 = $i0 + 1;

        goto label26;

     label27:
        return;

     label28:
        r21 := @caughtexception;

        return;

     label29:
        r22 := @caughtexception;

        return;

     label30:
        r23 := @caughtexception;

        return;

        catch java.lang.ClassNotFoundException from label01 to label02 with label06;
        catch java.lang.ClassNotFoundException from label03 to label04 with label06;
        catch java.lang.NoSuchMethodException from label01 to label02 with label05;
        catch java.lang.NoSuchMethodException from label03 to label04 with label05;
        catch java.lang.NoSuchMethodException from label09 to label10 with label30;
        catch java.lang.NoSuchMethodException from label11 to label12 with label30;
        catch java.lang.NoSuchMethodException from label13 to label14 with label30;
        catch java.lang.NoSuchMethodException from label14 to label15 with label30;
        catch java.lang.NoSuchMethodException from label17 to label18 with label30;
        catch java.lang.NoSuchMethodException from label19 to label20 with label30;
        catch java.lang.NoSuchMethodException from label21 to label22 with label30;
        catch java.lang.NoSuchMethodException from label23 to label24 with label30;
        catch java.lang.IllegalAccessException from label09 to label10 with label29;
        catch java.lang.IllegalAccessException from label11 to label12 with label29;
        catch java.lang.IllegalAccessException from label13 to label14 with label29;
        catch java.lang.IllegalAccessException from label14 to label15 with label29;
        catch java.lang.IllegalAccessException from label17 to label18 with label29;
        catch java.lang.IllegalAccessException from label19 to label20 with label29;
        catch java.lang.IllegalAccessException from label21 to label22 with label29;
        catch java.lang.IllegalAccessException from label23 to label24 with label29;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label28;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label28;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label28;
        catch java.lang.reflect.InvocationTargetException from label14 to label15 with label28;
        catch java.lang.reflect.InvocationTargetException from label17 to label18 with label28;
        catch java.lang.reflect.InvocationTargetException from label19 to label20 with label28;
        catch java.lang.reflect.InvocationTargetException from label21 to label22 with label28;
        catch java.lang.reflect.InvocationTargetException from label23 to label24 with label28;
    }

    android.view.ActionMode$Callback getWrappedCallback()
    {
        androidx.core.widget.TextViewCompat$OreoCallback r0;
        android.view.ActionMode$Callback r1;

        r0 := @this;

        r1 = r0.mCallback;

        return r1;
    }

    public boolean onActionItemClicked(android.view.ActionMode, android.view.MenuItem)
    {
        androidx.core.widget.TextViewCompat$OreoCallback r0;
        android.view.ActionMode $r1;
        android.view.MenuItem $r2;
        boolean $z0;
        android.view.ActionMode$Callback $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = r0.mCallback;

        $z0 = interfaceinvoke $r3.onActionItemClicked($r1, $r2);

        return $z0;
    }

    public boolean onCreateActionMode(android.view.ActionMode, android.view.Menu)
    {
        androidx.core.widget.TextViewCompat$OreoCallback r0;
        android.view.ActionMode $r1;
        android.view.Menu $r2;
        boolean $z0;
        android.view.ActionMode$Callback $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = r0.mCallback;

        $z0 = interfaceinvoke $r3.onCreateActionMode($r1, $r2);

        return $z0;
    }

    public void onDestroyActionMode(android.view.ActionMode)
    {
        androidx.core.widget.TextViewCompat$OreoCallback r0;
        android.view.ActionMode $r1;
        android.view.ActionMode$Callback $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mCallback;

        interfaceinvoke $r2.onDestroyActionMode($r1);

        return;
    }

    public boolean onPrepareActionMode(android.view.ActionMode, android.view.Menu)
    {
        androidx.core.widget.TextViewCompat$OreoCallback r0;
        android.view.ActionMode $r1;
        android.view.Menu $r2;
        boolean $z0;
        android.view.ActionMode$Callback $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.recomputeProcessTextMenuItems($r2);

        $r3 = r0.mCallback;

        $z0 = interfaceinvoke $r3.onPrepareActionMode($r1, $r2);

        return $z0;
    }
}
