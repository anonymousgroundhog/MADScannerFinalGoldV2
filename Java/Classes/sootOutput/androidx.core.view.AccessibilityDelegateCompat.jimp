public class androidx.core.view.AccessibilityDelegateCompat extends java.lang.Object
{
    private static final android.view.View$AccessibilityDelegate DEFAULT_DELEGATE;
    private final android.view.View$AccessibilityDelegate mBridge;
    private final android.view.View$AccessibilityDelegate mOriginalDelegate;

    static void <clinit>()
    {
        android.view.View$AccessibilityDelegate $r0;

        $r0 = new android.view.View$AccessibilityDelegate;

        specialinvoke $r0.<init>();

        androidx.core.view.AccessibilityDelegateCompat.DEFAULT_DELEGATE = $r0;

        return;
    }

    public void <init>()
    {
        android.view.View$AccessibilityDelegate $r1;
        androidx.core.view.AccessibilityDelegateCompat r0;

        r0 := @this;

        $r1 = androidx.core.view.AccessibilityDelegateCompat.DEFAULT_DELEGATE;

        specialinvoke r0.<init>($r1);

        return;
    }

    public void <init>(android.view.View$AccessibilityDelegate)
    {
        android.view.View$AccessibilityDelegate $r1;
        androidx.core.view.AccessibilityDelegateCompat r0;
        androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter $r2;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.mOriginalDelegate = $r1;

        $r2 = new androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter;

        specialinvoke $r2.<init>(r0);

        r0.mBridge = $r2;

        return;
    }

    static java.util.List getActionList(android.view.View)
    {
        java.util.List r2;
        int i0;
        android.view.View $r0;
        java.lang.Object $r1;

        $r0 := @parameter0;

        i0 = androidx.core.R$id.tag_accessibility_actions;

        $r1 = virtualinvoke $r0.getTag(i0);

        r2 = (java.util.List) $r1;

        if r2 != null goto label1;

        r2 = java.util.Collections.emptyList();

     label1:
        return r2;
    }

    private boolean isSpanStillValid(android.text.style.ClickableSpan, android.view.View)
    {
        android.view.accessibility.AccessibilityNodeInfo $r3;
        java.lang.CharSequence $r4;
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.text.style.ClickableSpan $r1, $r6;
        int i0, $i1;
        android.view.View $r2;
        android.text.style.ClickableSpan[] $r5;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        if $r1 == null goto label3;

        $r3 = virtualinvoke $r2.createAccessibilityNodeInfo();

        $r4 = virtualinvoke $r3.getText();

        $r5 = androidx.core.view.accessibility.AccessibilityNodeInfoCompat.getClickableSpans($r4);

        i0 = 0;

     label1:
        if $r5 == null goto label3;

        $i1 = lengthof $r5;

        if i0 >= $i1 goto label3;

        $r6 = $r5[i0];

        $z0 = virtualinvoke $r1.equals($r6);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean performClickableSpanAction(int, android.view.View)
    {
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.text.style.ClickableSpan r5;
        android.util.SparseArray r3;
        int $i0, i1;
        android.view.View $r1;
        java.lang.Object $r2;
        java.lang.ref.WeakReference r4;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        i1 = androidx.core.R$id.tag_accessibility_clickable_spans;

        $r2 = virtualinvoke $r1.getTag(i1);

        r3 = (android.util.SparseArray) $r2;

        if r3 == null goto label1;

        $r2 = virtualinvoke r3.get($i0);

        r4 = (java.lang.ref.WeakReference) $r2;

        if r4 == null goto label1;

        $r2 = virtualinvoke r4.get();

        r5 = (android.text.style.ClickableSpan) $r2;

        $z0 = specialinvoke r0.isSpanStillValid(r5, $r1);

        if $z0 == 0 goto label1;

        virtualinvoke r5.onClick($r1);

        return 1;

     label1:
        return 0;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.view.View$AccessibilityDelegate $r3;
        android.view.View $r1;
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.accessibility.AccessibilityEvent $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = r0.mOriginalDelegate;

        $z0 = virtualinvoke $r3.dispatchPopulateAccessibilityEvent($r1, $r2);

        return $z0;
    }

    public androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
    {
        androidx.core.view.accessibility.AccessibilityNodeProviderCompat $r2;
        android.view.View$AccessibilityDelegate r4;
        android.view.View $r1;
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.accessibility.AccessibilityNodeProvider $r3;

        r0 := @this;

        $r1 := @parameter0;

        r4 = r0.mOriginalDelegate;

        $r3 = virtualinvoke r4.getAccessibilityNodeProvider($r1);

        if $r3 == null goto label1;

        $r2 = new androidx.core.view.accessibility.AccessibilityNodeProviderCompat;

        specialinvoke $r2.<init>($r3);

        return $r2;

     label1:
        return null;
    }

    android.view.View$AccessibilityDelegate getBridge()
    {
        android.view.View$AccessibilityDelegate r1;
        androidx.core.view.AccessibilityDelegateCompat r0;

        r0 := @this;

        r1 = r0.mBridge;

        return r1;
    }

    public void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.view.View$AccessibilityDelegate $r3;
        android.view.View $r1;
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.accessibility.AccessibilityEvent $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = r0.mOriginalDelegate;

        virtualinvoke $r3.onInitializeAccessibilityEvent($r1, $r2);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.View, androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.view.accessibility.AccessibilityNodeInfo $r4;
        android.view.View$AccessibilityDelegate $r3;
        android.view.View $r1;
        androidx.core.view.AccessibilityDelegateCompat r0;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = r0.mOriginalDelegate;

        $r4 = virtualinvoke $r2.unwrap();

        virtualinvoke $r3.onInitializeAccessibilityNodeInfo($r1, $r4);

        return;
    }

    public void onPopulateAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.view.View$AccessibilityDelegate $r3;
        android.view.View $r1;
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.accessibility.AccessibilityEvent $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = r0.mOriginalDelegate;

        virtualinvoke $r3.onPopulateAccessibilityEvent($r1, $r2);

        return;
    }

    public boolean onRequestSendAccessibilityEvent(android.view.ViewGroup, android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.view.View$AccessibilityDelegate $r4;
        android.view.View $r2;
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.accessibility.AccessibilityEvent $r3;
        android.view.ViewGroup $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 = r0.mOriginalDelegate;

        $z0 = virtualinvoke $r4.onRequestSendAccessibilityEvent($r1, $r2, $r3);

        return $z0;
    }

    public boolean performAccessibilityAction(android.view.View, int, android.os.Bundle)
    {
        android.os.Bundle $r2;
        android.view.View$AccessibilityDelegate r6;
        androidx.core.view.AccessibilityDelegateCompat r0;
        java.util.List $r3;
        int $i0, i1, $i2;
        android.view.View $r1;
        java.lang.Object $r4;
        androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat r5;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 := @parameter2;

        z0 = 0;

        $r3 = androidx.core.view.AccessibilityDelegateCompat.getActionList($r1);

        i1 = 0;

     label1:
        $i2 = interfaceinvoke $r3.size();

        if i1 >= $i2 goto label3;

        $r4 = interfaceinvoke $r3.get(i1);

        r5 = (androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) $r4;

        $i2 = virtualinvoke r5.getId();

        if $i2 != $i0 goto label2;

        z0 = virtualinvoke r5.perform($r1, $r2);

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if z0 != 0 goto label4;

        r6 = r0.mOriginalDelegate;

        z0 = virtualinvoke r6.performAccessibilityAction($r1, $i0, $r2);

     label4:
        if z0 != 0 goto label5;

        i1 = androidx.core.R$id.accessibility_action_clickable_span;

        if $i0 != i1 goto label5;

        $i0 = virtualinvoke $r2.getInt("ACCESSIBILITY_CLICKABLE_SPAN_ID", -1);

        z0 = specialinvoke r0.performClickableSpanAction($i0, $r1);

     label5:
        return z0;
    }

    public void sendAccessibilityEvent(android.view.View, int)
    {
        int $i0;
        android.view.View$AccessibilityDelegate $r2;
        android.view.View $r1;
        androidx.core.view.AccessibilityDelegateCompat r0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 = r0.mOriginalDelegate;

        virtualinvoke $r2.sendAccessibilityEvent($r1, $i0);

        return;
    }

    public void sendAccessibilityEventUnchecked(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.view.View$AccessibilityDelegate $r3;
        android.view.View $r1;
        androidx.core.view.AccessibilityDelegateCompat r0;
        android.view.accessibility.AccessibilityEvent $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = r0.mOriginalDelegate;

        virtualinvoke $r3.sendAccessibilityEventUnchecked($r1, $r2);

        return;
    }
}
