class androidx.room.RoomTrackingLiveData extends androidx.lifecycle.LiveData
{
    final java.util.concurrent.Callable mComputeFunction;
    final java.util.concurrent.atomic.AtomicBoolean mComputing;
    private final androidx.room.InvalidationLiveDataContainer mContainer;
    final androidx.room.RoomDatabase mDatabase;
    final boolean mInTransaction;
    final java.util.concurrent.atomic.AtomicBoolean mInvalid;
    final java.lang.Runnable mInvalidationRunnable;
    final androidx.room.InvalidationTracker$Observer mObserver;
    final java.lang.Runnable mRefreshRunnable;
    final java.util.concurrent.atomic.AtomicBoolean mRegisteredObserver;

    void <init>(androidx.room.RoomDatabase, androidx.room.InvalidationLiveDataContainer, boolean, java.util.concurrent.Callable, java.lang.String[])
    {
        androidx.room.RoomTrackingLiveData$3 $r8;
        androidx.room.RoomTrackingLiveData$2 $r7;
        androidx.room.RoomDatabase $r1;
        androidx.room.RoomTrackingLiveData$1 $r6;
        java.util.concurrent.atomic.AtomicBoolean $r5;
        androidx.room.RoomTrackingLiveData r0;
        java.util.concurrent.Callable r3;
        java.lang.String[] $r4;
        androidx.room.InvalidationLiveDataContainer $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $z0 := @parameter2;

        r3 := @parameter3;

        $r4 := @parameter4;

        specialinvoke r0.<init>();

        $r5 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r5.<init>(1);

        r0.mInvalid = $r5;

        $r5 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r5.<init>(0);

        r0.mComputing = $r5;

        $r5 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r5.<init>(0);

        r0.mRegisteredObserver = $r5;

        $r6 = new androidx.room.RoomTrackingLiveData$1;

        specialinvoke $r6.<init>(r0);

        r0.mRefreshRunnable = $r6;

        $r7 = new androidx.room.RoomTrackingLiveData$2;

        specialinvoke $r7.<init>(r0);

        r0.mInvalidationRunnable = $r7;

        r0.mDatabase = $r1;

        r0.mInTransaction = $z0;

        r0.mComputeFunction = r3;

        r0.mContainer = $r2;

        $r8 = new androidx.room.RoomTrackingLiveData$3;

        specialinvoke $r8.<init>(r0, $r4);

        r0.mObserver = $r8;

        return;
    }

    static void access$000(androidx.room.RoomTrackingLiveData, java.lang.Object)
    {
        androidx.room.RoomTrackingLiveData $r0;
        java.lang.Object $r1;

        $r0 := @parameter0;

        $r1 := @parameter1;

        virtualinvoke $r0.postValue($r1);

        return;
    }

    java.util.concurrent.Executor getQueryExecutor()
    {
        androidx.room.RoomDatabase $r1;
        java.util.concurrent.Executor $r2;
        androidx.room.RoomTrackingLiveData r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.mInTransaction;

        if $z0 == 0 goto label1;

        $r1 = r0.mDatabase;

        $r2 = virtualinvoke $r1.getTransactionExecutor();

        return $r2;

     label1:
        $r1 = r0.mDatabase;

        $r2 = virtualinvoke $r1.getQueryExecutor();

        return $r2;
    }

    protected void onActive()
    {
        java.util.concurrent.Executor $r2;
        androidx.room.InvalidationLiveDataContainer $r3;
        androidx.room.RoomTrackingLiveData r0;
        java.lang.Runnable $r1;

        r0 := @this;

        specialinvoke r0.onActive();

        $r3 = r0.mContainer;

        virtualinvoke $r3.onActive(r0);

        $r2 = virtualinvoke r0.getQueryExecutor();

        $r1 = r0.mRefreshRunnable;

        interfaceinvoke $r2.execute($r1);

        return;
    }

    protected void onInactive()
    {
        androidx.room.RoomTrackingLiveData r0;
        androidx.room.InvalidationLiveDataContainer $r1;

        r0 := @this;

        specialinvoke r0.onInactive();

        $r1 = r0.mContainer;

        virtualinvoke $r1.onInactive(r0);

        return;
    }
}
