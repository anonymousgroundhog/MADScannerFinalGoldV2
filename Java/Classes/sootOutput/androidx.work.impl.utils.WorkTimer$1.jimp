class androidx.work.impl.utils.WorkTimer$1 extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    private int mThreadsCreated;
    final androidx.work.impl.utils.WorkTimer this$0;

    void <init>(androidx.work.impl.utils.WorkTimer)
    {
        androidx.work.impl.utils.WorkTimer $r1;
        androidx.work.impl.utils.WorkTimer$1 r0;

        r0 := @this;

        $r1 := @parameter0;

        r0.this$0 = $r1;

        specialinvoke r0.<init>();

        r0.mThreadsCreated = 0;

        return;
    }

    public java.lang.Thread newThread(java.lang.Runnable)
    {
        androidx.work.impl.utils.WorkTimer$1 r0;
        java.lang.Thread $r3;
        int $i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        java.util.concurrent.ThreadFactory $r2;
        java.lang.Runnable $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = java.util.concurrent.Executors.defaultThreadFactory();

        $r3 = interfaceinvoke $r2.newThread($r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<init>();

        $r4 = virtualinvoke $r4.append("WorkManager-WorkTimer-thread-");

        $i0 = r0.mThreadsCreated;

        $r4 = virtualinvoke $r4.append($i0);

        $r5 = virtualinvoke $r4.toString();

        virtualinvoke $r3.setName($r5);

        $i0 = r0.mThreadsCreated;

        $i0 = $i0 + 1;

        r0.mThreadsCreated = $i0;

        return $r3;
    }
}
