class androidx.appcompat.app.AppCompatDelegateImpl$1 extends java.lang.Object implements java.lang.Thread$UncaughtExceptionHandler
{
    final java.lang.Thread$UncaughtExceptionHandler val$defHandler;

    void <init>(java.lang.Thread$UncaughtExceptionHandler)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$1 r0;
        java.lang.Thread$UncaughtExceptionHandler $r1;

        r0 := @this;

        $r1 := @parameter0;

        r0.val$defHandler = $r1;

        specialinvoke r0.<init>();

        return;
    }

    private boolean shouldWrapException(java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        androidx.appcompat.app.AppCompatDelegateImpl$1 r0;
        java.lang.String $r2;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        z0 = $r1 instanceof android.content.res.Resources$NotFoundException;

        if z0 == 0 goto label2;

        $r2 = virtualinvoke $r1.getMessage();

        if $r2 == null goto label2;

        z0 = virtualinvoke $r2.contains("drawable");

        if z0 != 0 goto label1;

        z0 = virtualinvoke $r2.contains("Drawable");

        if z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        java.lang.Throwable $r2, $r6;
        android.content.res.Resources$NotFoundException r3;
        java.lang.StackTraceElement[] $r7;
        java.lang.Thread$UncaughtExceptionHandler $r8;
        java.lang.Thread $r1;
        java.lang.StringBuilder $r4;
        androidx.appcompat.app.AppCompatDelegateImpl$1 r0;
        java.lang.String $r5;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $z0 = specialinvoke r0.shouldWrapException($r2);

        if $z0 == 0 goto label1;

        r3 = new android.content.res.Resources$NotFoundException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<init>();

        $r5 = virtualinvoke $r2.getMessage();

        $r4 = virtualinvoke $r4.append($r5);

        $r4 = virtualinvoke $r4.append(". If the resource you are trying to use is a vector resource, you may be referencing it in an unsupported way. See AppCompatDelegate.setCompatVectorFromResourcesEnabled() for more info.");

        $r5 = virtualinvoke $r4.toString();

        specialinvoke r3.<init>($r5);

        $r6 = virtualinvoke $r2.getCause();

        virtualinvoke r3.initCause($r6);

        $r7 = virtualinvoke $r2.getStackTrace();

        virtualinvoke r3.setStackTrace($r7);

        $r8 = r0.val$defHandler;

        interfaceinvoke $r8.uncaughtException($r1, r3);

        return;

     label1:
        $r8 = r0.val$defHandler;

        interfaceinvoke $r8.uncaughtException($r1, $r2);

        return;
    }
}
