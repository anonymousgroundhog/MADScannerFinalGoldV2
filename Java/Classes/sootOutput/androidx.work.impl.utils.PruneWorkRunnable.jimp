public class androidx.work.impl.utils.PruneWorkRunnable extends java.lang.Object implements java.lang.Runnable
{
    private final androidx.work.impl.OperationImpl mOperation;
    private final androidx.work.impl.WorkManagerImpl mWorkManagerImpl;

    public void <init>(androidx.work.impl.WorkManagerImpl)
    {
        androidx.work.impl.WorkManagerImpl $r1;
        androidx.work.impl.utils.PruneWorkRunnable r0;
        androidx.work.impl.OperationImpl $r2;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.mWorkManagerImpl = $r1;

        $r2 = new androidx.work.impl.OperationImpl;

        specialinvoke $r2.<init>();

        r0.mOperation = $r2;

        return;
    }

    public androidx.work.Operation getOperation()
    {
        androidx.work.impl.utils.PruneWorkRunnable r0;
        androidx.work.impl.OperationImpl r1;

        r0 := @this;

        r1 = r0.mOperation;

        return r1;
    }

    public void run()
    {
        java.lang.Throwable r6;
        androidx.work.impl.model.WorkSpecDao $r4;
        androidx.work.impl.utils.PruneWorkRunnable r0;
        androidx.work.Operation$State$SUCCESS $r1;
        androidx.work.Operation$State$FAILURE $r7;
        androidx.work.impl.WorkDatabase $r3;
        androidx.work.impl.WorkManagerImpl r2;
        androidx.work.impl.OperationImpl $r5;

        r0 := @this;

     label1:
        r2 = r0.mWorkManagerImpl;

        $r3 = virtualinvoke r2.getWorkDatabase();

        $r4 = virtualinvoke $r3.workSpecDao();

        interfaceinvoke $r4.pruneFinishedWorkWithZeroDependentsIgnoringKeepForAtLeast();

        $r5 = r0.mOperation;

        $r1 = androidx.work.Operation.SUCCESS;

        virtualinvoke $r5.setState($r1);

     label2:
        return;

     label3:
        r6 := @caughtexception;

        $r5 = r0.mOperation;

        $r7 = new androidx.work.Operation$State$FAILURE;

        specialinvoke $r7.<init>(r6);

        virtualinvoke $r5.setState($r7);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
