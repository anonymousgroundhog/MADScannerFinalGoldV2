class androidx.core.provider.SelfDestructiveThread$2 extends java.lang.Object implements java.lang.Runnable
{
    final androidx.core.provider.SelfDestructiveThread this$0;
    final java.util.concurrent.Callable val$callable;
    final android.os.Handler val$calleeHandler;
    final androidx.core.provider.SelfDestructiveThread$ReplyCallback val$reply;

    void <init>(androidx.core.provider.SelfDestructiveThread, java.util.concurrent.Callable, android.os.Handler, androidx.core.provider.SelfDestructiveThread$ReplyCallback)
    {
        androidx.core.provider.SelfDestructiveThread$2 r0;
        androidx.core.provider.SelfDestructiveThread$ReplyCallback $r4;
        android.os.Handler $r3;
        androidx.core.provider.SelfDestructiveThread $r1;
        java.util.concurrent.Callable $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 := @parameter3;

        r0.this$0 = $r1;

        r0.val$callable = $r2;

        r0.val$calleeHandler = $r3;

        r0.val$reply = $r4;

        specialinvoke r0.<init>();

        return;
    }

    public void run()
    {
        androidx.core.provider.SelfDestructiveThread$2 r0;
        android.os.Handler $r1;
        androidx.core.provider.SelfDestructiveThread$2$1 $r2;
        java.lang.Object $r3;
        java.util.concurrent.Callable r4;
        java.lang.Exception r5;

        r0 := @this;

     label1:
        r4 = r0.val$callable;

        $r3 = interfaceinvoke r4.call();

     label2:
        goto label4;

     label3:
        r5 := @caughtexception;

        $r3 = null;

     label4:
        $r1 = r0.val$calleeHandler;

        $r2 = new androidx.core.provider.SelfDestructiveThread$2$1;

        specialinvoke $r2.<init>(r0, $r3);

        virtualinvoke $r1.post($r2);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
