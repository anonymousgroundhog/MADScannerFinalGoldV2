public class androidx.drawerlayout.widget.DrawerLayout extends android.view.ViewGroup
{
    private static final boolean ALLOW_EDGE_LOCK;
    static final boolean CAN_HIDE_DESCENDANTS;
    private static final boolean CHILDREN_DISALLOW_INTERCEPT;
    private static final int DEFAULT_SCRIM_COLOR;
    private static final int DRAWER_ELEVATION;
    static final int[] LAYOUT_ATTRS;
    public static final int LOCK_MODE_LOCKED_CLOSED;
    public static final int LOCK_MODE_LOCKED_OPEN;
    public static final int LOCK_MODE_UNDEFINED;
    public static final int LOCK_MODE_UNLOCKED;
    private static final int MIN_DRAWER_MARGIN;
    private static final int MIN_FLING_VELOCITY;
    private static final int PEEK_DELAY;
    private static final boolean SET_DRAWER_SHADOW_FROM_ELEVATION;
    public static final int STATE_DRAGGING;
    public static final int STATE_IDLE;
    public static final int STATE_SETTLING;
    private static final java.lang.String TAG;
    private static final int[] THEME_ATTRS;
    private static final float TOUCH_SLOP_SENSITIVITY;
    private final androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate;
    private android.graphics.Rect mChildHitRect;
    private android.graphics.Matrix mChildInvertedMatrix;
    private boolean mChildrenCanceledTouch;
    private boolean mDisallowInterceptRequested;
    private boolean mDrawStatusBarBackground;
    private float mDrawerElevation;
    private int mDrawerState;
    private boolean mFirstLayout;
    private boolean mInLayout;
    private float mInitialMotionX;
    private float mInitialMotionY;
    private java.lang.Object mLastInsets;
    private final androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mLeftCallback;
    private final androidx.customview.widget.ViewDragHelper mLeftDragger;
    private androidx.drawerlayout.widget.DrawerLayout$DrawerListener mListener;
    private java.util.List mListeners;
    private int mLockModeEnd;
    private int mLockModeLeft;
    private int mLockModeRight;
    private int mLockModeStart;
    private int mMinDrawerMargin;
    private final java.util.ArrayList mNonDrawerViews;
    private final androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback mRightCallback;
    private final androidx.customview.widget.ViewDragHelper mRightDragger;
    private int mScrimColor;
    private float mScrimOpacity;
    private android.graphics.Paint mScrimPaint;
    private android.graphics.drawable.Drawable mShadowEnd;
    private android.graphics.drawable.Drawable mShadowLeft;
    private android.graphics.drawable.Drawable mShadowLeftResolved;
    private android.graphics.drawable.Drawable mShadowRight;
    private android.graphics.drawable.Drawable mShadowRightResolved;
    private android.graphics.drawable.Drawable mShadowStart;
    private android.graphics.drawable.Drawable mStatusBarBackground;
    private java.lang.CharSequence mTitleLeft;
    private java.lang.CharSequence mTitleRight;

    static void <clinit>()
    {
        int $i0;
        int[] $r0;
        boolean $z0;

        $z0 = 1;

        $r0 = newarray (int)[1];

        $r0[0] = 16843828;

        androidx.drawerlayout.widget.DrawerLayout.THEME_ATTRS = $r0;

        $r0 = newarray (int)[1];

        $r0[0] = 16842931;

        androidx.drawerlayout.widget.DrawerLayout.LAYOUT_ATTRS = $r0;

        androidx.drawerlayout.widget.DrawerLayout.CAN_HIDE_DESCENDANTS = 1;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 21 goto label1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        androidx.drawerlayout.widget.DrawerLayout.SET_DRAWER_SHADOW_FROM_ELEVATION = $z0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.util.AttributeSet $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.<init>($r1, $r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        java.lang.Throwable $r15;
        android.content.Context $r1;
        androidx.drawerlayout.widget.DrawerLayout r0;
        androidx.customview.widget.ViewDragHelper $r9;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback $r7, r8;
        android.graphics.drawable.Drawable $r14;
        android.content.res.TypedArray $r13;
        java.util.ArrayList $r16;
        androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate $r3;
        android.util.AttributeSet $r2;
        int[] r12;
        int $i0;
        boolean $z0;
        androidx.drawerlayout.widget.DrawerLayout$1 r11;
        android.util.DisplayMetrics $r6;
        float f0, f1;
        android.graphics.Paint $r4;
        android.content.res.Resources $r5;
        androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate $r10;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 := @parameter2;

        specialinvoke r0.<init>($r1, $r2, $i0);

        $r3 = new androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate;

        specialinvoke $r3.<init>();

        r0.mChildAccessibilityDelegate = $r3;

        r0.mScrimColor = -1728053248;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<init>();

        r0.mScrimPaint = $r4;

        r0.mFirstLayout = 1;

        r0.mLockModeLeft = 3;

        r0.mLockModeRight = 3;

        r0.mLockModeStart = 3;

        r0.mLockModeEnd = 3;

        r0.mShadowStart = null;

        r0.mShadowEnd = null;

        r0.mShadowLeft = null;

        r0.mShadowRight = null;

        virtualinvoke r0.setDescendantFocusability(262144);

        $r5 = virtualinvoke r0.getResources();

        $r6 = virtualinvoke $r5.getDisplayMetrics();

        f0 = $r6.density;

        f1 = 64.0F * f0;

        f1 = f1 + 0.5F;

        $i0 = (int) f1;

        r0.mMinDrawerMargin = $i0;

        f1 = 400.0F * f0;

        $r7 = new androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback;

        specialinvoke $r7.<init>(r0, 3);

        r0.mLeftCallback = $r7;

        r8 = new androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback;

        specialinvoke r8.<init>(r0, 5);

        r0.mRightCallback = r8;

        $r9 = androidx.customview.widget.ViewDragHelper.create(r0, 1.0F, $r7);

        r0.mLeftDragger = $r9;

        virtualinvoke $r9.setEdgeTrackingEnabled(1);

        virtualinvoke $r9.setMinVelocity(f1);

        virtualinvoke $r7.setDragger($r9);

        $r9 = androidx.customview.widget.ViewDragHelper.create(r0, 1.0F, r8);

        r0.mRightDragger = $r9;

        virtualinvoke $r9.setEdgeTrackingEnabled(2);

        virtualinvoke $r9.setMinVelocity(f1);

        virtualinvoke r8.setDragger($r9);

        virtualinvoke r0.setFocusableInTouchMode(1);

        androidx.core.view.ViewCompat.setImportantForAccessibility(r0, 1);

        $r10 = new androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate;

        specialinvoke $r10.<init>(r0);

        androidx.core.view.ViewCompat.setAccessibilityDelegate(r0, $r10);

        virtualinvoke r0.setMotionEventSplittingEnabled(0);

        $z0 = androidx.core.view.ViewCompat.getFitsSystemWindows(r0);

        if $z0 == 0 goto label5;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 21 goto label4;

        r11 = new androidx.drawerlayout.widget.DrawerLayout$1;

        specialinvoke r11.<init>(r0);

        virtualinvoke r0.setOnApplyWindowInsetsListener(r11);

        virtualinvoke r0.setSystemUiVisibility(1280);

        r12 = androidx.drawerlayout.widget.DrawerLayout.THEME_ATTRS;

        $r13 = virtualinvoke $r1.obtainStyledAttributes(r12);

     label1:
        $r14 = virtualinvoke $r13.getDrawable(0);

        r0.mStatusBarBackground = $r14;

     label2:
        virtualinvoke $r13.recycle();

        goto label5;

     label3:
        $r15 := @caughtexception;

        virtualinvoke $r13.recycle();

        throw $r15;

     label4:
        r0.mStatusBarBackground = null;

     label5:
        f0 = 10.0F * f0;

        r0.mDrawerElevation = f0;

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<init>();

        r0.mNonDrawerViews = $r16;

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent, android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.MotionEvent $r1;
        int $i0, $i1;
        android.view.View $r2;
        float $f0, $f1;
        android.graphics.Matrix $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = virtualinvoke $r2.getMatrix();

        $z0 = virtualinvoke $r3.isIdentity();

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.getTransformedMotionEvent($r1, $r2);

        $z0 = virtualinvoke $r2.dispatchGenericMotionEvent($r1);

        virtualinvoke $r1.recycle();

        return $z0;

     label1:
        $i0 = virtualinvoke r0.getScrollX();

        $i1 = virtualinvoke $r2.getLeft();

        $i0 = $i0 - $i1;

        $f0 = (float) $i0;

        $i0 = virtualinvoke r0.getScrollY();

        $i1 = virtualinvoke $r2.getTop();

        $i0 = $i0 - $i1;

        $f1 = (float) $i0;

        virtualinvoke $r1.offsetLocation($f0, $f1);

        $z0 = virtualinvoke $r2.dispatchGenericMotionEvent($r1);

        $f0 = neg $f0;

        $f1 = neg $f1;

        virtualinvoke $r1.offsetLocation($f0, $f1);

        return $z0;
    }

    private android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent, android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.MotionEvent $r1;
        int $i0, $i1;
        android.view.View $r2;
        float f0, f1;
        android.graphics.Matrix $r3, $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 = virtualinvoke r0.getScrollX();

        $i1 = virtualinvoke $r2.getLeft();

        $i0 = $i0 - $i1;

        f0 = (float) $i0;

        $i0 = virtualinvoke r0.getScrollY();

        $i1 = virtualinvoke $r2.getTop();

        $i0 = $i0 - $i1;

        f1 = (float) $i0;

        $r1 = android.view.MotionEvent.obtain($r1);

        virtualinvoke $r1.offsetLocation(f0, f1);

        $r3 = virtualinvoke $r2.getMatrix();

        $z0 = virtualinvoke $r3.isIdentity();

        if $z0 != 0 goto label2;

        $r4 = r0.mChildInvertedMatrix;

        if $r4 != null goto label1;

        $r4 = new android.graphics.Matrix;

        specialinvoke $r4.<init>();

        r0.mChildInvertedMatrix = $r4;

     label1:
        $r4 = r0.mChildInvertedMatrix;

        virtualinvoke $r3.invert($r4);

        $r3 = r0.mChildInvertedMatrix;

        virtualinvoke $r1.transform($r3);

     label2:
        return $r1;
    }

    static java.lang.String gravityToString(int)
    {
        int $i0, $i1;
        java.lang.String $r0;

        $i0 := @parameter0;

        $i1 = $i0 & 3;

        if $i1 != 3 goto label1;

        return "LEFT";

     label1:
        $i1 = $i0 & 5;

        if $i1 != 5 goto label2;

        return "RIGHT";

     label2:
        $r0 = java.lang.Integer.toHexString($i0);

        return $r0;
    }

    private static boolean hasOpaqueBackground(android.view.View)
    {
        int $i0;
        android.view.View $r0;
        android.graphics.drawable.Drawable $r1;

        $r0 := @parameter0;

        $r1 = virtualinvoke $r0.getBackground();

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.getOpacity();

        if $i0 != -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean hasPeekingDrawer()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, i1;
        android.view.View $r1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r3;
        boolean $z0;

        r0 := @this;

        $i0 = virtualinvoke r0.getChildCount();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r1 = virtualinvoke r0.getChildAt(i1);

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        $z0 = r3.isPeeking;

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    private boolean hasVisibleDrawer()
    {
        android.view.View $r1;
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this;

        $r1 = virtualinvoke r0.findVisibleDrawer();

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    static boolean includeChildForAccessibility(android.view.View)
    {
        int $i0;
        android.view.View $r0;

        $r0 := @parameter0;

        $i0 = androidx.core.view.ViewCompat.getImportantForAccessibility($r0);

        if $i0 == 4 goto label1;

        $i0 = androidx.core.view.ViewCompat.getImportantForAccessibility($r0);

        if $i0 == 2 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isInBoundsOfChild(float, float, android.view.View)
    {
        android.graphics.Rect $r2;
        androidx.drawerlayout.widget.DrawerLayout r0;
        int $i0, $i1;
        float $f0, $f1;
        android.view.View $r1;
        boolean $z0;

        r0 := @this;

        $f0 := @parameter0;

        $f1 := @parameter1;

        $r1 := @parameter2;

        $r2 = r0.mChildHitRect;

        if $r2 != null goto label1;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<init>();

        r0.mChildHitRect = $r2;

     label1:
        $r2 = r0.mChildHitRect;

        virtualinvoke $r1.getHitRect($r2);

        $r2 = r0.mChildHitRect;

        $i0 = (int) $f0;

        $i1 = (int) $f1;

        $z0 = virtualinvoke $r2.contains($i0, $i1);

        return $z0;
    }

    private boolean mirror(android.graphics.drawable.Drawable, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        if $r1 == null goto label2;

        $z0 = androidx.core.graphics.drawable.DrawableCompat.isAutoMirrored($r1);

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        androidx.core.graphics.drawable.DrawableCompat.setLayoutDirection($r1, $i0);

        return 1;

     label2:
        return 0;
    }

    private android.graphics.drawable.Drawable resolveLeftShadow()
    {
        int $i0;
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $i0 = androidx.core.view.ViewCompat.getLayoutDirection(r0);

        if $i0 != 0 goto label1;

        $r1 = r0.mShadowStart;

        if $r1 == null goto label2;

        specialinvoke r0.mirror($r1, $i0);

        $r1 = r0.mShadowStart;

        return $r1;

     label1:
        $r1 = r0.mShadowEnd;

        if $r1 == null goto label2;

        specialinvoke r0.mirror($r1, $i0);

        $r1 = r0.mShadowEnd;

        return $r1;

     label2:
        $r1 = r0.mShadowLeft;

        return $r1;
    }

    private android.graphics.drawable.Drawable resolveRightShadow()
    {
        int $i0;
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $i0 = androidx.core.view.ViewCompat.getLayoutDirection(r0);

        if $i0 != 0 goto label1;

        $r1 = r0.mShadowEnd;

        if $r1 == null goto label2;

        specialinvoke r0.mirror($r1, $i0);

        $r1 = r0.mShadowEnd;

        return $r1;

     label1:
        $r1 = r0.mShadowStart;

        if $r1 == null goto label2;

        specialinvoke r0.mirror($r1, $i0);

        $r1 = r0.mShadowStart;

        return $r1;

     label2:
        $r1 = r0.mShadowRight;

        return $r1;
    }

    private void resolveShadowDrawables()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this;

        $z0 = androidx.drawerlayout.widget.DrawerLayout.SET_DRAWER_SHADOW_FROM_ELEVATION;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = specialinvoke r0.resolveLeftShadow();

        r0.mShadowLeftResolved = $r1;

        $r1 = specialinvoke r0.resolveRightShadow();

        r0.mShadowRightResolved = $r1;

        return;
    }

    private void updateChildrenImportantForAccessibility(android.view.View, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int $i0, i1;
        android.view.View $r1, $r2;
        boolean $z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        $i0 = virtualinvoke r0.getChildCount();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label6;

        $r2 = virtualinvoke r0.getChildAt(i1);

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.isDrawerView($r2);

        if $z1 == 0 goto label3;

     label2:
        if $z0 == 0 goto label4;

        if $r2 != $r1 goto label4;

     label3:
        androidx.core.view.ViewCompat.setImportantForAccessibility($r2, 1);

        goto label5;

     label4:
        androidx.core.view.ViewCompat.setImportantForAccessibility($r2, 4);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return;
    }

    public void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        java.util.List $r2;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $r1;
        java.util.ArrayList $r3;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.mListeners;

        if $r2 != null goto label2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<init>();

        r0.mListeners = $r3;

     label2:
        $r2 = r0.mListeners;

        interfaceinvoke $r2.add($r1);

        return;
    }

    public void addFocusables(java.util.ArrayList, int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        java.util.ArrayList r1, r3;
        int $i0, $i1, $i2, i3, $i4;
        android.view.View $r2;
        java.lang.Object $r4;
        boolean z0, $z1;

        r0 := @this;

        r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        $i2 = virtualinvoke r0.getDescendantFocusability();

        if $i2 != 393216 goto label1;

        return;

     label1:
        $i2 = virtualinvoke r0.getChildCount();

        z0 = 0;

        i3 = 0;

     label2:
        if i3 >= $i2 goto label5;

        $r2 = virtualinvoke r0.getChildAt(i3);

        $z1 = virtualinvoke r0.isDrawerView($r2);

        if $z1 == 0 goto label3;

        $z1 = virtualinvoke r0.isDrawerOpen($r2);

        if $z1 == 0 goto label4;

        z0 = 1;

        virtualinvoke $r2.addFocusables(r1, $i0, $i1);

        goto label4;

     label3:
        r3 = r0.mNonDrawerViews;

        virtualinvoke r3.add($r2);

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        if z0 != 0 goto label8;

        r3 = r0.mNonDrawerViews;

        $i2 = virtualinvoke r3.size();

        i3 = 0;

     label6:
        if i3 >= $i2 goto label8;

        r3 = r0.mNonDrawerViews;

        $r4 = virtualinvoke r3.get(i3);

        $r2 = (android.view.View) $r4;

        $i4 = virtualinvoke $r2.getVisibility();

        if $i4 != 0 goto label7;

        virtualinvoke $r2.addFocusables(r1, $i0, $i1);

     label7:
        i3 = i3 + 1;

        goto label6;

     label8:
        r1 = r0.mNonDrawerViews;

        virtualinvoke r1.clear();

        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate $r4;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0;
        android.view.View $r1, $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 := @parameter2;

        specialinvoke r0.addView($r1, $i0, $r2);

        $r3 = virtualinvoke r0.findOpenDrawer();

        if $r3 != null goto label2;

        $z0 = virtualinvoke r0.isDrawerView($r1);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        androidx.core.view.ViewCompat.setImportantForAccessibility($r1, 1);

        goto label3;

     label2:
        androidx.core.view.ViewCompat.setImportantForAccessibility($r1, 4);

     label3:
        $z0 = androidx.drawerlayout.widget.DrawerLayout.CAN_HIDE_DESCENDANTS;

        if $z0 != 0 goto label4;

        $r4 = r0.mChildAccessibilityDelegate;

        androidx.core.view.ViewCompat.setAccessibilityDelegate($r1, $r4);

     label4:
        return;
    }

    void cancelChildViewTouch()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.MotionEvent $r1;
        int $i1, i2;
        android.view.View $r2;
        long $l0;
        boolean z0;

        r0 := @this;

        z0 = r0.mChildrenCanceledTouch;

        if z0 != 0 goto label3;

        $l0 = android.os.SystemClock.uptimeMillis();

        $r1 = android.view.MotionEvent.obtain($l0, $l0, 3, 0.0F, 0.0F, 0);

        $i1 = virtualinvoke r0.getChildCount();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label2;

        $r2 = virtualinvoke r0.getChildAt(i2);

        virtualinvoke $r2.dispatchTouchEvent($r1);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke $r1.recycle();

        r0.mChildrenCanceledTouch = 1;

     label3:
        return;
    }

    boolean checkDrawerViewAbsoluteGravity(android.view.View, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int $i0, $i1;
        android.view.View $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 = virtualinvoke r0.getDrawerViewAbsoluteGravity($r1);

        $i1 = $i1 & $i0;

        if $i1 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = $r1 instanceof androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $z0 = specialinvoke r0.checkLayoutParams($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void closeDrawer(int)
    {
        int $i0;
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this;

        $i0 := @parameter0;

        virtualinvoke r0.closeDrawer($i0, 1);

        return;
    }

    public void closeDrawer(int, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int $i0;
        android.view.View $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $z0 := @parameter1;

        $r2 = virtualinvoke r0.findDrawerWithGravity($i0);

        if $r2 == null goto label1;

        virtualinvoke r0.closeDrawer($r2, $z0);

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("No drawer view found with gravity ");

        $r4 = androidx.drawerlayout.widget.DrawerLayout.gravityToString($i0);

        $r3 = virtualinvoke $r3.append($r4);

        $r4 = virtualinvoke $r3.toString();

        specialinvoke $r1.<init>($r4);

        throw $r1;
    }

    public void closeDrawer(android.view.View)
    {
        android.view.View $r1;
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this;

        $r1 := @parameter0;

        virtualinvoke r0.closeDrawer($r1, 1);

        return;
    }

    public void closeDrawer(android.view.View, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        androidx.customview.widget.ViewDragHelper $r4;
        android.view.ViewGroup$LayoutParams $r2;
        java.lang.IllegalArgumentException r5;
        int $i0, $i1;
        android.view.View $r1;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        boolean $z0, $z1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r3;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        $z1 = virtualinvoke r0.isDrawerView($r1);

        if $z1 == 0 goto label5;

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        $z1 = r0.mFirstLayout;

        if $z1 == 0 goto label1;

        r3.onScreen = 0.0F;

        r3.openState = 0;

        goto label4;

     label1:
        if $z0 == 0 goto label3;

        $i0 = r3.openState;

        $i0 = 4 | $i0;

        r3.openState = $i0;

        $z0 = virtualinvoke r0.checkDrawerViewAbsoluteGravity($r1, 3);

        if $z0 == 0 goto label2;

        $r4 = r0.mLeftDragger;

        $i0 = virtualinvoke $r1.getWidth();

        $i0 = neg $i0;

        $i1 = virtualinvoke $r1.getTop();

        virtualinvoke $r4.smoothSlideViewTo($r1, $i0, $i1);

        goto label4;

     label2:
        $r4 = r0.mRightDragger;

        $i0 = virtualinvoke r0.getWidth();

        $i1 = virtualinvoke $r1.getTop();

        virtualinvoke $r4.smoothSlideViewTo($r1, $i0, $i1);

        goto label4;

     label3:
        virtualinvoke r0.moveDrawerToOffset($r1, 0.0F);

        $i0 = r3.gravity;

        virtualinvoke r0.updateDrawerState($i0, 0, $r1);

        virtualinvoke $r1.setVisibility(4);

     label4:
        virtualinvoke r0.invalidate();

        return;

     label5:
        r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $r6 = virtualinvoke $r6.append("View ");

        $r6 = virtualinvoke $r6.append($r1);

        $r6 = virtualinvoke $r6.append(" is not a sliding drawer");

        $r7 = virtualinvoke $r6.toString();

        specialinvoke r5.<init>($r7);

        throw r5;
    }

    public void closeDrawers()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this;

        virtualinvoke r0.closeDrawers(0);

        return;
    }

    void closeDrawers(boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        androidx.customview.widget.ViewDragHelper $r4;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r5;
        int $i0, i1, $i2, $i3;
        android.view.View $r1;
        boolean $z0, z1, $z2;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r3;

        r0 := @this;

        $z0 := @parameter0;

        z1 = 0;

        $i0 = virtualinvoke r0.getChildCount();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label6;

        $r1 = virtualinvoke r0.getChildAt(i1);

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        $z2 = virtualinvoke r0.isDrawerView($r1);

        if $z2 == 0 goto label5;

        if $z0 == 0 goto label2;

        $z2 = r3.isPeeking;

        if $z2 != 0 goto label2;

        goto label5;

     label2:
        $i2 = virtualinvoke $r1.getWidth();

        $z2 = virtualinvoke r0.checkDrawerViewAbsoluteGravity($r1, 3);

        if $z2 == 0 goto label3;

        $r4 = r0.mLeftDragger;

        $i2 = neg $i2;

        $i3 = virtualinvoke $r1.getTop();

        $z2 = virtualinvoke $r4.smoothSlideViewTo($r1, $i2, $i3);

        z1 = z1 | $z2;

        goto label4;

     label3:
        $r4 = r0.mRightDragger;

        $i2 = virtualinvoke r0.getWidth();

        $i3 = virtualinvoke $r1.getTop();

        $z2 = virtualinvoke $r4.smoothSlideViewTo($r1, $i2, $i3);

        z1 = z1 | $z2;

     label4:
        r3.isPeeking = 0;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        r5 = r0.mLeftCallback;

        virtualinvoke r5.removeCallbacks();

        r5 = r0.mRightCallback;

        virtualinvoke r5.removeCallbacks();

        if z1 == 0 goto label7;

        virtualinvoke r0.invalidate();

     label7:
        return;
    }

    public void computeScroll()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        androidx.customview.widget.ViewDragHelper $r1;
        android.view.ViewGroup$LayoutParams $r3;
        int $i0, i1;
        float f0, f1;
        android.view.View $r2;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r4;
        boolean $z0, $z1;

        r0 := @this;

        $i0 = virtualinvoke r0.getChildCount();

        f0 = 0.0F;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label2;

        $r2 = virtualinvoke r0.getChildAt(i1);

        $r3 = virtualinvoke $r2.getLayoutParams();

        r4 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r3;

        f1 = r4.onScreen;

        f0 = java.lang.Math.max(f0, f1);

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.mScrimOpacity = f0;

        $r1 = r0.mLeftDragger;

        $z0 = virtualinvoke $r1.continueSettling(1);

        $r1 = r0.mRightDragger;

        $z1 = virtualinvoke $r1.continueSettling(1);

        if $z0 != 0 goto label3;

        if $z1 == 0 goto label4;

     label3:
        androidx.core.view.ViewCompat.postInvalidateOnAnimation(r0);

     label4:
        return;
    }

    public boolean dispatchGenericMotionEvent(android.view.MotionEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        byte b1;
        android.view.MotionEvent $r1;
        int $i0;
        float f0, $f1;
        android.view.View $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 = virtualinvoke $r1.getSource();

        $i0 = $i0 & 2;

        if $i0 == 0 goto label6;

        $i0 = virtualinvoke $r1.getAction();

        if $i0 == 10 goto label6;

        f0 = r0.mScrimOpacity;

        b1 = f0 cmpg 0.0F;

        $i0 = (int) b1;

        if $i0 > 0 goto label1;

        goto label6;

     label1:
        $i0 = virtualinvoke r0.getChildCount();

        if $i0 == 0 goto label5;

        f0 = virtualinvoke $r1.getX();

        $f1 = virtualinvoke $r1.getY();

        $i0 = $i0 + -1;

     label2:
        if $i0 < 0 goto label5;

        $r2 = virtualinvoke r0.getChildAt($i0);

        $z0 = specialinvoke r0.isInBoundsOfChild(f0, $f1, $r2);

        if $z0 == 0 goto label4;

        $z0 = virtualinvoke r0.isContentView($r2);

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        $z0 = specialinvoke r0.dispatchTransformedGenericPointerEvent($r1, $r2);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        $i0 = $i0 + -1;

        goto label2;

     label5:
        return 0;

     label6:
        $z0 = specialinvoke r0.dispatchGenericMotionEvent($r1);

        return $z0;
    }

    void dispatchOnDrawerClosed(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $r6;
        java.util.List r4;
        int i0;
        android.view.View $r1;
        java.lang.Object $r5;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        i0 = r3.openState;

        i0 = i0 & 1;

        if i0 != 1 goto label3;

        r3.openState = 0;

        r4 = r0.mListeners;

        if r4 == null goto label2;

        i0 = interfaceinvoke r4.size();

        i0 = i0 + -1;

     label1:
        if i0 < 0 goto label2;

        r4 = r0.mListeners;

        $r5 = interfaceinvoke r4.get(i0);

        $r6 = (androidx.drawerlayout.widget.DrawerLayout$DrawerListener) $r5;

        interfaceinvoke $r6.onDrawerClosed($r1);

        i0 = i0 + -1;

        goto label1;

     label2:
        specialinvoke r0.updateChildrenImportantForAccessibility($r1, 0);

        $z0 = virtualinvoke r0.hasWindowFocus();

        if $z0 == 0 goto label3;

        $r1 = virtualinvoke r0.getRootView();

        if $r1 == null goto label3;

        virtualinvoke $r1.sendAccessibilityEvent(32);

     label3:
        return;
    }

    void dispatchOnDrawerOpened(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $r6;
        java.util.List r4;
        int i0;
        android.view.View $r1;
        java.lang.Object $r5;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        i0 = r3.openState;

        i0 = i0 & 1;

        if i0 != 0 goto label3;

        r3.openState = 1;

        r4 = r0.mListeners;

        if r4 == null goto label2;

        i0 = interfaceinvoke r4.size();

        i0 = i0 + -1;

     label1:
        if i0 < 0 goto label2;

        r4 = r0.mListeners;

        $r5 = interfaceinvoke r4.get(i0);

        $r6 = (androidx.drawerlayout.widget.DrawerLayout$DrawerListener) $r5;

        interfaceinvoke $r6.onDrawerOpened($r1);

        i0 = i0 + -1;

        goto label1;

     label2:
        specialinvoke r0.updateChildrenImportantForAccessibility($r1, 1);

        $z0 = virtualinvoke r0.hasWindowFocus();

        if $z0 == 0 goto label3;

        virtualinvoke r0.sendAccessibilityEvent(32);

     label3:
        return;
    }

    void dispatchOnDrawerSlide(android.view.View, float)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        java.util.List r2;
        int $i0;
        android.view.View $r1;
        float $f0;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $r4;
        java.lang.Object $r3;

        r0 := @this;

        $r1 := @parameter0;

        $f0 := @parameter1;

        r2 = r0.mListeners;

        if r2 == null goto label2;

        $i0 = interfaceinvoke r2.size();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label2;

        r2 = r0.mListeners;

        $r3 = interfaceinvoke r2.get($i0);

        $r4 = (androidx.drawerlayout.widget.DrawerLayout$DrawerListener) $r3;

        interfaceinvoke $r4.onDrawerSlide($r1, $f0);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }

    protected boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        androidx.customview.widget.ViewDragHelper r6;
        long $l0;
        android.graphics.drawable.Drawable r5;
        byte b8;
        int $i1, i2, $i3, i4, $i5, i6, $i7;
        android.view.View $r2, $r3;
        android.graphics.Canvas $r1;
        boolean $z0, $z1;
        float f0, f1, f2;
        android.graphics.Paint r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $l0 := @parameter2;

        $i1 = virtualinvoke r0.getHeight();

        $z0 = virtualinvoke r0.isContentView($r2);

        i2 = 0;

        $i3 = virtualinvoke r0.getWidth();

        i4 = $i3;

        $i5 = virtualinvoke $r1.save();

        if $z0 == 0 goto label07;

        $i3 = virtualinvoke r0.getChildCount();

        i6 = 0;

     label01:
        if i6 >= $i3 goto label06;

        $r3 = virtualinvoke r0.getChildAt(i6);

        if $r3 == $r2 goto label05;

        $i7 = virtualinvoke $r3.getVisibility();

        if $i7 != 0 goto label05;

        $z1 = androidx.drawerlayout.widget.DrawerLayout.hasOpaqueBackground($r3);

        if $z1 == 0 goto label05;

        $z1 = virtualinvoke r0.isDrawerView($r3);

        if $z1 == 0 goto label05;

        $i7 = virtualinvoke $r3.getHeight();

        if $i7 >= $i1 goto label02;

        goto label05;

     label02:
        $z1 = virtualinvoke r0.checkDrawerViewAbsoluteGravity($r3, 3);

        if $z1 == 0 goto label04;

        $i7 = virtualinvoke $r3.getRight();

        if $i7 <= i2 goto label03;

        i2 = $i7;

     label03:
        goto label05;

     label04:
        $i7 = virtualinvoke $r3.getLeft();

        if $i7 >= i4 goto label05;

        i4 = $i7;

     label05:
        i6 = i6 + 1;

        goto label01;

     label06:
        $i1 = virtualinvoke r0.getHeight();

        virtualinvoke $r1.clipRect(i2, 0, i4, $i1);

        goto label08;

     label07:
        i2 = 0;

        i4 = $i3;

     label08:
        $z1 = specialinvoke r0.drawChild($r1, $r2, $l0);

        virtualinvoke $r1.restoreToCount($i5);

        f0 = r0.mScrimOpacity;

        b8 = f0 cmpl 0.0F;

        $i5 = (int) b8;

        if $i5 <= 0 goto label09;

        if $z0 == 0 goto label09;

        $i5 = r0.mScrimColor;

        $i1 = -16777216 & $i5;

        $i1 = $i1 >>> 24;

        f1 = (float) $i1;

        f0 = f1 * f0;

        $i1 = (int) f0;

        $i1 = $i1 << 24;

        $i5 = $i5 & 16777215;

        $i5 = $i1 | $i5;

        r4 = r0.mScrimPaint;

        virtualinvoke r4.setColor($i5);

        f0 = (float) i2;

        f1 = (float) i4;

        $i5 = virtualinvoke r0.getHeight();

        f2 = (float) $i5;

        r4 = r0.mScrimPaint;

        virtualinvoke $r1.drawRect(f0, 0.0F, f1, f2, r4);

        return $z1;

     label09:
        r5 = r0.mShadowLeftResolved;

        if r5 == null goto label10;

        $z0 = virtualinvoke r0.checkDrawerViewAbsoluteGravity($r2, 3);

        if $z0 == 0 goto label10;

        r5 = r0.mShadowLeftResolved;

        i2 = virtualinvoke r5.getIntrinsicWidth();

        $i5 = virtualinvoke $r2.getRight();

        r6 = r0.mLeftDragger;

        i4 = virtualinvoke r6.getEdgeSize();

        f0 = (float) $i5;

        f1 = (float) i4;

        f0 = f0 / f1;

        f0 = java.lang.Math.min(f0, 1.0F);

        f0 = java.lang.Math.max(0.0F, f0);

        r5 = r0.mShadowLeftResolved;

        i4 = virtualinvoke $r2.getTop();

        i2 = $i5 + i2;

        $i1 = virtualinvoke $r2.getBottom();

        virtualinvoke r5.setBounds($i5, i4, i2, $i1);

        r5 = r0.mShadowLeftResolved;

        f0 = 255.0F * f0;

        $i5 = (int) f0;

        virtualinvoke r5.setAlpha($i5);

        r5 = r0.mShadowLeftResolved;

        virtualinvoke r5.draw($r1);

        return $z1;

     label10:
        r5 = r0.mShadowRightResolved;

        if r5 == null goto label11;

        $z0 = virtualinvoke r0.checkDrawerViewAbsoluteGravity($r2, 5);

        if $z0 == 0 goto label11;

        r5 = r0.mShadowRightResolved;

        i4 = virtualinvoke r5.getIntrinsicWidth();

        $i5 = virtualinvoke $r2.getLeft();

        i2 = virtualinvoke r0.getWidth();

        i2 = i2 - $i5;

        r6 = r0.mRightDragger;

        $i1 = virtualinvoke r6.getEdgeSize();

        f0 = (float) i2;

        f1 = (float) $i1;

        f0 = f0 / f1;

        f0 = java.lang.Math.min(f0, 1.0F);

        f0 = java.lang.Math.max(0.0F, f0);

        r5 = r0.mShadowRightResolved;

        i4 = $i5 - i4;

        i2 = virtualinvoke $r2.getTop();

        $i1 = virtualinvoke $r2.getBottom();

        virtualinvoke r5.setBounds(i4, i2, $i5, $i1);

        r5 = r0.mShadowRightResolved;

        f0 = 255.0F * f0;

        $i5 = (int) f0;

        virtualinvoke r5.setAlpha($i5);

        r5 = r0.mShadowRightResolved;

        virtualinvoke r5.draw($r1);

     label11:
        return $z1;
    }

    android.view.View findDrawerWithGravity(int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int $i0, $i1, $i2, i3;
        android.view.View $r1;

        r0 := @this;

        $i0 := @parameter0;

        $i2 = androidx.core.view.ViewCompat.getLayoutDirection(r0);

        $i0 = androidx.core.view.GravityCompat.getAbsoluteGravity($i0, $i2);

        $i0 = $i0 & 7;

        $i2 = virtualinvoke r0.getChildCount();

        i3 = 0;

     label1:
        if i3 >= $i2 goto label3;

        $r1 = virtualinvoke r0.getChildAt(i3);

        $i1 = virtualinvoke r0.getDrawerViewAbsoluteGravity($r1);

        $i1 = $i1 & 7;

        if $i1 != $i0 goto label2;

        return $r1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    android.view.View findOpenDrawer()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0, i1, $i2;
        android.view.View $r1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r3;

        r0 := @this;

        $i0 = virtualinvoke r0.getChildCount();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r1 = virtualinvoke r0.getChildAt(i1);

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        $i2 = r3.openState;

        $i2 = $i2 & 1;

        if $i2 != 1 goto label2;

        return $r1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    android.view.View findVisibleDrawer()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int $i0, i1;
        android.view.View $r1;
        boolean $z0;

        r0 := @this;

        $i0 = virtualinvoke r0.getChildCount();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r1 = virtualinvoke r0.getChildAt(i1);

        $z0 = virtualinvoke r0.isDrawerView($r1);

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke r0.isDrawerVisible($r1);

        if $z0 == 0 goto label2;

        return $r1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $r1;

        r0 := @this;

        $r1 = new androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        specialinvoke $r1.<init>(-1, -1);

        return $r1;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.content.Context $r3;
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.util.AttributeSet $r1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = new androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        $r3 = virtualinvoke r0.getContext();

        specialinvoke $r2.<init>($r3, $r1);

        return $r2;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams $r1;
        android.view.ViewGroup$MarginLayoutParams $r4;
        boolean $z0;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $r2, $r3;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = $r1 instanceof androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $r2 = new androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        $r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r1;

        specialinvoke $r2.<init>($r3);

        return $r2;

     label1:
        $z0 = $r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label2;

        $r2 = new androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        $r4 = (android.view.ViewGroup$MarginLayoutParams) $r1;

        specialinvoke $r2.<init>($r4);

        return $r2;

     label2:
        $r2 = new androidx.drawerlayout.widget.DrawerLayout$LayoutParams;

        specialinvoke $r2.<init>($r1);

        return $r2;
    }

    public float getDrawerElevation()
    {
        float f0;
        androidx.drawerlayout.widget.DrawerLayout r0;
        boolean $z0;

        r0 := @this;

        $z0 = androidx.drawerlayout.widget.DrawerLayout.SET_DRAWER_SHADOW_FROM_ELEVATION;

        if $z0 == 0 goto label1;

        f0 = r0.mDrawerElevation;

        return f0;

     label1:
        return 0.0F;
    }

    public int getDrawerLockMode(int)
    {
        int $i0, $i1;
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 = androidx.core.view.ViewCompat.getLayoutDirection(r0);

        lookupswitch($i0)
        {
            case 3: goto label14;
            case 5: goto label10;
            case 8388611: goto label06;
            case 8388613: goto label02;
            default: goto label01;
        };

     label01:
        goto label18;

     label02:
        $i0 = r0.mLockModeEnd;

        if $i0 == 3 goto label03;

        return $i0;

     label03:
        if $i1 != 0 goto label04;

        $i0 = r0.mLockModeRight;

        goto label05;

     label04:
        $i0 = r0.mLockModeLeft;

     label05:
        if $i0 == 3 goto label18;

        return $i0;

     label06:
        $i0 = r0.mLockModeStart;

        if $i0 == 3 goto label07;

        return $i0;

     label07:
        if $i1 != 0 goto label08;

        $i0 = r0.mLockModeLeft;

        goto label09;

     label08:
        $i0 = r0.mLockModeRight;

     label09:
        if $i0 == 3 goto label18;

        return $i0;

     label10:
        $i0 = r0.mLockModeRight;

        if $i0 == 3 goto label11;

        return $i0;

     label11:
        if $i1 != 0 goto label12;

        $i0 = r0.mLockModeEnd;

        goto label13;

     label12:
        $i0 = r0.mLockModeStart;

     label13:
        if $i0 == 3 goto label18;

        return $i0;

     label14:
        $i0 = r0.mLockModeLeft;

        if $i0 == 3 goto label15;

        return $i0;

     label15:
        if $i1 != 0 goto label16;

        $i0 = r0.mLockModeStart;

        goto label17;

     label16:
        $i0 = r0.mLockModeEnd;

     label17:
        if $i0 == 3 goto label18;

        return $i0;

     label18:
        return 0;
    }

    public int getDrawerLockMode(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams $r2;
        java.lang.IllegalArgumentException r4;
        int i0;
        android.view.View $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        boolean $z0;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r3;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = virtualinvoke r0.isDrawerView($r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        i0 = r3.gravity;

        i0 = virtualinvoke r0.getDrawerLockMode(i0);

        return i0;

     label1:
        r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r5 = virtualinvoke $r5.append("View ");

        $r5 = virtualinvoke $r5.append($r1);

        $r5 = virtualinvoke $r5.append(" is not a drawer");

        $r6 = virtualinvoke $r5.toString();

        specialinvoke r4.<init>($r6);

        throw r4;
    }

    public java.lang.CharSequence getDrawerTitle(int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        java.lang.CharSequence r1;
        int $i0, $i1;

        r0 := @this;

        $i0 := @parameter0;

        $i1 = androidx.core.view.ViewCompat.getLayoutDirection(r0);

        $i0 = androidx.core.view.GravityCompat.getAbsoluteGravity($i0, $i1);

        if $i0 != 3 goto label1;

        r1 = r0.mTitleLeft;

        return r1;

     label1:
        if $i0 != 5 goto label2;

        r1 = r0.mTitleRight;

        return r1;

     label2:
        return null;
    }

    int getDrawerViewAbsoluteGravity(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams $r2;
        int i0, $i1;
        android.view.View $r1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        i0 = r3.gravity;

        $i1 = androidx.core.view.ViewCompat.getLayoutDirection(r0);

        i0 = androidx.core.view.GravityCompat.getAbsoluteGravity(i0, $i1);

        return i0;
    }

    float getDrawerViewOffset(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.View $r1;
        float f0;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke $r1.getLayoutParams();

        $r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        f0 = $r3.onScreen;

        return f0;
    }

    public android.graphics.drawable.Drawable getStatusBarBackgroundDrawable()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this;

        r1 = r0.mStatusBarBackground;

        return r1;
    }

    boolean isContentView(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams $r2;
        int $i0;
        android.view.View $r1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke $r1.getLayoutParams();

        $r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        $i0 = $r3.gravity;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isDrawerOpen(int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int $i0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = virtualinvoke r0.findDrawerWithGravity($i0);

        if $r1 == null goto label1;

        $z0 = virtualinvoke r0.isDrawerOpen($r1);

        return $z0;

     label1:
        return 0;
    }

    public boolean isDrawerOpen(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams $r2;
        java.lang.IllegalArgumentException r4;
        int $i0;
        android.view.View $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        boolean $z0;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r3;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = virtualinvoke r0.isDrawerView($r1);

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        $i0 = r3.openState;

        $i0 = $i0 & 1;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r5 = virtualinvoke $r5.append("View ");

        $r5 = virtualinvoke $r5.append($r1);

        $r5 = virtualinvoke $r5.append(" is not a drawer");

        $r6 = virtualinvoke $r5.toString();

        specialinvoke r4.<init>($r6);

        throw r4;
    }

    boolean isDrawerView(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams $r2;
        int i0, $i1;
        android.view.View $r1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        i0 = r3.gravity;

        $i1 = androidx.core.view.ViewCompat.getLayoutDirection($r1);

        i0 = androidx.core.view.GravityCompat.getAbsoluteGravity(i0, $i1);

        $i1 = i0 & 3;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        i0 = i0 & 5;

        if i0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean isDrawerVisible(int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int $i0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = virtualinvoke r0.findDrawerWithGravity($i0);

        if $r1 == null goto label1;

        $z0 = virtualinvoke r0.isDrawerVisible($r1);

        return $z0;

     label1:
        return 0;
    }

    public boolean isDrawerVisible(android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams $r2;
        java.lang.IllegalArgumentException $r7;
        byte $b0;
        int $i1;
        android.view.View $r1;
        float $f0;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r5;
        boolean $z0;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams $r3;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = virtualinvoke r0.isDrawerView($r1);

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke $r1.getLayoutParams();

        $r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        $f0 = $r3.onScreen;

        $b0 = $f0 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $r4 = virtualinvoke $r6.append("View ");

        $r4 = virtualinvoke $r4.append($r1);

        $r4 = virtualinvoke $r4.append(" is not a drawer");

        $r5 = virtualinvoke $r4.toString();

        specialinvoke $r7.<init>($r5);

        throw $r7;
    }

    void moveDrawerToOffset(android.view.View, float)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0, $i1;
        android.view.View $r1;
        float $f0, $f1, f2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $f0 := @parameter1;

        $f1 = virtualinvoke r0.getDrawerViewOffset($r1);

        $i1 = virtualinvoke $r1.getWidth();

        f2 = (float) $i1;

        $f1 = f2 * $f1;

        i0 = (int) $f1;

        $f1 = (float) $i1;

        $f1 = $f1 * $f0;

        $i1 = (int) $f1;

        i0 = $i1 - i0;

        $z0 = virtualinvoke r0.checkDrawerViewAbsoluteGravity($r1, 3);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        i0 = neg i0;

     label2:
        virtualinvoke $r1.offsetLeftAndRight(i0);

        virtualinvoke r0.setDrawerViewOffset($r1, $f0);

        return;
    }

    protected void onAttachedToWindow()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this;

        specialinvoke r0.onAttachedToWindow();

        r0.mFirstLayout = 1;

        return;
    }

    protected void onDetachedFromWindow()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this;

        specialinvoke r0.onDetachedFromWindow();

        r0.mFirstLayout = 1;

        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.graphics.drawable.Drawable r2;
        android.view.WindowInsets r4;
        int i0, $i1;
        android.graphics.Canvas $r1;
        java.lang.Object r3;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.onDraw($r1);

        z0 = r0.mDrawStatusBarBackground;

        if z0 == 0 goto label5;

        r2 = r0.mStatusBarBackground;

        if r2 == null goto label5;

        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 < 21 goto label3;

        r3 = r0.mLastInsets;

        if r3 == null goto label1;

        r4 = (android.view.WindowInsets) r3;

        i0 = virtualinvoke r4.getSystemWindowInsetTop();

        goto label2;

     label1:
        i0 = 0;

     label2:
        goto label4;

     label3:
        i0 = 0;

     label4:
        if i0 <= 0 goto label5;

        r2 = r0.mStatusBarBackground;

        $i1 = virtualinvoke r0.getWidth();

        virtualinvoke r2.setBounds(0, 0, $i1, i0);

        r2 = r0.mStatusBarBackground;

        virtualinvoke r2.draw($r1);

     label5:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        androidx.customview.widget.ViewDragHelper r2;
        androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback r3;
        byte b1;
        android.view.MotionEvent $r1;
        int $i0, $i2;
        float $f0, $f1, f2;
        android.view.View $r4;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $r1 := @parameter0;

        $i0 = virtualinvoke $r1.getActionMasked();

        r2 = r0.mLeftDragger;

        $z0 = virtualinvoke r2.shouldInterceptTouchEvent($r1);

        r2 = r0.mRightDragger;

        $z1 = virtualinvoke r2.shouldInterceptTouchEvent($r1);

        $z0 = $z0 | $z1;

        $z1 = 0;

        lookupswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label3;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label1;
        };

     label1:
        goto label6;

     label2:
        r2 = r0.mLeftDragger;

        $z2 = virtualinvoke r2.checkTouchSlop(3);

        if $z2 == 0 goto label6;

        r3 = r0.mLeftCallback;

        virtualinvoke r3.removeCallbacks();

        r3 = r0.mRightCallback;

        virtualinvoke r3.removeCallbacks();

        goto label6;

     label3:
        virtualinvoke r0.closeDrawers(1);

        r0.mDisallowInterceptRequested = 0;

        r0.mChildrenCanceledTouch = 0;

        goto label6;

     label4:
        $f0 = virtualinvoke $r1.getX();

        $f1 = virtualinvoke $r1.getY();

        r0.mInitialMotionX = $f0;

        r0.mInitialMotionY = $f1;

        f2 = r0.mScrimOpacity;

        b1 = f2 cmpl 0.0F;

        $i0 = (int) b1;

        if $i0 <= 0 goto label5;

        r2 = r0.mLeftDragger;

        $i2 = (int) $f0;

        $i0 = (int) $f1;

        $r4 = virtualinvoke r2.findTopChildUnder($i2, $i0);

        if $r4 == null goto label5;

        $z2 = virtualinvoke r0.isContentView($r4);

        if $z2 == 0 goto label5;

        $z1 = 1;

     label5:
        r0.mDisallowInterceptRequested = 0;

        r0.mChildrenCanceledTouch = 0;

     label6:
        if $z0 != 0 goto label8;

        if $z1 != 0 goto label8;

        $z0 = specialinvoke r0.hasPeekingDrawer();

        if $z0 != 0 goto label8;

        $z0 = r0.mChildrenCanceledTouch;

        if $z0 == 0 goto label7;

        return 1;

     label7:
        return 0;

     label8:
        return 1;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.KeyEvent $r1;
        int $i0;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        if $i0 != 4 goto label1;

        $z0 = specialinvoke r0.hasVisibleDrawer();

        if $z0 == 0 goto label1;

        virtualinvoke $r1.startTracking();

        return 1;

     label1:
        $z0 = specialinvoke r0.onKeyDown($i0, $r1);

        return $z0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.KeyEvent $r1;
        int $i0;
        android.view.View $r2;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        if $i0 != 4 goto label3;

        $r2 = virtualinvoke r0.findVisibleDrawer();

        if $r2 == null goto label1;

        $i0 = virtualinvoke r0.getDrawerLockMode($r2);

        if $i0 != 0 goto label1;

        virtualinvoke r0.closeDrawers();

     label1:
        if $r2 == null goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $z0 = specialinvoke r0.onKeyUp($i0, $r1);

        return $z0;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        byte b10;
        int $i0, $i1, $i2, $i3, i4, $i5, i6, i7, $i8, $i9, i11, $i12;
        android.view.View $r1;
        boolean $z0;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r3;
        android.view.ViewGroup$LayoutParams $r2;
        float f0, f1;

        r0 := @this;

        $z0 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        $i2 := @parameter3;

        $i3 := @parameter4;

        r0.mInLayout = 1;

        $i0 = $i2 - $i0;

        $i2 = virtualinvoke r0.getChildCount();

        i4 = 0;

     label01:
        if i4 >= $i2 goto label18;

        $r1 = virtualinvoke r0.getChildAt(i4);

        $i5 = virtualinvoke $r1.getVisibility();

        if $i5 != 8 goto label02;

        goto label17;

     label02:
        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        $z0 = virtualinvoke r0.isContentView($r1);

        if $z0 == 0 goto label03;

        $i5 = r3.leftMargin;

        i6 = r3.topMargin;

        i7 = r3.leftMargin;

        $i8 = virtualinvoke $r1.getMeasuredWidth();

        i7 = i7 + $i8;

        $i8 = r3.topMargin;

        $i9 = virtualinvoke $r1.getMeasuredHeight();

        $i8 = $i8 + $i9;

        virtualinvoke $r1.layout($i5, i6, i7, $i8);

        goto label17;

     label03:
        i6 = virtualinvoke $r1.getMeasuredWidth();

        i7 = virtualinvoke $r1.getMeasuredHeight();

        $z0 = virtualinvoke r0.checkDrawerViewAbsoluteGravity($r1, 3);

        if $z0 == 0 goto label04;

        $i5 = neg i6;

        f0 = (float) i6;

        f1 = r3.onScreen;

        f0 = f0 * f1;

        $i8 = (int) f0;

        $i5 = $i5 + $i8;

        $i8 = i6 + $i5;

        f0 = (float) $i8;

        f1 = (float) i6;

        f0 = f0 / f1;

        goto label05;

     label04:
        f0 = (float) i6;

        f1 = r3.onScreen;

        f0 = f0 * f1;

        $i5 = (int) f0;

        $i5 = $i0 - $i5;

        $i8 = $i0 - $i5;

        f0 = (float) $i8;

        f1 = (float) i6;

        f0 = f0 / f1;

     label05:
        f1 = r3.onScreen;

        b10 = f0 cmpl f1;

        if b10 == 0 goto label06;

        $z0 = 1;

        goto label07;

     label06:
        $z0 = 0;

     label07:
        $i8 = r3.gravity;

        $i8 = $i8 & 112;

        lookupswitch($i8)
        {
            case 16: goto label10;
            case 80: goto label09;
            default: goto label08;
        };

     label08:
        $i8 = r3.topMargin;

        i6 = $i5 + i6;

        $i9 = r3.topMargin;

        i7 = $i9 + i7;

        virtualinvoke $r1.layout($i5, $i8, i6, i7);

        goto label13;

     label09:
        i7 = $i3 - $i1;

        $i8 = r3.bottomMargin;

        $i8 = i7 - $i8;

        $i9 = virtualinvoke $r1.getMeasuredHeight();

        $i8 = $i8 - $i9;

        i6 = $i5 + i6;

        $i9 = r3.bottomMargin;

        i7 = i7 - $i9;

        virtualinvoke $r1.layout($i5, $i8, i6, i7);

        goto label13;

     label10:
        $i8 = $i3 - $i1;

        $i9 = $i8 - i7;

        $i9 = $i9 / 2;

        i11 = r3.topMargin;

        if $i9 >= i11 goto label11;

        $i9 = r3.topMargin;

        goto label12;

     label11:
        i11 = $i9 + i7;

        $i12 = r3.bottomMargin;

        $i12 = $i8 - $i12;

        if i11 <= $i12 goto label12;

        $i9 = r3.bottomMargin;

        $i8 = $i8 - $i9;

        $i9 = $i8 - i7;

     label12:
        i6 = $i5 + i6;

        i7 = $i9 + i7;

        virtualinvoke $r1.layout($i5, $i9, i6, i7);

     label13:
        if $z0 == 0 goto label14;

        virtualinvoke r0.setDrawerViewOffset($r1, f0);

     label14:
        f0 = r3.onScreen;

        b10 = f0 cmpl 0.0F;

        $i5 = (int) b10;

        if $i5 <= 0 goto label15;

        b10 = 0;

        goto label16;

     label15:
        b10 = 4;

     label16:
        $i5 = virtualinvoke $r1.getVisibility();

        if $i5 == b10 goto label17;

        virtualinvoke $r1.setVisibility(b10);

     label17:
        i4 = i4 + 1;

        goto label01;

     label18:
        r0.mInLayout = 0;

        r0.mFirstLayout = 0;

        return;
    }

    protected void onMeasure(int, int)
    {
        java.lang.IllegalStateException r7;
        androidx.drawerlayout.widget.DrawerLayout r0, $r1;
        byte b10;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9;
        android.view.View $r3;
        java.lang.String $r9;
        boolean $z0, z1, z2, $z3, z4;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r5;
        android.view.ViewGroup$LayoutParams $r4;
        java.lang.IllegalArgumentException r10;
        android.view.WindowInsets r6;
        float $f0, f1;
        java.lang.Object r2;
        java.lang.StringBuilder r8;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $r1 = r0;

        $i2 = android.view.View$MeasureSpec.getMode($i0);

        $i3 = android.view.View$MeasureSpec.getMode($i1);

        $i4 = android.view.View$MeasureSpec.getSize($i0);

        $i5 = android.view.View$MeasureSpec.getSize($i1);

        if $i2 != 1073741824 goto label01;

        if $i3 == 1073741824 goto label05;

     label01:
        $z0 = virtualinvoke r0.isInEditMode();

        if $z0 == 0 goto label30;

        if $i2 != -2147483648 goto label02;

        goto label03;

     label02:
        if $i2 != 0 goto label03;

        $i4 = 300;

     label03:
        if $i3 != -2147483648 goto label04;

        goto label05;

     label04:
        if $i3 != 0 goto label05;

        $i5 = 300;

     label05:
        virtualinvoke r0.setMeasuredDimension($i4, $i5);

        r2 = r0.mLastInsets;

        if r2 == null goto label06;

        $z0 = androidx.core.view.ViewCompat.getFitsSystemWindows(r0);

        if $z0 == 0 goto label06;

        z1 = 1;

        goto label07;

     label06:
        z1 = 0;

     label07:
        $i2 = androidx.core.view.ViewCompat.getLayoutDirection(r0);

        $z0 = 0;

        z2 = 0;

        $i3 = virtualinvoke r0.getChildCount();

        i6 = 0;

     label08:
        if i6 >= $i3 goto label32;

        $r3 = virtualinvoke $r1.getChildAt(i6);

        $i7 = virtualinvoke $r3.getVisibility();

        if $i7 != 8 goto label09;

        goto label18;

     label09:
        $r4 = virtualinvoke $r3.getLayoutParams();

        r5 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r4;

        if z1 == 0 goto label17;

        $i7 = r5.gravity;

        $i7 = androidx.core.view.GravityCompat.getAbsoluteGravity($i7, $i2);

        $z3 = androidx.core.view.ViewCompat.getFitsSystemWindows($r3);

        if $z3 == 0 goto label13;

        $i8 = android.os.Build$VERSION.SDK_INT;

        if $i8 < 21 goto label12;

        r2 = $r1.mLastInsets;

        r6 = (android.view.WindowInsets) r2;

        if $i7 != 3 goto label10;

        $i7 = virtualinvoke r6.getSystemWindowInsetLeft();

        $i8 = virtualinvoke r6.getSystemWindowInsetTop();

        $i9 = virtualinvoke r6.getSystemWindowInsetBottom();

        r6 = virtualinvoke r6.replaceSystemWindowInsets($i7, $i8, 0, $i9);

        goto label11;

     label10:
        if $i7 != 5 goto label11;

        $i7 = virtualinvoke r6.getSystemWindowInsetTop();

        $i8 = virtualinvoke r6.getSystemWindowInsetRight();

        $i9 = virtualinvoke r6.getSystemWindowInsetBottom();

        r6 = virtualinvoke r6.replaceSystemWindowInsets(0, $i7, $i8, $i9);

     label11:
        virtualinvoke $r3.dispatchApplyWindowInsets(r6);

        goto label17;

     label12:
        goto label17;

     label13:
        $i8 = android.os.Build$VERSION.SDK_INT;

        if $i8 < 21 goto label16;

        r2 = $r1.mLastInsets;

        r6 = (android.view.WindowInsets) r2;

        if $i7 != 3 goto label14;

        $i7 = virtualinvoke r6.getSystemWindowInsetLeft();

        $i8 = virtualinvoke r6.getSystemWindowInsetTop();

        $i9 = virtualinvoke r6.getSystemWindowInsetBottom();

        r6 = virtualinvoke r6.replaceSystemWindowInsets($i7, $i8, 0, $i9);

        goto label15;

     label14:
        if $i7 != 5 goto label15;

        $i7 = virtualinvoke r6.getSystemWindowInsetTop();

        $i8 = virtualinvoke r6.getSystemWindowInsetRight();

        $i9 = virtualinvoke r6.getSystemWindowInsetBottom();

        r6 = virtualinvoke r6.replaceSystemWindowInsets(0, $i7, $i8, $i9);

     label15:
        $i7 = virtualinvoke r6.getSystemWindowInsetLeft();

        r5.leftMargin = $i7;

        $i7 = virtualinvoke r6.getSystemWindowInsetTop();

        r5.topMargin = $i7;

        $i7 = virtualinvoke r6.getSystemWindowInsetRight();

        r5.rightMargin = $i7;

        $i7 = virtualinvoke r6.getSystemWindowInsetBottom();

        r5.bottomMargin = $i7;

        goto label17;

     label16:
        goto label17;

     label17:
        $z3 = virtualinvoke $r1.isContentView($r3);

        if $z3 == 0 goto label19;

        $i7 = r5.leftMargin;

        $i7 = $i4 - $i7;

        $i8 = r5.rightMargin;

        $i7 = $i7 - $i8;

        $i7 = android.view.View$MeasureSpec.makeMeasureSpec($i7, 1073741824);

        $i8 = r5.topMargin;

        $i8 = $i5 - $i8;

        $i9 = r5.bottomMargin;

        $i8 = $i8 - $i9;

        $i8 = android.view.View$MeasureSpec.makeMeasureSpec($i8, 1073741824);

        virtualinvoke $r3.measure($i7, $i8);

     label18:
        goto label28;

     label19:
        $z3 = virtualinvoke $r1.isDrawerView($r3);

        if $z3 == 0 goto label29;

        $z3 = androidx.drawerlayout.widget.DrawerLayout.SET_DRAWER_SHADOW_FROM_ELEVATION;

        if $z3 == 0 goto label20;

        $f0 = androidx.core.view.ViewCompat.getElevation($r3);

        f1 = $r1.mDrawerElevation;

        b10 = $f0 cmpl f1;

        if b10 == 0 goto label20;

        androidx.core.view.ViewCompat.setElevation($r3, f1);

     label20:
        $i7 = virtualinvoke $r1.getDrawerViewAbsoluteGravity($r3);

        $i7 = $i7 & 7;

        if $i7 != 3 goto label21;

        $z3 = 1;

        goto label22;

     label21:
        $z3 = 0;

     label22:
        z4 = $z3;

        if $z3 == 0 goto label23;

        if $z0 != 0 goto label24;

     label23:
        if z4 != 0 goto label25;

        if z2 != 0 goto label24;

        goto label25;

     label24:
        r7 = new java.lang.IllegalStateException;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<init>();

        r8 = virtualinvoke r8.append("Child drawer has absolute gravity ");

        $r9 = androidx.drawerlayout.widget.DrawerLayout.gravityToString($i7);

        r8 = virtualinvoke r8.append($r9);

        r8 = virtualinvoke r8.append(" but this ");

        r8 = virtualinvoke r8.append("DrawerLayout");

        r8 = virtualinvoke r8.append(" already has a ");

        r8 = virtualinvoke r8.append("drawer view along that edge");

        $r9 = virtualinvoke r8.toString();

        specialinvoke r7.<init>($r9);

        throw r7;

     label25:
        if z4 == 0 goto label26;

        $z0 = 1;

        goto label27;

     label26:
        z2 = 1;

     label27:
        $i7 = $r1.mMinDrawerMargin;

        $i8 = r5.leftMargin;

        $i7 = $i7 + $i8;

        $i8 = r5.rightMargin;

        $i7 = $i7 + $i8;

        $i8 = r5.width;

        $i7 = androidx.drawerlayout.widget.DrawerLayout.getChildMeasureSpec($i0, $i7, $i8);

        $i8 = r5.topMargin;

        $i9 = r5.bottomMargin;

        $i8 = $i8 + $i9;

        $i9 = r5.height;

        $i8 = androidx.drawerlayout.widget.DrawerLayout.getChildMeasureSpec($i1, $i8, $i9);

        virtualinvoke $r3.measure($i7, $i8);

     label28:
        i6 = i6 + 1;

        $r1 = r0;

        goto label08;

     label29:
        r7 = new java.lang.IllegalStateException;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<init>();

        r8 = virtualinvoke r8.append("Child ");

        r8 = virtualinvoke r8.append($r3);

        r8 = virtualinvoke r8.append(" at index ");

        r8 = virtualinvoke r8.append(i6);

        r8 = virtualinvoke r8.append(" does not have a valid layout_gravity - must be Gravity.LEFT, ");

        r8 = virtualinvoke r8.append("Gravity.RIGHT or Gravity.NO_GRAVITY");

        $r9 = virtualinvoke r8.toString();

        specialinvoke r7.<init>($r9);

        throw r7;

     label30:
        r10 = new java.lang.IllegalArgumentException;

        specialinvoke r10.<init>("DrawerLayout must be measured with MeasureSpec.EXACTLY.");

        goto label31;

     label31:
        throw r10;

     label32:
        return;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.os.Parcelable $r1;
        androidx.drawerlayout.widget.DrawerLayout$SavedState r2;
        int i0;
        android.view.View $r3;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        z0 = $r1 instanceof androidx.drawerlayout.widget.DrawerLayout$SavedState;

        if z0 != 0 goto label1;

        specialinvoke r0.onRestoreInstanceState($r1);

        return;

     label1:
        r2 = (androidx.drawerlayout.widget.DrawerLayout$SavedState) $r1;

        $r1 = virtualinvoke r2.getSuperState();

        specialinvoke r0.onRestoreInstanceState($r1);

        i0 = r2.openDrawerGravity;

        if i0 == 0 goto label2;

        i0 = r2.openDrawerGravity;

        $r3 = virtualinvoke r0.findDrawerWithGravity(i0);

        if $r3 == null goto label2;

        virtualinvoke r0.openDrawer($r3);

     label2:
        i0 = r2.lockModeLeft;

        if i0 == 3 goto label3;

        i0 = r2.lockModeLeft;

        virtualinvoke r0.setDrawerLockMode(i0, 3);

     label3:
        i0 = r2.lockModeRight;

        if i0 == 3 goto label4;

        i0 = r2.lockModeRight;

        virtualinvoke r0.setDrawerLockMode(i0, 5);

     label4:
        i0 = r2.lockModeStart;

        if i0 == 3 goto label5;

        i0 = r2.lockModeStart;

        virtualinvoke r0.setDrawerLockMode(i0, 8388611);

     label5:
        i0 = r2.lockModeEnd;

        if i0 == 3 goto label6;

        i0 = r2.lockModeEnd;

        virtualinvoke r0.setDrawerLockMode(i0, 8388613);

     label6:
        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        int $i0;
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.resolveShadowDrawables();

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.os.Parcelable $r2;
        android.view.ViewGroup$LayoutParams $r4;
        androidx.drawerlayout.widget.DrawerLayout$SavedState r1;
        int $i0, $i1, i2;
        android.view.View $r3;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r5;
        boolean z0, z1;

        r0 := @this;

        $r2 = specialinvoke r0.onSaveInstanceState();

        r1 = new androidx.drawerlayout.widget.DrawerLayout$SavedState;

        specialinvoke r1.<init>($r2);

        $i1 = virtualinvoke r0.getChildCount();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label7;

        $r3 = virtualinvoke r0.getChildAt(i2);

        $r4 = virtualinvoke $r3.getLayoutParams();

        r5 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r4;

        $i0 = r5.openState;

        z0 = 0;

        if $i0 != 1 goto label2;

        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        $i0 = r5.openState;

        if $i0 != 2 goto label4;

        z0 = 1;

     label4:
        if z1 != 0 goto label6;

        if z0 == 0 goto label5;

        goto label6;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $i1 = r5.gravity;

        r1.openDrawerGravity = $i1;

     label7:
        $i1 = r0.mLockModeLeft;

        r1.lockModeLeft = $i1;

        $i1 = r0.mLockModeRight;

        r1.lockModeRight = $i1;

        $i1 = r0.mLockModeStart;

        r1.lockModeStart = $i1;

        $i1 = r0.mLockModeEnd;

        r1.lockModeEnd = $i1;

        return r1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        androidx.customview.widget.ViewDragHelper r2;
        byte b2;
        android.view.MotionEvent $r1;
        int $i0, i1;
        float $f0, $f1, f2;
        android.view.View $r3;
        boolean z0, z1, $z2;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mLeftDragger;

        virtualinvoke r2.processTouchEvent($r1);

        r2 = r0.mRightDragger;

        virtualinvoke r2.processTouchEvent($r1);

        $i0 = virtualinvoke $r1.getAction();

        $i0 = $i0 & 255;

        z0 = 1;

        lookupswitch($i0)
        {
            case 0: goto label7;
            case 1: goto label3;
            case 2: goto label1;
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        return 1;

     label2:
        virtualinvoke r0.closeDrawers(1);

        r0.mDisallowInterceptRequested = 0;

        r0.mChildrenCanceledTouch = 0;

        return 1;

     label3:
        $f0 = virtualinvoke $r1.getX();

        $f1 = virtualinvoke $r1.getY();

        z1 = 1;

        r2 = r0.mLeftDragger;

        $i0 = (int) $f0;

        i1 = (int) $f1;

        $r3 = virtualinvoke r2.findTopChildUnder($i0, i1);

        if $r3 == null goto label6;

        $z2 = virtualinvoke r0.isContentView($r3);

        if $z2 == 0 goto label6;

        f2 = r0.mInitialMotionX;

        $f0 = $f0 - f2;

        f2 = r0.mInitialMotionY;

        $f1 = $f1 - f2;

        r2 = r0.mLeftDragger;

        $i0 = virtualinvoke r2.getTouchSlop();

        $f0 = $f0 * $f0;

        $f1 = $f1 * $f1;

        $f1 = $f0 + $f1;

        $i0 = $i0 * $i0;

        $f0 = (float) $i0;

        b2 = $f1 cmpg $f0;

        $i0 = (int) b2;

        if $i0 >= 0 goto label6;

        $r3 = virtualinvoke r0.findOpenDrawer();

        if $r3 == null goto label6;

        $i0 = virtualinvoke r0.getDrawerLockMode($r3);

        if $i0 != 2 goto label4;

        goto label5;

     label4:
        z0 = 0;

     label5:
        z1 = z0;

     label6:
        virtualinvoke r0.closeDrawers(z1);

        r0.mDisallowInterceptRequested = 0;

        return 1;

     label7:
        $f1 = virtualinvoke $r1.getX();

        $f0 = virtualinvoke $r1.getY();

        r0.mInitialMotionX = $f1;

        r0.mInitialMotionY = $f0;

        r0.mDisallowInterceptRequested = 0;

        r0.mChildrenCanceledTouch = 0;

        return 1;
    }

    public void openDrawer(int)
    {
        int $i0;
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this;

        $i0 := @parameter0;

        virtualinvoke r0.openDrawer($i0, 1);

        return;
    }

    public void openDrawer(int, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int $i0;
        android.view.View $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $z0 := @parameter1;

        $r2 = virtualinvoke r0.findDrawerWithGravity($i0);

        if $r2 == null goto label1;

        virtualinvoke r0.openDrawer($r2, $z0);

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("No drawer view found with gravity ");

        $r4 = androidx.drawerlayout.widget.DrawerLayout.gravityToString($i0);

        $r3 = virtualinvoke $r3.append($r4);

        $r4 = virtualinvoke $r3.toString();

        specialinvoke $r1.<init>($r4);

        throw $r1;
    }

    public void openDrawer(android.view.View)
    {
        android.view.View $r1;
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this;

        $r1 := @parameter0;

        virtualinvoke r0.openDrawer($r1, 1);

        return;
    }

    public void openDrawer(android.view.View, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        androidx.customview.widget.ViewDragHelper $r4;
        android.view.ViewGroup$LayoutParams $r2;
        java.lang.IllegalArgumentException r5;
        int $i0, $i1;
        android.view.View $r1;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        boolean $z0, $z1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r3;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        $z1 = virtualinvoke r0.isDrawerView($r1);

        if $z1 == 0 goto label5;

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        $z1 = r0.mFirstLayout;

        if $z1 == 0 goto label1;

        r3.onScreen = 1.0F;

        r3.openState = 1;

        specialinvoke r0.updateChildrenImportantForAccessibility($r1, 1);

        goto label4;

     label1:
        if $z0 == 0 goto label3;

        $i0 = r3.openState;

        $i0 = $i0 | 2;

        r3.openState = $i0;

        $z0 = virtualinvoke r0.checkDrawerViewAbsoluteGravity($r1, 3);

        if $z0 == 0 goto label2;

        $r4 = r0.mLeftDragger;

        $i0 = virtualinvoke $r1.getTop();

        virtualinvoke $r4.smoothSlideViewTo($r1, 0, $i0);

        goto label4;

     label2:
        $r4 = r0.mRightDragger;

        $i0 = virtualinvoke r0.getWidth();

        $i1 = virtualinvoke $r1.getWidth();

        $i0 = $i0 - $i1;

        $i1 = virtualinvoke $r1.getTop();

        virtualinvoke $r4.smoothSlideViewTo($r1, $i0, $i1);

        goto label4;

     label3:
        virtualinvoke r0.moveDrawerToOffset($r1, 1.0F);

        $i0 = r3.gravity;

        virtualinvoke r0.updateDrawerState($i0, 0, $r1);

        virtualinvoke $r1.setVisibility(0);

     label4:
        virtualinvoke r0.invalidate();

        return;

     label5:
        r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $r6 = virtualinvoke $r6.append("View ");

        $r6 = virtualinvoke $r6.append($r1);

        $r6 = virtualinvoke $r6.append(" is not a sliding drawer");

        $r7 = virtualinvoke $r6.toString();

        specialinvoke r5.<init>($r7);

        throw r5;
    }

    public void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
    {
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $r1;
        androidx.drawerlayout.widget.DrawerLayout r0;
        java.util.List $r2;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.mListeners;

        if $r2 != null goto label2;

        return;

     label2:
        interfaceinvoke $r2.remove($r1);

        return;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        specialinvoke r0.requestDisallowInterceptTouchEvent($z0);

        r0.mDisallowInterceptRequested = $z0;

        if $z0 == 0 goto label1;

        virtualinvoke r0.closeDrawers(1);

     label1:
        return;
    }

    public void requestLayout()
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.mInLayout;

        if $z0 != 0 goto label1;

        specialinvoke r0.requestLayout();

     label1:
        return;
    }

    public void setChildInsets(java.lang.Object, boolean)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        java.lang.Object $r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        r0.mLastInsets = $r1;

        r0.mDrawStatusBarBackground = $z0;

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.getBackground();

        if $r2 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        virtualinvoke r0.setWillNotDraw($z0);

        virtualinvoke r0.requestLayout();

        return;
    }

    public void setDrawerElevation(float)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int i0, $i1;
        float $f0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this;

        $f0 := @parameter0;

        r0.mDrawerElevation = $f0;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.getChildCount();

        if i0 >= $i1 goto label3;

        $r1 = virtualinvoke r0.getChildAt(i0);

        $z0 = virtualinvoke r0.isDrawerView($r1);

        if $z0 == 0 goto label2;

        $f0 = r0.mDrawerElevation;

        androidx.core.view.ViewCompat.setElevation($r1, $f0);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    public void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener)
    {
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $r1, $r2;
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mListener;

        if $r2 == null goto label1;

        virtualinvoke r0.removeDrawerListener($r2);

     label1:
        if $r1 == null goto label2;

        virtualinvoke r0.addDrawerListener($r1);

     label2:
        r0.mListener = $r1;

        return;
    }

    public void setDrawerLockMode(int)
    {
        int $i0;
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this;

        $i0 := @parameter0;

        virtualinvoke r0.setDrawerLockMode($i0, 3);

        virtualinvoke r0.setDrawerLockMode($i0, 5);

        return;
    }

    public void setDrawerLockMode(int, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        androidx.customview.widget.ViewDragHelper r1;
        int $i0, $i1, $i2;
        android.view.View $r2;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 = androidx.core.view.ViewCompat.getLayoutDirection(r0);

        $i2 = androidx.core.view.GravityCompat.getAbsoluteGravity($i1, $i2);

        lookupswitch($i1)
        {
            case 3: goto label05;
            case 5: goto label04;
            case 8388611: goto label03;
            case 8388613: goto label02;
            default: goto label01;
        };

     label01:
        goto label06;

     label02:
        r0.mLockModeEnd = $i0;

        goto label06;

     label03:
        r0.mLockModeStart = $i0;

        goto label06;

     label04:
        r0.mLockModeRight = $i0;

        goto label06;

     label05:
        r0.mLockModeLeft = $i0;

     label06:
        if $i0 == 0 goto label09;

        if $i2 != 3 goto label07;

        r1 = r0.mLeftDragger;

        goto label08;

     label07:
        r1 = r0.mRightDragger;

     label08:
        virtualinvoke r1.cancel();

     label09:
        lookupswitch($i0)
        {
            case 1: goto label12;
            case 2: goto label11;
            default: goto label10;
        };

     label10:
        return;

     label11:
        $r2 = virtualinvoke r0.findDrawerWithGravity($i2);

        if $r2 == null goto label13;

        virtualinvoke r0.openDrawer($r2);

        return;

     label12:
        $r2 = virtualinvoke r0.findDrawerWithGravity($i2);

        if $r2 == null goto label13;

        virtualinvoke r0.closeDrawer($r2);

     label13:
        return;
    }

    public void setDrawerLockMode(int, android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams $r2;
        java.lang.IllegalArgumentException r4;
        int $i0, i1;
        android.view.View $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        boolean $z0;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r3;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $z0 = virtualinvoke r0.isDrawerView($r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        i1 = r3.gravity;

        virtualinvoke r0.setDrawerLockMode($i0, i1);

        return;

     label1:
        r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r5 = virtualinvoke $r5.append("View ");

        $r5 = virtualinvoke $r5.append($r1);

        $r5 = virtualinvoke $r5.append(" is not a ");

        $r5 = virtualinvoke $r5.append("drawer with appropriate layout_gravity");

        $r6 = virtualinvoke $r5.toString();

        specialinvoke r4.<init>($r6);

        throw r4;
    }

    public void setDrawerShadow(int, int)
    {
        android.content.Context $r1;
        androidx.drawerlayout.widget.DrawerLayout r0;
        int $i0, $i1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $r1 = virtualinvoke r0.getContext();

        $r2 = androidx.core.content.ContextCompat.getDrawable($r1, $i0);

        virtualinvoke r0.setDrawerShadow($r2, $i1);

        return;
    }

    public void setDrawerShadow(android.graphics.drawable.Drawable, int)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        int $i0, $i1;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $z0 = androidx.drawerlayout.widget.DrawerLayout.SET_DRAWER_SHADOW_FROM_ELEVATION;

        if $z0 == 0 goto label1;

        return;

     label1:
        $i1 = $i0 & 8388611;

        if $i1 != 8388611 goto label2;

        r0.mShadowStart = $r1;

        goto label5;

     label2:
        $i1 = $i0 & 8388613;

        if $i1 != 8388613 goto label3;

        r0.mShadowEnd = $r1;

        goto label5;

     label3:
        $i1 = $i0 & 3;

        if $i1 != 3 goto label4;

        r0.mShadowLeft = $r1;

        goto label5;

     label4:
        $i0 = $i0 & 5;

        if $i0 != 5 goto label6;

        r0.mShadowRight = $r1;

     label5:
        specialinvoke r0.resolveShadowDrawables();

        virtualinvoke r0.invalidate();

     label6:
        return;
    }

    public void setDrawerTitle(int, java.lang.CharSequence)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        java.lang.CharSequence $r1;
        int $i0, $i1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $i1 = androidx.core.view.ViewCompat.getLayoutDirection(r0);

        $i0 = androidx.core.view.GravityCompat.getAbsoluteGravity($i0, $i1);

        if $i0 != 3 goto label1;

        r0.mTitleLeft = $r1;

        return;

     label1:
        if $i0 != 5 goto label2;

        r0.mTitleRight = $r1;

     label2:
        return;
    }

    void setDrawerViewOffset(android.view.View, float)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        byte $b0;
        android.view.ViewGroup$LayoutParams $r2;
        android.view.View $r1;
        float $f0, $f1;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r3;

        r0 := @this;

        $r1 := @parameter0;

        $f0 := @parameter1;

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r2;

        $f1 = r3.onScreen;

        $b0 = $f0 cmpl $f1;

        if $b0 != 0 goto label1;

        return;

     label1:
        r3.onScreen = $f0;

        virtualinvoke r0.dispatchOnDrawerSlide($r1, $f0);

        return;
    }

    public void setScrimColor(int)
    {
        int $i0;
        androidx.drawerlayout.widget.DrawerLayout r0;

        r0 := @this;

        $i0 := @parameter0;

        r0.mScrimColor = $i0;

        virtualinvoke r0.invalidate();

        return;
    }

    public void setStatusBarBackground(int)
    {
        android.content.Context $r1;
        androidx.drawerlayout.widget.DrawerLayout r0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this;

        $i0 := @parameter0;

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.getContext();

        $r2 = androidx.core.content.ContextCompat.getDrawable($r1, $i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        r0.mStatusBarBackground = $r2;

        virtualinvoke r0.invalidate();

        return;
    }

    public void setStatusBarBackground(android.graphics.drawable.Drawable)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r1 := @parameter0;

        r0.mStatusBarBackground = $r1;

        virtualinvoke r0.invalidate();

        return;
    }

    public void setStatusBarBackgroundColor(int)
    {
        int $i0;
        androidx.drawerlayout.widget.DrawerLayout r0;
        android.graphics.drawable.ColorDrawable $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r1.<init>($i0);

        r0.mStatusBarBackground = $r1;

        virtualinvoke r0.invalidate();

        return;
    }

    void updateDrawerState(int, int, android.view.View)
    {
        androidx.drawerlayout.widget.DrawerLayout r0;
        androidx.customview.widget.ViewDragHelper r2;
        android.view.ViewGroup$LayoutParams $r3;
        androidx.drawerlayout.widget.DrawerLayout$DrawerListener $r7;
        java.util.List r5;
        byte b3, b4;
        int $i0, $i1, $i2;
        android.view.View $r1;
        float f0;
        java.lang.Object $r6;
        androidx.drawerlayout.widget.DrawerLayout$LayoutParams r4;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $r1 := @parameter2;

        r2 = r0.mLeftDragger;

        $i0 = virtualinvoke r2.getViewDragState();

        r2 = r0.mRightDragger;

        $i2 = virtualinvoke r2.getViewDragState();

        if $i0 == 1 goto label4;

        if $i2 != 1 goto label1;

        goto label4;

     label1:
        if $i0 == 2 goto label3;

        if $i2 != 2 goto label2;

        goto label3;

     label2:
        b3 = 0;

        goto label5;

     label3:
        b3 = 2;

        goto label5;

     label4:
        b3 = 1;

     label5:
        if $r1 == null goto label7;

        if $i1 != 0 goto label7;

        $r3 = virtualinvoke $r1.getLayoutParams();

        r4 = (androidx.drawerlayout.widget.DrawerLayout$LayoutParams) $r3;

        f0 = r4.onScreen;

        b4 = f0 cmpl 0.0F;

        if b4 != 0 goto label6;

        virtualinvoke r0.dispatchOnDrawerClosed($r1);

        goto label7;

     label6:
        f0 = r4.onScreen;

        b4 = f0 cmpl 1.0F;

        if b4 != 0 goto label7;

        virtualinvoke r0.dispatchOnDrawerOpened($r1);

     label7:
        $i0 = r0.mDrawerState;

        if b3 == $i0 goto label9;

        r0.mDrawerState = b3;

        r5 = r0.mListeners;

        if r5 == null goto label9;

        $i0 = interfaceinvoke r5.size();

        $i0 = $i0 + -1;

     label8:
        if $i0 < 0 goto label9;

        r5 = r0.mListeners;

        $r6 = interfaceinvoke r5.get($i0);

        $r7 = (androidx.drawerlayout.widget.DrawerLayout$DrawerListener) $r6;

        interfaceinvoke $r7.onDrawerStateChanged(b3);

        $i0 = $i0 + -1;

        goto label8;

     label9:
        return;
    }
}
