class androidx.appcompat.widget.SearchView$UpdatableTouchDelegate extends android.view.TouchDelegate
{
    private final android.graphics.Rect mActualBounds;
    private boolean mDelegateTargeted;
    private final android.view.View mDelegateView;
    private final int mSlop;
    private final android.graphics.Rect mSlopBounds;
    private final android.graphics.Rect mTargetBounds;

    public void <init>(android.graphics.Rect, android.graphics.Rect, android.view.View)
    {
        android.graphics.Rect $r1, $r2, $r6;
        android.content.Context $r4;
        android.view.ViewConfiguration $r5;
        androidx.appcompat.widget.SearchView$UpdatableTouchDelegate r0;
        int $i0;
        android.view.View $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        specialinvoke r0.<init>($r1, $r3);

        $r4 = virtualinvoke $r3.getContext();

        $r5 = android.view.ViewConfiguration.get($r4);

        $i0 = virtualinvoke $r5.getScaledTouchSlop();

        r0.mSlop = $i0;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<init>();

        r0.mTargetBounds = $r6;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<init>();

        r0.mSlopBounds = $r6;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<init>();

        r0.mActualBounds = $r6;

        virtualinvoke r0.setBounds($r1, $r2);

        r0.mDelegateView = $r3;

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.graphics.Rect $r2;
        androidx.appcompat.widget.SearchView$UpdatableTouchDelegate r0;
        android.view.MotionEvent $r1;
        int i0, i1, $i2;
        float $f0, $f1;
        android.view.View $r3;
        boolean z0, z1, $z2;

        r0 := @this;

        $r1 := @parameter0;

        $f0 = virtualinvoke $r1.getX();

        i0 = (int) $f0;

        $f0 = virtualinvoke $r1.getY();

        i1 = (int) $f0;

        z0 = 0;

        z1 = 1;

        $i2 = virtualinvoke $r1.getAction();

        lookupswitch($i2)
        {
            case 0: goto label4;
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        goto label5;

     label2:
        z0 = r0.mDelegateTargeted;

        r0.mDelegateTargeted = 0;

        goto label5;

     label3:
        z0 = r0.mDelegateTargeted;

        if z0 == 0 goto label5;

        $r2 = r0.mSlopBounds;

        $z2 = virtualinvoke $r2.contains(i0, i1);

        if $z2 != 0 goto label5;

        z1 = 0;

        goto label5;

     label4:
        $r2 = r0.mTargetBounds;

        $z2 = virtualinvoke $r2.contains(i0, i1);

        if $z2 == 0 goto label5;

        r0.mDelegateTargeted = 1;

        z0 = 1;

     label5:
        if z0 == 0 goto label8;

        if z1 == 0 goto label6;

        $r2 = r0.mActualBounds;

        z0 = virtualinvoke $r2.contains(i0, i1);

        if z0 != 0 goto label6;

        $r3 = r0.mDelegateView;

        i1 = virtualinvoke $r3.getWidth();

        i1 = i1 / 2;

        $f0 = (float) i1;

        $r3 = r0.mDelegateView;

        i1 = virtualinvoke $r3.getHeight();

        i1 = i1 / 2;

        $f1 = (float) i1;

        virtualinvoke $r1.setLocation($f0, $f1);

        goto label7;

     label6:
        $r2 = r0.mActualBounds;

        $i2 = $r2.left;

        i0 = i0 - $i2;

        $f0 = (float) i0;

        $r2 = r0.mActualBounds;

        i0 = $r2.top;

        i1 = i1 - i0;

        $f1 = (float) i1;

        virtualinvoke $r1.setLocation($f0, $f1);

     label7:
        $r3 = r0.mDelegateView;

        z0 = virtualinvoke $r3.dispatchTouchEvent($r1);

        return z0;

     label8:
        return 0;
    }

    public void setBounds(android.graphics.Rect, android.graphics.Rect)
    {
        android.graphics.Rect $r1, $r2, $r3;
        androidx.appcompat.widget.SearchView$UpdatableTouchDelegate r0;
        int $i0, $i1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = r0.mTargetBounds;

        virtualinvoke $r3.set($r1);

        $r3 = r0.mSlopBounds;

        virtualinvoke $r3.set($r1);

        $r1 = r0.mSlopBounds;

        $i1 = r0.mSlop;

        $i0 = neg $i1;

        $i1 = neg $i1;

        virtualinvoke $r1.inset($i0, $i1);

        $r1 = r0.mActualBounds;

        virtualinvoke $r1.set($r2);

        return;
    }
}
