class androidx.lifecycle.ClassesInfoCache$CallbackInfo extends java.lang.Object
{
    final java.util.Map mEventToHandlers;
    final java.util.Map mHandlerToEvent;

    void <init>(java.util.Map)
    {
        java.util.Map$Entry r6;
        androidx.lifecycle.ClassesInfoCache$CallbackInfo r0;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.util.HashMap $r2;
        androidx.lifecycle.Lifecycle$Event r7;
        java.util.ArrayList $r9;
        java.util.List r8;
        java.util.Map r1;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.mHandlerToEvent = r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<init>();

        r0.mEventToHandlers = $r2;

        $r3 = interfaceinvoke r1.entrySet();

        $r4 = interfaceinvoke $r3.iterator();

     label1:
        $z0 = interfaceinvoke $r4.hasNext();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.next();

        r6 = (java.util.Map$Entry) $r5;

        $r5 = interfaceinvoke r6.getValue();

        r7 = (androidx.lifecycle.Lifecycle$Event) $r5;

        r1 = r0.mEventToHandlers;

        $r5 = interfaceinvoke r1.get(r7);

        r8 = (java.util.List) $r5;

        if r8 != null goto label2;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<init>();

        r8 = $r9;

        r1 = r0.mEventToHandlers;

        interfaceinvoke r1.put(r7, $r9);

     label2:
        $r5 = interfaceinvoke r6.getKey();

        interfaceinvoke r8.add($r5);

        goto label1;

     label3:
        return;
    }

    private static void invokeMethodsForEvent(java.util.List, androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event, java.lang.Object)
    {
        java.util.List r0;
        androidx.lifecycle.LifecycleOwner $r1;
        int $i0;
        java.lang.Object $r3, $r4;
        androidx.lifecycle.Lifecycle$Event $r2;
        androidx.lifecycle.ClassesInfoCache$MethodReference $r5;

        r0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        $r3 := @parameter3;

        if r0 == null goto label2;

        $i0 = interfaceinvoke r0.size();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label2;

        $r4 = interfaceinvoke r0.get($i0);

        $r5 = (androidx.lifecycle.ClassesInfoCache$MethodReference) $r4;

        virtualinvoke $r5.invokeCallback($r1, $r2, $r3);

        $i0 = $i0 + -1;

        goto label1;

     label2:
        return;
    }

    void invokeCallbacks(androidx.lifecycle.LifecycleOwner, androidx.lifecycle.Lifecycle$Event, java.lang.Object)
    {
        androidx.lifecycle.ClassesInfoCache$CallbackInfo r0;
        androidx.lifecycle.Lifecycle$Event $r2, $r4;
        java.util.List $r7;
        androidx.lifecycle.LifecycleOwner $r1;
        java.util.Map $r5;
        java.lang.Object $r3, $r6;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r5 = r0.mEventToHandlers;

        $r6 = interfaceinvoke $r5.get($r2);

        $r7 = (java.util.List) $r6;

        androidx.lifecycle.ClassesInfoCache$CallbackInfo.invokeMethodsForEvent($r7, $r1, $r2, $r3);

        $r5 = r0.mEventToHandlers;

        $r4 = androidx.lifecycle.Lifecycle$Event.ON_ANY;

        $r6 = interfaceinvoke $r5.get($r4);

        $r7 = (java.util.List) $r6;

        androidx.lifecycle.ClassesInfoCache$CallbackInfo.invokeMethodsForEvent($r7, $r1, $r2, $r3);

        return;
    }
}
