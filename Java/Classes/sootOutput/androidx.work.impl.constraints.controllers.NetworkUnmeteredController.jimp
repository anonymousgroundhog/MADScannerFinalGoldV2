public class androidx.work.impl.constraints.controllers.NetworkUnmeteredController extends androidx.work.impl.constraints.controllers.ConstraintController
{

    public void <init>(android.content.Context, androidx.work.impl.utils.taskexecutor.TaskExecutor)
    {
        androidx.work.impl.utils.taskexecutor.TaskExecutor $r2;
        android.content.Context $r1;
        androidx.work.impl.constraints.controllers.NetworkUnmeteredController r0;
        androidx.work.impl.constraints.trackers.Trackers $r3;
        androidx.work.impl.constraints.trackers.NetworkStateTracker $r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = androidx.work.impl.constraints.trackers.Trackers.getInstance($r1, $r2);

        $r4 = virtualinvoke $r3.getNetworkStateTracker();

        specialinvoke r0.<init>($r4);

        return;
    }

    boolean hasConstraint(androidx.work.impl.model.WorkSpec)
    {
        androidx.work.NetworkType $r3, $r4;
        androidx.work.impl.constraints.controllers.NetworkUnmeteredController r0;
        androidx.work.Constraints $r2;
        int $i0;
        androidx.work.impl.model.WorkSpec $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = $r1.constraints;

        $r3 = virtualinvoke $r2.getRequiredNetworkType();

        $r4 = androidx.work.NetworkType.UNMETERED;

        if $r3 == $r4 goto label2;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 30 goto label1;

        $r2 = $r1.constraints;

        $r3 = virtualinvoke $r2.getRequiredNetworkType();

        $r4 = androidx.work.NetworkType.TEMPORARILY_UNMETERED;

        if $r3 != $r4 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    boolean isConstrained(androidx.work.impl.constraints.NetworkState)
    {
        androidx.work.impl.constraints.controllers.NetworkUnmeteredController r0;
        androidx.work.impl.constraints.NetworkState $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = virtualinvoke $r1.isConnected();

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r1.isMetered();

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    volatile boolean isConstrained(java.lang.Object)
    {
        androidx.work.impl.constraints.controllers.NetworkUnmeteredController r0;
        androidx.work.impl.constraints.NetworkState $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = (androidx.work.impl.constraints.NetworkState) $r1;

        $z0 = virtualinvoke r0.isConstrained($r2);

        return $z0;
    }
}
