class androidx.customview.widget.FocusStrategy extends java.lang.Object
{

    private void <init>()
    {
        androidx.customview.widget.FocusStrategy r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    private static boolean beamBeats(int, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        android.graphics.Rect $r0, $r1, $r2;
        int $i0, $i1;
        boolean $z0, $z1;

        $i0 := @parameter0;

        $r0 := @parameter1;

        $r1 := @parameter2;

        $r2 := @parameter3;

        $z0 = androidx.customview.widget.FocusStrategy.beamsOverlap($i0, $r0, $r1);

        $z1 = androidx.customview.widget.FocusStrategy.beamsOverlap($i0, $r0, $r2);

        if $z1 != 0 goto label5;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z0 = androidx.customview.widget.FocusStrategy.isToDirectionOf($i0, $r0, $r2);

        if $z0 != 0 goto label2;

        return 1;

     label2:
        if $i0 == 17 goto label4;

        if $i0 != 66 goto label3;

        return 1;

     label3:
        $i1 = androidx.customview.widget.FocusStrategy.majorAxisDistance($i0, $r0, $r1);

        $i0 = androidx.customview.widget.FocusStrategy.majorAxisDistanceToFarEdge($i0, $r0, $r2);

        if $i1 >= $i0 goto label5;

     label4:
        return 1;

     label5:
        return 0;
    }

    private static boolean beamsOverlap(int, android.graphics.Rect, android.graphics.Rect)
    {
        android.graphics.Rect $r0, $r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0;

        $r0 := @parameter1;

        $r1 := @parameter2;

        lookupswitch($i0)
        {
            case 17: goto label4;
            case 33: goto label2;
            case 66: goto label4;
            case 130: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<init>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i0 = $r1.right;

        $i1 = $r0.left;

        if $i0 < $i1 goto label3;

        $i0 = $r1.left;

        $i1 = $r0.right;

        if $i0 > $i1 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        $i0 = $r1.bottom;

        $i1 = $r0.top;

        if $i0 < $i1 goto label5;

        $i0 = $r1.top;

        $i1 = $r0.bottom;

        if $i0 > $i1 goto label5;

        return 1;

     label5:
        return 0;
    }

    public static java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object, androidx.customview.widget.FocusStrategy$CollectionAdapter, androidx.customview.widget.FocusStrategy$BoundsAdapter, java.lang.Object, android.graphics.Rect, int)
    {
        android.graphics.Rect $r4, r5, r6;
        androidx.customview.widget.FocusStrategy$CollectionAdapter r1;
        androidx.customview.widget.FocusStrategy$BoundsAdapter r2;
        java.lang.IllegalArgumentException r7;
        int $i0, $i1, i2;
        java.lang.Object r0, r3, r8, $r9;
        boolean $z0;

        r0 := @parameter0;

        r1 := @parameter1;

        r2 := @parameter2;

        r3 := @parameter3;

        $r4 := @parameter4;

        $i0 := @parameter5;

        r5 = new android.graphics.Rect;

        specialinvoke r5.<init>($r4);

        lookupswitch($i0)
        {
            case 17: goto label05;
            case 33: goto label04;
            case 66: goto label03;
            case 130: goto label02;
            default: goto label01;
        };

     label01:
        r7 = new java.lang.IllegalArgumentException;

        specialinvoke r7.<init>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw r7;

     label02:
        $i1 = virtualinvoke $r4.height();

        $i1 = $i1 + 1;

        $i1 = neg $i1;

        virtualinvoke r5.offset(0, $i1);

        goto label06;

     label03:
        $i1 = virtualinvoke $r4.width();

        $i1 = $i1 + 1;

        $i1 = neg $i1;

        virtualinvoke r5.offset($i1, 0);

        goto label06;

     label04:
        $i1 = virtualinvoke $r4.height();

        $i1 = $i1 + 1;

        virtualinvoke r5.offset(0, $i1);

        goto label06;

     label05:
        $i1 = virtualinvoke $r4.width();

        $i1 = $i1 + 1;

        virtualinvoke r5.offset($i1, 0);

     label06:
        r8 = null;

        $i1 = interfaceinvoke r1.size(r0);

        r6 = new android.graphics.Rect;

        specialinvoke r6.<init>();

        i2 = 0;

     label07:
        if i2 >= $i1 goto label10;

        $r9 = interfaceinvoke r1.get(r0, i2);

        if $r9 != r3 goto label08;

        goto label09;

     label08:
        interfaceinvoke r2.obtainBounds($r9, r6);

        $z0 = androidx.customview.widget.FocusStrategy.isBetterCandidate($i0, $r4, r6, r5);

        if $z0 == 0 goto label09;

        virtualinvoke r5.set(r6);

        r8 = $r9;

     label09:
        i2 = i2 + 1;

        goto label07;

     label10:
        return r8;
    }

    public static java.lang.Object findNextFocusInRelativeDirection(java.lang.Object, androidx.customview.widget.FocusStrategy$CollectionAdapter, androidx.customview.widget.FocusStrategy$BoundsAdapter, java.lang.Object, int, boolean, boolean)
    {
        androidx.customview.widget.FocusStrategy$CollectionAdapter r1;
        androidx.customview.widget.FocusStrategy$BoundsAdapter r2;
        java.lang.IllegalArgumentException $r7;
        java.util.ArrayList r4;
        int $i0, $i1, i2;
        java.lang.Object r0, r3, $r5;
        androidx.customview.widget.FocusStrategy$SequentialComparator r6;
        boolean $z0, $z1;

        r0 := @parameter0;

        r1 := @parameter1;

        r2 := @parameter2;

        r3 := @parameter3;

        $i0 := @parameter4;

        $z0 := @parameter5;

        $z1 := @parameter6;

        $i1 = interfaceinvoke r1.size(r0);

        r4 = new java.util.ArrayList;

        specialinvoke r4.<init>($i1);

        i2 = 0;

     label1:
        if i2 >= $i1 goto label2;

        $r5 = interfaceinvoke r1.get(r0, i2);

        virtualinvoke r4.add($r5);

        i2 = i2 + 1;

        goto label1;

     label2:
        r6 = new androidx.customview.widget.FocusStrategy$SequentialComparator;

        specialinvoke r6.<init>($z0, r2);

        java.util.Collections.sort(r4, r6);

        lookupswitch($i0)
        {
            case 1: goto label5;
            case 2: goto label4;
            default: goto label3;
        };

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<init>("direction must be one of {FOCUS_FORWARD, FOCUS_BACKWARD}.");

        throw $r7;

     label4:
        r0 = androidx.customview.widget.FocusStrategy.getNextFocusable(r3, r4, $z1);

        return r0;

     label5:
        r0 = androidx.customview.widget.FocusStrategy.getPreviousFocusable(r3, r4, $z1);

        return r0;
    }

    private static java.lang.Object getNextFocusable(java.lang.Object, java.util.ArrayList, boolean)
    {
        int $i0, i1;
        java.lang.Object r0;
        java.util.ArrayList r1;
        boolean $z0;

        r0 := @parameter0;

        r1 := @parameter1;

        $z0 := @parameter2;

        $i0 = virtualinvoke r1.size();

        if r0 != null goto label1;

        i1 = -1;

        goto label2;

     label1:
        i1 = virtualinvoke r1.lastIndexOf(r0);

     label2:
        i1 = i1 + 1;

        if i1 >= $i0 goto label3;

        r0 = virtualinvoke r1.get(i1);

        return r0;

     label3:
        if $z0 == 0 goto label4;

        if $i0 <= 0 goto label4;

        r0 = virtualinvoke r1.get(0);

        return r0;

     label4:
        return null;
    }

    private static java.lang.Object getPreviousFocusable(java.lang.Object, java.util.ArrayList, boolean)
    {
        int $i0, i1;
        java.lang.Object r0;
        java.util.ArrayList r1;
        boolean $z0;

        r0 := @parameter0;

        r1 := @parameter1;

        $z0 := @parameter2;

        $i0 = virtualinvoke r1.size();

        if r0 != null goto label1;

        i1 = $i0;

        goto label2;

     label1:
        i1 = virtualinvoke r1.indexOf(r0);

     label2:
        i1 = i1 + -1;

        if i1 < 0 goto label3;

        r0 = virtualinvoke r1.get(i1);

        return r0;

     label3:
        if $z0 == 0 goto label4;

        if $i0 <= 0 goto label4;

        i1 = -1;

        $i0 = $i0 + i1;

        r0 = virtualinvoke r1.get($i0);

        return r0;

     label4:
        return null;
    }

    private static int getWeightedDistanceFor(int, int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 = $i0 * 13;

        $i0 = $i2 * $i0;

        $i1 = $i1 * $i1;

        $i0 = $i0 + $i1;

        return $i0;
    }

    private static boolean isBetterCandidate(int, android.graphics.Rect, android.graphics.Rect, android.graphics.Rect)
    {
        android.graphics.Rect $r0, $r1, $r2;
        int $i0, $i1, $i2;
        boolean $z0;

        $i0 := @parameter0;

        $r0 := @parameter1;

        $r1 := @parameter2;

        $r2 := @parameter3;

        $z0 = androidx.customview.widget.FocusStrategy.isCandidate($r0, $r1, $i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z0 = androidx.customview.widget.FocusStrategy.isCandidate($r0, $r2, $i0);

        if $z0 != 0 goto label2;

        return 1;

     label2:
        $z0 = androidx.customview.widget.FocusStrategy.beamBeats($i0, $r0, $r1, $r2);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $z0 = androidx.customview.widget.FocusStrategy.beamBeats($i0, $r0, $r2, $r1);

        if $z0 == 0 goto label4;

        return 0;

     label4:
        $i1 = androidx.customview.widget.FocusStrategy.majorAxisDistance($i0, $r0, $r1);

        $i2 = androidx.customview.widget.FocusStrategy.minorAxisDistance($i0, $r0, $r1);

        $i1 = androidx.customview.widget.FocusStrategy.getWeightedDistanceFor($i1, $i2);

        $i2 = androidx.customview.widget.FocusStrategy.majorAxisDistance($i0, $r0, $r2);

        $i0 = androidx.customview.widget.FocusStrategy.minorAxisDistance($i0, $r0, $r2);

        $i0 = androidx.customview.widget.FocusStrategy.getWeightedDistanceFor($i2, $i0);

        if $i1 >= $i0 goto label5;

        return 1;

     label5:
        return 0;
    }

    private static boolean isCandidate(android.graphics.Rect, android.graphics.Rect, int)
    {
        android.graphics.Rect $r0, $r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $i0 := @parameter2;

        lookupswitch($i0)
        {
            case 17: goto label11;
            case 33: goto label08;
            case 66: goto label05;
            case 130: goto label02;
            default: goto label01;
        };

     label01:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<init>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label02:
        $i0 = $r0.top;

        $i1 = $r1.top;

        if $i0 < $i1 goto label03;

        $i0 = $r0.bottom;

        $i1 = $r1.top;

        if $i0 > $i1 goto label04;

     label03:
        $i0 = $r0.bottom;

        $i1 = $r1.bottom;

        if $i0 >= $i1 goto label04;

        return 1;

     label04:
        return 0;

     label05:
        $i0 = $r0.left;

        $i1 = $r1.left;

        if $i0 < $i1 goto label06;

        $i0 = $r0.right;

        $i1 = $r1.left;

        if $i0 > $i1 goto label07;

     label06:
        $i0 = $r0.right;

        $i1 = $r1.right;

        if $i0 >= $i1 goto label07;

        return 1;

     label07:
        return 0;

     label08:
        $i0 = $r0.bottom;

        $i1 = $r1.bottom;

        if $i0 > $i1 goto label09;

        $i0 = $r0.top;

        $i1 = $r1.bottom;

        if $i0 < $i1 goto label10;

     label09:
        $i0 = $r0.top;

        $i1 = $r1.top;

        if $i0 <= $i1 goto label10;

        return 1;

     label10:
        return 0;

     label11:
        $i0 = $r0.right;

        $i1 = $r1.right;

        if $i0 > $i1 goto label12;

        $i0 = $r0.left;

        $i1 = $r1.right;

        if $i0 < $i1 goto label13;

     label12:
        $i0 = $r0.left;

        $i1 = $r1.left;

        if $i0 <= $i1 goto label13;

        return 1;

     label13:
        return 0;
    }

    private static boolean isToDirectionOf(int, android.graphics.Rect, android.graphics.Rect)
    {
        android.graphics.Rect $r0, $r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0;

        $r0 := @parameter1;

        $r1 := @parameter2;

        lookupswitch($i0)
        {
            case 17: goto label8;
            case 33: goto label6;
            case 66: goto label4;
            case 130: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<init>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i0 = $r0.bottom;

        $i1 = $r1.top;

        if $i0 > $i1 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        $i0 = $r0.right;

        $i1 = $r1.left;

        if $i0 > $i1 goto label5;

        return 1;

     label5:
        return 0;

     label6:
        $i0 = $r0.top;

        $i1 = $r1.bottom;

        if $i0 < $i1 goto label7;

        return 1;

     label7:
        return 0;

     label8:
        $i0 = $r0.left;

        $i1 = $r1.right;

        if $i0 < $i1 goto label9;

        return 1;

     label9:
        return 0;
    }

    private static int majorAxisDistance(int, android.graphics.Rect, android.graphics.Rect)
    {
        int $i0;
        android.graphics.Rect $r0, $r1;

        $i0 := @parameter0;

        $r0 := @parameter1;

        $r1 := @parameter2;

        $i0 = androidx.customview.widget.FocusStrategy.majorAxisDistanceRaw($i0, $r0, $r1);

        $i0 = java.lang.Math.max(0, $i0);

        return $i0;
    }

    private static int majorAxisDistanceRaw(int, android.graphics.Rect, android.graphics.Rect)
    {
        android.graphics.Rect $r0, $r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0;

        $r0 := @parameter1;

        $r1 := @parameter2;

        lookupswitch($i0)
        {
            case 17: goto label5;
            case 33: goto label4;
            case 66: goto label3;
            case 130: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<init>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i0 = $r1.top;

        $i1 = $r0.bottom;

        $i0 = $i0 - $i1;

        return $i0;

     label3:
        $i0 = $r1.left;

        $i1 = $r0.right;

        $i0 = $i0 - $i1;

        return $i0;

     label4:
        $i0 = $r0.top;

        $i1 = $r1.bottom;

        $i0 = $i0 - $i1;

        return $i0;

     label5:
        $i0 = $r0.left;

        $i1 = $r1.right;

        $i0 = $i0 - $i1;

        return $i0;
    }

    private static int majorAxisDistanceToFarEdge(int, android.graphics.Rect, android.graphics.Rect)
    {
        int $i0;
        android.graphics.Rect $r0, $r1;

        $i0 := @parameter0;

        $r0 := @parameter1;

        $r1 := @parameter2;

        $i0 = androidx.customview.widget.FocusStrategy.majorAxisDistanceToFarEdgeRaw($i0, $r0, $r1);

        $i0 = java.lang.Math.max(1, $i0);

        return $i0;
    }

    private static int majorAxisDistanceToFarEdgeRaw(int, android.graphics.Rect, android.graphics.Rect)
    {
        android.graphics.Rect $r0, $r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0;

        $r0 := @parameter1;

        $r1 := @parameter2;

        lookupswitch($i0)
        {
            case 17: goto label5;
            case 33: goto label4;
            case 66: goto label3;
            case 130: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<init>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i0 = $r1.bottom;

        $i1 = $r0.bottom;

        $i0 = $i0 - $i1;

        return $i0;

     label3:
        $i0 = $r1.right;

        $i1 = $r0.right;

        $i0 = $i0 - $i1;

        return $i0;

     label4:
        $i0 = $r0.top;

        $i1 = $r1.top;

        $i0 = $i0 - $i1;

        return $i0;

     label5:
        $i0 = $r0.left;

        $i1 = $r1.left;

        $i0 = $i0 - $i1;

        return $i0;
    }

    private static int minorAxisDistance(int, android.graphics.Rect, android.graphics.Rect)
    {
        android.graphics.Rect $r0, $r1;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r2;

        $i0 := @parameter0;

        $r0 := @parameter1;

        $r1 := @parameter2;

        lookupswitch($i0)
        {
            case 17: goto label3;
            case 33: goto label2;
            case 66: goto label3;
            case 130: goto label2;
            default: goto label1;
        };

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<init>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");

        throw $r2;

     label2:
        $i0 = $r0.left;

        $i1 = virtualinvoke $r0.width();

        $i1 = $i1 / 2;

        $i0 = $i0 + $i1;

        $i1 = $r1.left;

        $i2 = virtualinvoke $r1.width();

        $i2 = $i2 / 2;

        $i1 = $i1 + $i2;

        $i0 = $i0 - $i1;

        $i0 = java.lang.Math.abs($i0);

        return $i0;

     label3:
        $i0 = $r0.top;

        $i1 = virtualinvoke $r0.height();

        $i1 = $i1 / 2;

        $i0 = $i0 + $i1;

        $i1 = $r1.top;

        $i2 = virtualinvoke $r1.height();

        $i2 = $i2 / 2;

        $i1 = $i1 + $i2;

        $i0 = $i0 - $i1;

        $i0 = java.lang.Math.abs($i0);

        return $i0;
    }
}
