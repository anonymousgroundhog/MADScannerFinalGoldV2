final class androidx.fragment.app.BackStackRecord extends androidx.fragment.app.FragmentTransaction implements androidx.fragment.app.FragmentManager$BackStackEntry, androidx.fragment.app.FragmentManagerImpl$OpGenerator
{
    static final java.lang.String TAG;
    boolean mCommitted;
    int mIndex;
    final androidx.fragment.app.FragmentManagerImpl mManager;

    public void <init>(androidx.fragment.app.FragmentManagerImpl)
    {
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentManagerImpl $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.mIndex = -1;

        r0.mManager = $r1;

        return;
    }

    private static boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op)
    {
        androidx.fragment.app.FragmentTransaction$Op $r0;
        androidx.fragment.app.Fragment r1;
        android.view.View $r2;
        boolean $z0;

        $r0 := @parameter0;

        r1 = $r0.mFragment;

        if r1 == null goto label1;

        $z0 = r1.mAdded;

        if $z0 == 0 goto label1;

        $r2 = r1.mView;

        if $r2 == null goto label1;

        $z0 = r1.mDetached;

        if $z0 != 0 goto label1;

        $z0 = r1.mHidden;

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke r1.isPostponed();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    void bumpBackStackNesting(int)
    {
        androidx.fragment.app.FragmentTransaction$Op r5;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r3;
        int $i0, $i1, i2, $i3;
        androidx.fragment.app.Fragment $r6;
        java.lang.StringBuilder r1;
        java.lang.Object $r4;
        java.lang.String $r2;
        boolean z0;

        r0 := @this;

        $i0 := @parameter0;

        z0 = r0.mAddToBackStack;

        if z0 != 0 goto label1;

        return;

     label1:
        z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if z0 == 0 goto label2;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<init>();

        r1 = virtualinvoke r1.append("Bump nesting in ");

        r1 = virtualinvoke r1.append(r0);

        r1 = virtualinvoke r1.append(" by ");

        r1 = virtualinvoke r1.append($i0);

        $r2 = virtualinvoke r1.toString();

        android.util.Log.v("FragmentManager", $r2);

     label2:
        r3 = r0.mOps;

        $i1 = virtualinvoke r3.size();

        i2 = 0;

     label3:
        if i2 >= $i1 goto label5;

        r3 = r0.mOps;

        $r4 = virtualinvoke r3.get(i2);

        r5 = (androidx.fragment.app.FragmentTransaction$Op) $r4;

        $r6 = r5.mFragment;

        if $r6 == null goto label4;

        $r6 = r5.mFragment;

        $i3 = $r6.mBackStackNesting;

        $i3 = $i3 + $i0;

        $r6.mBackStackNesting = $i3;

        z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if z0 == 0 goto label4;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<init>();

        r1 = virtualinvoke r1.append("Bump nesting of ");

        $r6 = r5.mFragment;

        r1 = virtualinvoke r1.append($r6);

        r1 = virtualinvoke r1.append(" to ");

        $r6 = r5.mFragment;

        $i3 = $r6.mBackStackNesting;

        r1 = virtualinvoke r1.append($i3);

        $r2 = virtualinvoke r1.toString();

        android.util.Log.v("FragmentManager", $r2);

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        return;
    }

    public int commit()
    {
        androidx.fragment.app.BackStackRecord r0;
        int $i0;

        r0 := @this;

        $i0 = virtualinvoke r0.commitInternal(0);

        return $i0;
    }

    public int commitAllowingStateLoss()
    {
        androidx.fragment.app.BackStackRecord r0;
        int $i0;

        r0 := @this;

        $i0 = virtualinvoke r0.commitInternal(1);

        return $i0;
    }

    int commitInternal(boolean)
    {
        java.io.PrintWriter r3, $r7;
        androidx.fragment.app.FragmentManagerImpl r4;
        java.lang.IllegalStateException $r8;
        androidx.fragment.app.BackStackRecord r0;
        androidx.core.util.LogWriter $r6;
        int $i0;
        java.lang.StringBuilder r1, $r5;
        java.lang.String $r2;
        boolean $z0, z1;

        r0 := @this;

        $z0 := @parameter0;

        z1 = r0.mCommitted;

        if z1 != 0 goto label4;

        z1 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if z1 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        r1 = virtualinvoke $r5.append("Commit: ");

        r1 = virtualinvoke r1.append(r0);

        $r2 = virtualinvoke r1.toString();

        android.util.Log.v("FragmentManager", $r2);

        $r6 = new androidx.core.util.LogWriter;

        specialinvoke $r6.<init>("FragmentManager");

        $r7 = new java.io.PrintWriter;

        r3 = $r7;

        specialinvoke $r7.<init>($r6);

        virtualinvoke r0.dump("  ", r3);

        virtualinvoke r3.close();

     label1:
        r0.mCommitted = 1;

        z1 = r0.mAddToBackStack;

        if z1 == 0 goto label2;

        r4 = r0.mManager;

        $i0 = virtualinvoke r4.allocBackStackIndex(r0);

        r0.mIndex = $i0;

        goto label3;

     label2:
        r0.mIndex = -1;

     label3:
        r4 = r0.mManager;

        virtualinvoke r4.enqueueAction(r0, $z0);

        $i0 = r0.mIndex;

        return $i0;

     label4:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<init>("commit already called");

        throw $r8;
    }

    public void commitNow()
    {
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentManagerImpl $r1;

        r0 := @this;

        virtualinvoke r0.disallowAddToBackStack();

        $r1 = r0.mManager;

        virtualinvoke $r1.execSingleAction(r0, 0);

        return;
    }

    public void commitNowAllowingStateLoss()
    {
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentManagerImpl $r1;

        r0 := @this;

        virtualinvoke r0.disallowAddToBackStack();

        $r1 = r0.mManager;

        virtualinvoke $r1.execSingleAction(r0, 1);

        return;
    }

    public androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r2, $r3;
        java.lang.IllegalStateException $r4;
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentTransaction $r7;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = $r1.mFragmentManager;

        if $r2 == null goto label2;

        $r2 = $r1.mFragmentManager;

        $r3 = r0.mManager;

        if $r2 != $r3 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r5 = virtualinvoke $r5.append("Cannot detach Fragment attached to a different FragmentManager. Fragment ");

        $r6 = virtualinvoke $r1.toString();

        $r5 = virtualinvoke $r5.append($r6);

        $r5 = virtualinvoke $r5.append(" is already attached to a FragmentManager.");

        $r6 = virtualinvoke $r5.toString();

        specialinvoke $r4.<init>($r6);

        throw $r4;

     label2:
        $r7 = specialinvoke r0.detach($r1);

        return $r7;
    }

    void doAddOp(int, androidx.fragment.app.Fragment, java.lang.String, int)
    {
        androidx.fragment.app.FragmentManagerImpl $r3;
        androidx.fragment.app.BackStackRecord r0;
        int $i0, $i1;
        androidx.fragment.app.Fragment $r1;
        java.lang.String $r2;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        $i1 := @parameter3;

        specialinvoke r0.doAddOp($i0, $r1, $r2, $i1);

        $r3 = r0.mManager;

        $r1.mFragmentManager = $r3;

        return;
    }

    public void dump(java.lang.String, java.io.PrintWriter)
    {
        androidx.fragment.app.BackStackRecord r0;
        java.io.PrintWriter $r2;
        java.lang.String $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        virtualinvoke r0.dump($r1, $r2, 1);

        return;
    }

    public void dump(java.lang.String, java.io.PrintWriter, boolean)
    {
        java.io.PrintWriter $r2;
        java.lang.CharSequence r4;
        androidx.fragment.app.FragmentTransaction$Op r7;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r5;
        int i0, i1, i2;
        androidx.fragment.app.Fragment $r9;
        java.lang.Object $r6;
        java.lang.StringBuilder r8;
        java.lang.String $r1, r3;
        boolean $z0, z1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $z0 := @parameter2;

        if $z0 == 0 goto label09;

        virtualinvoke $r2.print($r1);

        virtualinvoke $r2.print("mName=");

        r3 = r0.mName;

        virtualinvoke $r2.print(r3);

        virtualinvoke $r2.print(" mIndex=");

        i0 = r0.mIndex;

        virtualinvoke $r2.print(i0);

        virtualinvoke $r2.print(" mCommitted=");

        z1 = r0.mCommitted;

        virtualinvoke $r2.println(z1);

        i0 = r0.mTransition;

        if i0 == 0 goto label01;

        virtualinvoke $r2.print($r1);

        virtualinvoke $r2.print("mTransition=#");

        i0 = r0.mTransition;

        r3 = java.lang.Integer.toHexString(i0);

        virtualinvoke $r2.print(r3);

        virtualinvoke $r2.print(" mTransitionStyle=#");

        i0 = r0.mTransitionStyle;

        r3 = java.lang.Integer.toHexString(i0);

        virtualinvoke $r2.println(r3);

     label01:
        i0 = r0.mEnterAnim;

        if i0 != 0 goto label02;

        i0 = r0.mExitAnim;

        if i0 == 0 goto label03;

     label02:
        virtualinvoke $r2.print($r1);

        virtualinvoke $r2.print("mEnterAnim=#");

        i0 = r0.mEnterAnim;

        r3 = java.lang.Integer.toHexString(i0);

        virtualinvoke $r2.print(r3);

        virtualinvoke $r2.print(" mExitAnim=#");

        i0 = r0.mExitAnim;

        r3 = java.lang.Integer.toHexString(i0);

        virtualinvoke $r2.println(r3);

     label03:
        i0 = r0.mPopEnterAnim;

        if i0 != 0 goto label04;

        i0 = r0.mPopExitAnim;

        if i0 == 0 goto label05;

     label04:
        virtualinvoke $r2.print($r1);

        virtualinvoke $r2.print("mPopEnterAnim=#");

        i0 = r0.mPopEnterAnim;

        r3 = java.lang.Integer.toHexString(i0);

        virtualinvoke $r2.print(r3);

        virtualinvoke $r2.print(" mPopExitAnim=#");

        i0 = r0.mPopExitAnim;

        r3 = java.lang.Integer.toHexString(i0);

        virtualinvoke $r2.println(r3);

     label05:
        i0 = r0.mBreadCrumbTitleRes;

        if i0 != 0 goto label06;

        r4 = r0.mBreadCrumbTitleText;

        if r4 == null goto label07;

     label06:
        virtualinvoke $r2.print($r1);

        virtualinvoke $r2.print("mBreadCrumbTitleRes=#");

        i0 = r0.mBreadCrumbTitleRes;

        r3 = java.lang.Integer.toHexString(i0);

        virtualinvoke $r2.print(r3);

        virtualinvoke $r2.print(" mBreadCrumbTitleText=");

        r4 = r0.mBreadCrumbTitleText;

        virtualinvoke $r2.println(r4);

     label07:
        i0 = r0.mBreadCrumbShortTitleRes;

        if i0 != 0 goto label08;

        r4 = r0.mBreadCrumbShortTitleText;

        if r4 == null goto label09;

     label08:
        virtualinvoke $r2.print($r1);

        virtualinvoke $r2.print("mBreadCrumbShortTitleRes=#");

        i0 = r0.mBreadCrumbShortTitleRes;

        r3 = java.lang.Integer.toHexString(i0);

        virtualinvoke $r2.print(r3);

        virtualinvoke $r2.print(" mBreadCrumbShortTitleText=");

        r4 = r0.mBreadCrumbShortTitleText;

        virtualinvoke $r2.println(r4);

     label09:
        r5 = r0.mOps;

        z1 = virtualinvoke r5.isEmpty();

        if z1 != 0 goto label28;

        virtualinvoke $r2.print($r1);

        virtualinvoke $r2.println("Operations:");

        r5 = r0.mOps;

        i0 = virtualinvoke r5.size();

        i1 = 0;

     label10:
        if i1 >= i0 goto label28;

        r5 = r0.mOps;

        $r6 = virtualinvoke r5.get(i1);

        r7 = (androidx.fragment.app.FragmentTransaction$Op) $r6;

        i2 = r7.mCmd;

        lookupswitch(i2)
        {
            case 0: goto label22;
            case 1: goto label21;
            case 2: goto label20;
            case 3: goto label19;
            case 4: goto label18;
            case 5: goto label17;
            case 6: goto label16;
            case 7: goto label15;
            case 8: goto label14;
            case 9: goto label13;
            case 10: goto label12;
            default: goto label11;
        };

     label11:
        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<init>();

        r8 = virtualinvoke r8.append("cmd=");

        i2 = r7.mCmd;

        r8 = virtualinvoke r8.append(i2);

        r3 = virtualinvoke r8.toString();

        goto label23;

     label12:
        r3 = "OP_SET_MAX_LIFECYCLE";

        goto label23;

     label13:
        r3 = "UNSET_PRIMARY_NAV";

        goto label23;

     label14:
        r3 = "SET_PRIMARY_NAV";

        goto label23;

     label15:
        r3 = "ATTACH";

        goto label23;

     label16:
        r3 = "DETACH";

        goto label23;

     label17:
        r3 = "SHOW";

        goto label23;

     label18:
        r3 = "HIDE";

        goto label23;

     label19:
        r3 = "REMOVE";

        goto label23;

     label20:
        r3 = "REPLACE";

        goto label23;

     label21:
        r3 = "ADD";

        goto label23;

     label22:
        r3 = "NULL";

     label23:
        virtualinvoke $r2.print($r1);

        virtualinvoke $r2.print("  Op #");

        virtualinvoke $r2.print(i1);

        virtualinvoke $r2.print(": ");

        virtualinvoke $r2.print(r3);

        virtualinvoke $r2.print(" ");

        $r9 = r7.mFragment;

        virtualinvoke $r2.println($r9);

        if $z0 == 0 goto label27;

        i2 = r7.mEnterAnim;

        if i2 != 0 goto label24;

        i2 = r7.mExitAnim;

        if i2 == 0 goto label25;

     label24:
        virtualinvoke $r2.print($r1);

        virtualinvoke $r2.print("enterAnim=#");

        i2 = r7.mEnterAnim;

        r3 = java.lang.Integer.toHexString(i2);

        virtualinvoke $r2.print(r3);

        virtualinvoke $r2.print(" exitAnim=#");

        i2 = r7.mExitAnim;

        r3 = java.lang.Integer.toHexString(i2);

        virtualinvoke $r2.println(r3);

     label25:
        i2 = r7.mPopEnterAnim;

        if i2 != 0 goto label26;

        i2 = r7.mPopExitAnim;

        if i2 == 0 goto label27;

     label26:
        virtualinvoke $r2.print($r1);

        virtualinvoke $r2.print("popEnterAnim=#");

        i2 = r7.mPopEnterAnim;

        r3 = java.lang.Integer.toHexString(i2);

        virtualinvoke $r2.print(r3);

        virtualinvoke $r2.print(" popExitAnim=#");

        i2 = r7.mPopExitAnim;

        r3 = java.lang.Integer.toHexString(i2);

        virtualinvoke $r2.println(r3);

     label27:
        i1 = i1 + 1;

        goto label10;

     label28:
        return;
    }

    void executeOps()
    {
        androidx.fragment.app.FragmentManagerImpl $r8;
        androidx.fragment.app.FragmentTransaction$Op r4;
        androidx.fragment.app.BackStackRecord r0;
        java.lang.IllegalArgumentException $r5;
        java.util.ArrayList r2;
        androidx.lifecycle.Lifecycle$State $r9;
        androidx.fragment.app.Fragment r1;
        int $i0, i1, $i2, $i3;
        java.lang.Object $r3;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this;

        r2 = r0.mOps;

        $i0 = virtualinvoke r2.size();

        i1 = 0;

     label01:
        if i1 >= $i0 goto label15;

        r2 = r0.mOps;

        $r3 = virtualinvoke r2.get(i1);

        r4 = (androidx.fragment.app.FragmentTransaction$Op) $r3;

        r1 = r4.mFragment;

        if r1 == null goto label02;

        $i2 = r0.mTransition;

        $i3 = r0.mTransitionStyle;

        virtualinvoke r1.setNextTransition($i2, $i3);

     label02:
        $i2 = r4.mCmd;

        lookupswitch($i2)
        {
            case 1: goto label12;
            case 2: goto label03;
            case 3: goto label11;
            case 4: goto label10;
            case 5: goto label09;
            case 6: goto label08;
            case 7: goto label07;
            case 8: goto label06;
            case 9: goto label05;
            case 10: goto label04;
            default: goto label03;
        };

     label03:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $r6 = virtualinvoke $r6.append("Unknown cmd: ");

        $i0 = r4.mCmd;

        $r6 = virtualinvoke $r6.append($i0);

        $r7 = virtualinvoke $r6.toString();

        specialinvoke $r5.<init>($r7);

        throw $r5;

     label04:
        $r8 = r0.mManager;

        $r9 = r4.mCurrentMaxState;

        virtualinvoke $r8.setMaxLifecycle(r1, $r9);

        goto label13;

     label05:
        $r8 = r0.mManager;

        virtualinvoke $r8.setPrimaryNavigationFragment(null);

        goto label13;

     label06:
        $r8 = r0.mManager;

        virtualinvoke $r8.setPrimaryNavigationFragment(r1);

        goto label13;

     label07:
        $i2 = r4.mEnterAnim;

        virtualinvoke r1.setNextAnim($i2);

        $r8 = r0.mManager;

        virtualinvoke $r8.attachFragment(r1);

        goto label13;

     label08:
        $i2 = r4.mExitAnim;

        virtualinvoke r1.setNextAnim($i2);

        $r8 = r0.mManager;

        virtualinvoke $r8.detachFragment(r1);

        goto label13;

     label09:
        $i2 = r4.mEnterAnim;

        virtualinvoke r1.setNextAnim($i2);

        $r8 = r0.mManager;

        virtualinvoke $r8.showFragment(r1);

        goto label13;

     label10:
        $i2 = r4.mExitAnim;

        virtualinvoke r1.setNextAnim($i2);

        $r8 = r0.mManager;

        virtualinvoke $r8.hideFragment(r1);

        goto label13;

     label11:
        $i2 = r4.mExitAnim;

        virtualinvoke r1.setNextAnim($i2);

        $r8 = r0.mManager;

        virtualinvoke $r8.removeFragment(r1);

        goto label13;

     label12:
        $i2 = r4.mEnterAnim;

        virtualinvoke r1.setNextAnim($i2);

        $r8 = r0.mManager;

        virtualinvoke $r8.addFragment(r1, 0);

     label13:
        $z0 = r0.mReorderingAllowed;

        if $z0 != 0 goto label14;

        $i2 = r4.mCmd;

        if $i2 == 1 goto label14;

        if r1 == null goto label14;

        $r8 = r0.mManager;

        virtualinvoke $r8.moveFragmentToExpectedState(r1);

     label14:
        i1 = i1 + 1;

        goto label01;

     label15:
        $z0 = r0.mReorderingAllowed;

        if $z0 != 0 goto label16;

        $r8 = r0.mManager;

        $i0 = $r8.mCurState;

        virtualinvoke $r8.moveToState($i0, 1);

     label16:
        return;
    }

    void executePopOps(boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r7;
        androidx.fragment.app.FragmentTransaction$Op r4;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r2;
        androidx.fragment.app.Fragment r1;
        int $i0, $i1, $i2;
        java.lang.String $r6;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r10;
        androidx.lifecycle.Lifecycle$State $r8;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r9;

        r0 := @this;

        $z0 := @parameter0;

        r2 = r0.mOps;

        $i0 = virtualinvoke r2.size();

        $i0 = $i0 - 1;

     label01:
        if $i0 < 0 goto label15;

        r2 = r0.mOps;

        $r3 = virtualinvoke r2.get($i0);

        r4 = (androidx.fragment.app.FragmentTransaction$Op) $r3;

        r1 = r4.mFragment;

        if r1 == null goto label02;

        $i1 = r0.mTransition;

        $i1 = androidx.fragment.app.FragmentManagerImpl.reverseTransit($i1);

        $i2 = r0.mTransitionStyle;

        virtualinvoke r1.setNextTransition($i1, $i2);

     label02:
        $i1 = r4.mCmd;

        lookupswitch($i1)
        {
            case 1: goto label12;
            case 2: goto label03;
            case 3: goto label11;
            case 4: goto label10;
            case 5: goto label09;
            case 6: goto label08;
            case 7: goto label07;
            case 8: goto label06;
            case 9: goto label05;
            case 10: goto label04;
            default: goto label03;
        };

     label03:
        $r10 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r5 = virtualinvoke $r9.append("Unknown cmd: ");

        $i0 = r4.mCmd;

        $r5 = virtualinvoke $r5.append($i0);

        $r6 = virtualinvoke $r5.toString();

        specialinvoke $r10.<init>($r6);

        throw $r10;

     label04:
        $r7 = r0.mManager;

        $r8 = r4.mOldMaxState;

        virtualinvoke $r7.setMaxLifecycle(r1, $r8);

        goto label13;

     label05:
        $r7 = r0.mManager;

        virtualinvoke $r7.setPrimaryNavigationFragment(r1);

        goto label13;

     label06:
        $r7 = r0.mManager;

        virtualinvoke $r7.setPrimaryNavigationFragment(null);

        goto label13;

     label07:
        $i1 = r4.mPopExitAnim;

        virtualinvoke r1.setNextAnim($i1);

        $r7 = r0.mManager;

        virtualinvoke $r7.detachFragment(r1);

        goto label13;

     label08:
        $i1 = r4.mPopEnterAnim;

        virtualinvoke r1.setNextAnim($i1);

        $r7 = r0.mManager;

        virtualinvoke $r7.attachFragment(r1);

        goto label13;

     label09:
        $i1 = r4.mPopExitAnim;

        virtualinvoke r1.setNextAnim($i1);

        $r7 = r0.mManager;

        virtualinvoke $r7.hideFragment(r1);

        goto label13;

     label10:
        $i1 = r4.mPopEnterAnim;

        virtualinvoke r1.setNextAnim($i1);

        $r7 = r0.mManager;

        virtualinvoke $r7.showFragment(r1);

        goto label13;

     label11:
        $i1 = r4.mPopEnterAnim;

        virtualinvoke r1.setNextAnim($i1);

        $r7 = r0.mManager;

        virtualinvoke $r7.addFragment(r1, 0);

        goto label13;

     label12:
        $i1 = r4.mPopExitAnim;

        virtualinvoke r1.setNextAnim($i1);

        $r7 = r0.mManager;

        virtualinvoke $r7.removeFragment(r1);

     label13:
        $z1 = r0.mReorderingAllowed;

        if $z1 != 0 goto label14;

        $i1 = r4.mCmd;

        if $i1 == 3 goto label14;

        if r1 == null goto label14;

        $r7 = r0.mManager;

        virtualinvoke $r7.moveFragmentToExpectedState(r1);

     label14:
        $i0 = $i0 + -1;

        goto label01;

     label15:
        $z1 = r0.mReorderingAllowed;

        if $z1 != 0 goto label16;

        if $z0 == 0 goto label16;

        $r7 = r0.mManager;

        $i0 = $r7.mCurState;

        virtualinvoke $r7.moveToState($i0, 1);

     label16:
        return;
    }

    androidx.fragment.app.Fragment expandOps(java.util.ArrayList, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentTransaction$Op r5, r6, $r9;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r1, r3;
        androidx.fragment.app.Fragment $r2, r7, r8;
        int i0, $i1, $i2, i3;
        java.lang.Object $r4;
        boolean z0;

        r0 := @this;

        r1 := @parameter0;

        $r2 := @parameter1;

        i0 = 0;

     label01:
        r3 = r0.mOps;

        $i1 = virtualinvoke r3.size();

        if i0 >= $i1 goto label15;

        r3 = r0.mOps;

        $r4 = virtualinvoke r3.get(i0);

        r5 = (androidx.fragment.app.FragmentTransaction$Op) $r4;

        $i1 = r5.mCmd;

        lookupswitch($i1)
        {
            case 1: goto label13;
            case 2: goto label05;
            case 3: goto label04;
            case 4: goto label02;
            case 5: goto label02;
            case 6: goto label04;
            case 7: goto label13;
            case 8: goto label03;
            default: goto label02;
        };

     label02:
        goto label14;

     label03:
        r3 = r0.mOps;

        $r9 = new androidx.fragment.app.FragmentTransaction$Op;

        specialinvoke $r9.<init>(9, $r2);

        virtualinvoke r3.add(i0, $r9);

        i0 = i0 + 1;

        $r2 = r5.mFragment;

        goto label14;

     label04:
        r7 = r5.mFragment;

        virtualinvoke r1.remove(r7);

        r7 = r5.mFragment;

        if r7 != $r2 goto label14;

        r3 = r0.mOps;

        $r9 = new androidx.fragment.app.FragmentTransaction$Op;

        $r2 = r5.mFragment;

        specialinvoke $r9.<init>(9, $r2);

        virtualinvoke r3.add(i0, $r9);

        i0 = i0 + 1;

        $r2 = null;

        goto label14;

     label05:
        r7 = r5.mFragment;

        $i1 = r7.mContainerId;

        z0 = 0;

        $i2 = virtualinvoke r1.size();

        $i2 = $i2 - 1;

     label06:
        if $i2 < 0 goto label10;

        $r4 = virtualinvoke r1.get($i2);

        r8 = (androidx.fragment.app.Fragment) $r4;

        i3 = r8.mContainerId;

        if i3 != $i1 goto label09;

        if r8 != r7 goto label07;

        z0 = 1;

        goto label09;

     label07:
        if r8 != $r2 goto label08;

        r3 = r0.mOps;

        $r9 = new androidx.fragment.app.FragmentTransaction$Op;

        specialinvoke $r9.<init>(9, r8);

        virtualinvoke r3.add(i0, $r9);

        i0 = i0 + 1;

        $r2 = null;

     label08:
        $r9 = new androidx.fragment.app.FragmentTransaction$Op;

        r6 = $r9;

        specialinvoke $r9.<init>(3, r8);

        i3 = r5.mEnterAnim;

        r6.mEnterAnim = i3;

        i3 = r5.mPopEnterAnim;

        r6.mPopEnterAnim = i3;

        i3 = r5.mExitAnim;

        r6.mExitAnim = i3;

        i3 = r5.mPopExitAnim;

        r6.mPopExitAnim = i3;

        r3 = r0.mOps;

        virtualinvoke r3.add(i0, r6);

        virtualinvoke r1.remove(r8);

        i0 = i0 + 1;

     label09:
        i3 = -1;

        $i2 = $i2 + i3;

        goto label06;

     label10:
        if z0 == 0 goto label11;

        r3 = r0.mOps;

        virtualinvoke r3.remove(i0);

        i0 = i0 + -1;

        goto label12;

     label11:
        r5.mCmd = 1;

        virtualinvoke r1.add(r7);

     label12:
        goto label14;

     label13:
        r7 = r5.mFragment;

        virtualinvoke r1.add(r7);

     label14:
        i0 = i0 + 1;

        goto label01;

     label15:
        return $r2;
    }

    public boolean generateOps(java.util.ArrayList, java.util.ArrayList)
    {
        androidx.fragment.app.FragmentManagerImpl $r6;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r1, r2;
        java.lang.Boolean $r5;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("Run: ");

        $r3 = virtualinvoke $r3.append(r0);

        $r4 = virtualinvoke $r3.toString();

        android.util.Log.v("FragmentManager", $r4);

     label1:
        virtualinvoke r1.add(r0);

        $r5 = java.lang.Boolean.valueOf(0);

        virtualinvoke r2.add($r5);

        $z0 = r0.mAddToBackStack;

        if $z0 == 0 goto label2;

        $r6 = r0.mManager;

        virtualinvoke $r6.addBackStackState(r0);

     label2:
        return 1;
    }

    public java.lang.CharSequence getBreadCrumbShortTitle()
    {
        androidx.fragment.app.FragmentManagerImpl $r1;
        android.content.Context $r3;
        androidx.fragment.app.FragmentHostCallback $r2;
        java.lang.CharSequence $r4;
        androidx.fragment.app.BackStackRecord r0;
        int $i0;

        r0 := @this;

        $i0 = r0.mBreadCrumbShortTitleRes;

        if $i0 == 0 goto label1;

        $r1 = r0.mManager;

        $r2 = $r1.mHost;

        $r3 = virtualinvoke $r2.getContext();

        $i0 = r0.mBreadCrumbShortTitleRes;

        $r4 = virtualinvoke $r3.getText($i0);

        return $r4;

     label1:
        $r4 = r0.mBreadCrumbShortTitleText;

        return $r4;
    }

    public int getBreadCrumbShortTitleRes()
    {
        androidx.fragment.app.BackStackRecord r0;
        int i0;

        r0 := @this;

        i0 = r0.mBreadCrumbShortTitleRes;

        return i0;
    }

    public java.lang.CharSequence getBreadCrumbTitle()
    {
        androidx.fragment.app.FragmentManagerImpl $r1;
        android.content.Context $r3;
        androidx.fragment.app.FragmentHostCallback $r2;
        java.lang.CharSequence $r4;
        androidx.fragment.app.BackStackRecord r0;
        int $i0;

        r0 := @this;

        $i0 = r0.mBreadCrumbTitleRes;

        if $i0 == 0 goto label1;

        $r1 = r0.mManager;

        $r2 = $r1.mHost;

        $r3 = virtualinvoke $r2.getContext();

        $i0 = r0.mBreadCrumbTitleRes;

        $r4 = virtualinvoke $r3.getText($i0);

        return $r4;

     label1:
        $r4 = r0.mBreadCrumbTitleText;

        return $r4;
    }

    public int getBreadCrumbTitleRes()
    {
        androidx.fragment.app.BackStackRecord r0;
        int i0;

        r0 := @this;

        i0 = r0.mBreadCrumbTitleRes;

        return i0;
    }

    public int getId()
    {
        androidx.fragment.app.BackStackRecord r0;
        int i0;

        r0 := @this;

        i0 = r0.mIndex;

        return i0;
    }

    public java.lang.String getName()
    {
        androidx.fragment.app.BackStackRecord r0;
        java.lang.String r1;

        r0 := @this;

        r1 = r0.mName;

        return r1;
    }

    public androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r2, $r3;
        java.lang.IllegalStateException $r4;
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentTransaction $r7;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = $r1.mFragmentManager;

        if $r2 == null goto label2;

        $r2 = $r1.mFragmentManager;

        $r3 = r0.mManager;

        if $r2 != $r3 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r5 = virtualinvoke $r5.append("Cannot hide Fragment attached to a different FragmentManager. Fragment ");

        $r6 = virtualinvoke $r1.toString();

        $r5 = virtualinvoke $r5.append($r6);

        $r5 = virtualinvoke $r5.append(" is already attached to a FragmentManager.");

        $r6 = virtualinvoke $r5.toString();

        specialinvoke $r4.<init>($r6);

        throw $r4;

     label2:
        $r7 = specialinvoke r0.hide($r1);

        return $r7;
    }

    boolean interactsWith(int)
    {
        androidx.fragment.app.FragmentTransaction$Op r3;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r1;
        int $i0, $i1, i2, i3;
        androidx.fragment.app.Fragment $r4;
        java.lang.Object $r2;

        r0 := @this;

        $i0 := @parameter0;

        r1 = r0.mOps;

        $i1 = virtualinvoke r1.size();

        i2 = 0;

     label1:
        i3 = 0;

        if i2 >= $i1 goto label4;

        r1 = r0.mOps;

        $r2 = virtualinvoke r1.get(i2);

        r3 = (androidx.fragment.app.FragmentTransaction$Op) $r2;

        $r4 = r3.mFragment;

        if $r4 == null goto label2;

        $r4 = r3.mFragment;

        i3 = $r4.mContainerId;

     label2:
        if i3 == 0 goto label3;

        if i3 != $i0 goto label3;

        return 1;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return 0;
    }

    boolean interactsWith(java.util.ArrayList, int, int)
    {
        androidx.fragment.app.FragmentTransaction$Op r4;
        androidx.fragment.app.BackStackRecord r0, r6;
        java.util.ArrayList r1, r2;
        int $i0, $i1, $i2, i3, i4, i5, i6, $i7, i8, i9;
        androidx.fragment.app.Fragment r5;
        java.lang.Object $r3;

        r0 := @this;

        r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        if $i1 != $i0 goto label01;

        return 0;

     label01:
        r2 = r0.mOps;

        $i2 = virtualinvoke r2.size();

        i3 = -1;

        i4 = 0;

     label02:
        if i4 >= $i2 goto label12;

        r2 = r0.mOps;

        $r3 = virtualinvoke r2.get(i4);

        r4 = (androidx.fragment.app.FragmentTransaction$Op) $r3;

        r5 = r4.mFragment;

        if r5 == null goto label03;

        r5 = r4.mFragment;

        i5 = r5.mContainerId;

        goto label04;

     label03:
        i5 = 0;

     label04:
        if i5 == 0 goto label11;

        if i5 == i3 goto label11;

        i3 = i5;

        i6 = $i0;

     label05:
        if i6 >= $i1 goto label11;

        $r3 = virtualinvoke r1.get(i6);

        r6 = (androidx.fragment.app.BackStackRecord) $r3;

        r2 = r6.mOps;

        $i7 = virtualinvoke r2.size();

        i8 = 0;

     label06:
        if i8 >= $i7 goto label10;

        r2 = r6.mOps;

        $r3 = virtualinvoke r2.get(i8);

        r4 = (androidx.fragment.app.FragmentTransaction$Op) $r3;

        r5 = r4.mFragment;

        if r5 == null goto label07;

        r5 = r4.mFragment;

        i9 = r5.mContainerId;

        goto label08;

     label07:
        i9 = 0;

     label08:
        if i9 != i5 goto label09;

        return 1;

     label09:
        i8 = i8 + 1;

        goto label06;

     label10:
        i6 = i6 + 1;

        goto label05;

     label11:
        i4 = i4 + 1;

        goto label02;

     label12:
        return 0;
    }

    public boolean isEmpty()
    {
        androidx.fragment.app.BackStackRecord r0;
        boolean $z0;
        java.util.ArrayList $r1;

        r0 := @this;

        $r1 = r0.mOps;

        $z0 = virtualinvoke $r1.isEmpty();

        return $z0;
    }

    boolean isPostponed()
    {
        androidx.fragment.app.FragmentTransaction$Op r3;
        androidx.fragment.app.BackStackRecord r0;
        int i0, $i1;
        java.lang.Object $r2;
        java.util.ArrayList r1;
        boolean $z0;

        r0 := @this;

        i0 = 0;

     label1:
        r1 = r0.mOps;

        $i1 = virtualinvoke r1.size();

        if i0 >= $i1 goto label3;

        r1 = r0.mOps;

        $r2 = virtualinvoke r1.get(i0);

        r3 = (androidx.fragment.app.FragmentTransaction$Op) $r2;

        $z0 = androidx.fragment.app.BackStackRecord.isFragmentPostponed(r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    public androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r2, $r3;
        java.lang.IllegalStateException $r4;
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentTransaction $r7;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = $r1.mFragmentManager;

        if $r2 == null goto label2;

        $r2 = $r1.mFragmentManager;

        $r3 = r0.mManager;

        if $r2 != $r3 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r5 = virtualinvoke $r5.append("Cannot remove Fragment attached to a different FragmentManager. Fragment ");

        $r6 = virtualinvoke $r1.toString();

        $r5 = virtualinvoke $r5.append($r6);

        $r5 = virtualinvoke $r5.append(" is already attached to a FragmentManager.");

        $r6 = virtualinvoke $r5.toString();

        specialinvoke $r4.<init>($r6);

        throw $r4;

     label2:
        $r7 = specialinvoke r0.remove($r1);

        return $r7;
    }

    public void runOnCommitRunnables()
    {
        androidx.fragment.app.BackStackRecord r0;
        int i0, $i1;
        java.lang.Object $r2;
        java.lang.Runnable $r3;
        java.util.ArrayList r1;

        r0 := @this;

        r1 = r0.mCommitRunnables;

        if r1 == null goto label3;

        i0 = 0;

     label1:
        r1 = r0.mCommitRunnables;

        $i1 = virtualinvoke r1.size();

        if i0 >= $i1 goto label2;

        r1 = r0.mCommitRunnables;

        $r2 = virtualinvoke r1.get(i0);

        $r3 = (java.lang.Runnable) $r2;

        interfaceinvoke $r3.run();

        i0 = i0 + 1;

        goto label1;

     label2:
        r0.mCommitRunnables = null;

     label3:
        return;
    }

    public androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment, androidx.lifecycle.Lifecycle$State)
    {
        androidx.fragment.app.FragmentManagerImpl $r3, $r4;
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentTransaction $r6;
        java.lang.IllegalArgumentException $r7;
        androidx.lifecycle.Lifecycle$State $r2, $r5;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r8;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = $r1.mFragmentManager;

        $r4 = r0.mManager;

        if $r3 != $r4 goto label2;

        $r5 = androidx.lifecycle.Lifecycle$State.CREATED;

        $z0 = virtualinvoke $r2.isAtLeast($r5);

        if $z0 == 0 goto label1;

        $r6 = specialinvoke r0.setMaxLifecycle($r1, $r2);

        return $r6;

     label1:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<init>();

        $r8 = virtualinvoke $r8.append("Cannot set maximum Lifecycle below ");

        $r2 = androidx.lifecycle.Lifecycle$State.CREATED;

        $r8 = virtualinvoke $r8.append($r2);

        $r9 = virtualinvoke $r8.toString();

        specialinvoke $r7.<init>($r9);

        throw $r7;

     label2:
        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<init>();

        $r8 = virtualinvoke $r8.append("Cannot setMaxLifecycle for Fragment not attached to FragmentManager ");

        $r3 = r0.mManager;

        $r8 = virtualinvoke $r8.append($r3);

        $r9 = virtualinvoke $r8.toString();

        specialinvoke $r7.<init>($r9);

        throw $r7;
    }

    void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
    {
        androidx.fragment.app.Fragment$OnStartEnterTransitionListener $r1;
        androidx.fragment.app.FragmentTransaction$Op r4;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r2;
        int i0, $i1;
        androidx.fragment.app.Fragment $r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        i0 = 0;

     label1:
        r2 = r0.mOps;

        $i1 = virtualinvoke r2.size();

        if i0 >= $i1 goto label3;

        r2 = r0.mOps;

        $r3 = virtualinvoke r2.get(i0);

        r4 = (androidx.fragment.app.FragmentTransaction$Op) $r3;

        $z0 = androidx.fragment.app.BackStackRecord.isFragmentPostponed(r4);

        if $z0 == 0 goto label2;

        $r5 = r4.mFragment;

        virtualinvoke $r5.setOnStartEnterTransitionListener($r1);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    public androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r2, $r3;
        java.lang.IllegalStateException $r4;
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentTransaction $r7;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 == null goto label2;

        $r2 = $r1.mFragmentManager;

        if $r2 == null goto label2;

        $r2 = $r1.mFragmentManager;

        $r3 = r0.mManager;

        if $r2 != $r3 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r5 = virtualinvoke $r5.append("Cannot setPrimaryNavigation for Fragment attached to a different FragmentManager. Fragment ");

        $r6 = virtualinvoke $r1.toString();

        $r5 = virtualinvoke $r5.append($r6);

        $r5 = virtualinvoke $r5.append(" is already attached to a FragmentManager.");

        $r6 = virtualinvoke $r5.toString();

        specialinvoke $r4.<init>($r6);

        throw $r4;

     label2:
        $r7 = specialinvoke r0.setPrimaryNavigationFragment($r1);

        return $r7;
    }

    public androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl $r2, $r3;
        java.lang.IllegalStateException $r4;
        androidx.fragment.app.BackStackRecord r0;
        androidx.fragment.app.FragmentTransaction $r7;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = $r1.mFragmentManager;

        if $r2 == null goto label2;

        $r2 = $r1.mFragmentManager;

        $r3 = r0.mManager;

        if $r2 != $r3 goto label1;

        goto label2;

     label1:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r5 = virtualinvoke $r5.append("Cannot show Fragment attached to a different FragmentManager. Fragment ");

        $r6 = virtualinvoke $r1.toString();

        $r5 = virtualinvoke $r5.append($r6);

        $r5 = virtualinvoke $r5.append(" is already attached to a FragmentManager.");

        $r6 = virtualinvoke $r5.toString();

        specialinvoke $r4.<init>($r6);

        throw $r4;

     label2:
        $r7 = specialinvoke r0.show($r1);

        return $r7;
    }

    public java.lang.String toString()
    {
        androidx.fragment.app.BackStackRecord r0;
        int $i0;
        java.lang.StringBuilder r1;
        java.lang.String $r2;

        r0 := @this;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<init>(128);

        virtualinvoke r1.append("BackStackEntry{");

        $i0 = java.lang.System.identityHashCode(r0);

        $r2 = java.lang.Integer.toHexString($i0);

        virtualinvoke r1.append($r2);

        $i0 = r0.mIndex;

        if $i0 < 0 goto label1;

        virtualinvoke r1.append(" #");

        $i0 = r0.mIndex;

        virtualinvoke r1.append($i0);

     label1:
        $r2 = r0.mName;

        if $r2 == null goto label2;

        virtualinvoke r1.append(" ");

        $r2 = r0.mName;

        virtualinvoke r1.append($r2);

     label2:
        virtualinvoke r1.append("}");

        $r2 = virtualinvoke r1.toString();

        return $r2;
    }

    androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentTransaction$Op r5;
        androidx.fragment.app.BackStackRecord r0;
        java.util.ArrayList r1, r3;
        androidx.lifecycle.Lifecycle$State $r6;
        androidx.fragment.app.Fragment $r2, $r7;
        int $i0, $i1;
        java.lang.Object $r4;

        r0 := @this;

        r1 := @parameter0;

        $r2 := @parameter1;

        r3 = r0.mOps;

        $i0 = virtualinvoke r3.size();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label9;

        r3 = r0.mOps;

        $r4 = virtualinvoke r3.get($i0);

        r5 = (androidx.fragment.app.FragmentTransaction$Op) $r4;

        $i1 = r5.mCmd;

        lookupswitch($i1)
        {
            case 1: goto label7;
            case 2: goto label2;
            case 3: goto label6;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label6;
            case 7: goto label7;
            case 8: goto label5;
            case 9: goto label4;
            case 10: goto label3;
            default: goto label2;
        };

     label2:
        goto label8;

     label3:
        $r6 = r5.mOldMaxState;

        r5.mCurrentMaxState = $r6;

        goto label8;

     label4:
        $r2 = r5.mFragment;

        goto label8;

     label5:
        $r2 = null;

        goto label8;

     label6:
        $r7 = r5.mFragment;

        virtualinvoke r1.add($r7);

        goto label8;

     label7:
        $r7 = r5.mFragment;

        virtualinvoke r1.remove($r7);

     label8:
        $i0 = $i0 + -1;

        goto label1;

     label9:
        return $r2;
    }
}
