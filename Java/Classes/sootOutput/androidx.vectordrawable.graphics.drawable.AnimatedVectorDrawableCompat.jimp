public class androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat extends androidx.vectordrawable.graphics.drawable.VectorDrawableCommon implements androidx.vectordrawable.graphics.drawable.Animatable2Compat
{
    private static final java.lang.String ANIMATED_VECTOR;
    private static final boolean DBG_ANIMATION_VECTOR_DRAWABLE;
    private static final java.lang.String LOGTAG;
    private static final java.lang.String TARGET;
    private androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState mAnimatedVectorState;
    java.util.ArrayList mAnimationCallbacks;
    private android.animation.Animator$AnimatorListener mAnimatorListener;
    private android.animation.ArgbEvaluator mArgbEvaluator;
    androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState mCachedConstantStateDelegate;
    final android.graphics.drawable.Drawable$Callback mCallback;
    private android.content.Context mContext;

    void <init>()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;

        r0 := @this;

        specialinvoke r0.<init>(null, null, null);

        return;
    }

    private void <init>(android.content.Context)
    {
        android.content.Context $r1;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>($r1, null, null);

        return;
    }

    private void <init>(android.content.Context, androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState, android.content.res.Resources)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r2, $r4;
        android.content.Context $r1;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 $r5;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.content.res.Resources $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        specialinvoke r0.<init>();

        r0.mArgbEvaluator = null;

        r0.mAnimatorListener = null;

        r0.mAnimationCallbacks = null;

        $r5 = new androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1;

        specialinvoke $r5.<init>(r0);

        r0.mCallback = $r5;

        r0.mContext = $r1;

        if $r2 == null goto label1;

        r0.mAnimatedVectorState = $r2;

        return;

     label1:
        $r4 = new androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState;

        specialinvoke $r4.<init>($r1, $r2, $r5, $r3);

        r0.mAnimatedVectorState = $r4;

        return;
    }

    public static void clearAnimationCallbacks(android.graphics.drawable.Drawable)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat $r2;
        int $i0;
        android.graphics.drawable.AnimatedVectorDrawable $r1;
        android.graphics.drawable.Drawable $r0;
        boolean $z0;

        $r0 := @parameter0;

        $z0 = $r0 instanceof android.graphics.drawable.Animatable;

        if $z0 != 0 goto label1;

        return;

     label1:
        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 24 goto label2;

        $r1 = (android.graphics.drawable.AnimatedVectorDrawable) $r0;

        virtualinvoke $r1.clearAnimationCallbacks();

        return;

     label2:
        $r2 = (androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) $r0;

        virtualinvoke $r2.clearAnimationCallbacks();

        return;
    }

    public static androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context, int)
    {
        android.content.Context r0;
        android.graphics.drawable.Drawable$Callback r5;
        android.content.res.XmlResourceParser $r8;
        java.io.IOException r11;
        android.graphics.drawable.Drawable $r4;
        org.xmlpull.v1.XmlPullParserException $r10;
        android.graphics.drawable.Drawable$ConstantState $r7;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState $r6;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r1;
        android.util.AttributeSet $r9;
        int i0, i1;
        android.content.res.Resources$Theme $r3;
        android.content.res.Resources $r2;

        r0 := @parameter0;

        i0 := @parameter1;

        i1 = android.os.Build$VERSION.SDK_INT;

        if i1 < 24 goto label01;

        r1 = new androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat;

        specialinvoke r1.<init>(r0);

        $r2 = virtualinvoke r0.getResources();

        $r3 = virtualinvoke r0.getTheme();

        $r4 = androidx.core.content.res.ResourcesCompat.getDrawable($r2, i0, $r3);

        r1.mDelegateDrawable = $r4;

        $r4 = r1.mDelegateDrawable;

        r5 = r1.mCallback;

        virtualinvoke $r4.setCallback(r5);

        $r6 = new androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState;

        $r4 = r1.mDelegateDrawable;

        $r7 = virtualinvoke $r4.getConstantState();

        specialinvoke $r6.<init>($r7);

        r1.mCachedConstantStateDelegate = $r6;

        return r1;

     label01:
        $r2 = virtualinvoke r0.getResources();

     label02:
        $r8 = virtualinvoke $r2.getXml(i0);

        $r9 = android.util.Xml.asAttributeSet($r8);

     label03:
        i0 = interfaceinvoke $r8.next();

     label04:
        if i0 == 2 goto label05;

        if i0 == 1 goto label05;

        goto label03;

     label05:
        if i0 != 2 goto label08;

     label06:
        $r2 = virtualinvoke r0.getResources();

        $r3 = virtualinvoke r0.getTheme();

        r1 = androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.createFromXmlInner(r0, $r2, $r8, $r9, $r3);

     label07:
        return r1;

     label08:
        $r10 = new org.xmlpull.v1.XmlPullParserException;

     label09:
        specialinvoke $r10.<init>("No start tag found");

     label10:
        throw $r10;

     label11:
        r11 := @caughtexception;

        android.util.Log.e("AnimatedVDCompat", "parser error", r11);

        goto label13;

     label12:
        $r10 := @caughtexception;

        android.util.Log.e("AnimatedVDCompat", "parser error", $r10);

     label13:
        return null;

        catch org.xmlpull.v1.XmlPullParserException from label02 to label04 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label06 to label07 with label12;
        catch org.xmlpull.v1.XmlPullParserException from label09 to label11 with label12;
        catch java.io.IOException from label02 to label04 with label11;
        catch java.io.IOException from label06 to label07 with label11;
        catch java.io.IOException from label09 to label10 with label11;
    }

    public static androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r0;
        android.util.AttributeSet $r3;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r5;
        android.content.res.Resources$Theme $r4;
        android.content.res.Resources $r1;
        org.xmlpull.v1.XmlPullParser $r2;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        $r3 := @parameter3;

        $r4 := @parameter4;

        r5 = new androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat;

        specialinvoke r5.<init>($r0);

        virtualinvoke r5.inflate($r1, $r2, $r3, $r4);

        return r5;
    }

    public static void registerAnimationCallback(android.graphics.drawable.Drawable, androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat $r3;
        int $i0;
        android.graphics.drawable.AnimatedVectorDrawable $r2;
        android.graphics.drawable.Drawable $r0;
        androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback $r1;
        boolean $z0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        if $r0 == null goto label4;

        if $r1 != null goto label1;

        return;

     label1:
        $z0 = $r0 instanceof android.graphics.drawable.Animatable;

        if $z0 != 0 goto label2;

        return;

     label2:
        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 24 goto label3;

        $r2 = (android.graphics.drawable.AnimatedVectorDrawable) $r0;

        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.registerPlatformCallback($r2, $r1);

        return;

     label3:
        $r3 = (androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) $r0;

        virtualinvoke $r3.registerAnimationCallback($r1);

     label4:
        return;
    }

    private static void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable, androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    {
        android.graphics.drawable.AnimatedVectorDrawable $r0;
        android.graphics.drawable.Animatable2$AnimationCallback $r2;
        androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback $r1;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 = virtualinvoke $r1.getPlatformCallback();

        virtualinvoke $r0.registerAnimationCallback($r2);

        return;
    }

    private void removeAnimatorSetListener()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r2;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.animation.Animator$AnimatorListener $r1;
        android.animation.AnimatorSet $r3;

        r0 := @this;

        $r1 = r0.mAnimatorListener;

        if $r1 == null goto label1;

        $r2 = r0.mAnimatedVectorState;

        $r3 = $r2.mAnimatorSet;

        $r1 = r0.mAnimatorListener;

        virtualinvoke $r3.removeListener($r1);

        r0.mAnimatorListener = null;

     label1:
        return;
    }

    private void setupAnimatorsForTarget(java.lang.String, android.animation.Animator)
    {
        android.animation.Animator $r2;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat r5;
        java.util.ArrayList $r6;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState r4;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        int $i0;
        java.lang.Object $r3;
        java.lang.String $r1;
        androidx.collection.ArrayMap $r7;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        r4 = r0.mAnimatedVectorState;

        r5 = r4.mVectorDrawable;

        $r3 = virtualinvoke r5.getTargetByName($r1);

        virtualinvoke $r2.setTarget($r3);

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 >= 21 goto label1;

        specialinvoke r0.setupColorAnimator($r2);

     label1:
        r4 = r0.mAnimatedVectorState;

        $r6 = r4.mAnimators;

        if $r6 != null goto label2;

        r4 = r0.mAnimatedVectorState;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<init>();

        r4.mAnimators = $r6;

        r4 = r0.mAnimatedVectorState;

        $r7 = new androidx.collection.ArrayMap;

        specialinvoke $r7.<init>();

        r4.mTargetNameMap = $r7;

     label2:
        r4 = r0.mAnimatedVectorState;

        $r6 = r4.mAnimators;

        virtualinvoke $r6.add($r2);

        r4 = r0.mAnimatedVectorState;

        $r7 = r4.mTargetNameMap;

        virtualinvoke $r7.put($r2, $r1);

        return;
    }

    private void setupColorAnimator(android.animation.Animator)
    {
        android.animation.ObjectAnimator r6;
        android.animation.Animator $r1, $r5;
        java.util.ArrayList $r3;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        int i0, $i1;
        android.animation.AnimatorSet r2;
        java.lang.Object $r4;
        android.animation.ArgbEvaluator $r9;
        java.lang.String $r7, $r8;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        z0 = $r1 instanceof android.animation.AnimatorSet;

        if z0 == 0 goto label2;

        r2 = (android.animation.AnimatorSet) $r1;

        $r3 = virtualinvoke r2.getChildAnimations();

        if $r3 == null goto label2;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r3.size();

        if i0 >= $i1 goto label2;

        $r4 = interfaceinvoke $r3.get(i0);

        $r5 = (android.animation.Animator) $r4;

        specialinvoke r0.setupColorAnimator($r5);

        i0 = i0 + 1;

        goto label1;

     label2:
        z0 = $r1 instanceof android.animation.ObjectAnimator;

        if z0 == 0 goto label5;

        r6 = (android.animation.ObjectAnimator) $r1;

        $r7 = virtualinvoke r6.getPropertyName();

        $r8 = "fillColor";

        z0 = virtualinvoke $r8.equals($r7);

        if z0 != 0 goto label3;

        $r8 = "strokeColor";

        z0 = virtualinvoke $r8.equals($r7);

        if z0 == 0 goto label5;

     label3:
        $r9 = r0.mArgbEvaluator;

        if $r9 != null goto label4;

        $r9 = new android.animation.ArgbEvaluator;

        specialinvoke $r9.<init>();

        r0.mArgbEvaluator = $r9;

     label4:
        $r9 = r0.mArgbEvaluator;

        virtualinvoke r6.setEvaluator($r9);

     label5:
        return;
    }

    public static boolean unregisterAnimationCallback(android.graphics.drawable.Drawable, androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat $r3;
        int $i0;
        android.graphics.drawable.AnimatedVectorDrawable $r2;
        android.graphics.drawable.Drawable $r0;
        androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback $r1;
        boolean $z0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        if $r0 == null goto label4;

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = $r0 instanceof android.graphics.drawable.Animatable;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 24 goto label3;

        $r2 = (android.graphics.drawable.AnimatedVectorDrawable) $r0;

        $z0 = androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.unregisterPlatformCallback($r2, $r1);

        return $z0;

     label3:
        $r3 = (androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) $r0;

        $z0 = virtualinvoke $r3.unregisterAnimationCallback($r1);

        return $z0;

     label4:
        return 0;
    }

    private static boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable, androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    {
        android.graphics.drawable.Animatable2$AnimationCallback $r2;
        android.graphics.drawable.AnimatedVectorDrawable $r0;
        androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback $r1;
        boolean $z0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 = virtualinvoke $r1.getPlatformCallback();

        $z0 = virtualinvoke $r0.unregisterAnimationCallback($r2);

        return $z0;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.content.res.Resources$Theme $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDelegateDrawable;

        if $r2 == null goto label1;

        $r2 = r0.mDelegateDrawable;

        androidx.core.graphics.drawable.DrawableCompat.applyTheme($r2, $r1);

     label1:
        return;
    }

    public boolean canApplyTheme()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        $z0 = androidx.core.graphics.drawable.DrawableCompat.canApplyTheme($r1);

        return $z0;

     label1:
        return 0;
    }

    public void clearAnimationCallbacks()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.graphics.drawable.AnimatedVectorDrawable $r2;
        android.graphics.drawable.Drawable $r1;
        java.util.ArrayList $r3;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        $r2 = (android.graphics.drawable.AnimatedVectorDrawable) $r1;

        virtualinvoke $r2.clearAnimationCallbacks();

        return;

     label1:
        specialinvoke r0.removeAnimatorSetListener();

        $r3 = r0.mAnimationCallbacks;

        if $r3 != null goto label2;

        return;

     label2:
        virtualinvoke $r3.clear();

        return;
    }

    public volatile void clearColorFilter()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;

        r0 := @this;

        specialinvoke r0.clearColorFilter();

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r3;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.animation.AnimatorSet $r5;
        android.graphics.Canvas $r1;
        android.graphics.drawable.Drawable $r2;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDelegateDrawable;

        if $r2 == null goto label1;

        $r2 = r0.mDelegateDrawable;

        virtualinvoke $r2.draw($r1);

        return;

     label1:
        $r3 = r0.mAnimatedVectorState;

        $r4 = $r3.mVectorDrawable;

        virtualinvoke $r4.draw($r1);

        $r3 = r0.mAnimatedVectorState;

        $r5 = $r3.mAnimatorSet;

        $z0 = virtualinvoke $r5.isStarted();

        if $z0 == 0 goto label2;

        virtualinvoke r0.invalidateSelf();

     label2:
        return;
    }

    public int getAlpha()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r2;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r3;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        $i0 = androidx.core.graphics.drawable.DrawableCompat.getAlpha($r1);

        return $i0;

     label1:
        $r2 = r0.mAnimatedVectorState;

        $r3 = $r2.mVectorDrawable;

        $i0 = virtualinvoke $r3.getAlpha();

        return $i0;
    }

    public int getChangingConfigurations()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r2;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        int $i0, $i1;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        $i0 = virtualinvoke $r1.getChangingConfigurations();

        return $i0;

     label1:
        $i0 = specialinvoke r0.getChangingConfigurations();

        $r2 = r0.mAnimatedVectorState;

        $i1 = $r2.mChangingConfigurations;

        $i0 = $i0 | $i1;

        return $i0;
    }

    public android.graphics.ColorFilter getColorFilter()
    {
        android.graphics.ColorFilter $r2;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r3;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r4;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        $r2 = androidx.core.graphics.drawable.DrawableCompat.getColorFilter($r1);

        return $r2;

     label1:
        $r3 = r0.mAnimatedVectorState;

        $r4 = $r3.mVectorDrawable;

        $r2 = virtualinvoke $r4.getColorFilter();

        return $r2;
    }

    public android.graphics.drawable.Drawable$ConstantState getConstantState()
    {
        android.graphics.drawable.Drawable$ConstantState $r1;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState $r3;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        int $i0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this;

        $r2 = r0.mDelegateDrawable;

        if $r2 == null goto label1;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 24 goto label1;

        $r3 = new androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState;

        $r2 = r0.mDelegateDrawable;

        $r1 = virtualinvoke $r2.getConstantState();

        specialinvoke $r3.<init>($r1);

        return $r3;

     label1:
        return null;
    }

    public volatile android.graphics.drawable.Drawable getCurrent()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r1 = specialinvoke r0.getCurrent();

        return $r1;
    }

    public int getIntrinsicHeight()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r2;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r3;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        $i0 = virtualinvoke $r1.getIntrinsicHeight();

        return $i0;

     label1:
        $r2 = r0.mAnimatedVectorState;

        $r3 = $r2.mVectorDrawable;

        $i0 = virtualinvoke $r3.getIntrinsicHeight();

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r2;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r3;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        $i0 = virtualinvoke $r1.getIntrinsicWidth();

        return $i0;

     label1:
        $r2 = r0.mAnimatedVectorState;

        $r3 = $r2.mVectorDrawable;

        $i0 = virtualinvoke $r3.getIntrinsicWidth();

        return $i0;
    }

    public volatile int getMinimumHeight()
    {
        int $i0;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;

        r0 := @this;

        $i0 = specialinvoke r0.getMinimumHeight();

        return $i0;
    }

    public volatile int getMinimumWidth()
    {
        int $i0;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;

        r0 := @this;

        $i0 = specialinvoke r0.getMinimumWidth();

        return $i0;
    }

    public int getOpacity()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r2;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r3;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        $i0 = virtualinvoke $r1.getOpacity();

        return $i0;

     label1:
        $r2 = r0.mAnimatedVectorState;

        $r3 = $r2.mVectorDrawable;

        $i0 = virtualinvoke $r3.getOpacity();

        return $i0;
    }

    public volatile boolean getPadding(android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = specialinvoke r0.getPadding($r1);

        return $z0;
    }

    public volatile int[] getState()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        int[] $r1;

        r0 := @this;

        $r1 = specialinvoke r0.getState();

        return $r1;
    }

    public volatile android.graphics.Region getTransparentRegion()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.graphics.Region $r1;

        r0 := @this;

        $r1 = specialinvoke r0.getTransparentRegion();

        return $r1;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.util.AttributeSet $r3;
        android.content.res.Resources $r1;
        org.xmlpull.v1.XmlPullParser $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        virtualinvoke r0.inflate($r1, $r2, $r3, null);

        return;
    }

    public void inflate(android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r14;
        java.lang.IllegalStateException $r16;
        android.graphics.drawable.Drawable$Callback r11;
        android.animation.Animator $r15;
        android.graphics.drawable.Drawable r5;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r10, r13;
        android.content.res.TypedArray $r9;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState r12;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.util.AttributeSet $r3;
        int[] r8;
        int $i0, i1, $i2;
        java.lang.String $r6, r7;
        android.content.res.Resources$Theme $r4;
        org.xmlpull.v1.XmlPullParser $r2;
        boolean $z0;
        android.content.res.Resources $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 := @parameter3;

        r5 = r0.mDelegateDrawable;

        if r5 == null goto label01;

        r5 = r0.mDelegateDrawable;

        androidx.core.graphics.drawable.DrawableCompat.inflate(r5, $r1, $r2, $r3, $r4);

        return;

     label01:
        i1 = interfaceinvoke $r2.getEventType();

        $i0 = interfaceinvoke $r2.getDepth();

        $i0 = $i0 + 1;

     label02:
        if i1 == 1 goto label10;

        $i2 = interfaceinvoke $r2.getDepth();

        if $i2 >= $i0 goto label03;

        if i1 == 3 goto label10;

     label03:
        if i1 != 2 goto label09;

        $r6 = interfaceinvoke $r2.getName();

        r7 = "animated-vector";

        $z0 = virtualinvoke r7.equals($r6);

        if $z0 == 0 goto label06;

        r8 = androidx.vectordrawable.graphics.drawable.AndroidResources.STYLEABLE_ANIMATED_VECTOR_DRAWABLE;

        $r9 = androidx.core.content.res.TypedArrayUtils.obtainAttributes($r1, $r4, $r3, r8);

        i1 = virtualinvoke $r9.getResourceId(0, 0);

        if i1 == 0 goto label05;

        $r10 = androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.create($r1, i1, $r4);

        virtualinvoke $r10.setAllowCaching(0);

        r11 = r0.mCallback;

        virtualinvoke $r10.setCallback(r11);

        r12 = r0.mAnimatedVectorState;

        r13 = r12.mVectorDrawable;

        if r13 == null goto label04;

        r12 = r0.mAnimatedVectorState;

        r13 = r12.mVectorDrawable;

        virtualinvoke r13.setCallback(null);

     label04:
        r12 = r0.mAnimatedVectorState;

        r12.mVectorDrawable = $r10;

     label05:
        virtualinvoke $r9.recycle();

        goto label09;

     label06:
        r7 = "target";

        $z0 = virtualinvoke r7.equals($r6);

        if $z0 == 0 goto label09;

        r8 = androidx.vectordrawable.graphics.drawable.AndroidResources.STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET;

        $r9 = virtualinvoke $r1.obtainAttributes($r3, r8);

        $r6 = virtualinvoke $r9.getString(0);

        i1 = virtualinvoke $r9.getResourceId(1, 0);

        if i1 == 0 goto label08;

        r14 = r0.mContext;

        if r14 == null goto label07;

        $r15 = androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat.loadAnimator(r14, i1);

        specialinvoke r0.setupAnimatorsForTarget($r6, $r15);

        goto label08;

     label07:
        virtualinvoke $r9.recycle();

        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<init>("Context can\'t be null when inflating animators");

        throw $r16;

     label08:
        virtualinvoke $r9.recycle();

        goto label09;

     label09:
        i1 = interfaceinvoke $r2.next();

        goto label02;

     label10:
        r12 = r0.mAnimatedVectorState;

        virtualinvoke r12.setupAnimatorSet();

        return;
    }

    public boolean isAutoMirrored()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r2;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r3;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        $z0 = androidx.core.graphics.drawable.DrawableCompat.isAutoMirrored($r1);

        return $z0;

     label1:
        $r2 = r0.mAnimatedVectorState;

        $r3 = $r2.mVectorDrawable;

        $z0 = virtualinvoke $r3.isAutoMirrored();

        return $z0;
    }

    public boolean isRunning()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r3;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.animation.AnimatorSet $r4;
        android.graphics.drawable.AnimatedVectorDrawable $r2;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        $r2 = (android.graphics.drawable.AnimatedVectorDrawable) $r1;

        $z0 = virtualinvoke $r2.isRunning();

        return $z0;

     label1:
        $r3 = r0.mAnimatedVectorState;

        $r4 = $r3.mAnimatorSet;

        $z0 = virtualinvoke $r4.isRunning();

        return $z0;
    }

    public boolean isStateful()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r2;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r3;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        $z0 = virtualinvoke $r1.isStateful();

        return $z0;

     label1:
        $r2 = r0.mAnimatedVectorState;

        $r3 = $r2.mVectorDrawable;

        $z0 = virtualinvoke $r3.isStateful();

        return $z0;
    }

    public volatile void jumpToCurrentState()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;

        r0 := @this;

        specialinvoke r0.jumpToCurrentState();

        return;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        virtualinvoke $r1.mutate();

     label1:
        return r0;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r3;
        android.graphics.Rect $r1;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.graphics.drawable.Drawable $r2;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDelegateDrawable;

        if $r2 == null goto label1;

        $r2 = r0.mDelegateDrawable;

        virtualinvoke $r2.setBounds($r1);

        return;

     label1:
        $r3 = r0.mAnimatedVectorState;

        $r4 = $r3.mVectorDrawable;

        virtualinvoke $r4.setBounds($r1);

        return;
    }

    protected boolean onLevelChange(int)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r2;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r3;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        $z0 = virtualinvoke $r1.setLevel($i0);

        return $z0;

     label1:
        $r2 = r0.mAnimatedVectorState;

        $r3 = $r2.mVectorDrawable;

        $z0 = virtualinvoke $r3.setLevel($i0);

        return $z0;
    }

    protected boolean onStateChange(int[])
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r3;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        int[] $r1;
        android.graphics.drawable.Drawable $r2;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDelegateDrawable;

        if $r2 == null goto label1;

        $r2 = r0.mDelegateDrawable;

        $z0 = virtualinvoke $r2.setState($r1);

        return $z0;

     label1:
        $r3 = r0.mAnimatedVectorState;

        $r4 = $r3.mVectorDrawable;

        $z0 = virtualinvoke $r4.setState($r1);

        return $z0;
    }

    public void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2 $r6;
        android.graphics.drawable.AnimatedVectorDrawable $r4;
        androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback $r1;
        android.graphics.drawable.Drawable $r3;
        java.util.ArrayList $r5;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r7;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.animation.Animator$AnimatorListener $r2;
        android.animation.AnimatorSet $r8;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r3 = r0.mDelegateDrawable;

        if $r3 == null goto label1;

        $r3 = r0.mDelegateDrawable;

        $r4 = (android.graphics.drawable.AnimatedVectorDrawable) $r3;

        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.registerPlatformCallback($r4, $r1);

        return;

     label1:
        if $r1 != null goto label2;

        return;

     label2:
        $r5 = r0.mAnimationCallbacks;

        if $r5 != null goto label3;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<init>();

        r0.mAnimationCallbacks = $r5;

     label3:
        $r5 = r0.mAnimationCallbacks;

        $z0 = virtualinvoke $r5.contains($r1);

        if $z0 == 0 goto label4;

        return;

     label4:
        $r5 = r0.mAnimationCallbacks;

        virtualinvoke $r5.add($r1);

        $r2 = r0.mAnimatorListener;

        if $r2 != null goto label5;

        $r6 = new androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2;

        specialinvoke $r6.<init>(r0);

        r0.mAnimatorListener = $r6;

     label5:
        $r7 = r0.mAnimatedVectorState;

        $r8 = $r7.mAnimatorSet;

        $r2 = r0.mAnimatorListener;

        virtualinvoke $r8.addListener($r2);

        return;
    }

    public void setAlpha(int)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r2;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r3;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        virtualinvoke $r1.setAlpha($i0);

        return;

     label1:
        $r2 = r0.mAnimatedVectorState;

        $r3 = $r2.mVectorDrawable;

        virtualinvoke $r3.setAlpha($i0);

        return;
    }

    public void setAutoMirrored(boolean)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r2;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r3;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        androidx.core.graphics.drawable.DrawableCompat.setAutoMirrored($r1, $z0);

        return;

     label1:
        $r2 = r0.mAnimatedVectorState;

        $r3 = $r2.mVectorDrawable;

        virtualinvoke $r3.setAutoMirrored($z0);

        return;
    }

    public volatile void setChangingConfigurations(int)
    {
        int $i0;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.setChangingConfigurations($i0);

        return;
    }

    public volatile void setColorFilter(int, android.graphics.PorterDuff$Mode)
    {
        int $i0;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        specialinvoke r0.setColorFilter($i0, $r1);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.ColorFilter $r1;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r3;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.graphics.drawable.Drawable $r2;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDelegateDrawable;

        if $r2 == null goto label1;

        $r2 = r0.mDelegateDrawable;

        virtualinvoke $r2.setColorFilter($r1);

        return;

     label1:
        $r3 = r0.mAnimatedVectorState;

        $r4 = $r3.mVectorDrawable;

        virtualinvoke $r4.setColorFilter($r1);

        return;
    }

    public volatile void setFilterBitmap(boolean)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        specialinvoke r0.setFilterBitmap($z0);

        return;
    }

    public volatile void setHotspot(float, float)
    {
        float $f0, $f1;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;

        r0 := @this;

        $f0 := @parameter0;

        $f1 := @parameter1;

        specialinvoke r0.setHotspot($f0, $f1);

        return;
    }

    public volatile void setHotspotBounds(int, int, int, int)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        $i3 := @parameter3;

        specialinvoke r0.setHotspotBounds($i0, $i1, $i2, $i3);

        return;
    }

    public volatile boolean setState(int[])
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        int[] $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = specialinvoke r0.setState($r1);

        return $z0;
    }

    public void setTint(int)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r2;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r3;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        androidx.core.graphics.drawable.DrawableCompat.setTint($r1, $i0);

        return;

     label1:
        $r2 = r0.mAnimatedVectorState;

        $r3 = $r2.mVectorDrawable;

        virtualinvoke $r3.setTint($i0);

        return;
    }

    public void setTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r3;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.graphics.drawable.Drawable $r2;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDelegateDrawable;

        if $r2 == null goto label1;

        $r2 = r0.mDelegateDrawable;

        androidx.core.graphics.drawable.DrawableCompat.setTintList($r2, $r1);

        return;

     label1:
        $r3 = r0.mAnimatedVectorState;

        $r4 = $r3.mVectorDrawable;

        virtualinvoke $r4.setTintList($r1);

        return;
    }

    public void setTintMode(android.graphics.PorterDuff$Mode)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r3;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.graphics.drawable.Drawable $r2;
        android.graphics.PorterDuff$Mode $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDelegateDrawable;

        if $r2 == null goto label1;

        $r2 = r0.mDelegateDrawable;

        androidx.core.graphics.drawable.DrawableCompat.setTintMode($r2, $r1);

        return;

     label1:
        $r3 = r0.mAnimatedVectorState;

        $r4 = $r3.mVectorDrawable;

        virtualinvoke $r4.setTintMode($r1);

        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r2;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCompat $r3;
        boolean $z0, $z1;

        r0 := @this;

        $z0 := @parameter0;

        $z1 := @parameter1;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        $z0 = virtualinvoke $r1.setVisible($z0, $z1);

        return $z0;

     label1:
        $r2 = r0.mAnimatedVectorState;

        $r3 = $r2.mVectorDrawable;

        virtualinvoke $r3.setVisible($z0, $z1);

        $z0 = specialinvoke r0.setVisible($z0, $z1);

        return $z0;
    }

    public void start()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r3;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.animation.AnimatorSet $r4;
        android.graphics.drawable.AnimatedVectorDrawable $r2;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        $r2 = (android.graphics.drawable.AnimatedVectorDrawable) $r1;

        virtualinvoke $r2.start();

        return;

     label1:
        $r3 = r0.mAnimatedVectorState;

        $r4 = $r3.mAnimatorSet;

        $z0 = virtualinvoke $r4.isStarted();

        if $z0 == 0 goto label2;

        return;

     label2:
        $r3 = r0.mAnimatedVectorState;

        $r4 = $r3.mAnimatorSet;

        virtualinvoke $r4.start();

        virtualinvoke r0.invalidateSelf();

        return;
    }

    public void stop()
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState $r3;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        android.animation.AnimatorSet $r4;
        android.graphics.drawable.AnimatedVectorDrawable $r2;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = r0.mDelegateDrawable;

        $r2 = (android.graphics.drawable.AnimatedVectorDrawable) $r1;

        virtualinvoke $r2.stop();

        return;

     label1:
        $r3 = r0.mAnimatedVectorState;

        $r4 = $r3.mAnimatorSet;

        virtualinvoke $r4.end();

        return;
    }

    public boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback)
    {
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat r0;
        int $i0;
        android.graphics.drawable.AnimatedVectorDrawable r3;
        androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback $r1;
        android.graphics.drawable.Drawable r2;
        java.util.ArrayList r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mDelegateDrawable;

        if r2 == null goto label1;

        r2 = r0.mDelegateDrawable;

        r3 = (android.graphics.drawable.AnimatedVectorDrawable) r2;

        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.unregisterPlatformCallback(r3, $r1);

     label1:
        r4 = r0.mAnimationCallbacks;

        if r4 == null goto label3;

        if $r1 != null goto label2;

        goto label3;

     label2:
        $z0 = virtualinvoke r4.remove($r1);

        r4 = r0.mAnimationCallbacks;

        $i0 = virtualinvoke r4.size();

        if $i0 != 0 goto label4;

        specialinvoke r0.removeAnimatorSetListener();

        return $z0;

     label3:
        return 0;

     label4:
        return $z0;
    }
}
