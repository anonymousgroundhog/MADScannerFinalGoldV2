public final class androidx.core.os.TraceCompat extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static java.lang.reflect.Method sAsyncTraceBeginMethod;
    private static java.lang.reflect.Method sAsyncTraceEndMethod;
    private static java.lang.reflect.Method sIsTagEnabledMethod;
    private static java.lang.reflect.Method sTraceCounterMethod;
    private static long sTraceTagApp;

    static void <clinit>()
    {
        java.lang.Class[] $r2;
        long $l1;
        java.lang.reflect.Field $r1;
        java.lang.Exception r5;
        int i0;
        java.lang.Class r0, $r3;
        java.lang.reflect.Method $r4;

        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 >= 29 goto label18;

        r0 = class "Landroid/os/Trace;";

     label01:
        $r1 = virtualinvoke r0.getField("TRACE_TAG_APP");

        $l1 = virtualinvoke $r1.getLong(null);

     label02:
        androidx.core.os.TraceCompat.sTraceTagApp = $l1;

        r0 = class "Landroid/os/Trace;";

        $r2 = newarray (java.lang.Class)[1];

        $r3 = java.lang.Long.TYPE;

     label03:
        $r2[0] = $r3;

        $r4 = virtualinvoke r0.getMethod("isTagEnabled", $r2);

     label04:
        androidx.core.os.TraceCompat.sIsTagEnabledMethod = $r4;

        r0 = class "Landroid/os/Trace;";

        $r2 = newarray (java.lang.Class)[3];

        $r3 = java.lang.Long.TYPE;

     label05:
        $r2[0] = $r3;

        $r2[1] = class "Ljava/lang/String;";

     label06:
        $r3 = java.lang.Integer.TYPE;

     label07:
        $r2[2] = $r3;

        $r4 = virtualinvoke r0.getMethod("asyncTraceBegin", $r2);

     label08:
        androidx.core.os.TraceCompat.sAsyncTraceBeginMethod = $r4;

        r0 = class "Landroid/os/Trace;";

        $r2 = newarray (java.lang.Class)[3];

        $r3 = java.lang.Long.TYPE;

     label09:
        $r2[0] = $r3;

        $r2[1] = class "Ljava/lang/String;";

     label10:
        $r3 = java.lang.Integer.TYPE;

     label11:
        $r2[2] = $r3;

        $r4 = virtualinvoke r0.getMethod("asyncTraceEnd", $r2);

     label12:
        androidx.core.os.TraceCompat.sAsyncTraceEndMethod = $r4;

        r0 = class "Landroid/os/Trace;";

        $r2 = newarray (java.lang.Class)[3];

        $r3 = java.lang.Long.TYPE;

     label13:
        $r2[0] = $r3;

        $r2[1] = class "Ljava/lang/String;";

     label14:
        $r3 = java.lang.Integer.TYPE;

     label15:
        $r2[2] = $r3;

        $r4 = virtualinvoke r0.getMethod("traceCounter", $r2);

     label16:
        androidx.core.os.TraceCompat.sTraceCounterMethod = $r4;

        return;

     label17:
        r5 := @caughtexception;

        android.util.Log.i("TraceCompat", "Unable to initialize via reflection.", r5);

     label18:
        return;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
    }

    private void <init>()
    {
        androidx.core.os.TraceCompat r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static void beginAsyncSection(java.lang.String, int)
    {
        java.lang.Object[] $r2;
        long $l2;
        java.lang.Integer $r4;
        java.lang.Exception r5;
        java.lang.Long $r3;
        int $i0, i1;
        java.lang.String $r0;
        java.lang.reflect.Method r1;

        $r0 := @parameter0;

        $i0 := @parameter1;

        i1 = android.os.Build$VERSION.SDK_INT;

        if i1 < 29 goto label1;

        android.os.Trace.beginAsyncSection($r0, $i0);

        return;

     label1:
        r1 = androidx.core.os.TraceCompat.sAsyncTraceBeginMethod;

        $r2 = newarray (java.lang.Object)[3];

        $l2 = androidx.core.os.TraceCompat.sTraceTagApp;

     label2:
        $r3 = java.lang.Long.valueOf($l2);

        $r2[0] = $r3;

        $r2[1] = $r0;

        $r4 = java.lang.Integer.valueOf($i0);

        $r2[2] = $r4;

        virtualinvoke r1.invoke(null, $r2);

     label3:
        return;

     label4:
        r5 := @caughtexception;

        android.util.Log.v("TraceCompat", "Unable to invoke asyncTraceBegin() via reflection.");

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static void beginSection(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0;

        android.os.Trace.beginSection($r0);

        return;
    }

    public static void endAsyncSection(java.lang.String, int)
    {
        java.lang.Object[] $r2;
        long $l2;
        java.lang.Integer $r4;
        java.lang.Exception r5;
        java.lang.Long $r3;
        int $i0, i1;
        java.lang.String $r0;
        java.lang.reflect.Method r1;

        $r0 := @parameter0;

        $i0 := @parameter1;

        i1 = android.os.Build$VERSION.SDK_INT;

        if i1 < 29 goto label1;

        android.os.Trace.endAsyncSection($r0, $i0);

        return;

     label1:
        r1 = androidx.core.os.TraceCompat.sAsyncTraceEndMethod;

        $r2 = newarray (java.lang.Object)[3];

        $l2 = androidx.core.os.TraceCompat.sTraceTagApp;

     label2:
        $r3 = java.lang.Long.valueOf($l2);

        $r2[0] = $r3;

        $r2[1] = $r0;

        $r4 = java.lang.Integer.valueOf($i0);

        $r2[2] = $r4;

        virtualinvoke r1.invoke(null, $r2);

     label3:
        return;

     label4:
        r5 := @caughtexception;

        android.util.Log.v("TraceCompat", "Unable to invoke endAsyncSection() via reflection.");

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static void endSection()
    {
        android.os.Trace.endSection();

        return;
    }

    public static boolean isEnabled()
    {
        java.lang.Object[] $r1;
        long $l1;
        java.lang.Exception r5;
        java.lang.Long $r2;
        int $i0;
        java.lang.Boolean r4;
        java.lang.Object $r3;
        java.lang.reflect.Method r0;
        boolean $z0;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 29 goto label1;

        $z0 = android.os.Trace.isEnabled();

        return $z0;

     label1:
        r0 = androidx.core.os.TraceCompat.sIsTagEnabledMethod;

        $r1 = newarray (java.lang.Object)[1];

        $l1 = androidx.core.os.TraceCompat.sTraceTagApp;

     label2:
        $r2 = java.lang.Long.valueOf($l1);

        $r1[0] = $r2;

        $r3 = virtualinvoke r0.invoke(null, $r1);

        r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke r4.booleanValue();

     label3:
        return $z0;

     label4:
        r5 := @caughtexception;

        android.util.Log.v("TraceCompat", "Unable to invoke isTagEnabled() via reflection.");

        return 0;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static void setCounter(java.lang.String, int)
    {
        java.lang.Object[] $r2;
        long l2;
        java.lang.Integer $r4;
        java.lang.Exception r5;
        java.lang.Long $r3;
        int $i0, i1;
        java.lang.String $r0;
        java.lang.reflect.Method r1;

        $r0 := @parameter0;

        $i0 := @parameter1;

        i1 = android.os.Build$VERSION.SDK_INT;

        if i1 < 29 goto label1;

        l2 = (long) $i0;

        android.os.Trace.setCounter($r0, l2);

        return;

     label1:
        r1 = androidx.core.os.TraceCompat.sTraceCounterMethod;

        $r2 = newarray (java.lang.Object)[3];

        l2 = androidx.core.os.TraceCompat.sTraceTagApp;

     label2:
        $r3 = java.lang.Long.valueOf(l2);

        $r2[0] = $r3;

        $r2[1] = $r0;

        $r4 = java.lang.Integer.valueOf($i0);

        $r2[2] = $r4;

        virtualinvoke r1.invoke(null, $r2);

     label3:
        return;

     label4:
        r5 := @caughtexception;

        android.util.Log.v("TraceCompat", "Unable to invoke traceCounter() via reflection.");

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }
}
