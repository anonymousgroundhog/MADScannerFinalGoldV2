class androidx.core.provider.RequestExecutor$HandlerExecutor extends java.lang.Object implements java.util.concurrent.Executor
{
    private final android.os.Handler mHandler;

    void <init>(android.os.Handler)
    {
        java.lang.Object $r2;
        androidx.core.provider.RequestExecutor$HandlerExecutor r0;
        android.os.Handler $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        $r2 = androidx.core.util.Preconditions.checkNotNull($r1);

        $r1 = (android.os.Handler) $r2;

        r0.mHandler = $r1;

        return;
    }

    public void execute(java.lang.Runnable)
    {
        java.lang.Runnable $r1;
        java.util.concurrent.RejectedExecutionException $r4;
        android.os.Handler $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5;
        androidx.core.provider.RequestExecutor$HandlerExecutor r0;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mHandler;

        $r3 = androidx.core.util.Preconditions.checkNotNull($r1);

        $r1 = (java.lang.Runnable) $r3;

        $z0 = virtualinvoke $r2.post($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = new java.util.concurrent.RejectedExecutionException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r2 = r0.mHandler;

        $r5 = virtualinvoke $r5.append($r2);

        $r5 = virtualinvoke $r5.append(" is shutting down");

        $r6 = virtualinvoke $r5.toString();

        specialinvoke $r4.<init>($r6);

        throw $r4;
    }
}
