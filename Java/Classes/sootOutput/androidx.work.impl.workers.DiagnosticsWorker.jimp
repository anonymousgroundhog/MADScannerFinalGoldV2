public class androidx.work.impl.workers.DiagnosticsWorker extends androidx.work.Worker
{
    private static final java.lang.String TAG;

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = androidx.work.Logger.tagWithPrefix("DiagnosticsWrkr");

        androidx.work.impl.workers.DiagnosticsWorker.TAG = $r0;

        return;
    }

    public void <init>(android.content.Context, androidx.work.WorkerParameters)
    {
        androidx.work.WorkerParameters $r2;
        android.content.Context $r1;
        androidx.work.impl.workers.DiagnosticsWorker r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.<init>($r1, $r2);

        return;
    }

    private static java.lang.String workSpecRow(androidx.work.impl.model.WorkSpec, java.lang.String, java.lang.Integer, java.lang.String)
    {
        java.lang.Object[] $r4;
        androidx.work.WorkInfo$State $r6;
        java.lang.String $r1, $r3, $r5;
        java.lang.Integer $r2;
        androidx.work.impl.model.WorkSpec $r0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        $r3 := @parameter3;

        $r4 = newarray (java.lang.Object)[6];

        $r5 = $r0.id;

        $r4[0] = $r5;

        $r5 = $r0.workerClassName;

        $r4[1] = $r5;

        $r4[2] = $r2;

        $r6 = $r0.state;

        $r5 = virtualinvoke $r6.name();

        $r4[3] = $r5;

        $r4[4] = $r1;

        $r4[5] = $r3;

        $r1 = java.lang.String.format("\n%s\t %s\t %s\t %s\t %s\t %s\t", $r4);

        return $r1;
    }

    private static java.lang.String workSpecRows(androidx.work.impl.model.WorkNameDao, androidx.work.impl.model.WorkTagDao, androidx.work.impl.model.SystemIdInfoDao, java.util.List)
    {
        java.lang.Object[] r6;
        androidx.work.impl.model.SystemIdInfoDao $r2;
        java.lang.Integer r10;
        androidx.work.impl.model.WorkSpec r9;
        int i0;
        java.lang.String r5, $r13;
        boolean $z0;
        java.util.Iterator $r7;
        androidx.work.impl.model.SystemIdInfo $r11;
        androidx.work.impl.model.WorkTagDao $r1;
        java.util.List r3, $r12;
        java.lang.StringBuilder r4;
        java.lang.Object $r8;
        androidx.work.impl.model.WorkNameDao $r0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        r3 := @parameter3;

        r4 = new java.lang.StringBuilder;

        specialinvoke r4.<init>();

        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 < 23 goto label1;

        r5 = "Job Id";

        goto label2;

     label1:
        r5 = "Alarm Id";

     label2:
        r6 = newarray (java.lang.Object)[1];

        r6[0] = r5;

        r5 = java.lang.String.format("\n Id \t Class Name\t %s\t State\t Unique Name\t Tags\t", r6);

        virtualinvoke r4.append(r5);

        $r7 = interfaceinvoke r3.iterator();

     label3:
        $z0 = interfaceinvoke $r7.hasNext();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke $r7.next();

        r9 = (androidx.work.impl.model.WorkSpec) $r8;

        r10 = null;

        r5 = r9.id;

        $r11 = interfaceinvoke $r2.getSystemIdInfo(r5);

        if $r11 == null goto label4;

        i0 = $r11.systemId;

        r10 = java.lang.Integer.valueOf(i0);

     label4:
        r5 = r9.id;

        r3 = interfaceinvoke $r0.getNamesForWorkSpecId(r5);

        r5 = r9.id;

        $r12 = interfaceinvoke $r1.getTagsForWorkSpecId(r5);

        r5 = android.text.TextUtils.join(",", r3);

        $r13 = android.text.TextUtils.join(",", $r12);

        r5 = androidx.work.impl.workers.DiagnosticsWorker.workSpecRow(r9, r5, r10, $r13);

        virtualinvoke r4.append(r5);

        goto label3;

     label5:
        r5 = virtualinvoke r4.toString();

        return r5;
    }

    public androidx.work.ListenableWorker$Result doWork()
    {
        android.content.Context $r1;
        androidx.work.ListenableWorker$Result $r16;
        androidx.work.impl.model.SystemIdInfoDao $r7;
        long $l0, $l1;
        androidx.work.Logger $r12;
        androidx.work.impl.WorkDatabase $r3;
        java.lang.String $r13, $r15;
        boolean $z0;
        androidx.work.impl.model.WorkSpecDao $r4;
        androidx.work.impl.model.WorkTagDao $r6;
        java.util.concurrent.TimeUnit r8;
        java.util.List $r9, $r10, $r11;
        java.lang.Throwable[] $r14;
        androidx.work.impl.WorkManagerImpl $r2;
        androidx.work.impl.workers.DiagnosticsWorker r0;
        androidx.work.impl.model.WorkNameDao $r5;

        r0 := @this;

        $r1 = virtualinvoke r0.getApplicationContext();

        $r2 = androidx.work.impl.WorkManagerImpl.getInstance($r1);

        $r3 = virtualinvoke $r2.getWorkDatabase();

        $r4 = virtualinvoke $r3.workSpecDao();

        $r5 = virtualinvoke $r3.workNameDao();

        $r6 = virtualinvoke $r3.workTagDao();

        $r7 = virtualinvoke $r3.systemIdInfoDao();

        $l0 = java.lang.System.currentTimeMillis();

        r8 = java.util.concurrent.TimeUnit.DAYS;

        $l1 = virtualinvoke r8.toMillis(1L);

        $l0 = $l0 - $l1;

        $r9 = interfaceinvoke $r4.getRecentlyCompletedWork($l0);

        $r10 = interfaceinvoke $r4.getRunningWork();

        $r11 = interfaceinvoke $r4.getAllEligibleWorkSpecsForScheduling(200);

        if $r9 == null goto label1;

        $z0 = interfaceinvoke $r9.isEmpty();

        if $z0 != 0 goto label1;

        $r12 = androidx.work.Logger.get();

        $r13 = androidx.work.impl.workers.DiagnosticsWorker.TAG;

        $r14 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r12.info($r13, "Recently completed work:\n\n", $r14);

        $r12 = androidx.work.Logger.get();

        $r15 = androidx.work.impl.workers.DiagnosticsWorker.workSpecRows($r5, $r6, $r7, $r9);

        $r14 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r12.info($r13, $r15, $r14);

     label1:
        if $r10 == null goto label2;

        $z0 = interfaceinvoke $r10.isEmpty();

        if $z0 != 0 goto label2;

        $r12 = androidx.work.Logger.get();

        $r13 = androidx.work.impl.workers.DiagnosticsWorker.TAG;

        $r14 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r12.info($r13, "Running work:\n\n", $r14);

        $r12 = androidx.work.Logger.get();

        $r15 = androidx.work.impl.workers.DiagnosticsWorker.workSpecRows($r5, $r6, $r7, $r10);

        $r14 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r12.info($r13, $r15, $r14);

     label2:
        if $r11 == null goto label3;

        $z0 = interfaceinvoke $r11.isEmpty();

        if $z0 != 0 goto label3;

        $r12 = androidx.work.Logger.get();

        $r13 = androidx.work.impl.workers.DiagnosticsWorker.TAG;

        $r14 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r12.info($r13, "Enqueued work:\n\n", $r14);

        $r12 = androidx.work.Logger.get();

        $r15 = androidx.work.impl.workers.DiagnosticsWorker.workSpecRows($r5, $r6, $r7, $r11);

        $r14 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r12.info($r13, $r15, $r14);

     label3:
        $r16 = androidx.work.ListenableWorker$Result.success();

        return $r16;
    }
}
