abstract class androidx.interpolator.view.animation.LookupTableInterpolator extends java.lang.Object implements android.view.animation.Interpolator
{
    private final float mStepSize;
    private final float[] mValues;

    protected void <init>(float[])
    {
        int $i0;
        float $f0;
        float[] $r1;
        androidx.interpolator.view.animation.LookupTableInterpolator r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.mValues = $r1;

        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $f0 = (float) $i0;

        $f0 = 1.0F / $f0;

        r0.mStepSize = $f0;

        return;
    }

    public float getInterpolation(float)
    {
        float[] r1;
        byte b1;
        int $i0, i2;
        float $f0, f1, f2;
        androidx.interpolator.view.animation.LookupTableInterpolator r0;

        r0 := @this;

        $f0 := @parameter0;

        b1 = $f0 cmpl 1.0F;

        $i0 = (int) b1;

        if $i0 < 0 goto label1;

        return 1.0F;

     label1:
        b1 = $f0 cmpg 0.0F;

        $i0 = (int) b1;

        if $i0 > 0 goto label2;

        return 0.0F;

     label2:
        r1 = r0.mValues;

        $i0 = lengthof r1;

        i2 = -1;

        $i0 = $i0 + i2;

        f1 = (float) $i0;

        f1 = f1 * $f0;

        $i0 = (int) f1;

        i2 = lengthof r1;

        i2 = i2 + -2;

        $i0 = java.lang.Math.min($i0, i2);

        f2 = (float) $i0;

        f1 = r0.mStepSize;

        f2 = f2 * f1;

        $f0 = $f0 - f2;

        f1 = $f0 / f1;

        r1 = r0.mValues;

        $f0 = r1[$i0];

        $i0 = $i0 + 1;

        f2 = r1[$i0];

        f2 = f2 - $f0;

        f1 = f2 * f1;

        $f0 = $f0 + f1;

        return $f0;
    }
}
