abstract class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon extends android.graphics.drawable.Drawable implements androidx.core.graphics.drawable.TintAwareDrawable
{
    android.graphics.drawable.Drawable mDelegateDrawable;

    void <init>()
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public void applyTheme(android.content.res.Resources$Theme)
    {
        android.content.res.Resources$Theme $r1;
        android.graphics.drawable.Drawable $r2;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDelegateDrawable;

        if $r2 == null goto label1;

        androidx.core.graphics.drawable.DrawableCompat.applyTheme($r2, $r1);

     label1:
        return;
    }

    public void clearColorFilter()
    {
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        virtualinvoke $r1.clearColorFilter();

        return;

     label1:
        specialinvoke r0.clearColorFilter();

        return;
    }

    public android.graphics.drawable.Drawable getCurrent()
    {
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r1 = virtualinvoke $r1.getCurrent();

        return $r1;

     label1:
        $r1 = specialinvoke r0.getCurrent();

        return $r1;
    }

    public int getMinimumHeight()
    {
        int $i0;
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.getMinimumHeight();

        return $i0;

     label1:
        $i0 = specialinvoke r0.getMinimumHeight();

        return $i0;
    }

    public int getMinimumWidth()
    {
        int $i0;
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.getMinimumWidth();

        return $i0;

     label1:
        $i0 = specialinvoke r0.getMinimumWidth();

        return $i0;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDelegateDrawable;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.getPadding($r1);

        return $z0;

     label1:
        $z0 = specialinvoke r0.getPadding($r1);

        return $z0;
    }

    public int[] getState()
    {
        android.graphics.drawable.Drawable $r1;
        int[] $r2;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.getState();

        return $r2;

     label1:
        $r2 = specialinvoke r0.getState();

        return $r2;
    }

    public android.graphics.Region getTransparentRegion()
    {
        android.graphics.Region $r2;
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.getTransparentRegion();

        return $r2;

     label1:
        $r2 = specialinvoke r0.getTransparentRegion();

        return $r2;
    }

    public void jumpToCurrentState()
    {
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;

        r0 := @this;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        androidx.core.graphics.drawable.DrawableCompat.jumpToCurrentState($r1);

     label1:
        return;
    }

    protected void onBoundsChange(android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        android.graphics.drawable.Drawable $r2;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDelegateDrawable;

        if $r2 == null goto label1;

        virtualinvoke $r2.setBounds($r1);

        return;

     label1:
        specialinvoke r0.onBoundsChange($r1);

        return;
    }

    protected boolean onLevelChange(int)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;
        int $i0;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.setLevel($i0);

        return $z0;

     label1:
        $z0 = specialinvoke r0.onLevelChange($i0);

        return $z0;
    }

    public void setChangingConfigurations(int)
    {
        int $i0;
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        virtualinvoke $r1.setChangingConfigurations($i0);

        return;

     label1:
        specialinvoke r0.setChangingConfigurations($i0);

        return;
    }

    public void setColorFilter(int, android.graphics.PorterDuff$Mode)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;
        int $i0;
        android.graphics.drawable.Drawable $r2;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $r2 = r0.mDelegateDrawable;

        if $r2 == null goto label1;

        virtualinvoke $r2.setColorFilter($i0, $r1);

        return;

     label1:
        specialinvoke r0.setColorFilter($i0, $r1);

        return;
    }

    public void setFilterBitmap(boolean)
    {
        android.graphics.drawable.Drawable $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        virtualinvoke $r1.setFilterBitmap($z0);

     label1:
        return;
    }

    public void setHotspot(float, float)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;
        float $f0, $f1;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $f0 := @parameter0;

        $f1 := @parameter1;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        androidx.core.graphics.drawable.DrawableCompat.setHotspot($r1, $f0, $f1);

     label1:
        return;
    }

    public void setHotspotBounds(int, int, int, int)
    {
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;
        int $i0, $i1, $i2, $i3;
        android.graphics.drawable.Drawable $r1;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        $i3 := @parameter3;

        $r1 = r0.mDelegateDrawable;

        if $r1 == null goto label1;

        androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds($r1, $i0, $i1, $i2, $i3);

     label1:
        return;
    }

    public boolean setState(int[])
    {
        int[] $r1;
        androidx.vectordrawable.graphics.drawable.VectorDrawableCommon r0;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mDelegateDrawable;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.setState($r1);

        return $z0;

     label1:
        $z0 = specialinvoke r0.setState($r1);

        return $z0;
    }
}
