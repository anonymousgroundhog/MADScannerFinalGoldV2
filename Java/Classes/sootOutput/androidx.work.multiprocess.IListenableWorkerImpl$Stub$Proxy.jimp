class androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy extends java.lang.Object implements androidx.work.multiprocess.IListenableWorkerImpl
{
    public static androidx.work.multiprocess.IListenableWorkerImpl sDefaultImpl;
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.mRemote = $r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this;

        r1 = r0.mRemote;

        return r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy r0;

        r0 := @this;

        return "androidx.work.multiprocess.IListenableWorkerImpl";
    }

    public void interrupt(byte[], androidx.work.multiprocess.IWorkManagerImplCallback) throws android.os.RemoteException
    {
        java.lang.Throwable r6;
        byte[] $r1;
        android.os.Parcel $r3;
        android.os.IBinder $r4;
        androidx.work.multiprocess.IListenableWorkerImpl $r5;
        androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy r0;
        androidx.work.multiprocess.IWorkManagerImplCallback $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = android.os.Parcel.obtain();

     label01:
        virtualinvoke $r3.writeInterfaceToken("androidx.work.multiprocess.IListenableWorkerImpl");

        virtualinvoke $r3.writeByteArray($r1);

     label02:
        if $r2 == null goto label05;

     label03:
        $r4 = interfaceinvoke $r2.asBinder();

     label04:
        goto label06;

     label05:
        $r4 = null;

     label06:
        virtualinvoke $r3.writeStrongBinder($r4);

        $r4 = r0.mRemote;

        $z0 = interfaceinvoke $r4.transact(2, $r3, null, 1);

     label07:
        if $z0 != 0 goto label12;

     label08:
        $r5 = androidx.work.multiprocess.IListenableWorkerImpl$Stub.getDefaultImpl();

     label09:
        if $r5 == null goto label12;

     label10:
        $r5 = androidx.work.multiprocess.IListenableWorkerImpl$Stub.getDefaultImpl();

        interfaceinvoke $r5.interrupt($r1, $r2);

     label11:
        virtualinvoke $r3.recycle();

        return;

     label12:
        virtualinvoke $r3.recycle();

        return;

     label13:
        r6 := @caughtexception;

        virtualinvoke $r3.recycle();

        throw r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    public void startWork(byte[], androidx.work.multiprocess.IWorkManagerImplCallback) throws android.os.RemoteException
    {
        java.lang.Throwable r6;
        byte[] $r1;
        android.os.Parcel $r3;
        android.os.IBinder $r4;
        androidx.work.multiprocess.IListenableWorkerImpl $r5;
        androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy r0;
        androidx.work.multiprocess.IWorkManagerImplCallback $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = android.os.Parcel.obtain();

     label01:
        virtualinvoke $r3.writeInterfaceToken("androidx.work.multiprocess.IListenableWorkerImpl");

        virtualinvoke $r3.writeByteArray($r1);

     label02:
        if $r2 == null goto label05;

     label03:
        $r4 = interfaceinvoke $r2.asBinder();

     label04:
        goto label06;

     label05:
        $r4 = null;

     label06:
        virtualinvoke $r3.writeStrongBinder($r4);

        $r4 = r0.mRemote;

        $z0 = interfaceinvoke $r4.transact(1, $r3, null, 1);

     label07:
        if $z0 != 0 goto label12;

     label08:
        $r5 = androidx.work.multiprocess.IListenableWorkerImpl$Stub.getDefaultImpl();

     label09:
        if $r5 == null goto label12;

     label10:
        $r5 = androidx.work.multiprocess.IListenableWorkerImpl$Stub.getDefaultImpl();

        interfaceinvoke $r5.startWork($r1, $r2);

     label11:
        virtualinvoke $r3.recycle();

        return;

     label12:
        virtualinvoke $r3.recycle();

        return;

     label13:
        r6 := @caughtexception;

        virtualinvoke $r3.recycle();

        throw r6;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }
}
