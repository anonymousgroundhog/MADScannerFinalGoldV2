class androidx.core.provider.FontRequestWorker extends java.lang.Object
{
    private static final java.util.concurrent.ExecutorService DEFAULT_EXECUTOR_SERVICE;
    static final java.lang.Object LOCK;
    static final androidx.collection.SimpleArrayMap PENDING_REPLIES;
    static final androidx.collection.LruCache sTypefaceCache;

    static void <clinit>()
    {
        java.util.concurrent.ThreadPoolExecutor $r0;
        androidx.collection.LruCache $r1;
        java.lang.Object $r2;
        androidx.collection.SimpleArrayMap $r3;

        $r1 = new androidx.collection.LruCache;

        specialinvoke $r1.<init>(16);

        androidx.core.provider.FontRequestWorker.sTypefaceCache = $r1;

        $r0 = androidx.core.provider.RequestExecutor.createDefaultExecutor("fonts-androidx", 10, 10000);

        androidx.core.provider.FontRequestWorker.DEFAULT_EXECUTOR_SERVICE = $r0;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<init>();

        androidx.core.provider.FontRequestWorker.LOCK = $r2;

        $r3 = new androidx.collection.SimpleArrayMap;

        specialinvoke $r3.<init>();

        androidx.core.provider.FontRequestWorker.PENDING_REPLIES = $r3;

        return;
    }

    private void <init>()
    {
        androidx.core.provider.FontRequestWorker r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    private static java.lang.String createCacheId(androidx.core.provider.FontRequest, int)
    {
        int $i0;
        java.lang.StringBuilder $r1;
        androidx.core.provider.FontRequest $r0;
        java.lang.String $r2;

        $r0 := @parameter0;

        $i0 := @parameter1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>();

        $r2 = virtualinvoke $r0.getId();

        $r1 = virtualinvoke $r1.append($r2);

        $r1 = virtualinvoke $r1.append("-");

        $r1 = virtualinvoke $r1.append($i0);

        $r2 = virtualinvoke $r1.toString();

        return $r2;
    }

    private static int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult)
    {
        androidx.core.provider.FontsContractCompat$FontInfo[] $r2;
        androidx.core.provider.FontsContractCompat$FontInfo r1;
        int $i0, $i1, $i2;
        androidx.core.provider.FontsContractCompat$FontFamilyResult $r0;

        $r0 := @parameter0;

        $i0 = virtualinvoke $r0.getStatusCode();

        if $i0 == 0 goto label3;

        $i0 = virtualinvoke $r0.getStatusCode();

        lookupswitch($i0)
        {
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        return -3;

     label2:
        return -2;

     label3:
        $r2 = virtualinvoke $r0.getFonts();

        if $r2 == null goto label9;

        $i0 = lengthof $r2;

        if $i0 != 0 goto label4;

        goto label9;

     label4:
        $i0 = lengthof $r2;

        $i1 = 0;

     label5:
        if $i1 >= $i0 goto label8;

        r1 = $r2[$i1];

        $i2 = virtualinvoke r1.getResultCode();

        if $i2 == 0 goto label7;

        if $i2 >= 0 goto label6;

        return -3;

     label6:
        return $i2;

     label7:
        $i1 = $i1 + 1;

        goto label5;

     label8:
        return 0;

     label9:
        return 1;
    }

    static androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String, android.content.Context, androidx.core.provider.FontRequest, int)
    {
        android.graphics.Typeface r5;
        androidx.core.provider.FontRequestWorker$TypefaceResult $r9;
        android.content.Context $r1;
        android.content.pm.PackageManager$NameNotFoundException r8;
        androidx.core.provider.FontRequest $r2;
        androidx.core.provider.FontsContractCompat$FontInfo[] $r7;
        androidx.collection.LruCache r3;
        int $i0, $i1;
        androidx.core.provider.FontsContractCompat$FontFamilyResult $r6;
        java.lang.Object $r4;
        java.lang.String $r0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        $i0 := @parameter3;

        r3 = androidx.core.provider.FontRequestWorker.sTypefaceCache;

        $r4 = virtualinvoke r3.get($r0);

        r5 = (android.graphics.Typeface) $r4;

        if r5 == null goto label1;

        $r9 = new androidx.core.provider.FontRequestWorker$TypefaceResult;

        specialinvoke $r9.<init>(r5);

        return $r9;

     label1:
        $r6 = androidx.core.provider.FontProvider.getFontFamilyResult($r1, $r2, null);

     label2:
        $i1 = androidx.core.provider.FontRequestWorker.getFontFamilyResultStatus($r6);

        if $i1 == 0 goto label3;

        $r9 = new androidx.core.provider.FontRequestWorker$TypefaceResult;

        specialinvoke $r9.<init>($i1);

        return $r9;

     label3:
        $r7 = virtualinvoke $r6.getFonts();

        r5 = androidx.core.graphics.TypefaceCompat.createFromFontInfo($r1, null, $r7, $i0);

        if r5 == null goto label4;

        virtualinvoke r3.put($r0, r5);

        $r9 = new androidx.core.provider.FontRequestWorker$TypefaceResult;

        specialinvoke $r9.<init>(r5);

        return $r9;

     label4:
        $r9 = new androidx.core.provider.FontRequestWorker$TypefaceResult;

        specialinvoke $r9.<init>(-3);

        return $r9;

     label5:
        r8 := @caughtexception;

        $r9 = new androidx.core.provider.FontRequestWorker$TypefaceResult;

        specialinvoke $r9.<init>(-1);

        return $r9;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
    }

    static android.graphics.Typeface requestFontAsync(android.content.Context, androidx.core.provider.FontRequest, int, java.util.concurrent.Executor, androidx.core.provider.CallbackWithHandler)
    {
        android.graphics.Typeface r8;
        androidx.core.provider.FontRequestWorker$TypefaceResult r9;
        java.lang.Throwable r15;
        android.content.Context $r0;
        java.util.ArrayList $r4;
        int $i0;
        androidx.core.provider.FontRequestWorker$3 r13;
        androidx.core.provider.FontRequestWorker$4 r14;
        java.lang.String $r5;
        androidx.core.provider.FontRequestWorker$2 r10;
        androidx.collection.SimpleArrayMap r11;
        java.util.concurrent.Executor $r2;
        androidx.core.provider.FontRequest $r1;
        androidx.collection.LruCache r6;
        java.lang.Object $r7, $r12;
        androidx.core.provider.CallbackWithHandler $r3;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $i0 := @parameter2;

        $r2 := @parameter3;

        $r3 := @parameter4;

        $r5 = androidx.core.provider.FontRequestWorker.createCacheId($r1, $i0);

        r6 = androidx.core.provider.FontRequestWorker.sTypefaceCache;

        $r7 = virtualinvoke r6.get($r5);

        r8 = (android.graphics.Typeface) $r7;

        if r8 == null goto label1;

        r9 = new androidx.core.provider.FontRequestWorker$TypefaceResult;

        specialinvoke r9.<init>(r8);

        virtualinvoke $r3.onTypefaceResult(r9);

        return r8;

     label1:
        r10 = new androidx.core.provider.FontRequestWorker$2;

        specialinvoke r10.<init>($r3);

        $r7 = androidx.core.provider.FontRequestWorker.LOCK;

        entermonitor $r7;

     label2:
        r11 = androidx.core.provider.FontRequestWorker.PENDING_REPLIES;

        $r12 = virtualinvoke r11.get($r5);

        $r4 = (java.util.ArrayList) $r12;

        if $r4 == null goto label4;

        virtualinvoke $r4.add(r10);

        exitmonitor $r7;

     label3:
        return null;

     label4:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<init>();

        virtualinvoke $r4.add(r10);

        virtualinvoke r11.put($r5, $r4);

        exitmonitor $r7;

     label5:
        r13 = new androidx.core.provider.FontRequestWorker$3;

        specialinvoke r13.<init>($r5, $r0, $r1, $i0);

        if $r2 != null goto label6;

        $r2 = androidx.core.provider.FontRequestWorker.DEFAULT_EXECUTOR_SERVICE;

        goto label6;

     label6:
        r14 = new androidx.core.provider.FontRequestWorker$4;

        specialinvoke r14.<init>($r5);

        androidx.core.provider.RequestExecutor.execute($r2, r13, r14);

        return null;

     label7:
        r15 := @caughtexception;

     label8:
        exitmonitor $r7;

     label9:
        throw r15;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    static android.graphics.Typeface requestFontSync(android.content.Context, androidx.core.provider.FontRequest, androidx.core.provider.CallbackWithHandler, int, int)
    {
        android.graphics.Typeface r6;
        androidx.core.provider.FontRequestWorker$TypefaceResult r7, $r11;
        android.content.Context $r0;
        androidx.core.provider.FontRequest $r1;
        androidx.collection.LruCache r4;
        java.lang.InterruptedException r10;
        int $i0, $i1;
        java.lang.Object $r5;
        androidx.core.provider.FontRequestWorker$1 r8, $r12;
        java.lang.String $r3;
        androidx.core.provider.CallbackWithHandler $r2;
        java.util.concurrent.ExecutorService r9;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        $i0 := @parameter3;

        $i1 := @parameter4;

        $r3 = androidx.core.provider.FontRequestWorker.createCacheId($r1, $i0);

        r4 = androidx.core.provider.FontRequestWorker.sTypefaceCache;

        $r5 = virtualinvoke r4.get($r3);

        r6 = (android.graphics.Typeface) $r5;

        if r6 == null goto label1;

        $r11 = new androidx.core.provider.FontRequestWorker$TypefaceResult;

        specialinvoke $r11.<init>(r6);

        virtualinvoke $r2.onTypefaceResult($r11);

        return r6;

     label1:
        if $i1 != -1 goto label2;

        r7 = androidx.core.provider.FontRequestWorker.getFontSync($r3, $r0, $r1, $i0);

        virtualinvoke $r2.onTypefaceResult(r7);

        r6 = r7.mTypeface;

        return r6;

     label2:
        $r12 = new androidx.core.provider.FontRequestWorker$1;

        r8 = $r12;

        specialinvoke $r12.<init>($r3, $r0, $r1, $i0);

        r9 = androidx.core.provider.FontRequestWorker.DEFAULT_EXECUTOR_SERVICE;

     label3:
        $r5 = androidx.core.provider.RequestExecutor.submit(r9, r8, $i1);

     label4:
        r7 = (androidx.core.provider.FontRequestWorker$TypefaceResult) $r5;

     label5:
        virtualinvoke $r2.onTypefaceResult(r7);

     label6:
        r6 = r7.mTypeface;

        return r6;

     label7:
        r10 := @caughtexception;

        $r11 = new androidx.core.provider.FontRequestWorker$TypefaceResult;

        specialinvoke $r11.<init>(-3);

        virtualinvoke $r2.onTypefaceResult($r11);

        return null;

        catch java.lang.InterruptedException from label3 to label4 with label7;
        catch java.lang.InterruptedException from label5 to label6 with label7;
    }

    static void resetTypefaceCache()
    {
        androidx.collection.LruCache $r0;

        $r0 = androidx.core.provider.FontRequestWorker.sTypefaceCache;

        virtualinvoke $r0.evictAll();

        return;
    }
}
