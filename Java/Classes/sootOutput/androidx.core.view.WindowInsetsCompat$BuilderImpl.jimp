class androidx.core.view.WindowInsetsCompat$BuilderImpl extends java.lang.Object
{
    private final androidx.core.view.WindowInsetsCompat mInsets;
    androidx.core.graphics.Insets[] mInsetsTypeMask;

    void <init>()
    {
        androidx.core.view.WindowInsetsCompat$BuilderImpl r0;
        androidx.core.view.WindowInsetsCompat $r1;

        r0 := @this;

        $r1 = new androidx.core.view.WindowInsetsCompat;

        specialinvoke $r1.<init>(null);

        specialinvoke r0.<init>($r1);

        return;
    }

    void <init>(androidx.core.view.WindowInsetsCompat)
    {
        androidx.core.view.WindowInsetsCompat$BuilderImpl r0;
        androidx.core.view.WindowInsetsCompat $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.mInsets = $r1;

        return;
    }

    protected final void applyInsetTypes()
    {
        androidx.core.graphics.Insets[] r1;
        androidx.core.view.WindowInsetsCompat$BuilderImpl r0;
        int $i0;
        androidx.core.graphics.Insets r2, r3;
        androidx.core.view.WindowInsetsCompat $r4;

        r0 := @this;

        r1 = r0.mInsetsTypeMask;

        if r1 == null goto label5;

        $i0 = androidx.core.view.WindowInsetsCompat$Type.indexOf(1);

        r2 = r1[$i0];

        r1 = r0.mInsetsTypeMask;

        $i0 = androidx.core.view.WindowInsetsCompat$Type.indexOf(2);

        r3 = r1[$i0];

        if r3 != null goto label1;

        $r4 = r0.mInsets;

        r3 = virtualinvoke $r4.getInsets(2);

     label1:
        if r2 != null goto label2;

        $r4 = r0.mInsets;

        r2 = virtualinvoke $r4.getInsets(1);

     label2:
        r2 = androidx.core.graphics.Insets.max(r2, r3);

        virtualinvoke r0.setSystemWindowInsets(r2);

        r1 = r0.mInsetsTypeMask;

        $i0 = androidx.core.view.WindowInsetsCompat$Type.indexOf(16);

        r2 = r1[$i0];

        if r2 == null goto label3;

        virtualinvoke r0.setSystemGestureInsets(r2);

     label3:
        r1 = r0.mInsetsTypeMask;

        $i0 = androidx.core.view.WindowInsetsCompat$Type.indexOf(32);

        r2 = r1[$i0];

        if r2 == null goto label4;

        virtualinvoke r0.setMandatorySystemGestureInsets(r2);

     label4:
        r1 = r0.mInsetsTypeMask;

        $i0 = androidx.core.view.WindowInsetsCompat$Type.indexOf(64);

        r2 = r1[$i0];

        if r2 == null goto label5;

        virtualinvoke r0.setTappableElementInsets(r2);

     label5:
        return;
    }

    androidx.core.view.WindowInsetsCompat build()
    {
        androidx.core.view.WindowInsetsCompat$BuilderImpl r0;
        androidx.core.view.WindowInsetsCompat r1;

        r0 := @this;

        virtualinvoke r0.applyInsetTypes();

        r1 = r0.mInsets;

        return r1;
    }

    void setDisplayCutout(androidx.core.view.DisplayCutoutCompat)
    {
        androidx.core.view.WindowInsetsCompat$BuilderImpl r0;
        androidx.core.view.DisplayCutoutCompat $r1;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    void setInsets(int, androidx.core.graphics.Insets)
    {
        androidx.core.graphics.Insets[] r2;
        androidx.core.view.WindowInsetsCompat$BuilderImpl r0;
        int $i0, $i1, i2;
        androidx.core.graphics.Insets $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        r2 = r0.mInsetsTypeMask;

        if r2 != null goto label1;

        r2 = newarray (androidx.core.graphics.Insets)[9];

        r0.mInsetsTypeMask = r2;

     label1:
        i2 = 1;

     label2:
        if i2 > 256 goto label5;

        $i1 = $i0 & i2;

        if $i1 != 0 goto label3;

        goto label4;

     label3:
        r2 = r0.mInsetsTypeMask;

        $i1 = androidx.core.view.WindowInsetsCompat$Type.indexOf(i2);

        r2[$i1] = $r1;

     label4:
        i2 = i2 << 1;

        goto label2;

     label5:
        return;
    }

    void setInsetsIgnoringVisibility(int, androidx.core.graphics.Insets)
    {
        androidx.core.view.WindowInsetsCompat$BuilderImpl r0;
        int $i0;
        androidx.core.graphics.Insets $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        if $i0 == 8 goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<init>("Ignoring visibility inset not available for IME");

        throw $r2;
    }

    void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
    {
        androidx.core.view.WindowInsetsCompat$BuilderImpl r0;
        androidx.core.graphics.Insets $r1;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    void setStableInsets(androidx.core.graphics.Insets)
    {
        androidx.core.view.WindowInsetsCompat$BuilderImpl r0;
        androidx.core.graphics.Insets $r1;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    void setSystemGestureInsets(androidx.core.graphics.Insets)
    {
        androidx.core.view.WindowInsetsCompat$BuilderImpl r0;
        androidx.core.graphics.Insets $r1;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    void setSystemWindowInsets(androidx.core.graphics.Insets)
    {
        androidx.core.view.WindowInsetsCompat$BuilderImpl r0;
        androidx.core.graphics.Insets $r1;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    void setTappableElementInsets(androidx.core.graphics.Insets)
    {
        androidx.core.view.WindowInsetsCompat$BuilderImpl r0;
        androidx.core.graphics.Insets $r1;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    void setVisible(int, boolean)
    {
        int $i0;
        androidx.core.view.WindowInsetsCompat$BuilderImpl r0;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $z0 := @parameter1;

        return;
    }
}
