public class androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat extends androidx.appcompat.graphics.drawable.StateListDrawable implements androidx.core.graphics.drawable.TintAwareDrawable
{
    private static final java.lang.String ELEMENT_ITEM;
    private static final java.lang.String ELEMENT_TRANSITION;
    private static final java.lang.String ITEM_MISSING_DRAWABLE_ERROR;
    private static final java.lang.String LOGTAG;
    private static final java.lang.String TRANSITION_MISSING_DRAWABLE_ERROR;
    private static final java.lang.String TRANSITION_MISSING_FROM_TO_ID;
    private boolean mMutated;
    private androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState;
    private androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition;
    private int mTransitionFromIndex;
    private int mTransitionToIndex;

    static void <clinit>()
    {
        java.lang.Class $r1;
        java.lang.String $r0;

        $r1 = class "Landroidx/appcompat/graphics/drawable/AnimatedStateListDrawableCompat;";

        $r0 = virtualinvoke $r1.getSimpleName();

        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.LOGTAG = $r0;

        return;
    }

    public void <init>()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        specialinvoke r0.<init>(null, null);

        return;
    }

    void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState, android.content.res.Resources)
    {
        int[] $r3;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r1, $r4;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        android.content.res.Resources $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.<init>(null);

        r0.mTransitionToIndex = -1;

        r0.mTransitionFromIndex = -1;

        $r4 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState;

        specialinvoke $r4.<init>($r1, r0, $r2);

        virtualinvoke r0.setConstantState($r4);

        $r3 = virtualinvoke r0.getState();

        virtualinvoke r0.onStateChange($r3);

        virtualinvoke r0.jumpToCurrentState();

        return;
    }

    public static androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context, int, android.content.res.Resources$Theme)
    {
        android.content.Context r0;
        android.content.res.XmlResourceParser $r3;
        java.io.IOException r7;
        org.xmlpull.v1.XmlPullParserException $r6;
        android.util.AttributeSet $r4;
        int i0;
        java.lang.String r8;
        android.content.res.Resources$Theme r1;
        android.content.res.Resources $r2;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat $r5;

        r0 := @parameter0;

        i0 := @parameter1;

        r1 := @parameter2;

     label01:
        $r2 = virtualinvoke r0.getResources();

        $r3 = virtualinvoke $r2.getXml(i0);

        $r4 = android.util.Xml.asAttributeSet($r3);

     label02:
        i0 = interfaceinvoke $r3.next();

     label03:
        if i0 == 2 goto label04;

        if i0 == 1 goto label04;

        goto label02;

     label04:
        if i0 != 2 goto label07;

     label05:
        $r5 = androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.createFromXmlInner(r0, $r2, $r3, $r4, r1);

     label06:
        return $r5;

     label07:
        $r6 = new org.xmlpull.v1.XmlPullParserException;

     label08:
        specialinvoke $r6.<init>("No start tag found");

     label09:
        throw $r6;

     label10:
        r7 := @caughtexception;

        r8 = androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.LOGTAG;

        android.util.Log.e(r8, "parser error", r7);

        goto label12;

     label11:
        $r6 := @caughtexception;

        r8 = androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat.LOGTAG;

        android.util.Log.e(r8, "parser error", $r6);

     label12:
        return null;

        catch org.xmlpull.v1.XmlPullParserException from label01 to label03 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label05 to label06 with label11;
        catch org.xmlpull.v1.XmlPullParserException from label08 to label10 with label11;
        catch java.io.IOException from label01 to label03 with label10;
        catch java.io.IOException from label05 to label06 with label10;
        catch java.io.IOException from label08 to label09 with label10;
    }

    public static androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws java.io.IOException, org.xmlpull.v1.XmlPullParserException
    {
        android.content.Context $r0;
        org.xmlpull.v1.XmlPullParserException r7;
        android.util.AttributeSet $r3;
        java.lang.StringBuilder $r8;
        java.lang.String $r5, $r9;
        android.content.res.Resources$Theme $r4;
        android.content.res.Resources $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        boolean $z0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r6;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        $r3 := @parameter3;

        $r4 := @parameter4;

        $r5 = interfaceinvoke $r2.getName();

        $z0 = virtualinvoke $r5.equals("animated-selector");

        if $z0 == 0 goto label1;

        r6 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat;

        specialinvoke r6.<init>();

        virtualinvoke r6.inflate($r0, $r1, $r2, $r3, $r4);

        return r6;

     label1:
        r7 = new org.xmlpull.v1.XmlPullParserException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<init>();

        $r9 = interfaceinvoke $r2.getPositionDescription();

        $r8 = virtualinvoke $r8.append($r9);

        $r8 = virtualinvoke $r8.append(": invalid animated-selector tag ");

        $r8 = virtualinvoke $r8.append($r5);

        $r5 = virtualinvoke $r8.toString();

        specialinvoke r7.<init>($r5);

        throw r7;
    }

    private void inflateChildElements(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r1;
        android.util.AttributeSet $r4;
        int $i0, $i1, $i2;
        java.lang.String $r6;
        android.content.res.Resources$Theme $r5;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        android.content.res.Resources $r2;
        org.xmlpull.v1.XmlPullParser $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 := @parameter3;

        $r5 := @parameter4;

        $i0 = interfaceinvoke $r3.getDepth();

        $i0 = $i0 + 1;

     label1:
        $i1 = interfaceinvoke $r3.next();

        if $i1 == 1 goto label6;

        $i2 = interfaceinvoke $r3.getDepth();

        if $i2 >= $i0 goto label2;

        if $i1 == 3 goto label6;

     label2:
        if $i1 == 2 goto label3;

        goto label1;

     label3:
        if $i2 <= $i0 goto label4;

        goto label1;

     label4:
        $r6 = interfaceinvoke $r3.getName();

        $z0 = virtualinvoke $r6.equals("item");

        if $z0 == 0 goto label5;

        specialinvoke r0.parseItem($r1, $r2, $r3, $r4, $r5);

        goto label1;

     label5:
        $r6 = interfaceinvoke $r3.getName();

        $z0 = virtualinvoke $r6.equals("transition");

        if $z0 == 0 goto label1;

        specialinvoke r0.parseTransition($r1, $r2, $r3, $r4, $r5);

        goto label1;

     label6:
        return;
    }

    private void init()
    {
        int[] $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 = virtualinvoke r0.getState();

        virtualinvoke r0.onStateChange($r1);

        return;
    }

    private int parseItem(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r1;
        android.graphics.drawable.Drawable r8;
        android.content.res.TypedArray $r7;
        android.util.AttributeSet $r4;
        int[] r6;
        int i0, i1;
        androidx.appcompat.widget.ResourceManagerInternal $r9;
        java.lang.String $r10;
        android.content.res.Resources$Theme $r5;
        org.xmlpull.v1.XmlPullParser $r3;
        boolean $z0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r12;
        org.xmlpull.v1.XmlPullParserException $r14;
        java.lang.StringBuilder $r11, $r13;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        android.content.res.Resources $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 := @parameter3;

        $r5 := @parameter4;

        r6 = androidx.appcompat.resources.R$styleable.AnimatedStateListDrawableItem;

        $r7 = androidx.core.content.res.TypedArrayUtils.obtainAttributes($r2, $r5, $r4, r6);

        i0 = androidx.appcompat.resources.R$styleable.AnimatedStateListDrawableItem_android_id;

        i0 = virtualinvoke $r7.getResourceId(i0, 0);

        r8 = null;

        i1 = androidx.appcompat.resources.R$styleable.AnimatedStateListDrawableItem_android_drawable;

        i1 = virtualinvoke $r7.getResourceId(i1, -1);

        if i1 <= 0 goto label1;

        $r9 = androidx.appcompat.widget.ResourceManagerInternal.get();

        r8 = virtualinvoke $r9.getDrawable($r1, i1);

     label1:
        virtualinvoke $r7.recycle();

        r6 = virtualinvoke r0.extractStateSet($r4);

        if r8 != null goto label7;

     label2:
        i1 = interfaceinvoke $r3.next();

        if i1 != 4 goto label3;

        goto label2;

     label3:
        if i1 != 2 goto label6;

        $r10 = interfaceinvoke $r3.getName();

        $z0 = virtualinvoke $r10.equals("vector");

        if $z0 == 0 goto label4;

        r8 = androidx.vectordrawable.graphics.drawable.VectorDrawableCompat.createFromXmlInner($r2, $r3, $r4, $r5);

        goto label7;

     label4:
        i1 = android.os.Build$VERSION.SDK_INT;

        if i1 < 21 goto label5;

        r8 = android.graphics.drawable.Drawable.createFromXmlInner($r2, $r3, $r4, $r5);

        goto label7;

     label5:
        r8 = android.graphics.drawable.Drawable.createFromXmlInner($r2, $r3, $r4);

        goto label7;

     label6:
        $r14 = new org.xmlpull.v1.XmlPullParserException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<init>();

        $r10 = interfaceinvoke $r3.getPositionDescription();

        $r11 = virtualinvoke $r13.append($r10);

        $r11 = virtualinvoke $r11.append(": <item> tag requires a \'drawable\' attribute or child tag defining a drawable");

        $r10 = virtualinvoke $r11.toString();

        specialinvoke $r14.<init>($r10);

        throw $r14;

     label7:
        if r8 == null goto label8;

        $r12 = r0.mState;

        i0 = virtualinvoke $r12.addStateSet(r6, r8, i0);

        return i0;

     label8:
        $r14 = new org.xmlpull.v1.XmlPullParserException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<init>();

        $r10 = interfaceinvoke $r3.getPositionDescription();

        $r11 = virtualinvoke $r13.append($r10);

        $r11 = virtualinvoke $r11.append(": <item> tag requires a \'drawable\' attribute or child tag defining a drawable");

        $r10 = virtualinvoke $r11.toString();

        specialinvoke $r14.<init>($r10);

        goto label9;

     label9:
        throw $r14;
    }

    private int parseTransition(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r1;
        android.graphics.drawable.Drawable r8;
        android.content.res.TypedArray $r7;
        android.util.AttributeSet $r4;
        int[] r6;
        int i0, i1, i2;
        androidx.appcompat.widget.ResourceManagerInternal $r9;
        java.lang.String $r10;
        android.content.res.Resources$Theme $r5;
        org.xmlpull.v1.XmlPullParser $r3;
        boolean $z0, $z1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r12;
        org.xmlpull.v1.XmlPullParserException $r14;
        java.lang.StringBuilder $r11, $r13;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        android.content.res.Resources $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 := @parameter3;

        $r5 := @parameter4;

        r6 = androidx.appcompat.resources.R$styleable.AnimatedStateListDrawableTransition;

        $r7 = androidx.core.content.res.TypedArrayUtils.obtainAttributes($r2, $r5, $r4, r6);

        i0 = androidx.appcompat.resources.R$styleable.AnimatedStateListDrawableTransition_android_fromId;

        i1 = -1;

        i0 = virtualinvoke $r7.getResourceId(i0, i1);

        i1 = androidx.appcompat.resources.R$styleable.AnimatedStateListDrawableTransition_android_toId;

        i2 = -1;

        i1 = virtualinvoke $r7.getResourceId(i1, i2);

        r8 = null;

        i2 = androidx.appcompat.resources.R$styleable.AnimatedStateListDrawableTransition_android_drawable;

        i2 = virtualinvoke $r7.getResourceId(i2, -1);

        if i2 <= 0 goto label01;

        $r9 = androidx.appcompat.widget.ResourceManagerInternal.get();

        r8 = virtualinvoke $r9.getDrawable($r1, i2);

        goto label01;

     label01:
        i2 = androidx.appcompat.resources.R$styleable.AnimatedStateListDrawableTransition_android_reversible;

        $z0 = virtualinvoke $r7.getBoolean(i2, 0);

        virtualinvoke $r7.recycle();

        if r8 != null goto label07;

     label02:
        i2 = interfaceinvoke $r3.next();

        if i2 != 4 goto label03;

        goto label02;

     label03:
        if i2 != 2 goto label06;

        $r10 = interfaceinvoke $r3.getName();

        $z1 = virtualinvoke $r10.equals("animated-vector");

        if $z1 == 0 goto label04;

        r8 = androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat.createFromXmlInner($r1, $r2, $r3, $r4, $r5);

        goto label07;

     label04:
        i2 = android.os.Build$VERSION.SDK_INT;

        if i2 < 21 goto label05;

        r8 = android.graphics.drawable.Drawable.createFromXmlInner($r2, $r3, $r4, $r5);

        goto label07;

     label05:
        r8 = android.graphics.drawable.Drawable.createFromXmlInner($r2, $r3, $r4);

        goto label07;

     label06:
        $r14 = new org.xmlpull.v1.XmlPullParserException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<init>();

        $r10 = interfaceinvoke $r3.getPositionDescription();

        $r11 = virtualinvoke $r13.append($r10);

        $r11 = virtualinvoke $r11.append(": <transition> tag requires a \'drawable\' attribute or child tag defining a drawable");

        $r10 = virtualinvoke $r11.toString();

        specialinvoke $r14.<init>($r10);

        throw $r14;

     label07:
        if r8 == null goto label09;

        i2 = -1;

        if i0 == i2 goto label08;

        i2 = -1;

        if i1 == i2 goto label08;

        $r12 = r0.mState;

        i0 = virtualinvoke $r12.addTransition(i0, i1, r8, $z0);

        return i0;

     label08:
        $r14 = new org.xmlpull.v1.XmlPullParserException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<init>();

        $r10 = interfaceinvoke $r3.getPositionDescription();

        $r11 = virtualinvoke $r13.append($r10);

        $r11 = virtualinvoke $r11.append(": <transition> tag requires \'fromId\' & \'toId\' attributes");

        $r10 = virtualinvoke $r11.toString();

        specialinvoke $r14.<init>($r10);

        throw $r14;

     label09:
        $r14 = new org.xmlpull.v1.XmlPullParserException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<init>();

        $r10 = interfaceinvoke $r3.getPositionDescription();

        $r11 = virtualinvoke $r13.append($r10);

        $r11 = virtualinvoke $r11.append(": <transition> tag requires a \'drawable\' attribute or child tag defining a drawable");

        $r10 = virtualinvoke $r11.toString();

        specialinvoke $r14.<init>($r10);

        goto label10;

     label10:
        throw $r14;
    }

    private boolean selectTransition(int)
    {
        android.graphics.drawable.Drawable $r3;
        android.graphics.drawable.AnimationDrawable $r4;
        androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat $r5;
        int $i0, i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition $r8;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition $r7;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState r2;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition $r9;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition r1;
        android.graphics.drawable.Animatable $r6;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $i0 := @parameter0;

        r1 = r0.mTransition;

        if r1 == null goto label03;

        i1 = r0.mTransitionToIndex;

        if $i0 != i1 goto label01;

        return 1;

     label01:
        i1 = r0.mTransitionFromIndex;

        if $i0 != i1 goto label02;

        $z0 = virtualinvoke r1.canReverse();

        if $z0 == 0 goto label02;

        virtualinvoke r1.reverse();

        i1 = r0.mTransitionFromIndex;

        r0.mTransitionToIndex = i1;

        r0.mTransitionFromIndex = $i0;

        return 1;

     label02:
        i1 = r0.mTransitionToIndex;

        virtualinvoke r1.stop();

        goto label04;

     label03:
        i1 = virtualinvoke r0.getCurrentIndex();

     label04:
        r0.mTransition = null;

        r0.mTransitionFromIndex = -1;

        r0.mTransitionToIndex = -1;

        r2 = r0.mState;

        $i2 = virtualinvoke r2.getKeyframeIdAt(i1);

        $i3 = virtualinvoke r2.getKeyframeIdAt($i0);

        if $i3 == 0 goto label10;

        if $i2 != 0 goto label05;

        return 0;

     label05:
        $i4 = virtualinvoke r2.indexOfTransition($i2, $i3);

        if $i4 >= 0 goto label06;

        return 0;

     label06:
        $z0 = virtualinvoke r2.transitionHasReversibleFlag($i2, $i3);

        virtualinvoke r0.selectDrawable($i4);

        $r3 = virtualinvoke r0.getCurrent();

        $z1 = $r3 instanceof android.graphics.drawable.AnimationDrawable;

        if $z1 == 0 goto label07;

        $z1 = virtualinvoke r2.isTransitionReversed($i2, $i3);

        $r7 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition;

        $r4 = (android.graphics.drawable.AnimationDrawable) $r3;

        specialinvoke $r7.<init>($r4, $z1, $z0);

        r1 = $r7;

        goto label09;

     label07:
        $z0 = $r3 instanceof androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat;

        if $z0 == 0 goto label08;

        $r8 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition;

        r1 = $r8;

        $r5 = (androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) $r3;

        specialinvoke $r8.<init>($r5);

        goto label09;

     label08:
        $z0 = $r3 instanceof android.graphics.drawable.Animatable;

        if $z0 == 0 goto label10;

        $r9 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition;

        r1 = $r9;

        $r6 = (android.graphics.drawable.Animatable) $r3;

        specialinvoke $r9.<init>($r6);

     label09:
        virtualinvoke r1.start();

        r0.mTransition = r1;

        r0.mTransitionFromIndex = i1;

        r0.mTransitionToIndex = $i0;

        return 1;

     label10:
        return 0;
    }

    private void updateStateFromTypedArray(android.content.res.TypedArray)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState r2;
        int $i0, $i1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        android.content.res.TypedArray $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mState;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 21 goto label1;

        $i0 = r2.mChangingConfigurations;

        $i1 = virtualinvoke $r1.getChangingConfigurations();

        $i0 = $i0 | $i1;

        r2.mChangingConfigurations = $i0;

     label1:
        $i0 = androidx.appcompat.resources.R$styleable.AnimatedStateListDrawableCompat_android_variablePadding;

        $z0 = r2.mVariablePadding;

        $z0 = virtualinvoke $r1.getBoolean($i0, $z0);

        virtualinvoke r2.setVariablePadding($z0);

        $i0 = androidx.appcompat.resources.R$styleable.AnimatedStateListDrawableCompat_android_constantSize;

        $z0 = r2.mConstantSize;

        $z0 = virtualinvoke $r1.getBoolean($i0, $z0);

        virtualinvoke r2.setConstantSize($z0);

        $i0 = androidx.appcompat.resources.R$styleable.AnimatedStateListDrawableCompat_android_enterFadeDuration;

        $i1 = r2.mEnterFadeDuration;

        $i0 = virtualinvoke $r1.getInt($i0, $i1);

        virtualinvoke r2.setEnterFadeDuration($i0);

        $i0 = androidx.appcompat.resources.R$styleable.AnimatedStateListDrawableCompat_android_exitFadeDuration;

        $i1 = r2.mExitFadeDuration;

        $i0 = virtualinvoke $r1.getInt($i0, $i1);

        virtualinvoke r2.setExitFadeDuration($i0);

        $i0 = androidx.appcompat.resources.R$styleable.AnimatedStateListDrawableCompat_android_dither;

        $z0 = r2.mDither;

        $z0 = virtualinvoke $r1.getBoolean($i0, $z0);

        virtualinvoke r0.setDither($z0);

        return;
    }

    public volatile void addState(int[], android.graphics.drawable.Drawable)
    {
        int[] $r1;
        android.graphics.drawable.Drawable $r2;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.addState($r1, $r2);

        return;
    }

    public void addState(int[], android.graphics.drawable.Drawable, int)
    {
        int[] $r1;
        int $i0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r3;
        java.lang.IllegalArgumentException $r4;
        android.graphics.drawable.Drawable $r2;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 := @parameter2;

        if $r2 == null goto label1;

        $r3 = r0.mState;

        virtualinvoke $r3.addStateSet($r1, $r2, $i0);

        $r1 = virtualinvoke r0.getState();

        virtualinvoke r0.onStateChange($r1);

        return;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<init>("Drawable must not be null");

        throw $r4;
    }

    public void addTransition(int, int, android.graphics.drawable.Drawable, boolean)
    {
        int $i0, $i1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r2;
        java.lang.IllegalArgumentException $r3;
        android.graphics.drawable.Drawable r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        r1 := @parameter2;

        $z0 := @parameter3;

        if r1 == null goto label1;

        $r2 = r0.mState;

        virtualinvoke $r2.addTransition($i0, $i1, r1, $z0);

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<init>("Transition drawable must not be null");

        throw $r3;
    }

    public volatile void applyTheme(android.content.res.Resources$Theme)
    {
        android.content.res.Resources$Theme $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.applyTheme($r1);

        return;
    }

    public volatile boolean canApplyTheme()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.canApplyTheme();

        return $z0;
    }

    void clearMutated()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        specialinvoke r0.clearMutated();

        r0.mMutated = 0;

        return;
    }

    androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r1, $r2;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 = new androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState;

        $r2 = r0.mState;

        specialinvoke $r1.<init>($r2, r0, null);

        return $r1;
    }

    volatile androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 = virtualinvoke r0.cloneConstantState();

        return $r1;
    }

    volatile androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 = virtualinvoke r0.cloneConstantState();

        return $r1;
    }

    public volatile void draw(android.graphics.Canvas)
    {
        android.graphics.Canvas $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.draw($r1);

        return;
    }

    public volatile int getAlpha()
    {
        int $i0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $i0 = specialinvoke r0.getAlpha();

        return $i0;
    }

    public volatile int getChangingConfigurations()
    {
        int $i0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $i0 = specialinvoke r0.getChangingConfigurations();

        return $i0;
    }

    public volatile android.graphics.drawable.Drawable getCurrent()
    {
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 = specialinvoke r0.getCurrent();

        return $r1;
    }

    public volatile void getHotspotBounds(android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.getHotspotBounds($r1);

        return;
    }

    public volatile int getIntrinsicHeight()
    {
        int $i0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $i0 = specialinvoke r0.getIntrinsicHeight();

        return $i0;
    }

    public volatile int getIntrinsicWidth()
    {
        int $i0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $i0 = specialinvoke r0.getIntrinsicWidth();

        return $i0;
    }

    public volatile int getMinimumHeight()
    {
        int $i0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $i0 = specialinvoke r0.getMinimumHeight();

        return $i0;
    }

    public volatile int getMinimumWidth()
    {
        int $i0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $i0 = specialinvoke r0.getMinimumWidth();

        return $i0;
    }

    public volatile int getOpacity()
    {
        int $i0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $i0 = specialinvoke r0.getOpacity();

        return $i0;
    }

    public volatile void getOutline(android.graphics.Outline)
    {
        android.graphics.Outline $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.getOutline($r1);

        return;
    }

    public volatile boolean getPadding(android.graphics.Rect)
    {
        android.graphics.Rect $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = specialinvoke r0.getPadding($r1);

        return $z0;
    }

    public void inflate(android.content.Context, android.content.res.Resources, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet, android.content.res.Resources$Theme) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context $r1;
        android.content.res.TypedArray $r7;
        android.util.AttributeSet $r4;
        int[] r6;
        int $i0;
        android.content.res.Resources$Theme $r5;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        android.content.res.Resources $r2;
        org.xmlpull.v1.XmlPullParser $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 := @parameter3;

        $r5 := @parameter4;

        r6 = androidx.appcompat.resources.R$styleable.AnimatedStateListDrawableCompat;

        $r7 = androidx.core.content.res.TypedArrayUtils.obtainAttributes($r2, $r5, $r4, r6);

        $i0 = androidx.appcompat.resources.R$styleable.AnimatedStateListDrawableCompat_android_visible;

        $z0 = virtualinvoke $r7.getBoolean($i0, 1);

        virtualinvoke r0.setVisible($z0, 1);

        specialinvoke r0.updateStateFromTypedArray($r7);

        virtualinvoke r0.updateDensity($r2);

        virtualinvoke $r7.recycle();

        specialinvoke r0.inflateChildElements($r1, $r2, $r3, $r4, $r5);

        specialinvoke r0.init();

        return;
    }

    public volatile void invalidateDrawable(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.invalidateDrawable($r1);

        return;
    }

    public volatile boolean isAutoMirrored()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.isAutoMirrored();

        return $z0;
    }

    public boolean isStateful()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        return 1;
    }

    public void jumpToCurrentState()
    {
        int $i0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        specialinvoke r0.jumpToCurrentState();

        $r1 = r0.mTransition;

        if $r1 == null goto label1;

        virtualinvoke $r1.stop();

        r0.mTransition = null;

        $i0 = r0.mTransitionToIndex;

        virtualinvoke r0.selectDrawable($i0);

        r0.mTransitionToIndex = -1;

        r0.mTransitionFromIndex = -1;

     label1:
        return;
    }

    public android.graphics.drawable.Drawable mutate()
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r2;
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.mMutated;

        if $z0 != 0 goto label1;

        $r1 = specialinvoke r0.mutate();

        if $r1 != r0 goto label1;

        $r2 = r0.mState;

        virtualinvoke $r2.mutate();

        r0.mMutated = 1;

     label1:
        return r0;
    }

    public volatile boolean onLayoutDirectionChanged(int)
    {
        int $i0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $z0 = specialinvoke r0.onLayoutDirectionChanged($i0);

        return $z0;
    }

    protected boolean onStateChange(int[])
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState r2;
        android.graphics.drawable.Drawable $r3;
        int[] $r1;
        int $i0, $i1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        boolean $z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mState;

        $i0 = virtualinvoke r2.indexOfKeyframe($r1);

        $i1 = virtualinvoke r0.getCurrentIndex();

        if $i0 == $i1 goto label2;

        $z0 = specialinvoke r0.selectTransition($i0);

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke r0.selectDrawable($i0);

        if $z0 == 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r3 = virtualinvoke r0.getCurrent();

        if $r3 == null goto label4;

        $z1 = virtualinvoke $r3.setState($r1);

        $z0 = $z0 | $z1;

     label4:
        return $z0;
    }

    public volatile void scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)
    {
        long $l0;
        android.graphics.drawable.Drawable $r1;
        java.lang.Runnable $r2;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $l0 := @parameter2;

        specialinvoke r0.scheduleDrawable($r1, $r2, $l0);

        return;
    }

    public volatile void setAlpha(int)
    {
        int $i0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.setAlpha($i0);

        return;
    }

    public volatile void setAutoMirrored(boolean)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        specialinvoke r0.setAutoMirrored($z0);

        return;
    }

    public volatile void setColorFilter(android.graphics.ColorFilter)
    {
        android.graphics.ColorFilter $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.setColorFilter($r1);

        return;
    }

    void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
    {
        androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState $r2;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.setConstantState($r1);

        $z0 = $r1 instanceof androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState;

        if $z0 == 0 goto label1;

        $r2 = (androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState) $r1;

        r0.mState = $r2;

     label1:
        return;
    }

    public volatile void setDither(boolean)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        specialinvoke r0.setDither($z0);

        return;
    }

    public volatile void setEnterFadeDuration(int)
    {
        int $i0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.setEnterFadeDuration($i0);

        return;
    }

    public volatile void setExitFadeDuration(int)
    {
        int $i0;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.setExitFadeDuration($i0);

        return;
    }

    public volatile void setHotspot(float, float)
    {
        float $f0, $f1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $f0 := @parameter0;

        $f1 := @parameter1;

        specialinvoke r0.setHotspot($f0, $f1);

        return;
    }

    public volatile void setHotspotBounds(int, int, int, int)
    {
        int $i0, $i1, $i2, $i3;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        $i3 := @parameter3;

        specialinvoke r0.setHotspotBounds($i0, $i1, $i2, $i3);

        return;
    }

    public volatile void setTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.setTintList($r1);

        return;
    }

    public volatile void setTintMode(android.graphics.PorterDuff$Mode)
    {
        android.graphics.PorterDuff$Mode $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.setTintMode($r1);

        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition $r1;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;
        boolean $z0, $z1, $z2;

        r0 := @this;

        $z0 := @parameter0;

        $z1 := @parameter1;

        $z2 = specialinvoke r0.setVisible($z0, $z1);

        $r1 = r0.mTransition;

        if $r1 == null goto label3;

        if $z2 != 0 goto label1;

        if $z1 == 0 goto label3;

     label1:
        if $z0 == 0 goto label2;

        virtualinvoke $r1.start();

        return $z2;

     label2:
        virtualinvoke r0.jumpToCurrentState();

     label3:
        return $z2;
    }

    public volatile void unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)
    {
        android.graphics.drawable.Drawable $r1;
        java.lang.Runnable $r2;
        androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.unscheduleDrawable($r1, $r2);

        return;
    }
}
