public abstract class androidx.work.impl.constraints.controllers.ConstraintController extends java.lang.Object implements androidx.work.impl.constraints.ConstraintListener
{
    private androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback mCallback;
    private java.lang.Object mCurrentValue;
    private final java.util.List mMatchingWorkSpecIds;
    private androidx.work.impl.constraints.trackers.ConstraintTracker mTracker;

    void <init>(androidx.work.impl.constraints.trackers.ConstraintTracker)
    {
        androidx.work.impl.constraints.controllers.ConstraintController r0;
        androidx.work.impl.constraints.trackers.ConstraintTracker r1;
        java.util.ArrayList $r2;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<init>();

        r0.mMatchingWorkSpecIds = $r2;

        r0.mTracker = r1;

        return;
    }

    private void updateCallback(androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback, java.lang.Object)
    {
        androidx.work.impl.constraints.controllers.ConstraintController r0;
        java.util.List $r3;
        androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback $r1;
        java.lang.Object r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        r2 := @parameter1;

        $r3 = r0.mMatchingWorkSpecIds;

        $z0 = interfaceinvoke $r3.isEmpty();

        if $z0 != 0 goto label4;

        if $r1 != null goto label1;

        return;

     label1:
        if r2 == null goto label3;

        $z0 = virtualinvoke r0.isConstrained(r2);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r3 = r0.mMatchingWorkSpecIds;

        interfaceinvoke $r1.onConstraintMet($r3);

        return;

     label3:
        $r3 = r0.mMatchingWorkSpecIds;

        interfaceinvoke $r1.onConstraintNotMet($r3);

     label4:
        return;
    }

    abstract boolean hasConstraint(androidx.work.impl.model.WorkSpec);

    abstract boolean isConstrained(java.lang.Object);

    public boolean isWorkSpecConstrained(java.lang.String)
    {
        androidx.work.impl.constraints.controllers.ConstraintController r0;
        java.util.List $r3;
        java.lang.Object $r2;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mCurrentValue;

        if $r2 == null goto label1;

        $z0 = virtualinvoke r0.isConstrained($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.mMatchingWorkSpecIds;

        $z0 = interfaceinvoke $r3.contains($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onConstraintChanged(java.lang.Object)
    {
        androidx.work.impl.constraints.controllers.ConstraintController r0;
        java.lang.Object r1;
        androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback $r2;

        r0 := @this;

        r1 := @parameter0;

        r0.mCurrentValue = r1;

        $r2 = r0.mCallback;

        specialinvoke r0.updateCallback($r2, r1);

        return;
    }

    public void replace(java.lang.Iterable)
    {
        java.util.Iterator $r4;
        java.lang.Iterable r1;
        androidx.work.impl.model.WorkSpec r6;
        androidx.work.impl.constraints.controllers.ConstraintController r0;
        java.util.List $r3;
        androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback $r8;
        androidx.work.impl.constraints.trackers.ConstraintTracker $r7;
        java.lang.Object $r5;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        $r3 = r0.mMatchingWorkSpecIds;

        interfaceinvoke $r3.clear();

        $r4 = interfaceinvoke r1.iterator();

     label1:
        $z0 = interfaceinvoke $r4.hasNext();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.next();

        r6 = (androidx.work.impl.model.WorkSpec) $r5;

        $z0 = virtualinvoke r0.hasConstraint(r6);

        if $z0 == 0 goto label1;

        $r3 = r0.mMatchingWorkSpecIds;

        $r2 = r6.id;

        interfaceinvoke $r3.add($r2);

        goto label1;

     label2:
        $r3 = r0.mMatchingWorkSpecIds;

        $z0 = interfaceinvoke $r3.isEmpty();

        if $z0 == 0 goto label3;

        $r7 = r0.mTracker;

        virtualinvoke $r7.removeListener(r0);

        goto label4;

     label3:
        $r7 = r0.mTracker;

        virtualinvoke $r7.addListener(r0);

     label4:
        $r8 = r0.mCallback;

        $r5 = r0.mCurrentValue;

        specialinvoke r0.updateCallback($r8, $r5);

        return;
    }

    public void reset()
    {
        androidx.work.impl.constraints.controllers.ConstraintController r0;
        java.util.List $r1;
        androidx.work.impl.constraints.trackers.ConstraintTracker $r2;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mMatchingWorkSpecIds;

        $z0 = interfaceinvoke $r1.isEmpty();

        if $z0 != 0 goto label1;

        $r1 = r0.mMatchingWorkSpecIds;

        interfaceinvoke $r1.clear();

        $r2 = r0.mTracker;

        virtualinvoke $r2.removeListener(r0);

     label1:
        return;
    }

    public void setCallback(androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback)
    {
        androidx.work.impl.constraints.controllers.ConstraintController r0;
        androidx.work.impl.constraints.controllers.ConstraintController$OnConstraintUpdatedCallback $r1, $r2;
        java.lang.Object $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mCallback;

        if $r2 == $r1 goto label1;

        r0.mCallback = $r1;

        $r3 = r0.mCurrentValue;

        specialinvoke r0.updateCallback($r1, $r3);

     label1:
        return;
    }
}
