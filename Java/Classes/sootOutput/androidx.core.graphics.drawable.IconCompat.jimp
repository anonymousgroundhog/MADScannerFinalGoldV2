public class androidx.core.graphics.drawable.IconCompat extends androidx.versionedparcelable.CustomVersionedParcelable
{
    private static final float ADAPTIVE_ICON_INSET_FACTOR;
    private static final int AMBIENT_SHADOW_ALPHA;
    private static final float BLUR_FACTOR;
    static final android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE;
    private static final float DEFAULT_VIEW_PORT_SCALE;
    static final java.lang.String EXTRA_INT1;
    static final java.lang.String EXTRA_INT2;
    static final java.lang.String EXTRA_OBJ;
    static final java.lang.String EXTRA_STRING1;
    static final java.lang.String EXTRA_TINT_LIST;
    static final java.lang.String EXTRA_TINT_MODE;
    static final java.lang.String EXTRA_TYPE;
    private static final float ICON_DIAMETER_FACTOR;
    private static final int KEY_SHADOW_ALPHA;
    private static final float KEY_SHADOW_OFFSET_FACTOR;
    private static final java.lang.String TAG;
    public static final int TYPE_ADAPTIVE_BITMAP;
    public static final int TYPE_BITMAP;
    public static final int TYPE_DATA;
    public static final int TYPE_RESOURCE;
    public static final int TYPE_UNKNOWN;
    public static final int TYPE_URI;
    public static final int TYPE_URI_ADAPTIVE_BITMAP;
    public byte[] mData;
    public int mInt1;
    public int mInt2;
    java.lang.Object mObj1;
    public android.os.Parcelable mParcelable;
    public java.lang.String mString1;
    public android.content.res.ColorStateList mTintList;
    android.graphics.PorterDuff$Mode mTintMode;
    public java.lang.String mTintModeStr;
    public int mType;

    static void <clinit>()
    {
        android.graphics.PorterDuff$Mode $r0;

        $r0 = android.graphics.PorterDuff$Mode.SRC_IN;

        androidx.core.graphics.drawable.IconCompat.DEFAULT_TINT_MODE = $r0;

        return;
    }

    public void <init>()
    {
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this;

        specialinvoke r0.<init>();

        r0.mType = -1;

        r0.mData = null;

        r0.mParcelable = null;

        r0.mInt1 = 0;

        r0.mInt2 = 0;

        r0.mTintList = null;

        $r1 = androidx.core.graphics.drawable.IconCompat.DEFAULT_TINT_MODE;

        r0.mTintMode = $r1;

        r0.mTintModeStr = null;

        return;
    }

    private void <init>(int)
    {
        int $i0;
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.<init>();

        r0.mType = -1;

        r0.mData = null;

        r0.mParcelable = null;

        r0.mInt1 = 0;

        r0.mInt2 = 0;

        r0.mTintList = null;

        $r1 = androidx.core.graphics.drawable.IconCompat.DEFAULT_TINT_MODE;

        r0.mTintMode = $r1;

        r0.mTintModeStr = null;

        r0.mType = $i0;

        return;
    }

    public static androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle)
    {
        byte[] $r7;
        android.os.Bundle $r0;
        android.os.Parcelable $r3;
        android.graphics.PorterDuff$Mode $r5;
        android.content.res.ColorStateList $r4;
        androidx.core.graphics.drawable.IconCompat r1;
        int $i0, $i1;
        java.lang.StringBuilder $r6;
        java.lang.String $r2;
        boolean $z0;

        $r0 := @parameter0;

        $i0 = virtualinvoke $r0.getInt("type");

        r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke r1.<init>($i0);

        $i1 = virtualinvoke $r0.getInt("int1");

        r1.mInt1 = $i1;

        $i1 = virtualinvoke $r0.getInt("int2");

        r1.mInt2 = $i1;

        $r2 = virtualinvoke $r0.getString("string1");

        r1.mString1 = $r2;

        $z0 = virtualinvoke $r0.containsKey("tint_list");

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke $r0.getParcelable("tint_list");

        $r4 = (android.content.res.ColorStateList) $r3;

        r1.mTintList = $r4;

     label1:
        $z0 = virtualinvoke $r0.containsKey("tint_mode");

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke $r0.getString("tint_mode");

        $r5 = android.graphics.PorterDuff$Mode.valueOf($r2);

        r1.mTintMode = $r5;

     label2:
        lookupswitch($i0)
        {
            case -1: goto label6;
            case 0: goto label3;
            case 1: goto label6;
            case 2: goto label5;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label5;
            default: goto label3;
        };

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $r6 = virtualinvoke $r6.append("Unknown type ");

        $r6 = virtualinvoke $r6.append($i0);

        $r2 = virtualinvoke $r6.toString();

        android.util.Log.w("IconCompat", $r2);

        return null;

     label4:
        $r7 = virtualinvoke $r0.getByteArray("obj");

        r1.mObj1 = $r7;

        return r1;

     label5:
        $r2 = virtualinvoke $r0.getString("obj");

        r1.mObj1 = $r2;

        return r1;

     label6:
        $r3 = virtualinvoke $r0.getParcelable("obj");

        r1.mObj1 = $r3;

        return r1;
    }

    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context, android.graphics.drawable.Icon)
    {
        android.content.Context $r0;
        android.content.res.Resources$NotFoundException r6;
        android.net.Uri $r3;
        java.lang.IllegalArgumentException $r8;
        androidx.core.graphics.drawable.IconCompat r2, $r7;
        int $i0;
        java.lang.String $r4;
        android.graphics.drawable.Icon $r1;
        android.content.res.Resources $r5;

        $r0 := @parameter0;

        $r1 := @parameter1;

        androidx.core.util.Preconditions.checkNotNull($r1);

        $i0 = androidx.core.graphics.drawable.IconCompat.getType($r1);

        lookupswitch($i0)
        {
            case 2: goto label4;
            case 3: goto label1;
            case 4: goto label3;
            case 5: goto label1;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        $r7 = new androidx.core.graphics.drawable.IconCompat;

        r2 = $r7;

        specialinvoke $r7.<init>(-1);

        r2.mObj1 = $r1;

        return r2;

     label2:
        $r3 = androidx.core.graphics.drawable.IconCompat.getUri($r1);

        r2 = androidx.core.graphics.drawable.IconCompat.createWithAdaptiveBitmapContentUri($r3);

        return r2;

     label3:
        $r3 = androidx.core.graphics.drawable.IconCompat.getUri($r1);

        r2 = androidx.core.graphics.drawable.IconCompat.createWithContentUri($r3);

        return r2;

     label4:
        $r4 = androidx.core.graphics.drawable.IconCompat.getResPackage($r1);

     label5:
        $r5 = androidx.core.graphics.drawable.IconCompat.getResources($r0, $r4);

        $i0 = androidx.core.graphics.drawable.IconCompat.getResId($r1);

        r2 = androidx.core.graphics.drawable.IconCompat.createWithResource($r5, $r4, $i0);

     label6:
        return r2;

     label7:
        r6 := @caughtexception;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<init>("Icon resource cannot be found");

        throw $r8;

        catch android.content.res.Resources$NotFoundException from label5 to label6 with label7;
    }

    public static androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon)
    {
        androidx.core.graphics.drawable.IconCompat r1, $r4;
        int $i0;
        android.net.Uri $r2;
        java.lang.String $r3;
        android.graphics.drawable.Icon $r0;

        $r0 := @parameter0;

        androidx.core.util.Preconditions.checkNotNull($r0);

        $i0 = androidx.core.graphics.drawable.IconCompat.getType($r0);

        lookupswitch($i0)
        {
            case 2: goto label4;
            case 3: goto label1;
            case 4: goto label3;
            case 5: goto label1;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        $r4 = new androidx.core.graphics.drawable.IconCompat;

        r1 = $r4;

        specialinvoke $r4.<init>(-1);

        r1.mObj1 = $r0;

        return r1;

     label2:
        $r2 = androidx.core.graphics.drawable.IconCompat.getUri($r0);

        r1 = androidx.core.graphics.drawable.IconCompat.createWithAdaptiveBitmapContentUri($r2);

        return r1;

     label3:
        $r2 = androidx.core.graphics.drawable.IconCompat.getUri($r0);

        r1 = androidx.core.graphics.drawable.IconCompat.createWithContentUri($r2);

        return r1;

     label4:
        $r3 = androidx.core.graphics.drawable.IconCompat.getResPackage($r0);

        $i0 = androidx.core.graphics.drawable.IconCompat.getResId($r0);

        r1 = androidx.core.graphics.drawable.IconCompat.createWithResource(null, $r3, $i0);

        return r1;
    }

    public static androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon)
    {
        int $i0;
        android.graphics.drawable.Icon $r0;
        androidx.core.graphics.drawable.IconCompat $r1;

        $r0 := @parameter0;

        $i0 = androidx.core.graphics.drawable.IconCompat.getType($r0);

        if $i0 != 2 goto label1;

        $i0 = androidx.core.graphics.drawable.IconCompat.getResId($r0);

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = androidx.core.graphics.drawable.IconCompat.createFromIcon($r0);

        return $r1;
    }

    static android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap, boolean)
    {
        android.graphics.Shader$TileMode r6, $r7;
        android.graphics.Bitmap$Config r3;
        int $i0, $i1;
        android.graphics.Canvas r1;
        android.graphics.Matrix r8;
        boolean $z0;
        android.graphics.BitmapShader r5;
        android.graphics.Bitmap $r0, $r4;
        float f0, f1, f2, $f3;
        android.graphics.Paint r2;

        $r0 := @parameter0;

        $z0 := @parameter1;

        $i0 = virtualinvoke $r0.getWidth();

        $i1 = virtualinvoke $r0.getHeight();

        $i0 = java.lang.Math.min($i0, $i1);

        f0 = (float) $i0;

        f0 = f0 * 0.6666667F;

        $i0 = (int) f0;

        r3 = android.graphics.Bitmap$Config.ARGB_8888;

        $r4 = android.graphics.Bitmap.createBitmap($i0, $i0, r3);

        r1 = new android.graphics.Canvas;

        specialinvoke r1.<init>($r4);

        r2 = new android.graphics.Paint;

        specialinvoke r2.<init>(3);

        f0 = (float) $i0;

        f0 = f0 * 0.5F;

        f1 = 0.9166667F * f0;

        if $z0 == 0 goto label1;

        f2 = (float) $i0;

        f2 = f2 * 0.010416667F;

        virtualinvoke r2.setColor(0);

        $f3 = (float) $i0;

        $f3 = $f3 * 0.020833334F;

        virtualinvoke r2.setShadowLayer(f2, 0.0F, $f3, 1023410176);

        virtualinvoke r1.drawCircle(f0, f0, f1, r2);

        virtualinvoke r2.setShadowLayer(f2, 0.0F, 0.0F, 503316480);

        virtualinvoke r1.drawCircle(f0, f0, f1, r2);

        virtualinvoke r2.clearShadowLayer();

     label1:
        virtualinvoke r2.setColor(-16777216);

        r5 = new android.graphics.BitmapShader;

        r6 = android.graphics.Shader$TileMode.CLAMP;

        $r7 = android.graphics.Shader$TileMode.CLAMP;

        specialinvoke r5.<init>($r0, r6, $r7);

        r8 = new android.graphics.Matrix;

        specialinvoke r8.<init>();

        $i1 = virtualinvoke $r0.getWidth();

        $i1 = $i1 - $i0;

        $i1 = neg $i1;

        $i1 = $i1 / 2;

        f2 = (float) $i1;

        $i1 = virtualinvoke $r0.getHeight();

        $i0 = $i1 - $i0;

        $i0 = neg $i0;

        $i0 = $i0 / 2;

        $f3 = (float) $i0;

        virtualinvoke r8.setTranslate(f2, $f3);

        virtualinvoke r5.setLocalMatrix(r8);

        virtualinvoke r2.setShader(r5);

        virtualinvoke r1.drawCircle(f0, f0, f1, r2);

        virtualinvoke r1.setBitmap(null);

        return $r4;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap)
    {
        java.lang.IllegalArgumentException r2;
        androidx.core.graphics.drawable.IconCompat r1;
        android.graphics.Bitmap $r0;

        $r0 := @parameter0;

        if $r0 == null goto label1;

        r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke r1.<init>(5);

        r1.mObj1 = $r0;

        return r1;

     label1:
        r2 = new java.lang.IllegalArgumentException;

        specialinvoke r2.<init>("Bitmap must not be null.");

        throw r2;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(android.net.Uri)
    {
        androidx.core.graphics.drawable.IconCompat $r2;
        android.net.Uri $r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0;

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.toString();

        $r2 = androidx.core.graphics.drawable.IconCompat.createWithAdaptiveBitmapContentUri($r1);

        return $r2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<init>("Uri must not be null.");

        throw $r3;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.IllegalArgumentException r2;
        androidx.core.graphics.drawable.IconCompat r1;

        $r0 := @parameter0;

        if $r0 == null goto label1;

        r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke r1.<init>(6);

        r1.mObj1 = $r0;

        return r1;

     label1:
        r2 = new java.lang.IllegalArgumentException;

        specialinvoke r2.<init>("Uri must not be null.");

        throw r2;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap)
    {
        java.lang.IllegalArgumentException r2;
        androidx.core.graphics.drawable.IconCompat r1;
        android.graphics.Bitmap $r0;

        $r0 := @parameter0;

        if $r0 == null goto label1;

        r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke r1.<init>(1);

        r1.mObj1 = $r0;

        return r1;

     label1:
        r2 = new java.lang.IllegalArgumentException;

        specialinvoke r2.<init>("Bitmap must not be null.");

        throw r2;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri)
    {
        androidx.core.graphics.drawable.IconCompat $r2;
        android.net.Uri $r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0;

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.toString();

        $r2 = androidx.core.graphics.drawable.IconCompat.createWithContentUri($r1);

        return $r2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<init>("Uri must not be null.");

        throw $r3;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.IllegalArgumentException r2;
        androidx.core.graphics.drawable.IconCompat r1;

        $r0 := @parameter0;

        if $r0 == null goto label1;

        r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke r1.<init>(4);

        r1.mObj1 = $r0;

        return r1;

     label1:
        r2 = new java.lang.IllegalArgumentException;

        specialinvoke r2.<init>("Uri must not be null.");

        throw r2;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithData(byte[], int, int)
    {
        byte[] $r0;
        androidx.core.graphics.drawable.IconCompat r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException r2;

        $r0 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        if $r0 == null goto label1;

        r1 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke r1.<init>(3);

        r1.mObj1 = $r0;

        r1.mInt1 = $i0;

        r1.mInt2 = $i1;

        return r1;

     label1:
        r2 = new java.lang.IllegalArgumentException;

        specialinvoke r2.<init>("Data must not be null.");

        throw r2;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context, int)
    {
        android.content.Context $r0;
        androidx.core.graphics.drawable.IconCompat $r3;
        int $i0;
        java.lang.String $r2;
        java.lang.IllegalArgumentException $r4;
        android.content.res.Resources $r1;

        $r0 := @parameter0;

        $i0 := @parameter1;

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.getResources();

        $r2 = virtualinvoke $r0.getPackageName();

        $r3 = androidx.core.graphics.drawable.IconCompat.createWithResource($r1, $r2, $i0);

        return $r3;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<init>("Context must not be null.");

        throw $r4;
    }

    public static androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources, java.lang.String, int)
    {
        androidx.core.graphics.drawable.IconCompat r4;
        android.content.res.Resources$NotFoundException r5;
        int $i0;
        java.lang.String $r1, $r3;
        java.lang.IllegalArgumentException $r2;
        android.content.res.Resources $r0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $i0 := @parameter2;

        if $r1 == null goto label7;

        if $i0 == 0 goto label6;

        r4 = new androidx.core.graphics.drawable.IconCompat;

        specialinvoke r4.<init>(2);

        r4.mInt1 = $i0;

        if $r0 == null goto label4;

     label1:
        $r3 = virtualinvoke $r0.getResourceName($i0);

     label2:
        r4.mObj1 = $r3;

        goto label5;

     label3:
        r5 := @caughtexception;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<init>("Icon resource cannot be found");

        throw $r2;

     label4:
        r4.mObj1 = $r1;

     label5:
        r4.mString1 = $r1;

        return r4;

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<init>("Drawable resource ID must not be 0");

        throw $r2;

     label7:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<init>("Package must not be null.");

        throw $r2;

        catch android.content.res.Resources$NotFoundException from label1 to label2 with label3;
    }

    private static int getResId(android.graphics.drawable.Icon)
    {
        java.lang.IllegalAccessException r9;
        java.lang.Object[] $r4;
        java.lang.NoSuchMethodException r7;
        java.lang.Class[] $r1;
        java.lang.Integer r6;
        java.lang.reflect.InvocationTargetException r8;
        int $i0;
        java.lang.Class $r2;
        java.lang.Object $r5;
        android.graphics.drawable.Icon $r0;
        java.lang.reflect.Method $r3;

        $r0 := @parameter0;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 28 goto label01;

        $i0 = virtualinvoke $r0.getResId();

        return $i0;

     label01:
        $r2 = virtualinvoke $r0.getClass();

     label02:
        $r1 = newarray (java.lang.Class)[0];

     label03:
        $r3 = virtualinvoke $r2.getMethod("getResId", $r1);

     label04:
        $r4 = newarray (java.lang.Object)[0];

     label05:
        $r5 = virtualinvoke $r3.invoke($r0, $r4);

     label06:
        r6 = (java.lang.Integer) $r5;

     label07:
        $i0 = virtualinvoke r6.intValue();

     label08:
        return $i0;

     label09:
        r7 := @caughtexception;

        android.util.Log.e("IconCompat", "Unable to get icon resource", r7);

        return 0;

     label10:
        r8 := @caughtexception;

        android.util.Log.e("IconCompat", "Unable to get icon resource", r8);

        return 0;

     label11:
        r9 := @caughtexception;

        android.util.Log.e("IconCompat", "Unable to get icon resource", r9);

        return 0;

        catch java.lang.IllegalAccessException from label01 to label02 with label11;
        catch java.lang.IllegalAccessException from label03 to label04 with label11;
        catch java.lang.IllegalAccessException from label05 to label06 with label11;
        catch java.lang.IllegalAccessException from label07 to label08 with label11;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label10;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label10;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label10;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label10;
        catch java.lang.NoSuchMethodException from label01 to label02 with label09;
        catch java.lang.NoSuchMethodException from label03 to label04 with label09;
        catch java.lang.NoSuchMethodException from label05 to label06 with label09;
        catch java.lang.NoSuchMethodException from label07 to label08 with label09;
    }

    private static java.lang.String getResPackage(android.graphics.drawable.Icon)
    {
        java.lang.IllegalAccessException r9;
        java.lang.Object[] $r5;
        java.lang.NoSuchMethodException r7;
        java.lang.Class[] $r1;
        java.lang.reflect.InvocationTargetException r8;
        int $i0;
        java.lang.Class $r3;
        java.lang.Object $r6;
        java.lang.String $r2;
        android.graphics.drawable.Icon $r0;
        java.lang.reflect.Method $r4;

        $r0 := @parameter0;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 28 goto label1;

        $r2 = virtualinvoke $r0.getResPackage();

        return $r2;

     label1:
        $r3 = virtualinvoke $r0.getClass();

     label2:
        $r1 = newarray (java.lang.Class)[0];

     label3:
        $r4 = virtualinvoke $r3.getMethod("getResPackage", $r1);

     label4:
        $r5 = newarray (java.lang.Object)[0];

     label5:
        $r6 = virtualinvoke $r4.invoke($r0, $r5);

     label6:
        $r2 = (java.lang.String) $r6;

        return $r2;

     label7:
        r7 := @caughtexception;

        android.util.Log.e("IconCompat", "Unable to get icon package", r7);

        return null;

     label8:
        r8 := @caughtexception;

        android.util.Log.e("IconCompat", "Unable to get icon package", r8);

        return null;

     label9:
        r9 := @caughtexception;

        android.util.Log.e("IconCompat", "Unable to get icon package", r9);

        return null;

        catch java.lang.IllegalAccessException from label1 to label2 with label9;
        catch java.lang.IllegalAccessException from label3 to label4 with label9;
        catch java.lang.IllegalAccessException from label5 to label6 with label9;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label8;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label8;
        catch java.lang.reflect.InvocationTargetException from label5 to label6 with label8;
        catch java.lang.NoSuchMethodException from label1 to label2 with label7;
        catch java.lang.NoSuchMethodException from label3 to label4 with label7;
        catch java.lang.NoSuchMethodException from label5 to label6 with label7;
    }

    private static android.content.res.Resources getResources(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.Object[] $r7;
        android.content.pm.PackageManager $r4;
        android.content.pm.PackageManager$NameNotFoundException r6;
        java.lang.String $r1, r2;
        android.content.pm.ApplicationInfo $r5;
        boolean $z0;
        android.content.res.Resources $r3;

        $r0 := @parameter0;

        $r1 := @parameter1;

        r2 = "android";

        $z0 = virtualinvoke r2.equals($r1);

        if $z0 == 0 goto label1;

        $r3 = android.content.res.Resources.getSystem();

        return $r3;

     label1:
        $r4 = virtualinvoke $r0.getPackageManager();

     label2:
        $r5 = virtualinvoke $r4.getApplicationInfo($r1, 8192);

     label3:
        if $r5 == null goto label6;

     label4:
        $r3 = virtualinvoke $r4.getResourcesForApplication($r5);

     label5:
        return $r3;

     label6:
        return null;

     label7:
        r6 := @caughtexception;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r1;

        $r1 = java.lang.String.format("Unable to find pkg=%s for icon", $r7);

        android.util.Log.e("IconCompat", $r1, r6);

        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label7;
    }

    private static int getType(android.graphics.drawable.Icon)
    {
        java.lang.IllegalAccessException r11;
        java.lang.Object[] $r4;
        java.lang.NoSuchMethodException r7;
        java.lang.Class[] $r1;
        java.lang.Integer r6;
        java.lang.reflect.InvocationTargetException r10;
        int $i0;
        java.lang.Class $r2;
        java.lang.Object $r5;
        java.lang.StringBuilder $r8, $r12;
        java.lang.String $r9;
        android.graphics.drawable.Icon $r0;
        java.lang.reflect.Method $r3;

        $r0 := @parameter0;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 28 goto label01;

        $i0 = virtualinvoke $r0.getType();

        return $i0;

     label01:
        $r2 = virtualinvoke $r0.getClass();

     label02:
        $r1 = newarray (java.lang.Class)[0];

     label03:
        $r3 = virtualinvoke $r2.getMethod("getType", $r1);

     label04:
        $r4 = newarray (java.lang.Object)[0];

     label05:
        $r5 = virtualinvoke $r3.invoke($r0, $r4);

     label06:
        r6 = (java.lang.Integer) $r5;

     label07:
        $i0 = virtualinvoke r6.intValue();

     label08:
        return $i0;

     label09:
        r7 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<init>();

        $r8 = virtualinvoke $r12.append("Unable to get icon type ");

        $r8 = virtualinvoke $r8.append($r0);

        $r9 = virtualinvoke $r8.toString();

        android.util.Log.e("IconCompat", $r9, r7);

        return -1;

     label10:
        r10 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<init>();

        $r8 = virtualinvoke $r12.append("Unable to get icon type ");

        $r8 = virtualinvoke $r8.append($r0);

        $r9 = virtualinvoke $r8.toString();

        android.util.Log.e("IconCompat", $r9, r10);

        return -1;

     label11:
        r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<init>();

        $r8 = virtualinvoke $r12.append("Unable to get icon type ");

        $r8 = virtualinvoke $r8.append($r0);

        $r9 = virtualinvoke $r8.toString();

        android.util.Log.e("IconCompat", $r9, r11);

        return -1;

        catch java.lang.IllegalAccessException from label01 to label02 with label11;
        catch java.lang.IllegalAccessException from label03 to label04 with label11;
        catch java.lang.IllegalAccessException from label05 to label06 with label11;
        catch java.lang.IllegalAccessException from label07 to label08 with label11;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label10;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label10;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label10;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label10;
        catch java.lang.NoSuchMethodException from label01 to label02 with label09;
        catch java.lang.NoSuchMethodException from label03 to label04 with label09;
        catch java.lang.NoSuchMethodException from label05 to label06 with label09;
        catch java.lang.NoSuchMethodException from label07 to label08 with label09;
    }

    private static android.net.Uri getUri(android.graphics.drawable.Icon)
    {
        java.lang.IllegalAccessException r9;
        java.lang.Object[] $r5;
        java.lang.NoSuchMethodException r7;
        android.net.Uri $r2;
        java.lang.Class[] $r1;
        java.lang.reflect.InvocationTargetException r8;
        int $i0;
        java.lang.Class $r3;
        java.lang.Object $r6;
        android.graphics.drawable.Icon $r0;
        java.lang.reflect.Method $r4;

        $r0 := @parameter0;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 28 goto label1;

        $r2 = virtualinvoke $r0.getUri();

        return $r2;

     label1:
        $r3 = virtualinvoke $r0.getClass();

     label2:
        $r1 = newarray (java.lang.Class)[0];

     label3:
        $r4 = virtualinvoke $r3.getMethod("getUri", $r1);

     label4:
        $r5 = newarray (java.lang.Object)[0];

     label5:
        $r6 = virtualinvoke $r4.invoke($r0, $r5);

     label6:
        $r2 = (android.net.Uri) $r6;

        return $r2;

     label7:
        r7 := @caughtexception;

        android.util.Log.e("IconCompat", "Unable to get icon uri", r7);

        return null;

     label8:
        r8 := @caughtexception;

        android.util.Log.e("IconCompat", "Unable to get icon uri", r8);

        return null;

     label9:
        r9 := @caughtexception;

        android.util.Log.e("IconCompat", "Unable to get icon uri", r9);

        return null;

        catch java.lang.IllegalAccessException from label1 to label2 with label9;
        catch java.lang.IllegalAccessException from label3 to label4 with label9;
        catch java.lang.IllegalAccessException from label5 to label6 with label9;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label8;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label8;
        catch java.lang.reflect.InvocationTargetException from label5 to label6 with label8;
        catch java.lang.NoSuchMethodException from label1 to label2 with label7;
        catch java.lang.NoSuchMethodException from label3 to label4 with label7;
        catch java.lang.NoSuchMethodException from label5 to label6 with label7;
    }

    private android.graphics.drawable.Drawable loadDrawableInner(android.content.Context)
    {
        android.content.Context $r1;
        byte[] $r8;
        java.lang.Object[] $r14;
        android.graphics.drawable.AdaptiveIconDrawable $r3;
        android.graphics.drawable.Drawable $r12;
        java.lang.Integer $r15;
        int i0, i1;
        java.lang.String $r9, r10;
        android.content.res.Resources$Theme $r11;
        boolean $z0;
        android.graphics.drawable.BitmapDrawable r4;
        java.lang.RuntimeException r13;
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.Bitmap $r6;
        java.lang.Object r7;
        java.io.InputStream $r2;
        android.content.res.Resources $r5;

        r0 := @this;

        $r1 := @parameter0;

        i0 = r0.mType;

        lookupswitch(i0)
        {
            case 1: goto label12;
            case 2: goto label07;
            case 3: goto label06;
            case 4: goto label05;
            case 5: goto label04;
            case 6: goto label02;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        $r2 = virtualinvoke r0.getUriInputStream($r1);

        if $r2 == null goto label13;

        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 < 26 goto label03;

        $r3 = new android.graphics.drawable.AdaptiveIconDrawable;

        r4 = new android.graphics.drawable.BitmapDrawable;

        $r5 = virtualinvoke $r1.getResources();

        $r6 = android.graphics.BitmapFactory.decodeStream($r2);

        specialinvoke r4.<init>($r5, $r6);

        specialinvoke $r3.<init>(null, r4);

        return $r3;

     label03:
        r4 = new android.graphics.drawable.BitmapDrawable;

        $r5 = virtualinvoke $r1.getResources();

        $r6 = android.graphics.BitmapFactory.decodeStream($r2);

        $r6 = androidx.core.graphics.drawable.IconCompat.createLegacyIconFromAdaptiveIcon($r6, 0);

        specialinvoke r4.<init>($r5, $r6);

        return r4;

     label04:
        r4 = new android.graphics.drawable.BitmapDrawable;

        $r5 = virtualinvoke $r1.getResources();

        r7 = r0.mObj1;

        $r6 = (android.graphics.Bitmap) r7;

        $r6 = androidx.core.graphics.drawable.IconCompat.createLegacyIconFromAdaptiveIcon($r6, 0);

        specialinvoke r4.<init>($r5, $r6);

        return r4;

     label05:
        $r2 = virtualinvoke r0.getUriInputStream($r1);

        if $r2 == null goto label13;

        r4 = new android.graphics.drawable.BitmapDrawable;

        $r5 = virtualinvoke $r1.getResources();

        $r6 = android.graphics.BitmapFactory.decodeStream($r2);

        specialinvoke r4.<init>($r5, $r6);

        return r4;

     label06:
        r4 = new android.graphics.drawable.BitmapDrawable;

        $r5 = virtualinvoke $r1.getResources();

        r7 = r0.mObj1;

        $r8 = (byte[]) r7;

        i0 = r0.mInt1;

        i1 = r0.mInt2;

        $r6 = android.graphics.BitmapFactory.decodeByteArray($r8, i0, i1);

        specialinvoke r4.<init>($r5, $r6);

        return r4;

     label07:
        $r9 = virtualinvoke r0.getResPackage();

        r10 = $r9;

        $z0 = android.text.TextUtils.isEmpty($r9);

        if $z0 == 0 goto label08;

        r10 = virtualinvoke $r1.getPackageName();

     label08:
        $r5 = androidx.core.graphics.drawable.IconCompat.getResources($r1, r10);

     label09:
        i0 = r0.mInt1;

        $r11 = virtualinvoke $r1.getTheme();

        $r12 = androidx.core.content.res.ResourcesCompat.getDrawable($r5, i0, $r11);

     label10:
        return $r12;

     label11:
        r13 := @caughtexception;

        $r14 = newarray (java.lang.Object)[2];

        i0 = r0.mInt1;

        $r15 = java.lang.Integer.valueOf(i0);

        $r14[0] = $r15;

        r7 = r0.mObj1;

        $r14[1] = r7;

        $r9 = java.lang.String.format("Unable to load resource 0x%08x from pkg=%s", $r14);

        android.util.Log.e("IconCompat", $r9, r13);

        return null;

     label12:
        r4 = new android.graphics.drawable.BitmapDrawable;

        $r5 = virtualinvoke $r1.getResources();

        r7 = r0.mObj1;

        $r6 = (android.graphics.Bitmap) r7;

        specialinvoke r4.<init>($r5, $r6);

        return r4;

     label13:
        return null;

        catch java.lang.RuntimeException from label09 to label10 with label11;
    }

    private static java.lang.String typeToString(int)
    {
        int $i0;

        $i0 := @parameter0;

        lookupswitch($i0)
        {
            case 1: goto label7;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label3;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        return "UNKNOWN";

     label2:
        return "URI_MASKABLE";

     label3:
        return "BITMAP_MASKABLE";

     label4:
        return "URI";

     label5:
        return "DATA";

     label6:
        return "RESOURCE";

     label7:
        return "BITMAP";
    }

    public void addToShortcutIntent(android.content.Intent, android.graphics.drawable.Drawable, android.content.Context)
    {
        android.content.Context $r3;
        android.app.ActivityManager r11;
        android.content.pm.PackageManager$NameNotFoundException r13;
        android.content.Intent$ShortcutIconResource $r8;
        android.content.Intent $r1;
        android.graphics.drawable.Drawable $r2, $r9;
        android.graphics.Bitmap$Config $r10;
        int i0, $i1, i2, $i3;
        android.graphics.Canvas r12;
        java.lang.String $r7;
        java.lang.IllegalArgumentException r4;
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.Bitmap r6;
        java.lang.Object r5;
        java.lang.StringBuilder r14;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        virtualinvoke r0.checkResource($r3);

        i0 = r0.mType;

        lookupswitch(i0)
        {
            case 1: goto label26;
            case 2: goto label03;
            case 3: goto label01;
            case 4: goto label01;
            case 5: goto label02;
            default: goto label01;
        };

     label01:
        r4 = new java.lang.IllegalArgumentException;

        specialinvoke r4.<init>("Icon type not supported for intent shortcuts");

        throw r4;

     label02:
        r5 = r0.mObj1;

        r6 = (android.graphics.Bitmap) r5;

        r6 = androidx.core.graphics.drawable.IconCompat.createLegacyIconFromAdaptiveIcon(r6, 1);

        goto label27;

     label03:
        $r7 = virtualinvoke r0.getResPackage();

        $r3 = virtualinvoke $r3.createPackageContext($r7, 0);

     label04:
        if $r2 != null goto label07;

        i0 = r0.mInt1;

     label05:
        $r8 = android.content.Intent$ShortcutIconResource.fromContext($r3, i0);

        virtualinvoke $r1.putExtra("android.intent.extra.shortcut.ICON_RESOURCE", $r8);

     label06:
        return;

     label07:
        i0 = r0.mInt1;

     label08:
        $r9 = androidx.core.content.ContextCompat.getDrawable($r3, i0);

        i0 = virtualinvoke $r9.getIntrinsicWidth();

     label09:
        if i0 <= 0 goto label16;

     label10:
        i0 = virtualinvoke $r9.getIntrinsicHeight();

     label11:
        if i0 > 0 goto label12;

        goto label16;

     label12:
        i0 = virtualinvoke $r9.getIntrinsicWidth();

        $i1 = virtualinvoke $r9.getIntrinsicHeight();

     label13:
        $r10 = android.graphics.Bitmap$Config.ARGB_8888;

     label14:
        r6 = android.graphics.Bitmap.createBitmap(i0, $i1, $r10);

     label15:
        goto label21;

     label16:
        r5 = virtualinvoke $r3.getSystemService("activity");

     label17:
        r11 = (android.app.ActivityManager) r5;

     label18:
        i0 = virtualinvoke r11.getLauncherLargeIconSize();

     label19:
        $r10 = android.graphics.Bitmap$Config.ARGB_8888;

     label20:
        r6 = android.graphics.Bitmap.createBitmap(i0, i0, $r10);

     label21:
        i0 = virtualinvoke r6.getWidth();

        $i1 = virtualinvoke r6.getHeight();

        virtualinvoke $r9.setBounds(0, 0, i0, $i1);

     label22:
        r12 = new android.graphics.Canvas;

     label23:
        specialinvoke r12.<init>(r6);

        virtualinvoke $r9.draw(r12);

     label24:
        goto label27;

     label25:
        r13 := @caughtexception;

        r4 = new java.lang.IllegalArgumentException;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<init>();

        r14 = virtualinvoke r14.append("Can\'t find package ");

        r5 = r0.mObj1;

        r14 = virtualinvoke r14.append(r5);

        $r7 = virtualinvoke r14.toString();

        specialinvoke r4.<init>($r7, r13);

        throw r4;

     label26:
        r5 = r0.mObj1;

        r6 = (android.graphics.Bitmap) r5;

        if $r2 == null goto label27;

        $r10 = virtualinvoke r6.getConfig();

        r6 = virtualinvoke r6.copy($r10, 1);

     label27:
        if $r2 == null goto label28;

        i0 = virtualinvoke r6.getWidth();

        $i1 = virtualinvoke r6.getHeight();

        i2 = i0 / 2;

        $i3 = $i1 / 2;

        virtualinvoke $r2.setBounds(i2, $i3, i0, $i1);

        r12 = new android.graphics.Canvas;

        specialinvoke r12.<init>(r6);

        virtualinvoke $r2.draw(r12);

     label28:
        virtualinvoke $r1.putExtra("android.intent.extra.shortcut.ICON", r6);

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label08 to label09 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label10 to label11 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label12 to label13 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label14 to label15 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label16 to label17 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label18 to label19 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label20 to label21 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label21 to label22 with label25;
        catch android.content.pm.PackageManager$NameNotFoundException from label23 to label24 with label25;
    }

    public void checkResource(android.content.Context)
    {
        android.content.Context $r1;
        java.lang.String[] $r4;
        androidx.core.graphics.drawable.IconCompat r0;
        int i0, $i1;
        java.lang.Object r2;
        java.lang.StringBuilder $r10, $r11;
        java.lang.String r3, r5, r6, r7, r8;
        boolean $z0;
        android.content.res.Resources $r9;

        r0 := @this;

        $r1 := @parameter0;

        i0 = r0.mType;

        if i0 != 2 goto label3;

        r2 = r0.mObj1;

        if r2 == null goto label3;

        r3 = (java.lang.String) r2;

        $z0 = virtualinvoke r3.contains(":");

        if $z0 != 0 goto label1;

        return;

     label1:
        i0 = -1;

        $r4 = virtualinvoke r3.split(":", i0);

        r5 = $r4[1];

        i0 = -1;

        $r4 = virtualinvoke r5.split("/", i0);

        r6 = $r4[0];

        i0 = -1;

        $r4 = virtualinvoke r5.split("/", i0);

        r5 = $r4[1];

        i0 = -1;

        $r4 = virtualinvoke r3.split(":", i0);

        r7 = $r4[0];

        r8 = "0_resource_name_obfuscated";

        $z0 = virtualinvoke r8.equals(r5);

        if $z0 == 0 goto label2;

        android.util.Log.i("IconCompat", "Found obfuscated resource, not trying to update resource id for it");

        return;

     label2:
        r8 = virtualinvoke r0.getResPackage();

        $r9 = androidx.core.graphics.drawable.IconCompat.getResources($r1, r8);

        i0 = virtualinvoke $r9.getIdentifier(r5, r6, r7);

        $i1 = r0.mInt1;

        if $i1 == i0 goto label3;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<init>();

        $r10 = virtualinvoke $r11.append("Id has changed for ");

        $r10 = virtualinvoke $r10.append(r8);

        $r10 = virtualinvoke $r10.append(" ");

        $r10 = virtualinvoke $r10.append(r3);

        r3 = virtualinvoke $r10.toString();

        android.util.Log.i("IconCompat", r3);

        r0.mInt1 = i0;

     label3:
        return;
    }

    public android.graphics.Bitmap getBitmap()
    {
        java.lang.IllegalStateException $r6;
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.Bitmap $r2;
        int $i0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r3, $r5;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this;

        $i0 = r0.mType;

        if $i0 != -1 goto label2;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 23 goto label2;

        $r1 = r0.mObj1;

        $z0 = $r1 instanceof android.graphics.Bitmap;

        if $z0 == 0 goto label1;

        $r2 = (android.graphics.Bitmap) $r1;

        return $r2;

     label1:
        return null;

     label2:
        $i0 = r0.mType;

        if $i0 != 1 goto label3;

        $r1 = r0.mObj1;

        $r2 = (android.graphics.Bitmap) $r1;

        return $r2;

     label3:
        if $i0 != 5 goto label4;

        $r1 = r0.mObj1;

        $r2 = (android.graphics.Bitmap) $r1;

        $r2 = androidx.core.graphics.drawable.IconCompat.createLegacyIconFromAdaptiveIcon($r2, 1);

        return $r2;

     label4:
        $r6 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r3 = virtualinvoke $r5.append("called getBitmap() on ");

        $r3 = virtualinvoke $r3.append(r0);

        $r4 = virtualinvoke $r3.toString();

        specialinvoke $r6.<init>($r4);

        throw $r6;
    }

    public int getResId()
    {
        java.lang.IllegalStateException $r6;
        androidx.core.graphics.drawable.IconCompat r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r3, $r5;
        java.lang.String $r4;
        android.graphics.drawable.Icon $r2;

        r0 := @this;

        $i0 = r0.mType;

        if $i0 != -1 goto label1;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 23 goto label1;

        $r1 = r0.mObj1;

        $r2 = (android.graphics.drawable.Icon) $r1;

        $i0 = androidx.core.graphics.drawable.IconCompat.getResId($r2);

        return $i0;

     label1:
        $i0 = r0.mType;

        if $i0 != 2 goto label2;

        $i0 = r0.mInt1;

        return $i0;

     label2:
        $r6 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r3 = virtualinvoke $r5.append("called getResId() on ");

        $r3 = virtualinvoke $r3.append(r0);

        $r4 = virtualinvoke $r3.toString();

        specialinvoke $r6.<init>($r4);

        throw $r6;
    }

    public java.lang.String getResPackage()
    {
        java.lang.IllegalStateException $r7;
        java.lang.String[] $r4;
        androidx.core.graphics.drawable.IconCompat r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r5, $r6;
        java.lang.String $r3;
        android.graphics.drawable.Icon $r2;
        boolean $z0;

        r0 := @this;

        $i0 = r0.mType;

        if $i0 != -1 goto label1;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 23 goto label1;

        $r1 = r0.mObj1;

        $r2 = (android.graphics.drawable.Icon) $r1;

        $r3 = androidx.core.graphics.drawable.IconCompat.getResPackage($r2);

        return $r3;

     label1:
        $i0 = r0.mType;

        if $i0 != 2 goto label3;

        $r3 = r0.mString1;

        $z0 = android.text.TextUtils.isEmpty($r3);

        if $z0 == 0 goto label2;

        $r1 = r0.mObj1;

        $r3 = (java.lang.String) $r1;

        $r4 = virtualinvoke $r3.split(":", -1);

        $r3 = $r4[0];

        return $r3;

     label2:
        $r3 = r0.mString1;

        return $r3;

     label3:
        $r7 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $r5 = virtualinvoke $r6.append("called getResPackage() on ");

        $r5 = virtualinvoke $r5.append(r0);

        $r3 = virtualinvoke $r5.toString();

        specialinvoke $r7.<init>($r3);

        throw $r7;
    }

    public int getType()
    {
        androidx.core.graphics.drawable.IconCompat r0;
        int $i0;
        java.lang.Object $r1;
        android.graphics.drawable.Icon $r2;

        r0 := @this;

        $i0 = r0.mType;

        if $i0 != -1 goto label1;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 23 goto label1;

        $r1 = r0.mObj1;

        $r2 = (android.graphics.drawable.Icon) $r1;

        $i0 = androidx.core.graphics.drawable.IconCompat.getType($r2);

        return $i0;

     label1:
        $i0 = r0.mType;

        return $i0;
    }

    public android.net.Uri getUri()
    {
        java.lang.IllegalStateException $r7;
        android.net.Uri $r3;
        androidx.core.graphics.drawable.IconCompat r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r5;
        android.graphics.drawable.Icon $r2;

        r0 := @this;

        $i0 = r0.mType;

        if $i0 != -1 goto label1;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 23 goto label1;

        $r1 = r0.mObj1;

        $r2 = (android.graphics.drawable.Icon) $r1;

        $r3 = androidx.core.graphics.drawable.IconCompat.getUri($r2);

        return $r3;

     label1:
        $i0 = r0.mType;

        if $i0 == 4 goto label3;

        if $i0 != 6 goto label2;

        goto label3;

     label2:
        $r7 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $r4 = virtualinvoke $r6.append("called getUri() on ");

        $r4 = virtualinvoke $r4.append(r0);

        $r5 = virtualinvoke $r4.toString();

        specialinvoke $r7.<init>($r5);

        throw $r7;

     label3:
        $r1 = r0.mObj1;

        $r5 = (java.lang.String) $r1;

        $r3 = android.net.Uri.parse($r5);

        return $r3;
    }

    public java.io.InputStream getUriInputStream(android.content.Context)
    {
        android.content.Context $r1;
        android.net.Uri $r2;
        java.io.FileInputStream r5;
        java.io.File $r6;
        java.io.FileNotFoundException r8;
        java.lang.Exception r12;
        androidx.core.graphics.drawable.IconCompat r0;
        android.content.ContentResolver $r10;
        java.lang.Object $r7;
        java.lang.StringBuilder $r9;
        java.lang.String $r3, r4;
        boolean $z0;
        java.io.InputStream $r11;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke r0.getUri();

        $r3 = virtualinvoke $r2.getScheme();

        r4 = "content";

        $z0 = virtualinvoke r4.equals($r3);

        if $z0 != 0 goto label5;

        r4 = "file";

        $z0 = virtualinvoke r4.equals($r3);

        if $z0 == 0 goto label1;

        goto label5;

     label1:
        r5 = new java.io.FileInputStream;

        $r6 = new java.io.File;

        $r7 = r0.mObj1;

        $r3 = (java.lang.String) $r7;

     label2:
        specialinvoke $r6.<init>($r3);

        specialinvoke r5.<init>($r6);

     label3:
        return r5;

     label4:
        r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r9 = virtualinvoke $r9.append("Unable to load image from path: ");

        $r9 = virtualinvoke $r9.append($r2);

        $r3 = virtualinvoke $r9.toString();

        android.util.Log.w("IconCompat", $r3, r8);

        goto label8;

     label5:
        $r10 = virtualinvoke $r1.getContentResolver();

        $r11 = virtualinvoke $r10.openInputStream($r2);

     label6:
        return $r11;

     label7:
        r12 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r9 = virtualinvoke $r9.append("Unable to load image from URI: ");

        $r9 = virtualinvoke $r9.append($r2);

        $r3 = virtualinvoke $r9.toString();

        android.util.Log.w("IconCompat", $r3, r12);

     label8:
        return null;

        catch java.io.FileNotFoundException from label2 to label3 with label4;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public android.graphics.drawable.Drawable loadDrawable(android.content.Context)
    {
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r4;
        android.graphics.PorterDuff$Mode $r2, $r6;
        android.content.res.ColorStateList $r5;
        androidx.core.graphics.drawable.IconCompat r0;
        int i0;
        android.graphics.drawable.Icon $r3;

        r0 := @this;

        $r1 := @parameter0;

        virtualinvoke r0.checkResource($r1);

        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 < 23 goto label1;

        $r3 = virtualinvoke r0.toIcon($r1);

        $r4 = virtualinvoke $r3.loadDrawable($r1);

        return $r4;

     label1:
        $r4 = specialinvoke r0.loadDrawableInner($r1);

        if $r4 == null goto label3;

        $r5 = r0.mTintList;

        if $r5 != null goto label2;

        $r6 = r0.mTintMode;

        $r2 = androidx.core.graphics.drawable.IconCompat.DEFAULT_TINT_MODE;

        if $r6 == $r2 goto label3;

     label2:
        virtualinvoke $r4.mutate();

        $r5 = r0.mTintList;

        androidx.core.graphics.drawable.DrawableCompat.setTintList($r4, $r5);

        $r2 = r0.mTintMode;

        androidx.core.graphics.drawable.DrawableCompat.setTintMode($r4, $r2);

     label3:
        return $r4;
    }

    public void onPostParceling()
    {
        byte[] $r3;
        android.os.Parcelable $r7;
        java.lang.String[] $r6;
        java.lang.IllegalArgumentException $r8;
        android.graphics.PorterDuff$Mode $r2;
        java.nio.charset.Charset $r4;
        androidx.core.graphics.drawable.IconCompat r0;
        int $i0;
        java.lang.String $r1, $r5;

        r0 := @this;

        $r1 = r0.mTintModeStr;

        $r2 = android.graphics.PorterDuff$Mode.valueOf($r1);

        r0.mTintMode = $r2;

        $i0 = r0.mType;

        lookupswitch($i0)
        {
            case -1: goto label6;
            case 0: goto label1;
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label3;
            default: goto label1;
        };

     label1:
        return;

     label2:
        $r3 = r0.mData;

        r0.mObj1 = $r3;

        return;

     label3:
        $r5 = new java.lang.String;

        $r1 = $r5;

        $r3 = r0.mData;

        $r4 = java.nio.charset.Charset.forName("UTF-16");

        specialinvoke $r5.<init>($r3, $r4);

        r0.mObj1 = $r5;

        $i0 = r0.mType;

        if $i0 != 2 goto label8;

        $r5 = r0.mString1;

        if $r5 != null goto label8;

        $r6 = virtualinvoke $r1.split(":", -1);

        $r1 = $r6[0];

        r0.mString1 = $r1;

        return;

     label4:
        $r7 = r0.mParcelable;

        if $r7 == null goto label5;

        r0.mObj1 = $r7;

        return;

     label5:
        $r3 = r0.mData;

        r0.mObj1 = $r3;

        r0.mType = 3;

        r0.mInt1 = 0;

        $i0 = lengthof $r3;

        r0.mInt2 = $i0;

        return;

     label6:
        $r7 = r0.mParcelable;

        if $r7 == null goto label7;

        r0.mObj1 = $r7;

        return;

     label7:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<init>("Invalid icon");

        throw $r8;

     label8:
        return;
    }

    public void onPreParceling(boolean)
    {
        byte[] $r5;
        android.os.Parcelable r9;
        java.io.ByteArrayOutputStream r7;
        java.lang.IllegalArgumentException r10;
        android.graphics.PorterDuff$Mode r1;
        java.nio.charset.Charset $r4;
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.Bitmap r6;
        int i0;
        java.lang.Object r3;
        android.graphics.Bitmap$CompressFormat $r8;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        r1 = r0.mTintMode;

        $r2 = virtualinvoke r1.name();

        r0.mTintModeStr = $r2;

        i0 = r0.mType;

        lookupswitch(i0)
        {
            case -1: goto label7;
            case 0: goto label1;
            case 1: goto label5;
            case 2: goto label4;
            case 3: goto label3;
            case 4: goto label2;
            case 5: goto label5;
            case 6: goto label2;
            default: goto label1;
        };

     label1:
        return;

     label2:
        r3 = r0.mObj1;

        $r2 = virtualinvoke r3.toString();

        $r4 = java.nio.charset.Charset.forName("UTF-16");

        $r5 = virtualinvoke $r2.getBytes($r4);

        r0.mData = $r5;

        return;

     label3:
        r3 = r0.mObj1;

        $r5 = (byte[]) r3;

        r0.mData = $r5;

        return;

     label4:
        r3 = r0.mObj1;

        $r2 = (java.lang.String) r3;

        $r4 = java.nio.charset.Charset.forName("UTF-16");

        $r5 = virtualinvoke $r2.getBytes($r4);

        r0.mData = $r5;

        return;

     label5:
        if $z0 == 0 goto label6;

        r3 = r0.mObj1;

        r6 = (android.graphics.Bitmap) r3;

        r7 = new java.io.ByteArrayOutputStream;

        specialinvoke r7.<init>();

        $r8 = android.graphics.Bitmap$CompressFormat.PNG;

        virtualinvoke r6.compress($r8, 90, r7);

        $r5 = virtualinvoke r7.toByteArray();

        r0.mData = $r5;

        return;

     label6:
        r3 = r0.mObj1;

        r9 = (android.os.Parcelable) r3;

        r0.mParcelable = r9;

        return;

     label7:
        if $z0 != 0 goto label8;

        r3 = r0.mObj1;

        r9 = (android.os.Parcelable) r3;

        r0.mParcelable = r9;

        return;

     label8:
        r10 = new java.lang.IllegalArgumentException;

        specialinvoke r10.<init>("Can\'t serialize Icon created with IconCompat#createFromIcon");

        throw r10;
    }

    public androidx.core.graphics.drawable.IconCompat setTint(int)
    {
        int $i0;
        android.content.res.ColorStateList $r1;
        androidx.core.graphics.drawable.IconCompat r0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = android.content.res.ColorStateList.valueOf($i0);

        r0 = virtualinvoke r0.setTintList($r1);

        return r0;
    }

    public androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList)
    {
        android.content.res.ColorStateList $r1;
        androidx.core.graphics.drawable.IconCompat r0;

        r0 := @this;

        $r1 := @parameter0;

        r0.mTintList = $r1;

        return r0;
    }

    public androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode)
    {
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.PorterDuff$Mode $r1;

        r0 := @this;

        $r1 := @parameter0;

        r0.mTintMode = $r1;

        return r0;
    }

    public android.os.Bundle toBundle()
    {
        byte[] $r5;
        android.os.Bundle r1;
        android.os.Parcelable $r7;
        java.lang.IllegalArgumentException $r3;
        android.graphics.PorterDuff$Mode $r9, $r10;
        android.content.res.ColorStateList $r8;
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.Bitmap $r6;
        int $i0;
        java.lang.Object $r4;
        java.lang.String $r2;

        r0 := @this;

        r1 = new android.os.Bundle;

        specialinvoke r1.<init>();

        $i0 = r0.mType;

        lookupswitch($i0)
        {
            case -1: goto label5;
            case 0: goto label1;
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label3;
            default: goto label1;
        };

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<init>("Invalid icon");

        throw $r3;

     label2:
        $r4 = r0.mObj1;

        $r5 = (byte[]) $r4;

        virtualinvoke r1.putByteArray("obj", $r5);

        goto label6;

     label3:
        $r4 = r0.mObj1;

        $r2 = (java.lang.String) $r4;

        virtualinvoke r1.putString("obj", $r2);

        goto label6;

     label4:
        $r4 = r0.mObj1;

        $r6 = (android.graphics.Bitmap) $r4;

        virtualinvoke r1.putParcelable("obj", $r6);

        goto label6;

     label5:
        $r4 = r0.mObj1;

        $r7 = (android.os.Parcelable) $r4;

        virtualinvoke r1.putParcelable("obj", $r7);

     label6:
        $i0 = r0.mType;

        virtualinvoke r1.putInt("type", $i0);

        $i0 = r0.mInt1;

        virtualinvoke r1.putInt("int1", $i0);

        $i0 = r0.mInt2;

        virtualinvoke r1.putInt("int2", $i0);

        $r2 = r0.mString1;

        virtualinvoke r1.putString("string1", $r2);

        $r8 = r0.mTintList;

        if $r8 == null goto label7;

        virtualinvoke r1.putParcelable("tint_list", $r8);

     label7:
        $r9 = r0.mTintMode;

        $r10 = androidx.core.graphics.drawable.IconCompat.DEFAULT_TINT_MODE;

        if $r9 == $r10 goto label8;

        $r2 = virtualinvoke $r9.name();

        virtualinvoke r1.putString("tint_mode", $r2);

     label8:
        return r1;
    }

    public android.graphics.drawable.Icon toIcon()
    {
        android.graphics.drawable.Icon $r1;
        androidx.core.graphics.drawable.IconCompat r0;

        r0 := @this;

        $r1 = virtualinvoke r0.toIcon(null);

        return $r1;
    }

    public android.graphics.drawable.Icon toIcon(android.content.Context)
    {
        android.content.Context $r1;
        java.lang.IllegalStateException r7;
        byte[] r11;
        android.net.Uri $r3;
        android.content.res.ColorStateList r12;
        int i0, $i1;
        java.lang.String $r9;
        android.graphics.drawable.Icon $r4;
        java.lang.IllegalArgumentException r2;
        android.graphics.PorterDuff$Mode r13, $r14;
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.Bitmap $r6;
        java.lang.StringBuilder $r8;
        java.lang.Object r10;
        java.io.InputStream $r5;

        r0 := @this;

        $r1 := @parameter0;

        i0 = r0.mType;

        lookupswitch(i0)
        {
            case -1: goto label15;
            case 0: goto label01;
            case 1: goto label12;
            case 2: goto label11;
            case 3: goto label10;
            case 4: goto label09;
            case 5: goto label07;
            case 6: goto label02;
            default: goto label01;
        };

     label01:
        r2 = new java.lang.IllegalArgumentException;

        specialinvoke r2.<init>("Unknown type");

        throw r2;

     label02:
        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 < 30 goto label03;

        $r3 = virtualinvoke r0.getUri();

        $r4 = android.graphics.drawable.Icon.createWithAdaptiveBitmapContentUri($r3);

        goto label13;

     label03:
        if $r1 == null goto label06;

        $r5 = virtualinvoke r0.getUriInputStream($r1);

        if $r5 == null goto label05;

        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 < 26 goto label04;

        $r6 = android.graphics.BitmapFactory.decodeStream($r5);

        $r4 = android.graphics.drawable.Icon.createWithAdaptiveBitmap($r6);

        goto label13;

     label04:
        $r6 = android.graphics.BitmapFactory.decodeStream($r5);

        $r6 = androidx.core.graphics.drawable.IconCompat.createLegacyIconFromAdaptiveIcon($r6, 0);

        $r4 = android.graphics.drawable.Icon.createWithBitmap($r6);

        goto label13;

     label05:
        r7 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<init>();

        $r8 = virtualinvoke $r8.append("Cannot load adaptive icon from uri: ");

        $r3 = virtualinvoke r0.getUri();

        $r8 = virtualinvoke $r8.append($r3);

        $r9 = virtualinvoke $r8.toString();

        specialinvoke r7.<init>($r9);

        throw r7;

     label06:
        r2 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<init>();

        $r8 = virtualinvoke $r8.append("Context is required to resolve the file uri of the icon: ");

        $r3 = virtualinvoke r0.getUri();

        $r8 = virtualinvoke $r8.append($r3);

        $r9 = virtualinvoke $r8.toString();

        specialinvoke r2.<init>($r9);

        throw r2;

     label07:
        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 < 26 goto label08;

        r10 = r0.mObj1;

        $r6 = (android.graphics.Bitmap) r10;

        $r4 = android.graphics.drawable.Icon.createWithAdaptiveBitmap($r6);

        goto label13;

     label08:
        r10 = r0.mObj1;

        $r6 = (android.graphics.Bitmap) r10;

        $r6 = androidx.core.graphics.drawable.IconCompat.createLegacyIconFromAdaptiveIcon($r6, 0);

        $r4 = android.graphics.drawable.Icon.createWithBitmap($r6);

        goto label13;

     label09:
        r10 = r0.mObj1;

        $r9 = (java.lang.String) r10;

        $r4 = android.graphics.drawable.Icon.createWithContentUri($r9);

        goto label13;

     label10:
        r10 = r0.mObj1;

        r11 = (byte[]) r10;

        i0 = r0.mInt1;

        $i1 = r0.mInt2;

        $r4 = android.graphics.drawable.Icon.createWithData(r11, i0, $i1);

        goto label13;

     label11:
        $r9 = virtualinvoke r0.getResPackage();

        i0 = r0.mInt1;

        $r4 = android.graphics.drawable.Icon.createWithResource($r9, i0);

        goto label13;

     label12:
        r10 = r0.mObj1;

        $r6 = (android.graphics.Bitmap) r10;

        $r4 = android.graphics.drawable.Icon.createWithBitmap($r6);

     label13:
        r12 = r0.mTintList;

        if r12 == null goto label14;

        virtualinvoke $r4.setTintList(r12);

     label14:
        r13 = r0.mTintMode;

        $r14 = androidx.core.graphics.drawable.IconCompat.DEFAULT_TINT_MODE;

        if r13 == $r14 goto label16;

        virtualinvoke $r4.setTintMode(r13);

        return $r4;

     label15:
        r10 = r0.mObj1;

        $r4 = (android.graphics.drawable.Icon) r10;

     label16:
        return $r4;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r5;
        java.lang.Integer $r6;
        android.graphics.PorterDuff$Mode $r9, $r10;
        android.content.res.ColorStateList $r8;
        androidx.core.graphics.drawable.IconCompat r0;
        android.graphics.Bitmap $r7;
        int i0;
        java.lang.Object r1;
        java.lang.StringBuilder r3, $r4;
        java.lang.String $r2;

        r0 := @this;

        i0 = r0.mType;

        if i0 != -1 goto label1;

        r1 = r0.mObj1;

        $r2 = java.lang.String.valueOf(r1);

        return $r2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<init>("Icon(typ=");

        i0 = r0.mType;

        $r2 = androidx.core.graphics.drawable.IconCompat.typeToString(i0);

        r3 = virtualinvoke $r4.append($r2);

        i0 = r0.mType;

        lookupswitch(i0)
        {
            case 1: goto label6;
            case 2: goto label5;
            case 3: goto label4;
            case 4: goto label3;
            case 5: goto label6;
            case 6: goto label3;
            default: goto label2;
        };

     label2:
        goto label7;

     label3:
        $r4 = virtualinvoke r3.append(" uri=");

        r1 = r0.mObj1;

        virtualinvoke $r4.append(r1);

        goto label7;

     label4:
        $r4 = virtualinvoke r3.append(" len=");

        i0 = r0.mInt1;

        virtualinvoke $r4.append(i0);

        i0 = r0.mInt2;

        if i0 == 0 goto label7;

        $r4 = virtualinvoke r3.append(" off=");

        i0 = r0.mInt2;

        virtualinvoke $r4.append(i0);

        goto label7;

     label5:
        $r4 = virtualinvoke r3.append(" pkg=");

        $r2 = r0.mString1;

        $r4 = virtualinvoke $r4.append($r2);

        $r4 = virtualinvoke $r4.append(" id=");

        $r5 = newarray (java.lang.Object)[1];

        i0 = virtualinvoke r0.getResId();

        $r6 = java.lang.Integer.valueOf(i0);

        $r5[0] = $r6;

        $r2 = java.lang.String.format("0x%08x", $r5);

        virtualinvoke $r4.append($r2);

        goto label7;

     label6:
        $r4 = virtualinvoke r3.append(" size=");

        r1 = r0.mObj1;

        $r7 = (android.graphics.Bitmap) r1;

        i0 = virtualinvoke $r7.getWidth();

        $r4 = virtualinvoke $r4.append(i0);

        $r4 = virtualinvoke $r4.append("x");

        r1 = r0.mObj1;

        $r7 = (android.graphics.Bitmap) r1;

        i0 = virtualinvoke $r7.getHeight();

        virtualinvoke $r4.append(i0);

     label7:
        $r8 = r0.mTintList;

        if $r8 == null goto label8;

        virtualinvoke r3.append(" tint=");

        $r8 = r0.mTintList;

        virtualinvoke r3.append($r8);

     label8:
        $r9 = r0.mTintMode;

        $r10 = androidx.core.graphics.drawable.IconCompat.DEFAULT_TINT_MODE;

        if $r9 == $r10 goto label9;

        $r4 = virtualinvoke r3.append(" mode=");

        $r9 = r0.mTintMode;

        virtualinvoke $r4.append($r9);

     label9:
        virtualinvoke r3.append(")");

        $r2 = virtualinvoke r3.toString();

        return $r2;
    }
}
