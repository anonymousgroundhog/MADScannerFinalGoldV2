public class androidx.lifecycle.MediatorLiveData extends androidx.lifecycle.MutableLiveData
{
    private androidx.arch.core.internal.SafeIterableMap mSources;

    public void <init>()
    {
        androidx.lifecycle.MediatorLiveData r0;
        androidx.arch.core.internal.SafeIterableMap $r1;

        r0 := @this;

        specialinvoke r0.<init>();

        $r1 = new androidx.arch.core.internal.SafeIterableMap;

        specialinvoke $r1.<init>();

        r0.mSources = $r1;

        return;
    }

    public void addSource(androidx.lifecycle.LiveData, androidx.lifecycle.Observer)
    {
        androidx.lifecycle.LiveData r1;
        androidx.arch.core.internal.SafeIterableMap r4;
        java.lang.IllegalArgumentException $r8;
        androidx.lifecycle.Observer r2, $r7;
        androidx.lifecycle.MediatorLiveData$Source r3, r6;
        java.lang.Object $r5;
        androidx.lifecycle.MediatorLiveData r0;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 = new androidx.lifecycle.MediatorLiveData$Source;

        specialinvoke r3.<init>(r1, r2);

        r4 = r0.mSources;

        $r5 = virtualinvoke r4.putIfAbsent(r1, r3);

        r6 = (androidx.lifecycle.MediatorLiveData$Source) $r5;

        if r6 == null goto label2;

        $r7 = r6.mObserver;

        if $r7 != r2 goto label1;

        goto label2;

     label1:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<init>("This source was already added with the different observer");

        throw $r8;

     label2:
        if r6 == null goto label3;

        return;

     label3:
        $z0 = virtualinvoke r0.hasActiveObservers();

        if $z0 == 0 goto label4;

        virtualinvoke r3.plug();

     label4:
        return;
    }

    protected void onActive()
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        androidx.lifecycle.MediatorLiveData$Source $r5;
        androidx.arch.core.internal.SafeIterableMap $r1;
        java.lang.Object $r3;
        androidx.lifecycle.MediatorLiveData r0;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mSources;

        $r2 = virtualinvoke $r1.iterator();

     label1:
        $z0 = interfaceinvoke $r2.hasNext();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.next();

        r4 = (java.util.Map$Entry) $r3;

        $r3 = interfaceinvoke r4.getValue();

        $r5 = (androidx.lifecycle.MediatorLiveData$Source) $r3;

        virtualinvoke $r5.plug();

        goto label1;

     label2:
        return;
    }

    protected void onInactive()
    {
        java.util.Map$Entry r4;
        java.util.Iterator $r2;
        androidx.lifecycle.MediatorLiveData$Source $r5;
        androidx.arch.core.internal.SafeIterableMap $r1;
        java.lang.Object $r3;
        androidx.lifecycle.MediatorLiveData r0;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mSources;

        $r2 = virtualinvoke $r1.iterator();

     label1:
        $z0 = interfaceinvoke $r2.hasNext();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.next();

        r4 = (java.util.Map$Entry) $r3;

        $r3 = interfaceinvoke r4.getValue();

        $r5 = (androidx.lifecycle.MediatorLiveData$Source) $r3;

        virtualinvoke $r5.unplug();

        goto label1;

     label2:
        return;
    }

    public void removeSource(androidx.lifecycle.LiveData)
    {
        androidx.lifecycle.LiveData r1;
        androidx.lifecycle.MediatorLiveData$Source r4;
        androidx.arch.core.internal.SafeIterableMap r3;
        java.lang.Object $r2;
        androidx.lifecycle.MediatorLiveData r0;

        r0 := @this;

        r1 := @parameter0;

        r3 = r0.mSources;

        $r2 = virtualinvoke r3.remove(r1);

        r4 = (androidx.lifecycle.MediatorLiveData$Source) $r2;

        if r4 == null goto label1;

        virtualinvoke r4.unplug();

     label1:
        return;
    }
}
