public final class androidx.work.OneTimeWorkRequest$Builder extends androidx.work.WorkRequest$Builder
{

    public void <init>(java.lang.Class)
    {
        androidx.work.OneTimeWorkRequest$Builder r0;
        java.lang.Class r1;
        java.lang.String $r3;
        androidx.work.impl.model.WorkSpec $r2;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>(r1);

        $r2 = r0.mWorkSpec;

        r1 = class "Landroidx/work/OverwritingInputMerger;";

        $r3 = virtualinvoke r1.getName();

        $r2.inputMergerClassName = $r3;

        return;
    }

    androidx.work.OneTimeWorkRequest buildInternal()
    {
        androidx.work.OneTimeWorkRequest$Builder r0;
        androidx.work.Constraints $r2;
        androidx.work.OneTimeWorkRequest $r4;
        int $i0;
        java.lang.IllegalArgumentException $r3;
        androidx.work.impl.model.WorkSpec $r1;
        boolean $z0;

        r0 := @this;

        $z0 = r0.mBackoffCriteriaSet;

        if $z0 == 0 goto label2;

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 23 goto label2;

        $r1 = r0.mWorkSpec;

        $r2 = $r1.constraints;

        $z0 = virtualinvoke $r2.requiresDeviceIdle();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<init>("Cannot set backoff criteria on an idle mode job");

        throw $r3;

     label2:
        $r4 = new androidx.work.OneTimeWorkRequest;

        specialinvoke $r4.<init>(r0);

        return $r4;
    }

    volatile androidx.work.WorkRequest buildInternal()
    {
        androidx.work.OneTimeWorkRequest$Builder r0;
        androidx.work.OneTimeWorkRequest $r1;

        r0 := @this;

        $r1 = virtualinvoke r0.buildInternal();

        return $r1;
    }

    androidx.work.OneTimeWorkRequest$Builder getThis()
    {
        androidx.work.OneTimeWorkRequest$Builder r0;

        r0 := @this;

        return r0;
    }

    volatile androidx.work.WorkRequest$Builder getThis()
    {
        androidx.work.OneTimeWorkRequest$Builder r0;

        r0 := @this;

        r0 = virtualinvoke r0.getThis();

        return r0;
    }

    public androidx.work.OneTimeWorkRequest$Builder setInputMerger(java.lang.Class)
    {
        androidx.work.OneTimeWorkRequest$Builder r0;
        java.lang.Class r1;
        java.lang.String $r3;
        androidx.work.impl.model.WorkSpec $r2;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.mWorkSpec;

        $r3 = virtualinvoke r1.getName();

        $r2.inputMergerClassName = $r3;

        return r0;
    }
}
