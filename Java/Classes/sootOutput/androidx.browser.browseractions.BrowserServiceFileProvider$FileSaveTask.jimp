class androidx.browser.browseractions.BrowserServiceFileProvider$FileSaveTask extends android.os.AsyncTask
{
    private final android.content.Context mAppContext;
    private final android.graphics.Bitmap mBitmap;
    private final android.net.Uri mFileUri;
    private final java.lang.String mFilename;
    private final androidx.concurrent.futures.ResolvableFuture mResultFuture;

    void <init>(android.content.Context, java.lang.String, android.graphics.Bitmap, android.net.Uri, androidx.concurrent.futures.ResolvableFuture)
    {
        androidx.browser.browseractions.BrowserServiceFileProvider$FileSaveTask r0;
        android.content.Context $r1;
        android.graphics.Bitmap $r3;
        android.net.Uri $r4;
        androidx.concurrent.futures.ResolvableFuture r5;
        java.lang.String $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 := @parameter3;

        r5 := @parameter4;

        specialinvoke r0.<init>();

        $r1 = virtualinvoke $r1.getApplicationContext();

        r0.mAppContext = $r1;

        r0.mFilename = $r2;

        r0.mBitmap = $r3;

        r0.mFileUri = $r4;

        r0.mResultFuture = r5;

        return;
    }

    private void saveFileBlocking(java.io.File)
    {
        androidx.browser.browseractions.BrowserServiceFileProvider$FileSaveTask r0;
        androidx.concurrent.futures.ResolvableFuture r7;
        android.net.Uri $r8;
        java.io.FileOutputStream $r3, r4;
        java.io.IOException r9, r10;
        java.io.File $r1;
        android.graphics.Bitmap r6;
        int i0;
        androidx.core.util.AtomicFile r5;
        android.graphics.Bitmap$CompressFormat $r2;

        r0 := @this;

        $r1 := @parameter0;

        r4 = null;

        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 < 22 goto label09;

        r5 = new androidx.core.util.AtomicFile;

        specialinvoke r5.<init>($r1);

     label01:
        $r3 = virtualinvoke r5.startWrite();

     label02:
        r4 = $r3;

        r6 = r0.mBitmap;

        $r2 = android.graphics.Bitmap$CompressFormat.PNG;

     label03:
        virtualinvoke r6.compress($r2, 100, $r3);

        virtualinvoke $r3.close();

        virtualinvoke r5.finishWrite($r3);

     label04:
        r7 = r0.mResultFuture;

        $r8 = r0.mFileUri;

     label05:
        virtualinvoke r7.set($r8);

     label06:
        goto label08;

     label07:
        r9 := @caughtexception;

        virtualinvoke r5.failWrite(r4);

        r7 = r0.mResultFuture;

        virtualinvoke r7.setException(r9);

     label08:
        return;

     label09:
        $r3 = new java.io.FileOutputStream;

     label10:
        specialinvoke $r3.<init>($r1);

     label11:
        r6 = r0.mBitmap;

        $r2 = android.graphics.Bitmap$CompressFormat.PNG;

     label12:
        virtualinvoke r6.compress($r2, 100, $r3);

        virtualinvoke $r3.close();

     label13:
        r7 = r0.mResultFuture;

        $r8 = r0.mFileUri;

     label14:
        virtualinvoke r7.set($r8);

     label15:
        return;

     label16:
        r10 := @caughtexception;

        r7 = r0.mResultFuture;

        virtualinvoke r7.setException(r10);

        return;

        catch java.io.IOException from label01 to label02 with label07;
        catch java.io.IOException from label03 to label04 with label07;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label10 to label11 with label16;
        catch java.io.IOException from label12 to label13 with label16;
        catch java.io.IOException from label14 to label15 with label16;
    }

    private void saveFileIfNeededBlocking()
    {
        androidx.browser.browseractions.BrowserServiceFileProvider$FileSaveTask r0;
        java.lang.Throwable r10;
        android.content.Context $r2;
        androidx.concurrent.futures.ResolvableFuture r5;
        android.net.Uri $r9;
        java.io.IOException $r6;
        long $l0;
        java.io.File r1, $r3;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this;

        r1 = new java.io.File;

        $r2 = r0.mAppContext;

        $r3 = virtualinvoke $r2.getFilesDir();

        specialinvoke r1.<init>($r3, "image_provider");

        $r4 = androidx.browser.browseractions.BrowserServiceFileProvider.sFileCleanupLock;

        entermonitor $r4;

     label1:
        $z0 = virtualinvoke r1.exists();

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke r1.mkdir();

        if $z0 != 0 goto label3;

        r5 = r0.mResultFuture;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<init>("Could not create file directory.");

        virtualinvoke r5.setException($r6);

        exitmonitor $r4;

     label2:
        return;

     label3:
        $r3 = new java.io.File;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<init>();

        $r8 = r0.mFilename;

        $r7 = virtualinvoke $r7.append($r8);

        $r7 = virtualinvoke $r7.append(".png");

        $r8 = virtualinvoke $r7.toString();

        specialinvoke $r3.<init>(r1, $r8);

        $z0 = virtualinvoke $r3.exists();

        if $z0 == 0 goto label4;

        r5 = r0.mResultFuture;

        $r9 = r0.mFileUri;

        virtualinvoke r5.set($r9);

        goto label5;

     label4:
        specialinvoke r0.saveFileBlocking($r3);

     label5:
        $l0 = java.lang.System.currentTimeMillis();

        virtualinvoke $r3.setLastModified($l0);

        exitmonitor $r4;

     label6:
        return;

     label7:
        r10 := @caughtexception;

        exitmonitor $r4;

     label8:
        throw r10;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        androidx.browser.browseractions.BrowserServiceFileProvider$FileSaveTask r0;
        java.lang.Void $r1;
        java.lang.Object[] $r2;
        java.lang.String[] $r3;

        r0 := @this;

        $r2 := @parameter0;

        $r3 = (java.lang.String[]) $r2;

        $r1 = virtualinvoke r0.doInBackground($r3);

        return $r1;
    }

    protected transient java.lang.Void doInBackground(java.lang.String[])
    {
        androidx.browser.browseractions.BrowserServiceFileProvider$FileSaveTask r0;
        java.lang.String[] $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.saveFileIfNeededBlocking();

        return null;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        androidx.browser.browseractions.BrowserServiceFileProvider$FileSaveTask r0;
        java.lang.Void $r2;
        java.lang.Object $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = (java.lang.Void) $r1;

        virtualinvoke r0.onPostExecute($r2);

        return;
    }

    protected void onPostExecute(java.lang.Void)
    {
        androidx.browser.browseractions.BrowserServiceFileProvider$FileSaveTask r0;
        java.lang.Void $r1;
        android.content.Context $r3;
        java.util.concurrent.Executor $r4;
        androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask $r2;
        java.lang.Void[] $r5;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = new androidx.browser.browseractions.BrowserServiceFileProvider$FileCleanupTask;

        $r3 = r0.mAppContext;

        specialinvoke $r2.<init>($r3);

        $r4 = android.os.AsyncTask.SERIAL_EXECUTOR;

        $r5 = newarray (java.lang.Void)[0];

        virtualinvoke $r2.executeOnExecutor($r4, $r5);

        return;
    }
}
