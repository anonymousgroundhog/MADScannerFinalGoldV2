final class com.google.android.gms.internal.base.zao extends java.lang.Object implements com.google.android.gms.internal.base.zam
{

    private void <init>()
    {
        com.google.android.gms.internal.base.zao r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    void <init>(com.google.android.gms.internal.base.zan)
    {
        com.google.android.gms.internal.base.zan $r1;
        com.google.android.gms.internal.base.zao r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        return;
    }

    public final java.util.concurrent.ExecutorService zaa(java.util.concurrent.ThreadFactory, int)
    {
        int $i0;
        java.util.concurrent.ThreadFactory $r2;
        com.google.android.gms.internal.base.zao r0;
        java.util.concurrent.ExecutorService $r1;

        r0 := @this;

        $r2 := @parameter0;

        $i0 := @parameter1;

        $r1 = virtualinvoke r0.zac(1, $r2, 1);

        return $r1;
    }

    public final java.util.concurrent.ExecutorService zab(int, int)
    {
        int $i0, $i1;
        java.util.concurrent.ThreadFactory $r1;
        com.google.android.gms.internal.base.zao r0;
        java.util.concurrent.ExecutorService $r2;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $r1 = java.util.concurrent.Executors.defaultThreadFactory();

        $r2 = virtualinvoke r0.zac(4, $r1, 2);

        return $r2;
    }

    public final java.util.concurrent.ExecutorService zac(int, java.util.concurrent.ThreadFactory, int)
    {
        java.util.concurrent.ThreadPoolExecutor $r5;
        com.google.android.gms.internal.base.zao r0;
        java.util.concurrent.LinkedBlockingQueue $r3;
        java.util.concurrent.TimeUnit $r2;
        int $i0, $i1;
        java.util.concurrent.ThreadFactory $r1;
        java.util.concurrent.ExecutorService $r4;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $i1 := @parameter2;

        $r5 = new java.util.concurrent.ThreadPoolExecutor;

        $r2 = java.util.concurrent.TimeUnit.SECONDS;

        $r3 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke $r3.<init>();

        specialinvoke $r5.<init>($i0, $i0, 60L, $r2, $r3, $r1);

        virtualinvoke $r5.allowCoreThreadTimeOut(1);

        $r4 = java.util.concurrent.Executors.unconfigurableExecutorService($r5);

        return $r4;
    }
}
