public final class com.google.android.gms.common.data.DataHolder extends com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable implements java.io.Closeable
{
    public static final android.os.Parcelable$Creator CREATOR;
    private static final com.google.android.gms.common.data.DataHolder$Builder zaf;
    final int zaa;
    android.os.Bundle zab;
    int[] zac;
    int zad;
    boolean zae;
    private final java.lang.String[] zag;
    private final android.database.CursorWindow[] zah;
    private final int zai;
    private final android.os.Bundle zaj;
    private boolean zak;

    static void <clinit>()
    {
        com.google.android.gms.common.data.zaf $r0;
        java.lang.String[] $r2;
        com.google.android.gms.common.data.zab $r1;

        $r0 = new com.google.android.gms.common.data.zaf;

        specialinvoke $r0.<init>();

        com.google.android.gms.common.data.DataHolder.CREATOR = $r0;

        $r1 = new com.google.android.gms.common.data.zab;

        $r2 = newarray (java.lang.String)[0];

        specialinvoke $r1.<init>($r2, null);

        com.google.android.gms.common.data.DataHolder.zaf = $r1;

        return;
    }

    void <init>(int, java.lang.String[], android.database.CursorWindow[], int, android.os.Bundle)
    {
        com.google.android.gms.common.data.DataHolder r0;
        android.database.CursorWindow[] $r2;
        android.os.Bundle $r3;
        int $i0, $i1;
        java.lang.String[] $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        $i1 := @parameter3;

        $r3 := @parameter4;

        specialinvoke r0.<init>();

        r0.zae = 0;

        r0.zak = 1;

        r0.zaa = $i0;

        r0.zag = $r1;

        r0.zah = $r2;

        r0.zai = $i1;

        r0.zaj = $r3;

        return;
    }

    public void <init>(android.database.Cursor, int, android.os.Bundle)
    {
        java.lang.Throwable $r10;
        android.os.Bundle $r1;
        java.lang.Object[] $r9;
        java.lang.String[] $r5;
        java.util.ArrayList $r2;
        android.database.CursorWindow $r6, $r7;
        com.google.android.gms.common.data.DataHolder r0;
        int $i0, $i1, $i2, $i3;
        android.database.Cursor $r3;
        boolean $z0;
        android.database.CursorWindow[] $r8;
        com.google.android.gms.common.sqlite.CursorWrapper $r4;

        r0 := @this;

        $r3 := @parameter0;

        $i0 := @parameter1;

        $r1 := @parameter2;

        $r4 = new com.google.android.gms.common.sqlite.CursorWrapper;

        specialinvoke $r4.<init>($r3);

        $r5 = virtualinvoke $r4.getColumnNames();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<init>();

     label01:
        $i1 = virtualinvoke $r4.getCount();

        $r6 = virtualinvoke $r4.getWindow();

     label02:
        if $r6 == null goto label08;

     label03:
        $i2 = virtualinvoke $r6.getStartPosition();

     label04:
        if $i2 != 0 goto label07;

     label05:
        virtualinvoke $r6.acquireReference();

        virtualinvoke $r4.setWindow(null);

        virtualinvoke $r2.add($r6);

        $i2 = virtualinvoke $r6.getNumRows();

     label06:
        goto label09;

     label07:
        $i2 = 0;

        goto label09;

     label08:
        $i2 = 0;

     label09:
        if $i2 >= $i1 goto label21;

     label10:
        $z0 = virtualinvoke $r4.moveToPosition($i2);

     label11:
        if $z0 == 0 goto label21;

     label12:
        $r6 = virtualinvoke $r4.getWindow();

     label13:
        $r7 = $r6;

        if $r6 == null goto label16;

     label14:
        virtualinvoke $r6.acquireReference();

        virtualinvoke $r4.setWindow(null);

     label15:
        goto label17;

     label16:
        $r7 = new android.database.CursorWindow;

        specialinvoke $r7.<init>(0);

        virtualinvoke $r7.setStartPosition($i2);

        virtualinvoke $r4.fillWindow($i2, $r7);

     label17:
        $i2 = virtualinvoke $r7.getNumRows();

     label18:
        if $i2 != 0 goto label19;

        goto label21;

     label19:
        virtualinvoke $r2.add($r7);

        $i2 = virtualinvoke $r7.getStartPosition();

        $i3 = virtualinvoke $r7.getNumRows();

     label20:
        $i2 = $i2 + $i3;

        goto label09;

     label21:
        virtualinvoke $r4.close();

        $i1 = virtualinvoke $r2.size();

        $r8 = newarray (android.database.CursorWindow)[$i1];

        $r9 = virtualinvoke $r2.toArray($r8);

        $r8 = (android.database.CursorWindow[]) $r9;

        specialinvoke r0.<init>($r5, $r8, $i0, $r1);

        return;

     label22:
        $r10 := @caughtexception;

        virtualinvoke $r4.close();

        goto label23;

     label23:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label03 to label04 with label22;
        catch java.lang.Throwable from label05 to label06 with label22;
        catch java.lang.Throwable from label10 to label11 with label22;
        catch java.lang.Throwable from label12 to label13 with label22;
        catch java.lang.Throwable from label14 to label15 with label22;
        catch java.lang.Throwable from label16 to label18 with label22;
        catch java.lang.Throwable from label19 to label20 with label22;
    }

    private void <init>(com.google.android.gms.common.data.DataHolder$Builder, int, android.os.Bundle)
    {
        com.google.android.gms.common.data.DataHolder r0;
        android.os.Bundle $r2;
        android.database.CursorWindow[] $r4;
        int $i0;
        com.google.android.gms.common.data.DataHolder$Builder $r1;
        java.lang.String[] $r3;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 := @parameter2;

        $r3 = com.google.android.gms.common.data.DataHolder$Builder.zac($r1);

        $r4 = com.google.android.gms.common.data.DataHolder.zaf($r1, -1);

        specialinvoke r0.<init>($r3, $r4, $i0, null);

        return;
    }

    void <init>(com.google.android.gms.common.data.DataHolder$Builder, int, android.os.Bundle, int, com.google.android.gms.common.data.zae)
    {
        com.google.android.gms.common.data.zae $r3;
        android.os.Bundle $r1;
        android.database.CursorWindow[] $r5;
        com.google.android.gms.common.data.DataHolder$Builder $r2;
        java.lang.String[] $r4;
        com.google.android.gms.common.data.DataHolder r0;
        int $i0, $i1;

        r0 := @this;

        $r2 := @parameter0;

        $i0 := @parameter1;

        $r1 := @parameter2;

        $i1 := @parameter3;

        $r3 := @parameter4;

        $r4 = com.google.android.gms.common.data.DataHolder$Builder.zac($r2);

        $r5 = com.google.android.gms.common.data.DataHolder.zaf($r2, -1);

        specialinvoke r0.<init>($r4, $r5, $i0, $r1);

        return;
    }

    void <init>(com.google.android.gms.common.data.DataHolder$Builder, int, android.os.Bundle, com.google.android.gms.common.data.zae)
    {
        com.google.android.gms.common.data.DataHolder r0;
        com.google.android.gms.common.data.zae $r2;
        android.os.Bundle $r3;
        int $i0;
        com.google.android.gms.common.data.DataHolder$Builder $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r3 := @parameter2;

        $r2 := @parameter3;

        specialinvoke r0.<init>($r1, $i0, null);

        return;
    }

    public void <init>(java.lang.String[], android.database.CursorWindow[], int, android.os.Bundle)
    {
        com.google.android.gms.common.data.DataHolder r0;
        android.database.CursorWindow[] $r1;
        android.os.Bundle $r2;
        int $i0;
        java.lang.String[] $r3;
        java.lang.Object $r4;

        r0 := @this;

        $r3 := @parameter0;

        $r1 := @parameter1;

        $i0 := @parameter2;

        $r2 := @parameter3;

        specialinvoke r0.<init>();

        r0.zae = 0;

        r0.zak = 1;

        r0.zaa = 1;

        $r4 = com.google.android.gms.common.internal.Preconditions.checkNotNull($r3);

        $r3 = (java.lang.String[]) $r4;

        r0.zag = $r3;

        $r4 = com.google.android.gms.common.internal.Preconditions.checkNotNull($r1);

        $r1 = (android.database.CursorWindow[]) $r4;

        r0.zah = $r1;

        r0.zai = $i0;

        r0.zaj = $r2;

        virtualinvoke r0.zad();

        return;
    }

    public static com.google.android.gms.common.data.DataHolder$Builder builder(java.lang.String[])
    {
        java.lang.String[] $r0;
        com.google.android.gms.common.data.DataHolder$Builder $r1;

        $r0 := @parameter0;

        $r1 = new com.google.android.gms.common.data.DataHolder$Builder;

        specialinvoke $r1.<init>($r0, null, null);

        return $r1;
    }

    public static com.google.android.gms.common.data.DataHolder empty(int)
    {
        int $i0;
        com.google.android.gms.common.data.DataHolder $r0;
        com.google.android.gms.common.data.DataHolder$Builder $r1;

        $i0 := @parameter0;

        $r0 = new com.google.android.gms.common.data.DataHolder;

        $r1 = com.google.android.gms.common.data.DataHolder.zaf;

        specialinvoke $r0.<init>($r1, $i0, null);

        return $r0;
    }

    private final void zae(java.lang.String, int)
    {
        android.os.Bundle $r2;
        java.lang.IllegalArgumentException $r4;
        com.google.android.gms.common.data.DataHolder r0;
        android.database.CursorIndexOutOfBoundsException $r3;
        int $i0, $i1;
        java.lang.String $r1, $r5;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 = r0.zab;

        if $r2 == null goto label4;

        $z0 = virtualinvoke $r2.containsKey($r1);

        if $z0 != 0 goto label1;

        goto label4;

     label1:
        $z0 = virtualinvoke r0.isClosed();

        if $z0 != 0 goto label3;

        if $i0 < 0 goto label2;

        $i1 = r0.zad;

        if $i0 >= $i1 goto label2;

        return;

     label2:
        $r3 = new android.database.CursorIndexOutOfBoundsException;

        $i1 = r0.zad;

        specialinvoke $r3.<init>($i0, $i1);

        throw $r3;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<init>("Buffer is closed.");

        throw $r4;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = java.lang.String.valueOf($r1);

        $i0 = virtualinvoke $r5.length();

        $r1 = "No such column: ";

        if $i0 == 0 goto label5;

        $r1 = virtualinvoke $r1.concat($r5);

        goto label6;

     label5:
        $r1 = new java.lang.String;

        specialinvoke $r1.<init>("No such column: ");

     label6:
        specialinvoke $r4.<init>($r1);

        throw $r4;
    }

    private static android.database.CursorWindow[] zaf(com.google.android.gms.common.data.DataHolder$Builder, int)
    {
        byte[] $r14;
        java.lang.Float $r16;
        java.lang.Integer $r12;
        java.lang.Long $r11;
        java.util.Map $r10;
        boolean $z0, $z1;
        android.database.CursorWindow[] $r3;
        float $f0;
        java.lang.StringBuilder $r24;
        java.lang.Object[] $r8;
        com.google.android.gms.common.data.zad $r26;
        java.lang.Double $r15;
        java.lang.String[] $r2;
        long $l5;
        java.util.ArrayList $r4, $r23;
        android.database.CursorWindow $r5, $r22;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Boolean $r13;
        java.lang.String $r7, $r18, $r19;
        double $d0;
        com.google.android.gms.common.data.DataHolder$Builder $r1;
        java.lang.RuntimeException $r21;
        java.lang.IllegalArgumentException $r25;
        java.lang.Object $r9;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 = com.google.android.gms.common.data.DataHolder$Builder.zac($r1);

        $i1 = lengthof $r2;

        $i0 = 0;

        if $i1 != 0 goto label01;

        $r3 = newarray (android.database.CursorWindow)[0];

        return $r3;

     label01:
        $r4 = com.google.android.gms.common.data.DataHolder$Builder.zab($r1);

        $i1 = interfaceinvoke $r4.size();

        $r22 = new android.database.CursorWindow;

        $r5 = $r22;

        specialinvoke $r22.<init>(0);

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<init>();

        virtualinvoke $r23.add($r22);

        $r2 = com.google.android.gms.common.data.DataHolder$Builder.zac($r1);

        $i2 = lengthof $r2;

        virtualinvoke $r22.setNumColumns($i2);

        $i2 = 0;

        $z0 = 0;

     label02:
        if $i2 >= $i1 goto label65;

     label03:
        $z1 = virtualinvoke $r5.allocRow();

     label04:
        if $z1 != 0 goto label11;

        $r24 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r24.<init>(72);

        virtualinvoke $r24.append("Allocating additional cursor window for large data set (row ");

        virtualinvoke $r24.append($i2);

        virtualinvoke $r24.append(")");

        $r7 = virtualinvoke $r24.toString();

        android.util.Log.d("DataHolder", $r7);

     label06:
        $r22 = new android.database.CursorWindow;

        $r5 = $r22;

     label07:
        specialinvoke $r22.<init>(0);

        virtualinvoke $r22.setStartPosition($i2);

        $r2 = com.google.android.gms.common.data.DataHolder$Builder.zac($r1);

        $i3 = lengthof $r2;

        virtualinvoke $r22.setNumColumns($i3);

        virtualinvoke $r23.add($r22);

        $z1 = virtualinvoke $r22.allocRow();

     label08:
        if $z1 != 0 goto label11;

     label09:
        android.util.Log.e("DataHolder", "Unable to allocate row to hold data.");

        virtualinvoke $r23.remove($r22);

        $i1 = virtualinvoke $r23.size();

        $r3 = newarray (android.database.CursorWindow)[$i1];

        $r8 = virtualinvoke $r23.toArray($r3);

        $r3 = (android.database.CursorWindow[]) $r8;

     label10:
        return $r3;

     label11:
        $r9 = interfaceinvoke $r4.get($i2);

        $r10 = (java.util.Map) $r9;

     label12:
        $i3 = 0;

        $z1 = 1;

     label13:
        $r2 = com.google.android.gms.common.data.DataHolder$Builder.zac($r1);

        $i4 = lengthof $r2;

     label14:
        if $i3 >= $i4 goto label53;

        if $z1 == 0 goto label54;

     label15:
        $r2 = com.google.android.gms.common.data.DataHolder$Builder.zac($r1);

        $r7 = $r2[$i3];

        $r9 = interfaceinvoke $r10.get($r7);

     label16:
        if $r9 != null goto label19;

     label17:
        $z1 = virtualinvoke $r5.putNull($i2, $i3);

     label18:
        goto label46;

     label19:
        $z1 = $r9 instanceof java.lang.String;

        if $z1 == 0 goto label22;

     label20:
        $r7 = (java.lang.String) $r9;

        $z1 = virtualinvoke $r5.putString($r7, $i2, $i3);

     label21:
        goto label46;

     label22:
        $z1 = $r9 instanceof java.lang.Long;

        if $z1 == 0 goto label25;

     label23:
        $r11 = (java.lang.Long) $r9;

        $l5 = virtualinvoke $r11.longValue();

        $z1 = virtualinvoke $r5.putLong($l5, $i2, $i3);

     label24:
        goto label46;

     label25:
        $z1 = $r9 instanceof java.lang.Integer;

        if $z1 == 0 goto label30;

     label26:
        $r12 = (java.lang.Integer) $r9;

        $i4 = virtualinvoke $r12.intValue();

     label27:
        $l5 = (long) $i4;

     label28:
        $z1 = virtualinvoke $r5.putLong($l5, $i2, $i3);

     label29:
        goto label46;

     label30:
        $z1 = $r9 instanceof java.lang.Boolean;

        if $z1 == 0 goto label36;

     label31:
        $r13 = (java.lang.Boolean) $r9;

        $z1 = virtualinvoke $r13.booleanValue();

     label32:
        if 1 == $z1 goto label33;

        $l5 = 0L;

        goto label34;

     label33:
        $l5 = 1L;

     label34:
        $z1 = virtualinvoke $r5.putLong($l5, $i2, $i3);

     label35:
        goto label46;

     label36:
        $z1 = $r9 instanceof byte[];

        if $z1 == 0 goto label39;

     label37:
        $r14 = (byte[]) $r9;

        $z1 = virtualinvoke $r5.putBlob($r14, $i2, $i3);

     label38:
        goto label46;

     label39:
        $z1 = $r9 instanceof java.lang.Double;

        if $z1 == 0 goto label42;

     label40:
        $r15 = (java.lang.Double) $r9;

        $d0 = virtualinvoke $r15.doubleValue();

        $z1 = virtualinvoke $r5.putDouble($d0, $i2, $i3);

     label41:
        goto label46;

     label42:
        $z1 = $r9 instanceof java.lang.Float;

        if $z1 == 0 goto label47;

     label43:
        $r16 = (java.lang.Float) $r9;

        $f0 = virtualinvoke $r16.floatValue();

     label44:
        $d0 = (double) $f0;

     label45:
        $z1 = virtualinvoke $r5.putDouble($d0, $i2, $i3);

     label46:
        $i3 = $i3 + 1;

        goto label13;

     label47:
        $r25 = new java.lang.IllegalArgumentException;

     label48:
        $r18 = virtualinvoke $r9.toString();

        $r19 = java.lang.String.valueOf($r7);

        $i1 = virtualinvoke $r19.length();

     label49:
        $i1 = $i1 + 32;

     label50:
        $i2 = virtualinvoke $r18.length();

     label51:
        $i1 = $i1 + $i2;

        $r24 = new java.lang.StringBuilder;

     label52:
        specialinvoke $r24.<init>($i1);

        virtualinvoke $r24.append("Unsupported object for column ");

        virtualinvoke $r24.append($r7);

        virtualinvoke $r24.append(": ");

        virtualinvoke $r24.append($r18);

        $r7 = virtualinvoke $r24.toString();

        specialinvoke $r25.<init>($r7);

        throw $r25;

     label53:
        if $z1 == 0 goto label54;

        $z0 = 0;

        goto label59;

     label54:
        if $z0 != 0 goto label60;

        $r24 = new java.lang.StringBuilder;

     label55:
        specialinvoke $r24.<init>(74);

        virtualinvoke $r24.append("Couldn\'t populate window data for row ");

        virtualinvoke $r24.append($i2);

        virtualinvoke $r24.append(" - allocating new window.");

        $r7 = virtualinvoke $r24.toString();

        android.util.Log.d("DataHolder", $r7);

        virtualinvoke $r5.freeLastRow();

     label56:
        $r22 = new android.database.CursorWindow;

        $r5 = $r22;

     label57:
        specialinvoke $r22.<init>(0);

        virtualinvoke $r22.setStartPosition($i2);

        $r2 = com.google.android.gms.common.data.DataHolder$Builder.zac($r1);

        $i3 = lengthof $r2;

        virtualinvoke $r22.setNumColumns($i3);

        virtualinvoke $r23.add($r22);

     label58:
        $i2 = $i2 + -1;

        $z0 = 1;

     label59:
        $i2 = $i2 + 1;

        goto label02;

     label60:
        $r26 = new com.google.android.gms.common.data.zad;

     label61:
        specialinvoke $r26.<init>("Could not add the value to a new CursorWindow. The size of value may be larger than what a CursorWindow can handle.");

        throw $r26;

     label62:
        $r21 := @caughtexception;

        $i1 = virtualinvoke $r23.size();

     label63:
        if $i0 >= $i1 goto label64;

        $r9 = virtualinvoke $r23.get($i0);

        $r5 = (android.database.CursorWindow) $r9;

        virtualinvoke $r5.close();

        $i0 = $i0 + 1;

        goto label63;

     label64:
        throw $r21;

     label65:
        $i0 = virtualinvoke $r23.size();

        $r3 = newarray (android.database.CursorWindow)[$i0];

        $r8 = virtualinvoke $r23.toArray($r3);

        $r3 = (android.database.CursorWindow[]) $r8;

        return $r3;

        catch java.lang.RuntimeException from label03 to label04 with label62;
        catch java.lang.RuntimeException from label05 to label06 with label62;
        catch java.lang.RuntimeException from label07 to label08 with label62;
        catch java.lang.RuntimeException from label09 to label10 with label62;
        catch java.lang.RuntimeException from label11 to label12 with label62;
        catch java.lang.RuntimeException from label13 to label14 with label62;
        catch java.lang.RuntimeException from label15 to label16 with label62;
        catch java.lang.RuntimeException from label17 to label18 with label62;
        catch java.lang.RuntimeException from label20 to label21 with label62;
        catch java.lang.RuntimeException from label23 to label24 with label62;
        catch java.lang.RuntimeException from label26 to label27 with label62;
        catch java.lang.RuntimeException from label28 to label29 with label62;
        catch java.lang.RuntimeException from label31 to label32 with label62;
        catch java.lang.RuntimeException from label34 to label35 with label62;
        catch java.lang.RuntimeException from label37 to label38 with label62;
        catch java.lang.RuntimeException from label40 to label41 with label62;
        catch java.lang.RuntimeException from label43 to label44 with label62;
        catch java.lang.RuntimeException from label45 to label46 with label62;
        catch java.lang.RuntimeException from label48 to label49 with label62;
        catch java.lang.RuntimeException from label50 to label51 with label62;
        catch java.lang.RuntimeException from label52 to label53 with label62;
        catch java.lang.RuntimeException from label55 to label56 with label62;
        catch java.lang.RuntimeException from label57 to label58 with label62;
        catch java.lang.RuntimeException from label61 to label62 with label62;
    }

    public void close()
    {
        android.database.CursorWindow $r2;
        java.lang.Throwable $r3;
        com.google.android.gms.common.data.DataHolder r0;
        android.database.CursorWindow[] $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this;

        entermonitor r0;

     label1:
        $z0 = r0.zae;

        if $z0 != 0 goto label3;

        r0.zae = 1;

        $i1 = 0;

     label2:
        $r1 = r0.zah;

        $i0 = lengthof $r1;

        if $i1 >= $i0 goto label3;

        $r2 = $r1[$i1];

        virtualinvoke $r2.close();

        $i1 = $i1 + 1;

        goto label2;

     label3:
        exitmonitor r0;

     label4:
        return;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

     label6:
        goto label7;

     label7:
        throw $r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected final void finalize() throws java.lang.Throwable
    {
        java.lang.Throwable $r5;
        android.database.CursorWindow[] $r2;
        com.google.android.gms.common.data.DataHolder r0;
        int $i0;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this;

     label01:
        $z0 = r0.zak;

     label02:
        if $z0 == 0 goto label10;

     label03:
        $r2 = r0.zah;

        $i0 = lengthof $r2;

     label04:
        if $i0 <= 0 goto label10;

     label05:
        $z0 = virtualinvoke r0.isClosed();

     label06:
        if $z0 != 0 goto label10;

     label07:
        virtualinvoke r0.close();

        $r3 = virtualinvoke r0.toString();

        $r4 = java.lang.String.valueOf($r3);

        $i0 = virtualinvoke $r4.length();

     label08:
        $i0 = $i0 + 178;

     label09:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>($i0);

        virtualinvoke $r1.append("Internal data leak within a DataBuffer object detected!  Be sure to explicitly call release() on all DataBuffer extending objects when you are done with them. (internal object: ");

        virtualinvoke $r1.append($r3);

        virtualinvoke $r1.append(")");

        $r3 = virtualinvoke $r1.toString();

        android.util.Log.e("DataBuffer", $r3);

     label10:
        specialinvoke r0.finalize();

        return;

     label11:
        $r5 := @caughtexception;

        specialinvoke r0.finalize();

        throw $r5;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public boolean getBoolean(java.lang.String, int, int)
    {
        android.database.CursorWindow[] $r2;
        android.os.Bundle $r4;
        long $l2;
        android.database.CursorWindow $r3;
        com.google.android.gms.common.data.DataHolder r0;
        byte $b3;
        java.lang.Long $r5;
        int $i0, $i1;
        java.lang.String $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        specialinvoke r0.zae($r1, $i0);

        $r2 = r0.zah;

        $r3 = $r2[$i1];

        $r4 = r0.zab;

        $i1 = virtualinvoke $r4.getInt($r1);

        $l2 = virtualinvoke $r3.getLong($i0, $i1);

        $r5 = java.lang.Long.valueOf($l2);

        $l2 = virtualinvoke $r5.longValue();

        $b3 = $l2 cmp 1L;

        if $b3 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public byte[] getByteArray(java.lang.String, int, int)
    {
        byte[] $r5;
        android.database.CursorWindow[] $r2;
        android.os.Bundle $r4;
        android.database.CursorWindow $r3;
        com.google.android.gms.common.data.DataHolder r0;
        int $i0, $i1;
        java.lang.String $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        specialinvoke r0.zae($r1, $i0);

        $r2 = r0.zah;

        $r3 = $r2[$i1];

        $r4 = r0.zab;

        $i1 = virtualinvoke $r4.getInt($r1);

        $r5 = virtualinvoke $r3.getBlob($i0, $i1);

        return $r5;
    }

    public int getCount()
    {
        int i0;
        com.google.android.gms.common.data.DataHolder r0;

        r0 := @this;

        i0 = r0.zad;

        return i0;
    }

    public int getInteger(java.lang.String, int, int)
    {
        android.database.CursorWindow $r3;
        com.google.android.gms.common.data.DataHolder r0;
        android.database.CursorWindow[] $r2;
        android.os.Bundle $r4;
        int $i0, $i1;
        java.lang.String $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        specialinvoke r0.zae($r1, $i0);

        $r2 = r0.zah;

        $r3 = $r2[$i1];

        $r4 = r0.zab;

        $i1 = virtualinvoke $r4.getInt($r1);

        $i0 = virtualinvoke $r3.getInt($i0, $i1);

        return $i0;
    }

    public long getLong(java.lang.String, int, int)
    {
        android.database.CursorWindow[] $r2;
        android.os.Bundle $r4;
        long $l2;
        android.database.CursorWindow $r3;
        com.google.android.gms.common.data.DataHolder r0;
        int $i0, $i1;
        java.lang.String $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        specialinvoke r0.zae($r1, $i0);

        $r2 = r0.zah;

        $r3 = $r2[$i1];

        $r4 = r0.zab;

        $i1 = virtualinvoke $r4.getInt($r1);

        $l2 = virtualinvoke $r3.getLong($i0, $i1);

        return $l2;
    }

    public android.os.Bundle getMetadata()
    {
        com.google.android.gms.common.data.DataHolder r0;
        android.os.Bundle r1;

        r0 := @this;

        r1 = r0.zaj;

        return r1;
    }

    public int getStatusCode()
    {
        int i0;
        com.google.android.gms.common.data.DataHolder r0;

        r0 := @this;

        i0 = r0.zai;

        return i0;
    }

    public java.lang.String getString(java.lang.String, int, int)
    {
        android.database.CursorWindow $r3;
        com.google.android.gms.common.data.DataHolder r0;
        android.database.CursorWindow[] $r2;
        android.os.Bundle $r4;
        int $i0, $i1;
        java.lang.String $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        specialinvoke r0.zae($r1, $i0);

        $r2 = r0.zah;

        $r3 = $r2[$i1];

        $r4 = r0.zab;

        $i1 = virtualinvoke $r4.getInt($r1);

        $r1 = virtualinvoke $r3.getString($i0, $i1);

        return $r1;
    }

    public int getWindowIndex(int)
    {
        com.google.android.gms.common.data.DataHolder r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $i2 = 0;

        if $i0 < 0 goto label1;

        $i1 = r0.zad;

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        com.google.android.gms.common.internal.Preconditions.checkState($z0);

     label3:
        $r1 = r0.zac;

        $i1 = lengthof $r1;

        if $i2 >= $i1 goto label5;

        $i3 = $r1[$i2];

        if $i0 >= $i3 goto label4;

        $i2 = $i2 + -1;

        goto label5;

     label4:
        $i2 = $i2 + 1;

        goto label3;

     label5:
        if $i2 != $i1 goto label6;

        $i0 = $i2 + -1;

        return $i0;

     label6:
        return $i2;
    }

    public boolean hasColumn(java.lang.String)
    {
        com.google.android.gms.common.data.DataHolder r0;
        android.os.Bundle $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this;

        $r2 := @parameter0;

        $r1 = r0.zab;

        $z0 = virtualinvoke $r1.containsKey($r2);

        return $z0;
    }

    public boolean hasNull(java.lang.String, int, int)
    {
        android.database.CursorWindow[] $r2;
        android.os.Bundle $r4;
        android.database.CursorWindow $r3;
        com.google.android.gms.common.data.DataHolder r0;
        int $i0, $i1;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        specialinvoke r0.zae($r1, $i0);

        $r2 = r0.zah;

        $r3 = $r2[$i1];

        $r4 = r0.zab;

        $i1 = virtualinvoke $r4.getInt($r1);

        $z0 = virtualinvoke $r3.isNull($i0, $i1);

        return $z0;
    }

    public boolean isClosed()
    {
        java.lang.Throwable $r1;
        com.google.android.gms.common.data.DataHolder r0;
        boolean z0;

        r0 := @this;

        entermonitor r0;

     label1:
        z0 = r0.zae;

        exitmonitor r0;

     label2:
        return z0;

     label3:
        $r1 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void writeToParcel(android.os.Parcel, int)
    {
        android.database.CursorWindow[] $r3;
        android.os.Bundle $r4;
        java.lang.String[] $r2;
        android.os.Parcel $r1;
        com.google.android.gms.common.data.DataHolder r0;
        int $i0, $i1, $i2;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 = com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.beginObjectHeader($r1);

        $r2 = r0.zag;

        com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeStringArray($r1, 1, $r2, 0);

        $r3 = r0.zah;

        com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeTypedArray($r1, 2, $r3, $i0, 0);

        $i2 = virtualinvoke r0.getStatusCode();

        com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeInt($r1, 3, $i2);

        $r4 = virtualinvoke r0.getMetadata();

        com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeBundle($r1, 4, $r4, 0);

        $i2 = r0.zaa;

        com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeInt($r1, 1000, $i2);

        com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.finishObjectHeader($r1, $i1);

        $i0 = $i0 & 1;

        if $i0 == 0 goto label1;

        virtualinvoke r0.close();

     label1:
        return;
    }

    public final double zaa(java.lang.String, int, int)
    {
        android.database.CursorWindow[] $r2;
        android.os.Bundle $r4;
        android.database.CursorWindow $r3;
        com.google.android.gms.common.data.DataHolder r0;
        int $i0, $i1;
        java.lang.String $r1;
        double $d0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        specialinvoke r0.zae($r1, $i0);

        $r2 = r0.zah;

        $r3 = $r2[$i1];

        $r4 = r0.zab;

        $i1 = virtualinvoke $r4.getInt($r1);

        $d0 = virtualinvoke $r3.getDouble($i0, $i1);

        return $d0;
    }

    public final float zab(java.lang.String, int, int)
    {
        android.database.CursorWindow[] $r2;
        android.os.Bundle $r4;
        android.database.CursorWindow $r3;
        com.google.android.gms.common.data.DataHolder r0;
        int $i0, $i1;
        float $f0;
        java.lang.String $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        specialinvoke r0.zae($r1, $i0);

        $r2 = r0.zah;

        $r3 = $r2[$i1];

        $r4 = r0.zab;

        $i1 = virtualinvoke $r4.getInt($r1);

        $f0 = virtualinvoke $r3.getFloat($i0, $i1);

        return $f0;
    }

    public final void zac(java.lang.String, int, int, android.database.CharArrayBuffer)
    {
        android.database.CharArrayBuffer $r1;
        android.database.CursorWindow[] $r3;
        android.os.Bundle $r5;
        android.database.CursorWindow $r4;
        com.google.android.gms.common.data.DataHolder r0;
        int $i0, $i1;
        java.lang.String $r2;

        r0 := @this;

        $r2 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        $r1 := @parameter3;

        specialinvoke r0.zae($r2, $i0);

        $r3 = r0.zah;

        $r4 = $r3[$i1];

        $r5 = r0.zab;

        $i1 = virtualinvoke $r5.getInt($r2);

        virtualinvoke $r4.copyStringToBuffer($i0, $i1, $r1);

        return;
    }

    public final void zad()
    {
        android.os.Bundle $r1;
        android.database.CursorWindow[] $r4;
        java.lang.String[] $r2;
        android.database.CursorWindow $r6;
        com.google.android.gms.common.data.DataHolder r0;
        int[] $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r3;

        r0 := @this;

        $r1 = new android.os.Bundle;

        specialinvoke $r1.<init>();

        r0.zab = $r1;

        $i0 = 0;

        $i1 = 0;

     label1:
        $r2 = r0.zag;

        $i2 = lengthof $r2;

        if $i1 >= $i2 goto label2;

        $r1 = r0.zab;

        $r3 = $r2[$i1];

        virtualinvoke $r1.putInt($r3, $i1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r4 = r0.zah;

        $i1 = lengthof $r4;

        $r5 = newarray (int)[$i1];

        r0.zac = $r5;

        $i1 = 0;

     label3:
        $r4 = r0.zah;

        $i2 = lengthof $r4;

        if $i0 >= $i2 goto label4;

        $r5 = r0.zac;

        $r5[$i0] = $i1;

        $r6 = $r4[$i0];

        $i3 = virtualinvoke $r6.getStartPosition();

        $r4 = r0.zah;

        $r6 = $r4[$i0];

        $i2 = virtualinvoke $r6.getNumRows();

        $i3 = $i1 - $i3;

        $i2 = $i2 - $i3;

        $i1 = $i1 + $i2;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        r0.zad = $i1;

        return;
    }
}
