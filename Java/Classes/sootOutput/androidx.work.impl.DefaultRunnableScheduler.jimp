public class androidx.work.impl.DefaultRunnableScheduler extends java.lang.Object implements androidx.work.RunnableScheduler
{
    private final android.os.Handler mHandler;

    public void <init>()
    {
        androidx.work.impl.DefaultRunnableScheduler r0;
        android.os.Looper $r1;
        android.os.Handler $r2;

        r0 := @this;

        specialinvoke r0.<init>();

        $r1 = android.os.Looper.getMainLooper();

        $r2 = androidx.core.os.HandlerCompat.createAsync($r1);

        r0.mHandler = $r2;

        return;
    }

    public void <init>(android.os.Handler)
    {
        androidx.work.impl.DefaultRunnableScheduler r0;
        android.os.Handler $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.mHandler = $r1;

        return;
    }

    public void cancel(java.lang.Runnable)
    {
        androidx.work.impl.DefaultRunnableScheduler r0;
        java.lang.Runnable $r1;
        android.os.Handler $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mHandler;

        virtualinvoke $r2.removeCallbacks($r1);

        return;
    }

    public android.os.Handler getHandler()
    {
        androidx.work.impl.DefaultRunnableScheduler r0;
        android.os.Handler r1;

        r0 := @this;

        r1 = r0.mHandler;

        return r1;
    }

    public void scheduleWithDelay(long, java.lang.Runnable)
    {
        androidx.work.impl.DefaultRunnableScheduler r0;
        android.os.Handler $r2;
        long $l0;
        java.lang.Runnable $r1;

        r0 := @this;

        $l0 := @parameter0;

        $r1 := @parameter1;

        $r2 = r0.mHandler;

        virtualinvoke $r2.postDelayed($r1, $l0);

        return;
    }
}
