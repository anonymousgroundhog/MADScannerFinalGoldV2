public class androidx.lifecycle.Lifecycling extends java.lang.Object
{
    private static final int GENERATED_CALLBACK;
    private static final int REFLECTIVE_CALLBACK;
    private static java.util.Map sCallbackCache;
    private static java.util.Map sClassToAdapters;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<init>();

        androidx.lifecycle.Lifecycling.sCallbackCache = $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<init>();

        androidx.lifecycle.Lifecycling.sClassToAdapters = $r0;

        return;
    }

    private void <init>()
    {
        androidx.lifecycle.Lifecycling r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    private static androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor, java.lang.Object)
    {
        java.lang.IllegalAccessException r7;
        java.lang.Object[] r2;
        java.lang.RuntimeException $r5;
        java.lang.reflect.Constructor r0;
        java.lang.reflect.InvocationTargetException r4;
        java.lang.InstantiationException r6;
        java.lang.Object $r1;
        androidx.lifecycle.GeneratedAdapter r3;

        r0 := @parameter0;

        $r1 := @parameter1;

        r2 = newarray (java.lang.Object)[1];

        r2[0] = $r1;

     label1:
        $r1 = virtualinvoke r0.newInstance(r2);

     label2:
        r3 = (androidx.lifecycle.GeneratedAdapter) $r1;

        return r3;

     label3:
        r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<init>(r4);

        throw $r5;

     label4:
        r6 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<init>(r6);

        throw $r5;

     label5:
        r7 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<init>(r7);

        throw $r5;

        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    private static java.lang.reflect.Constructor generatedConstructor(java.lang.Class)
    {
        java.lang.Package $r1;
        java.lang.NoSuchMethodException r8;
        java.lang.Class[] r6;
        java.lang.RuntimeException r9;
        java.lang.reflect.Constructor $r7;
        int $i0;
        java.lang.Class r0, $r5;
        java.lang.StringBuilder r4;
        java.lang.ClassNotFoundException r10;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @parameter0;

     label01:
        $r1 = virtualinvoke r0.getPackage();

        $r2 = virtualinvoke r0.getCanonicalName();

     label02:
        if $r1 == null goto label05;

     label03:
        $r3 = virtualinvoke $r1.getName();

     label04:
        goto label06;

     label05:
        $r3 = "";

     label06:
        $z0 = virtualinvoke $r3.isEmpty();

     label07:
        if $z0 == 0 goto label08;

        goto label11;

     label08:
        $i0 = virtualinvoke $r3.length();

     label09:
        $i0 = $i0 + 1;

     label10:
        $r2 = virtualinvoke $r2.substring($i0);

     label11:
        $r2 = androidx.lifecycle.Lifecycling.getAdapterName($r2);

        $z0 = virtualinvoke $r3.isEmpty();

     label12:
        if $z0 == 0 goto label13;

        $r3 = $r2;

        goto label15;

     label13:
        r4 = new java.lang.StringBuilder;

     label14:
        specialinvoke r4.<init>();

        r4 = virtualinvoke r4.append($r3);

        r4 = virtualinvoke r4.append(".");

        r4 = virtualinvoke r4.append($r2);

        $r3 = virtualinvoke r4.toString();

     label15:
        $r5 = java.lang.Class.forName($r3);

     label16:
        r6 = newarray (java.lang.Class)[1];

        r6[0] = r0;

     label17:
        $r7 = virtualinvoke $r5.getDeclaredConstructor(r6);

        $z0 = virtualinvoke $r7.isAccessible();

     label18:
        if $z0 != 0 goto label23;

     label19:
        virtualinvoke $r7.setAccessible(1);

     label20:
        return $r7;

     label21:
        r8 := @caughtexception;

        r9 = new java.lang.RuntimeException;

        specialinvoke r9.<init>(r8);

        throw r9;

     label22:
        r10 := @caughtexception;

        return null;

     label23:
        return $r7;

        catch java.lang.ClassNotFoundException from label01 to label02 with label22;
        catch java.lang.ClassNotFoundException from label03 to label04 with label22;
        catch java.lang.ClassNotFoundException from label06 to label07 with label22;
        catch java.lang.ClassNotFoundException from label08 to label09 with label22;
        catch java.lang.ClassNotFoundException from label10 to label11 with label22;
        catch java.lang.ClassNotFoundException from label11 to label12 with label22;
        catch java.lang.ClassNotFoundException from label14 to label15 with label22;
        catch java.lang.ClassNotFoundException from label15 to label16 with label22;
        catch java.lang.ClassNotFoundException from label17 to label18 with label22;
        catch java.lang.ClassNotFoundException from label19 to label20 with label22;
        catch java.lang.NoSuchMethodException from label01 to label02 with label21;
        catch java.lang.NoSuchMethodException from label03 to label04 with label21;
        catch java.lang.NoSuchMethodException from label06 to label07 with label21;
        catch java.lang.NoSuchMethodException from label08 to label09 with label21;
        catch java.lang.NoSuchMethodException from label10 to label11 with label21;
        catch java.lang.NoSuchMethodException from label11 to label12 with label21;
        catch java.lang.NoSuchMethodException from label14 to label15 with label21;
        catch java.lang.NoSuchMethodException from label15 to label16 with label21;
        catch java.lang.NoSuchMethodException from label17 to label18 with label21;
        catch java.lang.NoSuchMethodException from label19 to label20 with label21;
    }

    public static java.lang.String getAdapterName(java.lang.String)
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r0;

        $r0 := @parameter0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>();

        $r0 = virtualinvoke $r0.replace(".", "_");

        $r1 = virtualinvoke $r1.append($r0);

        $r1 = virtualinvoke $r1.append("_LifecycleAdapter");

        $r0 = virtualinvoke $r1.toString();

        return $r0;
    }

    static androidx.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object)
    {
        java.lang.Object $r0;
        androidx.lifecycle.Lifecycling$1 $r1;
        androidx.lifecycle.LifecycleEventObserver $r2;

        $r0 := @parameter0;

        $r2 = androidx.lifecycle.Lifecycling.lifecycleEventObserver($r0);

        $r1 = new androidx.lifecycle.Lifecycling$1;

        specialinvoke $r1.<init>($r2);

        return $r1;
    }

    private static int getObserverConstructorType(java.lang.Class)
    {
        java.util.Map $r1;
        int $i0;
        java.lang.Class r0;
        java.lang.Object $r2;
        java.lang.Integer r3;

        r0 := @parameter0;

        $r1 = androidx.lifecycle.Lifecycling.sCallbackCache;

        $r2 = interfaceinvoke $r1.get(r0);

        r3 = (java.lang.Integer) $r2;

        if r3 == null goto label1;

        $i0 = virtualinvoke r3.intValue();

        return $i0;

     label1:
        $i0 = androidx.lifecycle.Lifecycling.resolveObserverCallbackType(r0);

        $r1 = androidx.lifecycle.Lifecycling.sCallbackCache;

        r3 = java.lang.Integer.valueOf($i0);

        interfaceinvoke $r1.put(r0, r3);

        return $i0;
    }

    private static boolean isLifecycleParent(java.lang.Class)
    {
        java.lang.Class r0, $r1;
        boolean $z0;

        r0 := @parameter0;

        if r0 == null goto label1;

        $r1 = class "Landroidx/lifecycle/LifecycleObserver;";

        $z0 = virtualinvoke $r1.isAssignableFrom(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    static androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)
    {
        androidx.lifecycle.CompositeGeneratedAdaptersObserver r12;
        java.lang.reflect.Constructor r8;
        androidx.lifecycle.SingleGeneratedAdapterObserver r10;
        java.util.Map r5;
        int $i0, $i1;
        androidx.lifecycle.FullLifecycleObserver r2;
        boolean z0, z1;
        androidx.lifecycle.GeneratedAdapter[] r11;
        androidx.lifecycle.ReflectiveGenericLifecycleObserver r13;
        java.util.List r7;
        java.lang.Object $r0, $r6;
        androidx.lifecycle.FullLifecycleObserverAdapter r1;
        java.lang.Class $r4;
        androidx.lifecycle.GeneratedAdapter $r9;
        androidx.lifecycle.LifecycleEventObserver r3;

        $r0 := @parameter0;

        z0 = $r0 instanceof androidx.lifecycle.LifecycleEventObserver;

        z1 = $r0 instanceof androidx.lifecycle.FullLifecycleObserver;

        if z0 == 0 goto label1;

        if z1 == 0 goto label1;

        r1 = new androidx.lifecycle.FullLifecycleObserverAdapter;

        r2 = (androidx.lifecycle.FullLifecycleObserver) $r0;

        r3 = (androidx.lifecycle.LifecycleEventObserver) $r0;

        specialinvoke r1.<init>(r2, r3);

        return r1;

     label1:
        if z1 == 0 goto label2;

        r1 = new androidx.lifecycle.FullLifecycleObserverAdapter;

        r2 = (androidx.lifecycle.FullLifecycleObserver) $r0;

        specialinvoke r1.<init>(r2, null);

        return r1;

     label2:
        if z0 == 0 goto label3;

        r3 = (androidx.lifecycle.LifecycleEventObserver) $r0;

        return r3;

     label3:
        $r4 = virtualinvoke $r0.getClass();

        $i0 = androidx.lifecycle.Lifecycling.getObserverConstructorType($r4);

        if $i0 != 2 goto label7;

        r5 = androidx.lifecycle.Lifecycling.sClassToAdapters;

        $r6 = interfaceinvoke r5.get($r4);

        r7 = (java.util.List) $r6;

        $i0 = interfaceinvoke r7.size();

        if $i0 != 1 goto label4;

        $r6 = interfaceinvoke r7.get(0);

        r8 = (java.lang.reflect.Constructor) $r6;

        $r9 = androidx.lifecycle.Lifecycling.createGeneratedAdapter(r8, $r0);

        r10 = new androidx.lifecycle.SingleGeneratedAdapterObserver;

        specialinvoke r10.<init>($r9);

        return r10;

     label4:
        $i0 = interfaceinvoke r7.size();

        r11 = newarray (androidx.lifecycle.GeneratedAdapter)[$i0];

        $i0 = 0;

     label5:
        $i1 = interfaceinvoke r7.size();

        if $i0 >= $i1 goto label6;

        $r6 = interfaceinvoke r7.get($i0);

        r8 = (java.lang.reflect.Constructor) $r6;

        $r9 = androidx.lifecycle.Lifecycling.createGeneratedAdapter(r8, $r0);

        r11[$i0] = $r9;

        $i0 = $i0 + 1;

        goto label5;

     label6:
        r12 = new androidx.lifecycle.CompositeGeneratedAdaptersObserver;

        specialinvoke r12.<init>(r11);

        return r12;

     label7:
        r13 = new androidx.lifecycle.ReflectiveGenericLifecycleObserver;

        specialinvoke r13.<init>($r0);

        return r13;
    }

    private static int resolveObserverCallbackType(java.lang.Class)
    {
        java.util.Collection $r9;
        java.lang.Class[] $r10;
        java.lang.reflect.Constructor $r3;
        androidx.lifecycle.ClassesInfoCache r6;
        java.util.ArrayList r7;
        java.util.List $r5;
        java.util.Map $r4;
        int $i0, $i1, $i2;
        java.lang.Class r0, r1;
        java.lang.Object $r8;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0;

        $r2 = virtualinvoke r0.getCanonicalName();

        if $r2 != null goto label01;

        return 1;

     label01:
        $r3 = androidx.lifecycle.Lifecycling.generatedConstructor(r0);

        if $r3 == null goto label02;

        $r4 = androidx.lifecycle.Lifecycling.sClassToAdapters;

        $r5 = java.util.Collections.singletonList($r3);

        interfaceinvoke $r4.put(r0, $r5);

        return 2;

     label02:
        r6 = androidx.lifecycle.ClassesInfoCache.sInstance;

        $z0 = virtualinvoke r6.hasLifecycleMethods(r0);

        if $z0 == 0 goto label03;

        return 1;

     label03:
        r1 = virtualinvoke r0.getSuperclass();

        r7 = null;

        $z0 = androidx.lifecycle.Lifecycling.isLifecycleParent(r1);

        if $z0 == 0 goto label05;

        $i0 = androidx.lifecycle.Lifecycling.getObserverConstructorType(r1);

        if $i0 != 1 goto label04;

        return 1;

     label04:
        r7 = new java.util.ArrayList;

        $r4 = androidx.lifecycle.Lifecycling.sClassToAdapters;

        $r8 = interfaceinvoke $r4.get(r1);

        $r9 = (java.util.Collection) $r8;

        specialinvoke r7.<init>($r9);

     label05:
        $r10 = virtualinvoke r0.getInterfaces();

        $i0 = lengthof $r10;

        $i1 = 0;

     label06:
        if $i1 >= $i0 goto label11;

        r1 = $r10[$i1];

        $z0 = androidx.lifecycle.Lifecycling.isLifecycleParent(r1);

        if $z0 != 0 goto label07;

        goto label10;

     label07:
        $i2 = androidx.lifecycle.Lifecycling.getObserverConstructorType(r1);

        if $i2 != 1 goto label08;

        return 1;

     label08:
        if r7 != null goto label09;

        r7 = new java.util.ArrayList;

        specialinvoke r7.<init>();

     label09:
        $r4 = androidx.lifecycle.Lifecycling.sClassToAdapters;

        $r8 = interfaceinvoke $r4.get(r1);

        $r9 = (java.util.Collection) $r8;

        interfaceinvoke r7.addAll($r9);

     label10:
        $i1 = $i1 + 1;

        goto label06;

     label11:
        if r7 == null goto label12;

        $r4 = androidx.lifecycle.Lifecycling.sClassToAdapters;

        interfaceinvoke $r4.put(r0, r7);

        return 2;

     label12:
        return 1;
    }
}
