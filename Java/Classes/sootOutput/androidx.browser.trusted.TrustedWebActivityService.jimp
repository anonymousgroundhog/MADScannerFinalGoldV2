public abstract class androidx.browser.trusted.TrustedWebActivityService extends android.app.Service
{
    public static final java.lang.String ACTION_TRUSTED_WEB_ACTIVITY_SERVICE;
    public static final java.lang.String KEY_SMALL_ICON_BITMAP;
    public static final java.lang.String KEY_SUCCESS;
    public static final java.lang.String META_DATA_NAME_SMALL_ICON;
    public static final int SMALL_ICON_NOT_SET;
    private final android.support.customtabs.trusted.ITrustedWebActivityService$Stub mBinder;
    private android.app.NotificationManager mNotificationManager;
    int mVerifiedUid;

    public void <init>()
    {
        androidx.browser.trusted.TrustedWebActivityService$1 $r1;
        androidx.browser.trusted.TrustedWebActivityService r0;

        r0 := @this;

        specialinvoke r0.<init>();

        r0.mVerifiedUid = -1;

        $r1 = new androidx.browser.trusted.TrustedWebActivityService$1;

        specialinvoke $r1.<init>(r0);

        r0.mBinder = $r1;

        return;
    }

    private static java.lang.String channelNameToId(java.lang.String)
    {
        java.lang.StringBuilder $r1;
        java.lang.String $r0;
        java.util.Locale $r2;

        $r0 := @parameter0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>();

        $r2 = java.util.Locale.ROOT;

        $r0 = virtualinvoke $r0.toLowerCase($r2);

        $r0 = virtualinvoke $r0.replace(32, 95);

        $r1 = virtualinvoke $r1.append($r0);

        $r1 = virtualinvoke $r1.append("_channel_id");

        $r0 = virtualinvoke $r1.toString();

        return $r0;
    }

    private void ensureOnCreateCalled()
    {
        java.lang.IllegalStateException $r2;
        android.app.NotificationManager $r1;
        androidx.browser.trusted.TrustedWebActivityService r0;

        r0 := @this;

        $r1 = r0.mNotificationManager;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<init>("TrustedWebActivityService has not been properly initialized. Did onCreate() call super.onCreate()?");

        throw $r2;
    }

    public abstract androidx.browser.trusted.TokenStore getTokenStore();

    public boolean onAreNotificationsEnabled(java.lang.String)
    {
        android.app.NotificationManager $r3;
        androidx.core.app.NotificationManagerCompat $r2;
        int $i0;
        java.lang.String $r1;
        androidx.browser.trusted.TrustedWebActivityService r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.ensureOnCreateCalled();

        $r2 = androidx.core.app.NotificationManagerCompat.from(r0);

        $z0 = virtualinvoke $r2.areNotificationsEnabled();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 >= 26 goto label2;

        return 1;

     label2:
        $r3 = r0.mNotificationManager;

        $r1 = androidx.browser.trusted.TrustedWebActivityService.channelNameToId($r1);

        $z0 = androidx.browser.trusted.NotificationApiHelperForO.isChannelEnabled($r3, $r1);

        return $z0;
    }

    public final android.os.IBinder onBind(android.content.Intent)
    {
        android.support.customtabs.trusted.ITrustedWebActivityService$Stub r2;
        android.content.Intent $r1;
        androidx.browser.trusted.TrustedWebActivityService r0;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mBinder;

        return r2;
    }

    public void onCancelNotification(java.lang.String, int)
    {
        android.app.NotificationManager $r2;
        int $i0;
        java.lang.String $r1;
        androidx.browser.trusted.TrustedWebActivityService r0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        specialinvoke r0.ensureOnCreateCalled();

        $r2 = r0.mNotificationManager;

        virtualinvoke $r2.cancel($r1, $i0);

        return;
    }

    public void onCreate()
    {
        java.lang.Object $r1;
        android.app.NotificationManager $r2;
        androidx.browser.trusted.TrustedWebActivityService r0;

        r0 := @this;

        specialinvoke r0.onCreate();

        $r1 = virtualinvoke r0.getSystemService("notification");

        $r2 = (android.app.NotificationManager) $r1;

        r0.mNotificationManager = $r2;

        return;
    }

    public android.os.Bundle onExtraCommand(java.lang.String, android.os.Bundle, androidx.browser.trusted.TrustedWebActivityCallbackRemote)
    {
        androidx.browser.trusted.TrustedWebActivityCallbackRemote $r3;
        android.os.Bundle $r2;
        java.lang.String $r1;
        androidx.browser.trusted.TrustedWebActivityService r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        return null;
    }

    public android.os.Parcelable[] onGetActiveNotifications()
    {
        java.lang.IllegalStateException $r3;
        android.os.Parcelable[] $r1;
        android.app.NotificationManager $r2;
        int $i0;
        androidx.browser.trusted.TrustedWebActivityService r0;

        r0 := @this;

        specialinvoke r0.ensureOnCreateCalled();

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 23 goto label1;

        $r2 = r0.mNotificationManager;

        $r1 = androidx.browser.trusted.NotificationApiHelperForM.getActiveNotifications($r2);

        return $r1;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<init>("onGetActiveNotifications cannot be called pre-M.");

        throw $r3;
    }

    public android.os.Bundle onGetSmallIconBitmap()
    {
        android.os.Bundle r1, $r4;
        android.graphics.Bitmap $r3;
        int $i0;
        androidx.browser.trusted.TrustedWebActivityService r0;
        android.content.res.Resources $r2;

        r0 := @this;

        $i0 = virtualinvoke r0.onGetSmallIconId();

        $r4 = new android.os.Bundle;

        r1 = $r4;

        specialinvoke $r4.<init>();

        if $i0 != -1 goto label1;

        return r1;

     label1:
        $r2 = virtualinvoke r0.getResources();

        $r3 = android.graphics.BitmapFactory.decodeResource($r2, $i0);

        virtualinvoke r1.putParcelable("android.support.customtabs.trusted.SMALL_ICON_BITMAP", $r3);

        return r1;
    }

    public int onGetSmallIconId()
    {
        android.os.Bundle $r5;
        android.content.pm.PackageManager $r1;
        android.content.ComponentName $r7;
        android.content.pm.PackageManager$NameNotFoundException r6;
        androidx.browser.trusted.TrustedWebActivityService r0;
        int $i0;
        java.lang.Class $r3;
        android.content.pm.ServiceInfo $r4;

        r0 := @this;

     label1:
        $r1 = virtualinvoke r0.getPackageManager();

     label2:
        $r7 = new android.content.ComponentName;

     label3:
        $r3 = virtualinvoke r0.getClass();

        specialinvoke $r7.<init>(r0, $r3);

        $r4 = virtualinvoke $r1.getServiceInfo($r7, 128);

     label4:
        $r5 = $r4.metaData;

        if $r5 != null goto label5;

        return -1;

     label5:
        $r5 = $r4.metaData;

     label6:
        $i0 = virtualinvoke $r5.getInt("android.support.customtabs.trusted.SMALL_ICON", -1);

     label7:
        return $i0;

     label8:
        r6 := @caughtexception;

        return -1;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label8;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label8;
        catch android.content.pm.PackageManager$NameNotFoundException from label6 to label7 with label8;
    }

    public boolean onNotifyNotificationWithChannel(java.lang.String, int, android.app.Notification, java.lang.String)
    {
        android.app.NotificationManager $r6;
        androidx.browser.trusted.TrustedWebActivityService r0;
        int $i0, i1;
        androidx.core.app.NotificationManagerCompat $r4;
        android.app.Notification $r3;
        java.lang.String $r1, $r2, $r5;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r3 := @parameter2;

        $r2 := @parameter3;

        specialinvoke r0.ensureOnCreateCalled();

        $r4 = androidx.core.app.NotificationManagerCompat.from(r0);

        $z0 = virtualinvoke $r4.areNotificationsEnabled();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        i1 = android.os.Build$VERSION.SDK_INT;

        if i1 < 26 goto label2;

        $r5 = androidx.browser.trusted.TrustedWebActivityService.channelNameToId($r2);

        $r6 = r0.mNotificationManager;

        $r3 = androidx.browser.trusted.NotificationApiHelperForO.copyNotificationOntoChannel(r0, $r6, $r3, $r5, $r2);

        $r6 = r0.mNotificationManager;

        $z0 = androidx.browser.trusted.NotificationApiHelperForO.isChannelEnabled($r6, $r5);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        $r6 = r0.mNotificationManager;

        virtualinvoke $r6.notify($r1, $i0, $r3);

        return 1;
    }

    public final boolean onUnbind(android.content.Intent)
    {
        android.content.Intent $r1;
        androidx.browser.trusted.TrustedWebActivityService r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        r0.mVerifiedUid = -1;

        $z0 = specialinvoke r0.onUnbind($r1);

        return $z0;
    }
}
