public final class androidx.work.impl.utils.RawQueries extends java.lang.Object
{

    private void <init>()
    {
        androidx.work.impl.utils.RawQueries r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    private static void bindings(java.lang.StringBuilder, int)
    {
        int $i0, i1;
        java.lang.StringBuilder $r0;

        $r0 := @parameter0;

        $i0 := @parameter1;

        if $i0 > 0 goto label1;

        return;

     label1:
        virtualinvoke $r0.append("?");

        i1 = 1;

     label2:
        if i1 >= $i0 goto label3;

        virtualinvoke $r0.append(",");

        virtualinvoke $r0.append("?");

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public static androidx.sqlite.db.SupportSQLiteQuery workQueryToRawQuery(androidx.work.WorkQuery)
    {
        java.lang.Object[] $r14;
        java.lang.Integer $r9;
        java.util.ArrayList r1, r5;
        int $i0;
        java.lang.String r3, $r12;
        boolean $z0;
        androidx.sqlite.db.SimpleSQLiteQuery r13;
        java.util.Iterator $r6;
        java.util.UUID r11;
        java.util.List $r4;
        androidx.work.WorkQuery $r0;
        androidx.work.WorkInfo$State r8;
        java.lang.StringBuilder r2, $r10;
        java.lang.Object $r7;

        $r0 := @parameter0;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<init>();

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<init>("SELECT * FROM workspec");

        r3 = " WHERE";

        $r4 = virtualinvoke $r0.getStates();

        $z0 = interfaceinvoke $r4.isEmpty();

        if $z0 != 0 goto label3;

        r5 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r4.size();

        specialinvoke r5.<init>($i0);

        $r6 = interfaceinvoke $r4.iterator();

     label1:
        $z0 = interfaceinvoke $r6.hasNext();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.next();

        r8 = (androidx.work.WorkInfo$State) $r7;

        $i0 = androidx.work.impl.model.WorkTypeConverters.stateToInt(r8);

        $r9 = java.lang.Integer.valueOf($i0);

        interfaceinvoke r5.add($r9);

        goto label1;

     label2:
        $r10 = virtualinvoke r2.append(" WHERE");

        virtualinvoke $r10.append(" state IN (");

        $i0 = interfaceinvoke r5.size();

        androidx.work.impl.utils.RawQueries.bindings(r2, $i0);

        virtualinvoke r2.append(")");

        interfaceinvoke r1.addAll(r5);

        r3 = " AND";

     label3:
        $r4 = virtualinvoke $r0.getIds();

        $z0 = interfaceinvoke $r4.isEmpty();

        if $z0 != 0 goto label6;

        r5 = new java.util.ArrayList;

        $i0 = interfaceinvoke $r4.size();

        specialinvoke r5.<init>($i0);

        $r6 = interfaceinvoke $r4.iterator();

     label4:
        $z0 = interfaceinvoke $r6.hasNext();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r6.next();

        r11 = (java.util.UUID) $r7;

        $r12 = virtualinvoke r11.toString();

        interfaceinvoke r5.add($r12);

        goto label4;

     label5:
        $r10 = virtualinvoke r2.append(r3);

        virtualinvoke $r10.append(" id IN (");

        $i0 = interfaceinvoke $r4.size();

        androidx.work.impl.utils.RawQueries.bindings(r2, $i0);

        virtualinvoke r2.append(")");

        interfaceinvoke r1.addAll(r5);

        r3 = " AND";

     label6:
        $r4 = virtualinvoke $r0.getTags();

        $z0 = interfaceinvoke $r4.isEmpty();

        if $z0 != 0 goto label7;

        $r10 = virtualinvoke r2.append(r3);

        virtualinvoke $r10.append(" id IN (SELECT work_spec_id FROM worktag WHERE tag IN (");

        $i0 = interfaceinvoke $r4.size();

        androidx.work.impl.utils.RawQueries.bindings(r2, $i0);

        virtualinvoke r2.append("))");

        interfaceinvoke r1.addAll($r4);

        r3 = " AND";

     label7:
        $r4 = virtualinvoke $r0.getUniqueWorkNames();

        $z0 = interfaceinvoke $r4.isEmpty();

        if $z0 != 0 goto label8;

        $r10 = virtualinvoke r2.append(r3);

        virtualinvoke $r10.append(" id IN (SELECT work_spec_id FROM workname WHERE name IN (");

        $i0 = interfaceinvoke $r4.size();

        androidx.work.impl.utils.RawQueries.bindings(r2, $i0);

        virtualinvoke r2.append("))");

        interfaceinvoke r1.addAll($r4);

     label8:
        virtualinvoke r2.append(";");

        r13 = new androidx.sqlite.db.SimpleSQLiteQuery;

        r3 = virtualinvoke r2.toString();

        $r14 = interfaceinvoke r1.toArray();

        specialinvoke r13.<init>(r3, $r14);

        return r13;
    }
}
