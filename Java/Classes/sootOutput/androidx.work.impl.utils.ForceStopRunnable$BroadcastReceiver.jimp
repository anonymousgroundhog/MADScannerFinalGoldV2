public class androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver extends android.content.BroadcastReceiver
{
    private static final java.lang.String TAG;

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = androidx.work.Logger.tagWithPrefix("ForceStopRunnable$Rcvr");

        androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver.TAG = $r0;

        return;
    }

    public void <init>()
    {
        androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        android.content.Context $r1;
        android.content.Intent $r2;
        androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver r0;
        androidx.work.Logger $r5;
        java.lang.Throwable[] $r6;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.getAction();

        $r4 = "ACTION_FORCE_STOP_RESCHEDULE";

        $z0 = virtualinvoke $r4.equals($r3);

        if $z0 == 0 goto label1;

        $r5 = androidx.work.Logger.get();

        $r3 = androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver.TAG;

        $r6 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r5.verbose($r3, "Rescheduling alarm that keeps track of force-stops.", $r6);

        androidx.work.impl.utils.ForceStopRunnable.setAlarm($r1);

     label1:
        return;
    }
}
