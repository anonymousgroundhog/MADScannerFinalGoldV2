public class androidx.core.graphics.TypefaceCompatApi26Impl extends androidx.core.graphics.TypefaceCompatApi21Impl
{
    private static final java.lang.String ABORT_CREATION_METHOD;
    private static final java.lang.String ADD_FONT_FROM_ASSET_MANAGER_METHOD;
    private static final java.lang.String ADD_FONT_FROM_BUFFER_METHOD;
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD;
    private static final java.lang.String FONT_FAMILY_CLASS;
    private static final java.lang.String FREEZE_METHOD;
    private static final int RESOLVE_BY_FONT_TABLE;
    private static final java.lang.String TAG;
    protected final java.lang.reflect.Method mAbortCreation;
    protected final java.lang.reflect.Method mAddFontFromAssetManager;
    protected final java.lang.reflect.Method mAddFontFromBuffer;
    protected final java.lang.reflect.Method mCreateFromFamiliesWithDefault;
    protected final java.lang.Class mFontFamily;
    protected final java.lang.reflect.Constructor mFontFamilyCtor;
    protected final java.lang.reflect.Method mFreeze;

    public void <init>()
    {
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        java.lang.ReflectiveOperationException r9;
        java.lang.reflect.Constructor $r3;
        java.lang.Class $r1, r2;
        java.lang.StringBuilder r10;
        java.lang.String $r11;
        java.lang.reflect.Method $r4, $r5, $r6, $r7, $r8;

        r0 := @this;

        specialinvoke r0.<init>();

     label01:
        $r1 = virtualinvoke r0.obtainFontFamily();

     label02:
        r2 = $r1;

     label03:
        $r3 = virtualinvoke r0.obtainFontFamilyCtor($r1);

     label04:
        $r4 = virtualinvoke r0.obtainAddFontFromAssetManagerMethod($r1);

     label05:
        $r5 = virtualinvoke r0.obtainAddFontFromBufferMethod($r1);

     label06:
        $r6 = virtualinvoke r0.obtainFreezeMethod($r1);

     label07:
        $r7 = virtualinvoke r0.obtainAbortCreationMethod($r1);

     label08:
        $r8 = virtualinvoke r0.obtainCreateFromFamiliesWithDefaultMethod($r1);

     label09:
        goto label13;

     label10:
        r9 := @caughtexception;

        goto label12;

     label11:
        r9 := @caughtexception;

     label12:
        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<init>();

        r10 = virtualinvoke r10.append("Unable to collect necessary methods for class ");

        $r1 = virtualinvoke r9.getClass();

        $r11 = virtualinvoke $r1.getName();

        r10 = virtualinvoke r10.append($r11);

        $r11 = virtualinvoke r10.toString();

        android.util.Log.e("TypefaceCompatApi26Impl", $r11, r9);

        r2 = null;

        $r3 = null;

        $r4 = null;

        $r5 = null;

        $r6 = null;

        $r7 = null;

        $r8 = null;

     label13:
        r0.mFontFamily = r2;

        r0.mFontFamilyCtor = $r3;

        r0.mAddFontFromAssetManager = $r4;

        r0.mAddFontFromBuffer = $r5;

        r0.mFreeze = $r6;

        r0.mAbortCreation = $r7;

        r0.mCreateFromFamiliesWithDefault = $r8;

        return;

        catch java.lang.ClassNotFoundException from label01 to label02 with label11;
        catch java.lang.ClassNotFoundException from label03 to label04 with label11;
        catch java.lang.ClassNotFoundException from label04 to label05 with label11;
        catch java.lang.ClassNotFoundException from label05 to label06 with label11;
        catch java.lang.ClassNotFoundException from label06 to label07 with label11;
        catch java.lang.ClassNotFoundException from label07 to label08 with label11;
        catch java.lang.ClassNotFoundException from label08 to label09 with label11;
        catch java.lang.NoSuchMethodException from label01 to label02 with label10;
        catch java.lang.NoSuchMethodException from label03 to label04 with label10;
        catch java.lang.NoSuchMethodException from label04 to label05 with label10;
        catch java.lang.NoSuchMethodException from label05 to label06 with label10;
        catch java.lang.NoSuchMethodException from label06 to label07 with label10;
        catch java.lang.NoSuchMethodException from label07 to label08 with label10;
        catch java.lang.NoSuchMethodException from label08 to label09 with label10;
    }

    private void abortCreation(java.lang.Object)
    {
        java.lang.IllegalAccessException $r5;
        java.lang.Object[] $r3;
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Object $r1;
        java.lang.reflect.Method $r2;
        java.lang.reflect.InvocationTargetException $r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mAbortCreation;

        $r3 = newarray (java.lang.Object)[0];

     label1:
        virtualinvoke $r2.invoke($r1, $r3);

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        goto label5;

     label4:
        $r5 := @caughtexception;

     label5:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    private boolean addFontFromAssetManager(android.content.Context, java.lang.Object, java.lang.String, int, int, int, android.graphics.fonts.FontVariationAxis[])
    {
        android.content.Context $r1;
        java.lang.Object[] $r6;
        java.lang.Integer $r8;
        android.content.res.AssetManager $r7;
        int $i0, $i1, $i2;
        android.graphics.fonts.FontVariationAxis[] $r4;
        java.lang.Boolean $r9;
        java.lang.String $r3;
        java.lang.reflect.Method r5;
        boolean $z0;
        java.lang.IllegalAccessException r11;
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        java.lang.reflect.InvocationTargetException r10;
        java.lang.Object $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $i0 := @parameter3;

        $i1 := @parameter4;

        $i2 := @parameter5;

        $r4 := @parameter6;

        r5 = r0.mAddFontFromAssetManager;

        $r6 = newarray (java.lang.Object)[8];

     label01:
        $r7 = virtualinvoke $r1.getAssets();

     label02:
        $r6[0] = $r7;

        $r6[1] = $r3;

     label03:
        $r8 = java.lang.Integer.valueOf(0);

     label04:
        $r6[2] = $r8;

     label05:
        $r9 = java.lang.Boolean.valueOf(0);

     label06:
        $r6[3] = $r9;

     label07:
        $r8 = java.lang.Integer.valueOf($i0);

     label08:
        $r6[4] = $r8;

     label09:
        $r8 = java.lang.Integer.valueOf($i1);

     label10:
        $r6[5] = $r8;

     label11:
        $r8 = java.lang.Integer.valueOf($i2);

     label12:
        $r6[6] = $r8;

        $r6[7] = $r4;

     label13:
        $r2 = virtualinvoke r5.invoke($r2, $r6);

     label14:
        $r9 = (java.lang.Boolean) $r2;

     label15:
        $z0 = virtualinvoke $r9.booleanValue();

     label16:
        return $z0;

     label17:
        r10 := @caughtexception;

        return 0;

     label18:
        r11 := @caughtexception;

        return 0;

        catch java.lang.IllegalAccessException from label01 to label02 with label18;
        catch java.lang.IllegalAccessException from label03 to label04 with label18;
        catch java.lang.IllegalAccessException from label05 to label06 with label18;
        catch java.lang.IllegalAccessException from label07 to label08 with label18;
        catch java.lang.IllegalAccessException from label09 to label10 with label18;
        catch java.lang.IllegalAccessException from label11 to label12 with label18;
        catch java.lang.IllegalAccessException from label13 to label14 with label18;
        catch java.lang.IllegalAccessException from label15 to label16 with label18;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label17;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label17;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label17;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label17;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label17;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label17;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label17;
        catch java.lang.reflect.InvocationTargetException from label15 to label16 with label17;
    }

    private boolean addFontFromBuffer(java.lang.Object, java.nio.ByteBuffer, int, int, int)
    {
        java.lang.IllegalAccessException r8;
        java.lang.Object[] $r4;
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Integer $r5;
        java.nio.ByteBuffer $r2;
        java.lang.reflect.InvocationTargetException r7;
        int $i0, $i1, $i2;
        java.lang.Boolean r6;
        java.lang.Object $r1;
        java.lang.reflect.Method r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 := @parameter2;

        $i1 := @parameter3;

        $i2 := @parameter4;

        r3 = r0.mAddFontFromBuffer;

        $r4 = newarray (java.lang.Object)[5];

        $r4[0] = $r2;

     label01:
        $r5 = java.lang.Integer.valueOf($i0);

     label02:
        $r4[1] = $r5;

        $r4[2] = null;

     label03:
        $r5 = java.lang.Integer.valueOf($i1);

     label04:
        $r4[3] = $r5;

     label05:
        $r5 = java.lang.Integer.valueOf($i2);

     label06:
        $r4[4] = $r5;

     label07:
        $r1 = virtualinvoke r3.invoke($r1, $r4);

     label08:
        r6 = (java.lang.Boolean) $r1;

     label09:
        $z0 = virtualinvoke r6.booleanValue();

     label10:
        return $z0;

     label11:
        r7 := @caughtexception;

        return 0;

     label12:
        r8 := @caughtexception;

        return 0;

        catch java.lang.IllegalAccessException from label01 to label02 with label12;
        catch java.lang.IllegalAccessException from label03 to label04 with label12;
        catch java.lang.IllegalAccessException from label05 to label06 with label12;
        catch java.lang.IllegalAccessException from label07 to label08 with label12;
        catch java.lang.IllegalAccessException from label09 to label10 with label12;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label11;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label11;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label11;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label11;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label11;
    }

    private boolean freeze(java.lang.Object)
    {
        java.lang.IllegalAccessException r6;
        java.lang.Object[] $r2;
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        java.lang.reflect.InvocationTargetException r5;
        java.lang.Boolean r4;
        java.lang.Object $r1;
        java.lang.reflect.Method r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        r3 = r0.mFreeze;

        $r2 = newarray (java.lang.Object)[0];

     label1:
        $r1 = virtualinvoke r3.invoke($r1, $r2);

     label2:
        r4 = (java.lang.Boolean) $r1;

     label3:
        $z0 = virtualinvoke r4.booleanValue();

     label4:
        return $z0;

     label5:
        r5 := @caughtexception;

        return 0;

     label6:
        r6 := @caughtexception;

        return 0;

        catch java.lang.IllegalAccessException from label1 to label2 with label6;
        catch java.lang.IllegalAccessException from label3 to label4 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label5;
    }

    private boolean isFontFamilyPrivateAPIAvailable()
    {
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        java.lang.reflect.Method $r1;

        r0 := @this;

        $r1 = r0.mAddFontFromAssetManager;

        if $r1 != null goto label1;

        android.util.Log.w("TypefaceCompatApi26Impl", "Unable to collect necessary private methods. Fallback to legacy implementation.");

     label1:
        $r1 = r0.mAddFontFromAssetManager;

        if $r1 == null goto label2;

        return 1;

     label2:
        return 0;
    }

    private java.lang.Object newFamily()
    {
        java.lang.IllegalAccessException r6;
        java.lang.Object[] $r3;
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        java.lang.InstantiationException r5;
        java.lang.Object $r1;
        java.lang.reflect.Constructor r2;
        java.lang.reflect.InvocationTargetException r4;

        r0 := @this;

        r2 = r0.mFontFamilyCtor;

        $r3 = newarray (java.lang.Object)[0];

     label1:
        $r1 = virtualinvoke r2.newInstance($r3);

     label2:
        return $r1;

     label3:
        r4 := @caughtexception;

        goto label6;

     label4:
        r5 := @caughtexception;

        goto label6;

     label5:
        r6 := @caughtexception;

     label6:
        return null;

        catch java.lang.IllegalAccessException from label1 to label2 with label5;
        catch java.lang.InstantiationException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
    }

    protected android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
    {
        android.graphics.Typeface $r7;
        java.lang.IllegalAccessException r9;
        java.lang.Object[] $r5;
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Integer $r6;
        java.lang.reflect.InvocationTargetException r8;
        java.lang.Object $r1, $r4;
        java.lang.Class r3;
        java.lang.reflect.Method $r2;

        r0 := @this;

        $r1 := @parameter0;

        r3 = r0.mFontFamily;

     label01:
        $r4 = java.lang.reflect.Array.newInstance(r3, 1);

        java.lang.reflect.Array.set($r4, 0, $r1);

     label02:
        $r2 = r0.mCreateFromFamiliesWithDefault;

        $r5 = newarray (java.lang.Object)[3];

        $r5[0] = $r4;

     label03:
        $r6 = java.lang.Integer.valueOf(-1);

     label04:
        $r5[1] = $r6;

     label05:
        $r6 = java.lang.Integer.valueOf(-1);

     label06:
        $r5[2] = $r6;

     label07:
        $r1 = virtualinvoke $r2.invoke(null, $r5);

     label08:
        $r7 = (android.graphics.Typeface) $r1;

        return $r7;

     label09:
        r8 := @caughtexception;

        return null;

     label10:
        r9 := @caughtexception;

        return null;

        catch java.lang.IllegalAccessException from label01 to label02 with label10;
        catch java.lang.IllegalAccessException from label03 to label04 with label10;
        catch java.lang.IllegalAccessException from label05 to label06 with label10;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label09;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label09;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label09;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label09;
    }

    public android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context, androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry, android.content.res.Resources, int)
    {
        android.graphics.Typeface $r5;
        android.content.Context $r1;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.fonts.FontVariationAxis[] $r10;
        java.lang.String $r8, $r9;
        boolean $z0;
        androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry $r2;
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] $r7;
        java.lang.Object $r6;
        androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry r4;
        android.content.res.Resources $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $i0 := @parameter3;

        $z0 = specialinvoke r0.isFontFamilyPrivateAPIAvailable();

        if $z0 != 0 goto label1;

        $r5 = specialinvoke r0.createFromFontFamilyFilesResourceEntry($r1, $r2, $r3, $i0);

        return $r5;

     label1:
        $r6 = specialinvoke r0.newFamily();

        if $r6 != null goto label2;

        return null;

     label2:
        $r7 = virtualinvoke $r2.getEntries();

        $i0 = lengthof $r7;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label5;

        r4 = $r7[$i1];

        $r8 = virtualinvoke r4.getFileName();

        $i2 = virtualinvoke r4.getTtcIndex();

        $i3 = virtualinvoke r4.getWeight();

        $z0 = virtualinvoke r4.isItalic();

        $r9 = virtualinvoke r4.getVariationSettings();

        $r10 = android.graphics.fonts.FontVariationAxis.fromFontVariationSettings($r9);

        $i4 = (int) $z0;

        $z0 = specialinvoke r0.addFontFromAssetManager($r1, $r6, $r8, $i2, $i3, $i4, $r10);

        if $z0 != 0 goto label4;

        specialinvoke r0.abortCreation($r6);

        return null;

     label4:
        $i1 = $i1 + 1;

        goto label3;

     label5:
        $z0 = specialinvoke r0.freeze($r6);

        if $z0 != 0 goto label6;

        return null;

     label6:
        $r5 = virtualinvoke r0.createFromFamiliesWithDefault($r6);

        return $r5;
    }

    public android.graphics.Typeface createFromFontInfo(android.content.Context, android.os.CancellationSignal, androidx.core.provider.FontsContractCompat$FontInfo[], int)
    {
        android.graphics.Typeface $r10;
        java.lang.Throwable r11, r12;
        android.content.Context r1;
        android.graphics.Typeface$Builder r8, $r18;
        android.os.ParcelFileDescriptor $r7;
        android.net.Uri $r6;
        java.nio.ByteBuffer r17;
        android.content.ContentResolver $r5;
        java.util.Map $r14;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        androidx.core.provider.FontsContractCompat$FontInfo r4;
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        android.os.CancellationSignal r2;
        java.io.IOException r13;
        androidx.core.provider.FontsContractCompat$FontInfo[] r3;
        java.io.FileDescriptor $r9;
        java.lang.Object $r15, $r16;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        i0 := @parameter3;

        $i1 = lengthof r3;

        if $i1 >= 1 goto label01;

        return null;

     label01:
        $z0 = specialinvoke r0.isFontFamilyPrivateAPIAvailable();

        if $z0 != 0 goto label19;

        r4 = virtualinvoke r0.findBestInfo(r3, i0);

        $r5 = virtualinvoke r1.getContentResolver();

     label02:
        $r6 = virtualinvoke r4.getUri();

        $r7 = virtualinvoke $r5.openFileDescriptor($r6, "r", r2);

     label03:
        if $r7 != null goto label06;

        if $r7 == null goto label29;

     label04:
        virtualinvoke $r7.close();

     label05:
        return null;

     label06:
        $r18 = new android.graphics.Typeface$Builder;

     label07:
        r8 = $r18;

     label08:
        $r9 = virtualinvoke $r7.getFileDescriptor();

        specialinvoke $r18.<init>($r9);

        i0 = virtualinvoke r4.getWeight();

        r8 = virtualinvoke r8.setWeight(i0);

        $z0 = virtualinvoke r4.isItalic();

        r8 = virtualinvoke r8.setItalic($z0);

        $r10 = virtualinvoke r8.build();

     label09:
        if $r7 == null goto label30;

     label10:
        virtualinvoke $r7.close();

     label11:
        return $r10;

     label12:
        r11 := @caughtexception;

        if $r7 == null goto label17;

     label13:
        virtualinvoke $r7.close();

     label14:
        goto label17;

     label15:
        r12 := @caughtexception;

     label16:
        virtualinvoke r11.addSuppressed(r12);

     label17:
        throw r11;

     label18:
        r13 := @caughtexception;

        return null;

     label19:
        $r14 = androidx.core.graphics.TypefaceCompatUtil.readFontInfoIntoByteBuffer(r1, r3, r2);

        $r15 = specialinvoke r0.newFamily();

        if $r15 != null goto label20;

        return null;

     label20:
        $i1 = lengthof r3;

        $z0 = 0;

        $i2 = 0;

     label21:
        if $i2 >= $i1 goto label25;

        r4 = r3[$i2];

        $r6 = virtualinvoke r4.getUri();

        $r16 = interfaceinvoke $r14.get($r6);

        r17 = (java.nio.ByteBuffer) $r16;

        if r17 != null goto label22;

        goto label24;

     label22:
        $i3 = virtualinvoke r4.getTtcIndex();

        $i4 = virtualinvoke r4.getWeight();

        $z0 = virtualinvoke r4.isItalic();

        $i5 = (int) $z0;

        $z0 = specialinvoke r0.addFontFromBuffer($r15, r17, $i3, $i4, $i5);

        if $z0 != 0 goto label23;

        specialinvoke r0.abortCreation($r15);

        return null;

     label23:
        $z0 = 1;

     label24:
        $i2 = $i2 + 1;

        goto label21;

     label25:
        if $z0 != 0 goto label26;

        specialinvoke r0.abortCreation($r15);

        return null;

     label26:
        $z0 = specialinvoke r0.freeze($r15);

        if $z0 != 0 goto label27;

        return null;

     label27:
        $r10 = virtualinvoke r0.createFromFamiliesWithDefault($r15);

        if $r10 != null goto label28;

        return null;

     label28:
        $r10 = android.graphics.Typeface.create($r10, i0);

        return $r10;

     label29:
        return null;

     label30:
        return $r10;

        catch java.io.IOException from label02 to label03 with label18;
        catch java.io.IOException from label04 to label05 with label18;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.io.IOException from label10 to label11 with label18;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.io.IOException from label16 to label18 with label18;
    }

    public android.graphics.Typeface createFromResourcesFontFile(android.content.Context, android.content.res.Resources, int, java.lang.String, int)
    {
        android.graphics.Typeface $r4;
        android.content.Context $r1;
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        int $i0, $i1;
        java.lang.Object $r5;
        java.lang.String $r3;
        android.content.res.Resources $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 := @parameter2;

        $r3 := @parameter3;

        $i1 := @parameter4;

        $z0 = specialinvoke r0.isFontFamilyPrivateAPIAvailable();

        if $z0 != 0 goto label1;

        $r4 = specialinvoke r0.createFromResourcesFontFile($r1, $r2, $i0, $r3, $i1);

        return $r4;

     label1:
        $r5 = specialinvoke r0.newFamily();

        if $r5 != null goto label2;

        return null;

     label2:
        $z0 = specialinvoke r0.addFontFromAssetManager($r1, $r5, $r3, 0, -1, -1, null);

        if $z0 != 0 goto label3;

        specialinvoke r0.abortCreation($r5);

        return null;

     label3:
        $z0 = specialinvoke r0.freeze($r5);

        if $z0 != 0 goto label4;

        return null;

     label4:
        $r4 = virtualinvoke r0.createFromFamiliesWithDefault($r5);

        return $r4;
    }

    protected java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) throws java.lang.NoSuchMethodException
    {
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Class[] $r3;
        java.lang.Class r1;
        java.lang.reflect.Method $r2;

        r0 := @this;

        r1 := @parameter0;

        $r3 = newarray (java.lang.Class)[0];

        $r2 = virtualinvoke r1.getMethod("abortCreation", $r3);

        return $r2;
    }

    protected java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) throws java.lang.NoSuchMethodException
    {
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Class[] $r3;
        java.lang.Class r1, $r4;
        java.lang.reflect.Method $r2;

        r0 := @this;

        r1 := @parameter0;

        $r3 = newarray (java.lang.Class)[8];

        $r3[0] = class "Landroid/content/res/AssetManager;";

        $r3[1] = class "Ljava/lang/String;";

        $r4 = java.lang.Integer.TYPE;

        $r3[2] = $r4;

        $r4 = java.lang.Boolean.TYPE;

        $r3[3] = $r4;

        $r4 = java.lang.Integer.TYPE;

        $r3[4] = $r4;

        $r4 = java.lang.Integer.TYPE;

        $r3[5] = $r4;

        $r4 = java.lang.Integer.TYPE;

        $r3[6] = $r4;

        $r3[7] = class "[Landroid/graphics/fonts/FontVariationAxis;";

        $r2 = virtualinvoke r1.getMethod("addFontFromAssetManager", $r3);

        return $r2;
    }

    protected java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) throws java.lang.NoSuchMethodException
    {
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Class[] $r3;
        java.lang.Class r1, $r4;
        java.lang.reflect.Method $r2;

        r0 := @this;

        r1 := @parameter0;

        $r3 = newarray (java.lang.Class)[5];

        $r3[0] = class "Ljava/nio/ByteBuffer;";

        $r4 = java.lang.Integer.TYPE;

        $r3[1] = $r4;

        $r3[2] = class "[Landroid/graphics/fonts/FontVariationAxis;";

        $r4 = java.lang.Integer.TYPE;

        $r3[3] = $r4;

        $r4 = java.lang.Integer.TYPE;

        $r3[4] = $r4;

        $r2 = virtualinvoke r1.getMethod("addFontFromBuffer", $r3);

        return $r2;
    }

    protected java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) throws java.lang.NoSuchMethodException
    {
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Class[] $r3;
        java.lang.Class r1, $r4;
        java.lang.Object $r2;
        java.lang.reflect.Method $r5;

        r0 := @this;

        r1 := @parameter0;

        $r2 = java.lang.reflect.Array.newInstance(r1, 1);

        r1 = class "Landroid/graphics/Typeface;";

        $r3 = newarray (java.lang.Class)[3];

        $r4 = virtualinvoke $r2.getClass();

        $r3[0] = $r4;

        $r4 = java.lang.Integer.TYPE;

        $r3[1] = $r4;

        $r4 = java.lang.Integer.TYPE;

        $r3[2] = $r4;

        $r5 = virtualinvoke r1.getDeclaredMethod("createFromFamiliesWithDefault", $r3);

        virtualinvoke $r5.setAccessible(1);

        return $r5;
    }

    protected java.lang.Class obtainFontFamily() throws java.lang.ClassNotFoundException
    {
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Class $r1;

        r0 := @this;

        $r1 = java.lang.Class.forName("android.graphics.FontFamily");

        return $r1;
    }

    protected java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) throws java.lang.NoSuchMethodException
    {
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Class[] $r3;
        java.lang.Class r1;
        java.lang.reflect.Constructor $r2;

        r0 := @this;

        r1 := @parameter0;

        $r3 = newarray (java.lang.Class)[0];

        $r2 = virtualinvoke r1.getConstructor($r3);

        return $r2;
    }

    protected java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) throws java.lang.NoSuchMethodException
    {
        androidx.core.graphics.TypefaceCompatApi26Impl r0;
        java.lang.Class[] $r3;
        java.lang.Class r1;
        java.lang.reflect.Method $r2;

        r0 := @this;

        r1 := @parameter0;

        $r3 = newarray (java.lang.Class)[0];

        $r2 = virtualinvoke r1.getMethod("freeze", $r3);

        return $r2;
    }
}
