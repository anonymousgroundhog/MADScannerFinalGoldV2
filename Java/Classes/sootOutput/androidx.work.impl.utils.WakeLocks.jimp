public class androidx.work.impl.utils.WakeLocks extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.util.WeakHashMap sWakeLocks;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.util.WeakHashMap $r1;

        $r0 = androidx.work.Logger.tagWithPrefix("WakeLocks");

        androidx.work.impl.utils.WakeLocks.TAG = $r0;

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<init>();

        androidx.work.impl.utils.WakeLocks.sWakeLocks = $r1;

        return;
    }

    private void <init>()
    {
        androidx.work.impl.utils.WakeLocks r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static void checkWakeLocks()
    {
        java.lang.Throwable r11;
        java.lang.Object[] $r6;
        java.util.Iterator $r3;
        java.util.Set $r2;
        java.util.HashMap r0;
        android.os.PowerManager$WakeLock r5;
        androidx.work.Logger $r8;
        java.lang.Throwable[] $r10;
        java.lang.Object $r4;
        java.lang.String $r7, $r9;
        java.util.WeakHashMap $r1;
        boolean $z0;

        r0 = new java.util.HashMap;

        specialinvoke r0.<init>();

        $r1 = androidx.work.impl.utils.WakeLocks.sWakeLocks;

        entermonitor $r1;

     label1:
        interfaceinvoke r0.putAll($r1);

        exitmonitor $r1;

     label2:
        $r2 = interfaceinvoke r0.keySet();

        $r3 = interfaceinvoke $r2.iterator();

     label3:
        $z0 = interfaceinvoke $r3.hasNext();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.next();

        r5 = (android.os.PowerManager$WakeLock) $r4;

        if r5 == null goto label3;

        $z0 = virtualinvoke r5.isHeld();

        if $z0 == 0 goto label3;

        $r6 = newarray (java.lang.Object)[1];

        $r4 = interfaceinvoke r0.get(r5);

        $r6[0] = $r4;

        $r7 = java.lang.String.format("WakeLock held for %s", $r6);

        $r8 = androidx.work.Logger.get();

        $r9 = androidx.work.impl.utils.WakeLocks.TAG;

        $r10 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r8.warning($r9, $r7, $r10);

        goto label3;

     label4:
        return;

     label5:
        r11 := @caughtexception;

     label6:
        exitmonitor $r1;

     label7:
        goto label8;

     label8:
        throw r11;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public static android.os.PowerManager$WakeLock newWakeLock(android.content.Context, java.lang.String)
    {
        java.lang.Throwable $r3;
        android.content.Context $r0;
        android.os.PowerManager$WakeLock $r7;
        android.os.PowerManager r5;
        java.lang.Object $r4;
        java.lang.StringBuilder r6;
        java.lang.String $r1;
        java.util.WeakHashMap $r2;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r0 = virtualinvoke $r0.getApplicationContext();

        $r4 = virtualinvoke $r0.getSystemService("power");

        r5 = (android.os.PowerManager) $r4;

        r6 = new java.lang.StringBuilder;

        specialinvoke r6.<init>();

        r6 = virtualinvoke r6.append("WorkManager: ");

        r6 = virtualinvoke r6.append($r1);

        $r1 = virtualinvoke r6.toString();

        $r7 = virtualinvoke r5.newWakeLock(1, $r1);

        $r2 = androidx.work.impl.utils.WakeLocks.sWakeLocks;

        entermonitor $r2;

     label1:
        virtualinvoke $r2.put($r7, $r1);

        exitmonitor $r2;

     label2:
        return $r7;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
