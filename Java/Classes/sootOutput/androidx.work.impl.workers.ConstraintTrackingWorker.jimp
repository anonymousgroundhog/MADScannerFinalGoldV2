public class androidx.work.impl.workers.ConstraintTrackingWorker extends androidx.work.ListenableWorker implements androidx.work.impl.constraints.WorkConstraintsCallback
{
    public static final java.lang.String ARGUMENT_CLASS_NAME;
    private static final java.lang.String TAG;
    volatile boolean mAreConstraintsUnmet;
    private androidx.work.ListenableWorker mDelegate;
    androidx.work.impl.utils.futures.SettableFuture mFuture;
    final java.lang.Object mLock;
    private androidx.work.WorkerParameters mWorkerParameters;

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = androidx.work.Logger.tagWithPrefix("ConstraintTrkngWrkr");

        androidx.work.impl.workers.ConstraintTrackingWorker.TAG = $r0;

        return;
    }

    public void <init>(android.content.Context, androidx.work.WorkerParameters)
    {
        android.content.Context $r1;
        androidx.work.impl.workers.ConstraintTrackingWorker r0;
        androidx.work.WorkerParameters $r2;
        java.lang.Object $r4;
        androidx.work.impl.utils.futures.SettableFuture $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.<init>($r1, $r2);

        r0.mWorkerParameters = $r2;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<init>();

        r0.mLock = $r4;

        r0.mAreConstraintsUnmet = 0;

        $r3 = androidx.work.impl.utils.futures.SettableFuture.create();

        r0.mFuture = $r3;

        return;
    }

    public androidx.work.ListenableWorker getDelegate()
    {
        androidx.work.ListenableWorker r1;
        androidx.work.impl.workers.ConstraintTrackingWorker r0;

        r0 := @this;

        r1 = r0.mDelegate;

        return r1;
    }

    public androidx.work.impl.utils.taskexecutor.TaskExecutor getTaskExecutor()
    {
        androidx.work.impl.utils.taskexecutor.TaskExecutor $r3;
        android.content.Context $r1;
        androidx.work.impl.workers.ConstraintTrackingWorker r0;
        androidx.work.impl.WorkManagerImpl $r2;

        r0 := @this;

        $r1 = virtualinvoke r0.getApplicationContext();

        $r2 = androidx.work.impl.WorkManagerImpl.getInstance($r1);

        $r3 = virtualinvoke $r2.getWorkTaskExecutor();

        return $r3;
    }

    public androidx.work.impl.WorkDatabase getWorkDatabase()
    {
        android.content.Context $r1;
        androidx.work.impl.workers.ConstraintTrackingWorker r0;
        androidx.work.impl.WorkDatabase $r3;
        androidx.work.impl.WorkManagerImpl $r2;

        r0 := @this;

        $r1 = virtualinvoke r0.getApplicationContext();

        $r2 = androidx.work.impl.WorkManagerImpl.getInstance($r1);

        $r3 = virtualinvoke $r2.getWorkDatabase();

        return $r3;
    }

    public boolean isRunInForeground()
    {
        androidx.work.ListenableWorker $r1;
        androidx.work.impl.workers.ConstraintTrackingWorker r0;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mDelegate;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.isRunInForeground();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void onAllConstraintsMet(java.util.List)
    {
        androidx.work.impl.workers.ConstraintTrackingWorker r0;
        java.util.List r1;

        r0 := @this;

        r1 := @parameter0;

        return;
    }

    public void onAllConstraintsNotMet(java.util.List)
    {
        java.lang.Throwable $r8;
        java.lang.Object[] $r4;
        androidx.work.impl.workers.ConstraintTrackingWorker r0;
        java.util.List r1;
        androidx.work.Logger $r2;
        java.lang.Throwable[] $r6;
        java.lang.Object $r7;
        java.lang.String $r3, $r5;

        r0 := @this;

        r1 := @parameter0;

        $r2 = androidx.work.Logger.get();

        $r3 = androidx.work.impl.workers.ConstraintTrackingWorker.TAG;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r1;

        $r5 = java.lang.String.format("Constraints changed for %s", $r4);

        $r6 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r2.debug($r3, $r5, $r6);

        $r7 = r0.mLock;

        entermonitor $r7;

     label1:
        r0.mAreConstraintsUnmet = 1;

        exitmonitor $r7;

     label2:
        return;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r7;

     label4:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onStopped()
    {
        androidx.work.ListenableWorker $r1;
        androidx.work.impl.workers.ConstraintTrackingWorker r0;
        boolean $z0;

        r0 := @this;

        specialinvoke r0.onStopped();

        $r1 = r0.mDelegate;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.isStopped();

        if $z0 != 0 goto label1;

        $r1 = r0.mDelegate;

        virtualinvoke $r1.stop();

     label1:
        return;
    }

    void setFutureFailed()
    {
        androidx.work.ListenableWorker$Result $r2;
        androidx.work.impl.workers.ConstraintTrackingWorker r0;
        androidx.work.impl.utils.futures.SettableFuture $r1;

        r0 := @this;

        $r1 = r0.mFuture;

        $r2 = androidx.work.ListenableWorker$Result.failure();

        virtualinvoke $r1.set($r2);

        return;
    }

    void setFutureRetry()
    {
        androidx.work.ListenableWorker$Result $r2;
        androidx.work.impl.workers.ConstraintTrackingWorker r0;
        androidx.work.impl.utils.futures.SettableFuture $r1;

        r0 := @this;

        $r1 = r0.mFuture;

        $r2 = androidx.work.ListenableWorker$Result.retry();

        virtualinvoke $r1.set($r2);

        return;
    }

    void setupAndRunConstraintTrackingWork()
    {
        java.lang.Throwable r22, $r24;
        android.content.Context $r7;
        java.lang.Object[] $r1;
        com.google.common.util.concurrent.ListenableFuture $r19;
        androidx.work.WorkerParameters r8;
        androidx.work.ListenableWorker $r9;
        androidx.work.impl.model.WorkSpec $r14;
        androidx.work.impl.workers.ConstraintTrackingWorker r0;
        androidx.work.Logger $r4;
        androidx.work.impl.constraints.WorkConstraintsTracker r15;
        androidx.work.impl.WorkDatabase $r10;
        java.lang.String $r3, $r13, $r18;
        androidx.work.Data $r2;
        boolean $z0;
        java.util.concurrent.Executor $r21;
        androidx.work.impl.model.WorkSpecDao $r11;
        java.util.UUID $r12;
        androidx.work.WorkerFactory $r6;
        androidx.work.impl.utils.taskexecutor.TaskExecutor $r16;
        java.util.List $r17;
        androidx.work.impl.workers.ConstraintTrackingWorker$2 $r20;
        java.lang.Throwable[] $r5;
        java.lang.Object $r23;

        r0 := @this;

        $r2 = virtualinvoke r0.getInputData();

        $r3 = virtualinvoke $r2.getString("androidx.work.impl.workers.ConstraintTrackingWorker.ARGUMENT_CLASS_NAME");

        $z0 = android.text.TextUtils.isEmpty($r3);

        if $z0 == 0 goto label01;

        $r4 = androidx.work.Logger.get();

        $r3 = androidx.work.impl.workers.ConstraintTrackingWorker.TAG;

        $r5 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r4.error($r3, "No worker to delegate to.", $r5);

        virtualinvoke r0.setFutureFailed();

        return;

     label01:
        $r6 = virtualinvoke r0.getWorkerFactory();

        $r7 = virtualinvoke r0.getApplicationContext();

        r8 = r0.mWorkerParameters;

        $r9 = virtualinvoke $r6.createWorkerWithDefaultFallback($r7, $r3, r8);

        r0.mDelegate = $r9;

        if $r9 != null goto label02;

        $r4 = androidx.work.Logger.get();

        $r3 = androidx.work.impl.workers.ConstraintTrackingWorker.TAG;

        $r5 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r4.debug($r3, "No worker to delegate to.", $r5);

        virtualinvoke r0.setFutureFailed();

        return;

     label02:
        $r10 = virtualinvoke r0.getWorkDatabase();

        $r11 = virtualinvoke $r10.workSpecDao();

        $r12 = virtualinvoke r0.getId();

        $r13 = virtualinvoke $r12.toString();

        $r14 = interfaceinvoke $r11.getWorkSpec($r13);

        if $r14 != null goto label03;

        virtualinvoke r0.setFutureFailed();

        return;

     label03:
        r15 = new androidx.work.impl.constraints.WorkConstraintsTracker;

        $r7 = virtualinvoke r0.getApplicationContext();

        $r16 = virtualinvoke r0.getTaskExecutor();

        specialinvoke r15.<init>($r7, $r16, r0);

        $r17 = java.util.Collections.singletonList($r14);

        virtualinvoke r15.replace($r17);

        $r12 = virtualinvoke r0.getId();

        $r13 = virtualinvoke $r12.toString();

        $z0 = virtualinvoke r15.areAllConstraintsMet($r13);

        if $z0 == 0 goto label13;

        $r4 = androidx.work.Logger.get();

        $r13 = androidx.work.impl.workers.ConstraintTrackingWorker.TAG;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r3;

        $r18 = java.lang.String.format("Constraints met for delegate %s", $r1);

        $r5 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r4.debug($r13, $r18, $r5);

     label04:
        $r9 = r0.mDelegate;

        $r19 = virtualinvoke $r9.startWork();

        $r20 = new androidx.work.impl.workers.ConstraintTrackingWorker$2;

        specialinvoke $r20.<init>(r0, $r19);

        $r21 = virtualinvoke r0.getBackgroundExecutor();

        interfaceinvoke $r19.addListener($r20, $r21);

     label05:
        return;

     label06:
        r22 := @caughtexception;

        $r4 = androidx.work.Logger.get();

        $r13 = androidx.work.impl.workers.ConstraintTrackingWorker.TAG;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r3;

        $r3 = java.lang.String.format("Delegated worker %s threw exception in startWork.", $r1);

        $r5 = newarray (java.lang.Throwable)[1];

        $r5[0] = r22;

        virtualinvoke $r4.debug($r13, $r3, $r5);

        $r23 = r0.mLock;

        entermonitor $r23;

     label07:
        $z0 = r0.mAreConstraintsUnmet;

        if $z0 == 0 goto label08;

        $r4 = androidx.work.Logger.get();

        $r5 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r4.debug($r13, "Constraints were unmet, Retrying.", $r5);

        virtualinvoke r0.setFutureRetry();

        goto label09;

     label08:
        virtualinvoke r0.setFutureFailed();

     label09:
        exitmonitor $r23;

     label10:
        goto label05;

     label11:
        $r24 := @caughtexception;

        exitmonitor $r23;

     label12:
        throw $r24;

     label13:
        $r4 = androidx.work.Logger.get();

        $r13 = androidx.work.impl.workers.ConstraintTrackingWorker.TAG;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r3;

        $r3 = java.lang.String.format("Constraints not met for delegate %s. Requesting retry.", $r1);

        $r5 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r4.debug($r13, $r3, $r5);

        virtualinvoke r0.setFutureRetry();

        return;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public com.google.common.util.concurrent.ListenableFuture startWork()
    {
        androidx.work.impl.workers.ConstraintTrackingWorker r0;
        androidx.work.impl.workers.ConstraintTrackingWorker$1 $r1;
        java.util.concurrent.Executor $r2;
        androidx.work.impl.utils.futures.SettableFuture r3;

        r0 := @this;

        $r2 = virtualinvoke r0.getBackgroundExecutor();

        $r1 = new androidx.work.impl.workers.ConstraintTrackingWorker$1;

        specialinvoke $r1.<init>(r0);

        interfaceinvoke $r2.execute($r1);

        r3 = r0.mFuture;

        return r3;
    }
}
