public final class com.google.android.gms.ads.nativead.NativeAdViewHolder extends java.lang.Object
{
    public static final java.util.WeakHashMap zza;
    private com.google.android.gms.internal.ads.zzbeh zzb;
    private java.lang.ref.WeakReference zzc;

    static void <clinit>()
    {
        java.util.WeakHashMap $r0;

        $r0 = new java.util.WeakHashMap;

        specialinvoke $r0.<init>();

        com.google.android.gms.ads.nativead.NativeAdViewHolder.zza = $r0;

        return;
    }

    public void <init>(android.view.View, java.util.Map, java.util.Map)
    {
        com.google.android.gms.internal.ads.zzbeh $r10;
        java.util.HashMap $r7, $r8;
        com.google.android.gms.ads.nativead.NativeAdViewHolder r0;
        com.google.android.gms.ads.internal.client.zzaw $r9;
        java.util.Map $r2, $r3;
        android.view.View $r1;
        java.lang.Object $r5;
        java.lang.ref.WeakReference $r6;
        java.util.WeakHashMap $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        specialinvoke r0.<init>();

        com.google.android.gms.common.internal.Preconditions.checkNotNull($r1, "ContainerView must not be null");

        $z0 = $r1 instanceof com.google.android.gms.ads.nativead.NativeAdView;

        if $z0 == 0 goto label1;

        com.google.android.gms.internal.ads.zzbza.zzg("The provided containerView is of type of NativeAdView, which cannot be usedwith NativeAdViewHolder.");

        return;

     label1:
        $r4 = com.google.android.gms.ads.nativead.NativeAdViewHolder.zza;

        $r5 = virtualinvoke $r4.get($r1);

        if $r5 == null goto label2;

        com.google.android.gms.internal.ads.zzbza.zzg("The provided containerView is already in use with another NativeAdViewHolder.");

        return;

     label2:
        virtualinvoke $r4.put($r1, r0);

        $r6 = new java.lang.ref.WeakReference;

        specialinvoke $r6.<init>($r1);

        r0.zzc = $r6;

        $r7 = com.google.android.gms.ads.nativead.NativeAdViewHolder.zza($r2);

        $r8 = com.google.android.gms.ads.nativead.NativeAdViewHolder.zza($r3);

        $r9 = com.google.android.gms.ads.internal.client.zzay.zza();

        $r10 = virtualinvoke $r9.zzi($r1, $r7, $r8);

        r0.zzb = $r10;

        return;
    }

    private static final java.util.HashMap zza(java.util.Map)
    {
        java.util.HashMap $r0;
        java.util.Map $r1;

        $r1 := @parameter0;

        if $r1 != null goto label1;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<init>();

        return $r0;

     label1:
        $r0 = new java.util.HashMap;

        specialinvoke $r0.<init>($r1);

        return $r0;
    }

    public final void setClickConfirmingView(android.view.View)
    {
        com.google.android.gms.dynamic.IObjectWrapper $r1;
        com.google.android.gms.ads.nativead.NativeAdViewHolder r0;
        com.google.android.gms.internal.ads.zzbeh $r3;
        android.view.View $r2;
        android.os.RemoteException $r4;

        r0 := @this;

        $r2 := @parameter0;

        $r3 = r0.zzb;

     label1:
        $r1 = com.google.android.gms.dynamic.ObjectWrapper.wrap($r2);

        interfaceinvoke $r3.zzb($r1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        com.google.android.gms.internal.ads.zzbza.zzh("Unable to call setClickConfirmingView on delegate", $r4);

        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setNativeAd(com.google.android.gms.ads.nativead.NativeAd)
    {
        com.google.android.gms.dynamic.IObjectWrapper $r9;
        com.google.android.gms.internal.ads.zzbeh $r7;
        android.os.RemoteException $r8;
        com.google.android.gms.ads.nativead.NativeAd $r2;
        com.google.android.gms.ads.nativead.NativeAdViewHolder r0;
        android.view.View $r6;
        java.lang.Object $r3, $r5;
        java.lang.ref.WeakReference $r4;
        java.util.WeakHashMap $r1;
        boolean $z0;

        r0 := @this;

        $r2 := @parameter0;

        $r3 = virtualinvoke $r2.zza();

        $r4 = r0.zzc;

        if $r4 == null goto label1;

        $r5 = virtualinvoke $r4.get();

        $r6 = (android.view.View) $r5;

        goto label2;

     label1:
        $r6 = null;

     label2:
        if $r6 != null goto label3;

        com.google.android.gms.internal.ads.zzbza.zzj("NativeAdViewHolder.setNativeAd containerView doesn\'t exist, returning");

        return;

     label3:
        $r1 = com.google.android.gms.ads.nativead.NativeAdViewHolder.zza;

        $z0 = virtualinvoke $r1.containsKey($r6);

        if $z0 != 0 goto label4;

        virtualinvoke $r1.put($r6, r0);

     label4:
        $r7 = r0.zzb;

        if $r7 == null goto label8;

        $r9 = (com.google.android.gms.dynamic.IObjectWrapper) $r3;

     label5:
        interfaceinvoke $r7.zzc($r9);

     label6:
        return;

     label7:
        $r8 := @caughtexception;

        com.google.android.gms.internal.ads.zzbza.zzh("Unable to call setNativeAd on delegate", $r8);

     label8:
        return;

        catch android.os.RemoteException from label5 to label6 with label7;
    }

    public void unregisterNativeAd()
    {
        com.google.android.gms.ads.nativead.NativeAdViewHolder r0;
        com.google.android.gms.internal.ads.zzbeh $r2;
        android.view.View $r5;
        java.lang.Object $r1;
        android.os.RemoteException $r3;
        java.lang.ref.WeakReference $r4;
        java.util.WeakHashMap $r6;

        r0 := @this;

        $r2 = r0.zzb;

        if $r2 == null goto label4;

     label1:
        interfaceinvoke $r2.zzd();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        com.google.android.gms.internal.ads.zzbza.zzh("Unable to call unregisterNativeAd on delegate", $r3);

     label4:
        $r4 = r0.zzc;

        if $r4 == null goto label5;

        $r1 = virtualinvoke $r4.get();

        $r5 = (android.view.View) $r1;

        goto label6;

     label5:
        $r5 = null;

     label6:
        if $r5 == null goto label7;

        $r6 = com.google.android.gms.ads.nativead.NativeAdViewHolder.zza;

        virtualinvoke $r6.remove($r5);

     label7:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }
}
