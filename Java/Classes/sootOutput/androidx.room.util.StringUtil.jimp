public class androidx.room.util.StringUtil extends java.lang.Object
{
    public static final java.lang.String[] EMPTY_STRING_ARRAY;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[0];

        androidx.room.util.StringUtil.EMPTY_STRING_ARRAY = $r0;

        return;
    }

    private void <init>()
    {
        androidx.room.util.StringUtil r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static void appendPlaceholders(java.lang.StringBuilder, int)
    {
        int $i0, i1, $i2;
        java.lang.StringBuilder $r0;

        $r0 := @parameter0;

        $i0 := @parameter1;

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        virtualinvoke $r0.append("?");

        $i2 = $i0 + -1;

        if i1 >= $i2 goto label2;

        virtualinvoke $r0.append(",");

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public static java.lang.String joinIntoString(java.util.List)
    {
        java.lang.Integer $r3;
        java.util.List r0;
        int $i0, i1, $i2;
        java.lang.StringBuilder r1, $r5;
        java.lang.Object $r2;
        java.lang.String $r4;

        r0 := @parameter0;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = interfaceinvoke r0.size();

        if $i0 != 0 goto label2;

        return "";

     label2:
        $r5 = new java.lang.StringBuilder;

        r1 = $r5;

        specialinvoke $r5.<init>();

        i1 = 0;

     label3:
        if i1 >= $i0 goto label5;

        $r2 = interfaceinvoke r0.get(i1);

        $r3 = (java.lang.Integer) $r2;

        $i2 = virtualinvoke $r3.intValue();

        $r4 = java.lang.Integer.toString($i2);

        virtualinvoke r1.append($r4);

        $i2 = $i0 + -1;

        if i1 >= $i2 goto label4;

        virtualinvoke r1.append(",");

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        $r4 = virtualinvoke r1.toString();

        return $r4;
    }

    public static java.lang.StringBuilder newStringBuilder()
    {
        java.lang.StringBuilder $r0;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<init>();

        return $r0;
    }

    public static java.util.List splitToIntList(java.lang.String)
    {
        java.util.StringTokenizer r1;
        int $i0;
        java.lang.NumberFormatException r4;
        java.lang.String $r0;
        java.lang.Integer $r3;
        java.util.ArrayList r2;
        boolean $z0;

        $r0 := @parameter0;

        if $r0 != null goto label1;

        return null;

     label1:
        r2 = new java.util.ArrayList;

        specialinvoke r2.<init>();

        r1 = new java.util.StringTokenizer;

        specialinvoke r1.<init>($r0, ",");

     label2:
        $z0 = virtualinvoke r1.hasMoreElements();

        if $z0 == 0 goto label6;

        $r0 = virtualinvoke r1.nextToken();

     label3:
        $i0 = java.lang.Integer.parseInt($r0);

        $r3 = java.lang.Integer.valueOf($i0);

        interfaceinvoke r2.add($r3);

     label4:
        goto label2;

     label5:
        r4 := @caughtexception;

        android.util.Log.e("ROOM", "Malformed integer list", r4);

        goto label2;

     label6:
        return r2;

        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }
}
