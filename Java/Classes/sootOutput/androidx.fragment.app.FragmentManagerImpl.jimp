final class androidx.fragment.app.FragmentManagerImpl extends androidx.fragment.app.FragmentManager implements android.view.LayoutInflater$Factory2
{
    static final int ANIM_DUR;
    public static final int ANIM_STYLE_CLOSE_ENTER;
    public static final int ANIM_STYLE_CLOSE_EXIT;
    public static final int ANIM_STYLE_FADE_ENTER;
    public static final int ANIM_STYLE_FADE_EXIT;
    public static final int ANIM_STYLE_OPEN_ENTER;
    public static final int ANIM_STYLE_OPEN_EXIT;
    static boolean DEBUG;
    static final android.view.animation.Interpolator DECELERATE_CUBIC;
    static final android.view.animation.Interpolator DECELERATE_QUINT;
    static final java.lang.String TAG;
    static final java.lang.String TARGET_REQUEST_CODE_STATE_TAG;
    static final java.lang.String TARGET_STATE_TAG;
    static final java.lang.String USER_VISIBLE_HINT_TAG;
    static final java.lang.String VIEW_STATE_TAG;
    final java.util.HashMap mActive;
    final java.util.ArrayList mAdded;
    java.util.ArrayList mAvailBackStackIndices;
    java.util.ArrayList mBackStack;
    java.util.ArrayList mBackStackChangeListeners;
    java.util.ArrayList mBackStackIndices;
    androidx.fragment.app.FragmentContainer mContainer;
    java.util.ArrayList mCreatedMenus;
    int mCurState;
    boolean mDestroyed;
    java.lang.Runnable mExecCommit;
    boolean mExecutingActions;
    boolean mHavePendingDeferredStart;
    androidx.fragment.app.FragmentHostCallback mHost;
    private final java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks;
    boolean mNeedMenuInvalidate;
    int mNextFragmentIndex;
    private androidx.fragment.app.FragmentManagerViewModel mNonConfig;
    private final androidx.activity.OnBackPressedCallback mOnBackPressedCallback;
    private androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher;
    androidx.fragment.app.Fragment mParent;
    java.util.ArrayList mPendingActions;
    java.util.ArrayList mPostponedTransactions;
    androidx.fragment.app.Fragment mPrimaryNav;
    android.util.SparseArray mStateArray;
    android.os.Bundle mStateBundle;
    boolean mStateSaved;
    boolean mStopped;
    java.util.ArrayList mTmpAddedFragments;
    java.util.ArrayList mTmpIsPop;
    java.util.ArrayList mTmpRecords;

    static void <clinit>()
    {
        android.view.animation.DecelerateInterpolator $r0;

        androidx.fragment.app.FragmentManagerImpl.DEBUG = 0;

        $r0 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r0.<init>(2.5F);

        androidx.fragment.app.FragmentManagerImpl.DECELERATE_QUINT = $r0;

        $r0 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r0.<init>(1.5F);

        androidx.fragment.app.FragmentManagerImpl.DECELERATE_CUBIC = $r0;

        return;
    }

    void <init>()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentManagerImpl$2 $r5;
        androidx.fragment.app.FragmentManagerImpl$1 $r3;
        java.util.HashMap $r2;
        java.util.ArrayList $r1;
        java.util.concurrent.CopyOnWriteArrayList $r4;

        r0 := @this;

        specialinvoke r0.<init>();

        r0.mNextFragmentIndex = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<init>();

        r0.mAdded = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<init>();

        r0.mActive = $r2;

        $r3 = new androidx.fragment.app.FragmentManagerImpl$1;

        specialinvoke $r3.<init>(r0, 0);

        r0.mOnBackPressedCallback = $r3;

        $r4 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r4.<init>();

        r0.mLifecycleCallbacks = $r4;

        r0.mCurState = 0;

        r0.mStateBundle = null;

        r0.mStateArray = null;

        $r5 = new androidx.fragment.app.FragmentManagerImpl$2;

        specialinvoke $r5.<init>(r0);

        r0.mExecCommit = $r5;

        return;
    }

    private void addAddedFragments(androidx.collection.ArraySet)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.collection.ArraySet r1;
        java.util.ArrayList r2;
        int i0, $i1, i2, $i3, $i4;
        androidx.fragment.app.Fragment r4;
        android.view.View $r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        i0 = r0.mCurState;

        if i0 >= 1 goto label1;

        return;

     label1:
        i0 = java.lang.Math.min(i0, 3);

        r2 = r0.mAdded;

        $i1 = virtualinvoke r2.size();

        i2 = 0;

     label2:
        if i2 >= $i1 goto label4;

        r2 = r0.mAdded;

        $r3 = virtualinvoke r2.get(i2);

        r4 = (androidx.fragment.app.Fragment) $r3;

        $i3 = r4.mState;

        if $i3 >= i0 goto label3;

        $i3 = virtualinvoke r4.getNextAnim();

        $i4 = virtualinvoke r4.getNextTransition();

        virtualinvoke r0.moveToState(r4, i0, $i3, $i4, 0);

        $r5 = r4.mView;

        if $r5 == null goto label3;

        $z0 = r4.mHidden;

        if $z0 != 0 goto label3;

        $z0 = r4.mIsNewlyAdded;

        if $z0 == 0 goto label3;

        virtualinvoke r1.add(r4);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return;
    }

    private void animateRemoveFragment(androidx.fragment.app.Fragment, androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator, int)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentManagerImpl$4 $r10;
        androidx.fragment.app.FragmentManagerImpl$3 $r7;
        android.animation.Animator r8, $r9;
        android.view.ViewGroup r4;
        androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation r6;
        androidx.fragment.app.Fragment $r1;
        int $i0;
        android.view.View r3;
        android.view.animation.Animation r5;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 := @parameter2;

        r3 = $r1.mView;

        r4 = $r1.mContainer;

        virtualinvoke r4.startViewTransition(r3);

        virtualinvoke $r1.setStateAfterAnimating($i0);

        r5 = $r2.animation;

        if r5 == null goto label1;

        r6 = new androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation;

        r5 = $r2.animation;

        specialinvoke r6.<init>(r5, r4, r3);

        r3 = $r1.mView;

        virtualinvoke $r1.setAnimatingAway(r3);

        $r7 = new androidx.fragment.app.FragmentManagerImpl$3;

        specialinvoke $r7.<init>(r0, r4, $r1);

        virtualinvoke r6.setAnimationListener($r7);

        r3 = $r1.mView;

        virtualinvoke r3.startAnimation(r6);

        return;

     label1:
        r8 = $r2.animator;

        $r9 = $r2.animator;

        virtualinvoke $r1.setAnimator($r9);

        $r10 = new androidx.fragment.app.FragmentManagerImpl$4;

        specialinvoke $r10.<init>(r0, r4, r3, $r1);

        virtualinvoke r8.addListener($r10);

        r3 = $r1.mView;

        virtualinvoke r8.setTarget(r3);

        virtualinvoke r8.start();

        return;
    }

    private void burpActive()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.Collection $r2;
        java.util.Set $r3;
        java.util.HashMap r1;

        r0 := @this;

        r1 = r0.mActive;

        $r2 = virtualinvoke r1.values();

        $r3 = java.util.Collections.singleton(null);

        interfaceinvoke $r2.removeAll($r3);

        return;
    }

    private void checkStateLoss()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.lang.IllegalStateException $r1;
        boolean $z0;

        r0 := @this;

        $z0 = virtualinvoke r0.isStateSaved();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<init>("Can not perform this action after onSaveInstanceState");

        throw $r1;
    }

    private void cleanupExec()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.ArrayList $r1;

        r0 := @this;

        r0.mExecutingActions = 0;

        $r1 = r0.mTmpIsPop;

        virtualinvoke $r1.clear();

        $r1 = r0.mTmpRecords;

        virtualinvoke $r1.clear();

        return;
    }

    private void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.Fragment $r1;
        java.lang.Object $r3;
        java.util.HashMap $r4;
        java.lang.String $r2;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 == null goto label1;

        $r4 = r0.mActive;

        $r2 = $r1.mWho;

        $r3 = virtualinvoke $r4.get($r2);

        if $r3 != $r1 goto label1;

        virtualinvoke $r1.performPrimaryNavigationFragmentChanged();

     label1:
        return;
    }

    private void dispatchStateChange(int)
    {
        int $i0;
        java.lang.Throwable $r1;
        androidx.fragment.app.FragmentManagerImpl r0;

        r0 := @this;

        $i0 := @parameter0;

     label1:
        r0.mExecutingActions = 1;

        virtualinvoke r0.moveToState($i0, 0);

     label2:
        r0.mExecutingActions = 0;

        virtualinvoke r0.execPendingActions();

        return;

     label3:
        $r1 := @caughtexception;

        r0.mExecutingActions = 0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void endAnimatingAwayFragments()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        java.util.HashMap $r1;
        android.animation.Animator $r8;
        androidx.fragment.app.Fragment r5;
        int $i0;
        android.view.View $r6;
        java.lang.Object $r4;
        android.view.animation.Animation $r7;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mActive;

        $r2 = virtualinvoke $r1.values();

        $r3 = interfaceinvoke $r2.iterator();

     label1:
        $z0 = interfaceinvoke $r3.hasNext();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.next();

        r5 = (androidx.fragment.app.Fragment) $r4;

        if r5 == null goto label1;

        $r6 = virtualinvoke r5.getAnimatingAway();

        if $r6 == null goto label3;

        $i0 = virtualinvoke r5.getStateAfterAnimating();

        $r6 = virtualinvoke r5.getAnimatingAway();

        $r7 = virtualinvoke $r6.getAnimation();

        if $r7 == null goto label2;

        virtualinvoke $r7.cancel();

        virtualinvoke $r6.clearAnimation();

     label2:
        virtualinvoke r5.setAnimatingAway(null);

        virtualinvoke r0.moveToState(r5, $i0, 0, 0, 0);

        goto label4;

     label3:
        $r8 = virtualinvoke r5.getAnimator();

        if $r8 == null goto label4;

        $r8 = virtualinvoke r5.getAnimator();

        virtualinvoke $r8.end();

        goto label1;

     label4:
        goto label1;

     label5:
        return;
    }

    private void ensureExecReady(boolean)
    {
        java.lang.Throwable $r6;
        androidx.fragment.app.FragmentManagerImpl r0;
        java.lang.IllegalStateException $r7;
        androidx.fragment.app.FragmentHostCallback $r1;
        java.util.ArrayList $r5;
        android.os.Looper $r2, $r4;
        android.os.Handler $r3;
        boolean $z0, $z1;

        r0 := @this;

        $z0 := @parameter0;

        $z1 = r0.mExecutingActions;

        if $z1 != 0 goto label8;

        $r1 = r0.mHost;

        if $r1 == null goto label7;

        $r2 = android.os.Looper.myLooper();

        $r1 = r0.mHost;

        $r3 = virtualinvoke $r1.getHandler();

        $r4 = virtualinvoke $r3.getLooper();

        if $r2 != $r4 goto label6;

        if $z0 != 0 goto label1;

        specialinvoke r0.checkStateLoss();

     label1:
        $r5 = r0.mTmpRecords;

        if $r5 != null goto label2;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<init>();

        r0.mTmpRecords = $r5;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<init>();

        r0.mTmpIsPop = $r5;

     label2:
        r0.mExecutingActions = 1;

     label3:
        specialinvoke r0.executePostponedTransaction(null, null);

     label4:
        r0.mExecutingActions = 0;

        return;

     label5:
        $r6 := @caughtexception;

        r0.mExecutingActions = 0;

        throw $r6;

     label6:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<init>("Must be called from main thread of fragment host");

        throw $r7;

     label7:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<init>("Fragment host has been destroyed");

        throw $r7;

     label8:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<init>("FragmentManager is already executing transactions");

        throw $r7;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    private static void executeOps(java.util.ArrayList, java.util.ArrayList, int, int)
    {
        androidx.fragment.app.BackStackRecord r3;
        java.util.ArrayList r0, r1;
        int $i0, $i1, $i2;
        java.lang.Boolean r4;
        java.lang.Object $r2;
        boolean $z0, z1;

        r0 := @parameter0;

        r1 := @parameter1;

        $i0 := @parameter2;

        $i1 := @parameter3;

     label1:
        if $i0 >= $i1 goto label6;

        $r2 = virtualinvoke r0.get($i0);

        r3 = (androidx.fragment.app.BackStackRecord) $r2;

        $r2 = virtualinvoke r1.get($i0);

        r4 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke r4.booleanValue();

        z1 = 1;

        if $z0 == 0 goto label4;

        virtualinvoke r3.bumpBackStackNesting(-1);

        $i2 = $i1 + -1;

        if $i0 != $i2 goto label2;

        goto label3;

     label2:
        z1 = 0;

     label3:
        virtualinvoke r3.executePopOps(z1);

        goto label5;

     label4:
        virtualinvoke r3.bumpBackStackNesting(1);

        virtualinvoke r3.executeOps();

     label5:
        $i0 = $i0 + 1;

        goto label1;

     label6:
        return;
    }

    private void executeOpsTogether(java.util.ArrayList, java.util.ArrayList, int, int)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.collection.ArraySet r9, $r10;
        androidx.fragment.app.BackStackRecord r4;
        java.util.ArrayList r1, r2, r5, r6;
        int $i0, $i1, i2;
        androidx.fragment.app.Fragment $r7;
        java.lang.Boolean r8;
        boolean z0, z1, $z2, $z3;
        java.lang.Object $r3;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $i0 := @parameter2;

        $i1 := @parameter3;

        $r3 = virtualinvoke r1.get($i0);

        r4 = (androidx.fragment.app.BackStackRecord) $r3;

        z0 = r4.mReorderingAllowed;

        r5 = r0.mTmpAddedFragments;

        if r5 != null goto label01;

        r6 = new java.util.ArrayList;

        specialinvoke r6.<init>();

        r0.mTmpAddedFragments = r6;

        goto label02;

     label01:
        virtualinvoke r5.clear();

     label02:
        r5 = r0.mTmpAddedFragments;

        r6 = r0.mAdded;

        virtualinvoke r5.addAll(r6);

        i2 = $i0;

        z1 = 0;

        $r7 = virtualinvoke r0.getPrimaryNavigationFragment();

     label03:
        $z2 = 1;

        if i2 >= $i1 goto label08;

        $r3 = virtualinvoke r1.get(i2);

        r4 = (androidx.fragment.app.BackStackRecord) $r3;

        $r3 = virtualinvoke r2.get(i2);

        r8 = (java.lang.Boolean) $r3;

        $z3 = virtualinvoke r8.booleanValue();

        if $z3 != 0 goto label04;

        r5 = r0.mTmpAddedFragments;

        $r7 = virtualinvoke r4.expandOps(r5, $r7);

        goto label05;

     label04:
        r5 = r0.mTmpAddedFragments;

        $r7 = virtualinvoke r4.trackAddedFragmentsInPop(r5, $r7);

     label05:
        if z1 != 0 goto label07;

        z1 = r4.mAddToBackStack;

        if z1 == 0 goto label06;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        z1 = $z2;

        i2 = i2 + 1;

        goto label03;

     label08:
        r5 = r0.mTmpAddedFragments;

        virtualinvoke r5.clear();

        if z0 != 0 goto label09;

        androidx.fragment.app.FragmentTransition.startTransitions(r0, r1, r2, $i0, $i1, 0);

     label09:
        androidx.fragment.app.FragmentManagerImpl.executeOps(r1, r2, $i0, $i1);

        i2 = $i1;

        if z0 == 0 goto label10;

        $r10 = new androidx.collection.ArraySet;

        r9 = $r10;

        specialinvoke $r10.<init>();

        specialinvoke r0.addAddedFragments(r9);

        i2 = specialinvoke r0.postponePostponableTransactions(r1, r2, $i0, $i1, r9);

        specialinvoke r0.makeRemovedFragmentsInvisible(r9);

     label10:
        if i2 == $i0 goto label11;

        if z0 == 0 goto label11;

        androidx.fragment.app.FragmentTransition.startTransitions(r0, r1, r2, $i0, i2, 1);

        i2 = r0.mCurState;

        virtualinvoke r0.moveToState(i2, 1);

     label11:
        if $i0 >= $i1 goto label13;

        $r3 = virtualinvoke r1.get($i0);

        r4 = (androidx.fragment.app.BackStackRecord) $r3;

        $r3 = virtualinvoke r2.get($i0);

        r8 = (java.lang.Boolean) $r3;

        z0 = virtualinvoke r8.booleanValue();

        if z0 == 0 goto label12;

        i2 = r4.mIndex;

        if i2 < 0 goto label12;

        i2 = r4.mIndex;

        virtualinvoke r0.freeBackStackIndex(i2);

        i2 = -1;

        r4.mIndex = i2;

     label12:
        virtualinvoke r4.runOnCommitRunnables();

        $i0 = $i0 + 1;

        goto label11;

     label13:
        if z1 == 0 goto label14;

        virtualinvoke r0.reportBackStackChanged();

     label14:
        return;
    }

    private void executePostponedTransaction(java.util.ArrayList, java.util.ArrayList)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.BackStackRecord r6;
        java.util.ArrayList r1, r2, r3;
        androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener r5;
        int i0, i1, $i2;
        java.lang.Boolean r7;
        java.lang.Object $r4;
        boolean z0;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        r3 = r0.mPostponedTransactions;

        if r3 != null goto label1;

        i0 = 0;

        goto label2;

     label1:
        i0 = virtualinvoke r3.size();

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label8;

        r3 = r0.mPostponedTransactions;

        $r4 = virtualinvoke r3.get(i1);

        r5 = (androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener) $r4;

        if r1 == null goto label4;

        z0 = r5.mIsBack;

        if z0 != 0 goto label4;

        r6 = r5.mRecord;

        $i2 = virtualinvoke r1.indexOf(r6);

        if $i2 == -1 goto label4;

        $r4 = virtualinvoke r2.get($i2);

        r7 = (java.lang.Boolean) $r4;

        z0 = virtualinvoke r7.booleanValue();

        if z0 == 0 goto label4;

        r3 = r0.mPostponedTransactions;

        virtualinvoke r3.remove(i1);

        i1 = i1 + -1;

        i0 = i0 + -1;

        virtualinvoke r5.cancelTransaction();

        goto label7;

     label4:
        z0 = virtualinvoke r5.isReady();

        if z0 != 0 goto label5;

        if r1 == null goto label7;

        r6 = r5.mRecord;

        $i2 = virtualinvoke r1.size();

        z0 = virtualinvoke r6.interactsWith(r1, 0, $i2);

        if z0 == 0 goto label7;

     label5:
        r3 = r0.mPostponedTransactions;

        virtualinvoke r3.remove(i1);

        i1 = i1 + -1;

        i0 = i0 + -1;

        if r1 == null goto label6;

        z0 = r5.mIsBack;

        if z0 != 0 goto label6;

        r6 = r5.mRecord;

        $i2 = virtualinvoke r1.indexOf(r6);

        if $i2 == -1 goto label6;

        $r4 = virtualinvoke r2.get($i2);

        r7 = (java.lang.Boolean) $r4;

        z0 = virtualinvoke r7.booleanValue();

        if z0 == 0 goto label6;

        virtualinvoke r5.cancelTransaction();

        goto label7;

     label6:
        virtualinvoke r5.completeTransaction();

     label7:
        i1 = i1 + 1;

        goto label3;

     label8:
        return;
    }

    private androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        android.view.ViewGroup r2, $r6;
        java.util.ArrayList r4;
        androidx.fragment.app.Fragment $r1;
        int $i0;
        android.view.View r3;
        java.lang.Object $r5;

        r0 := @this;

        $r1 := @parameter0;

        r2 = $r1.mContainer;

        r3 = $r1.mView;

        if r2 == null goto label4;

        if r3 != null goto label1;

        return null;

     label1:
        r4 = r0.mAdded;

        $i0 = virtualinvoke r4.indexOf($r1);

        $i0 = $i0 + -1;

     label2:
        if $i0 < 0 goto label4;

        r4 = r0.mAdded;

        $r5 = virtualinvoke r4.get($i0);

        $r1 = (androidx.fragment.app.Fragment) $r5;

        $r6 = $r1.mContainer;

        if $r6 != r2 goto label3;

        r3 = $r1.mView;

        if r3 == null goto label3;

        return $r1;

     label3:
        $i0 = $i0 + -1;

        goto label2;

     label4:
        return null;
    }

    private void forcePostponedTransactions()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener $r3;
        java.lang.Object $r2;
        java.util.ArrayList $r1;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mPostponedTransactions;

        if $r1 == null goto label2;

     label1:
        $r1 = r0.mPostponedTransactions;

        $z0 = virtualinvoke $r1.isEmpty();

        if $z0 != 0 goto label2;

        $r1 = r0.mPostponedTransactions;

        $r2 = virtualinvoke $r1.remove(0);

        $r3 = (androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener) $r2;

        virtualinvoke $r3.completeTransaction();

        goto label1;

     label2:
        return;
    }

    private boolean generateOpsForPendingActions(java.util.ArrayList, java.util.ArrayList)
    {
        java.lang.Throwable r9;
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentHostCallback r6;
        androidx.fragment.app.FragmentManagerImpl$OpGenerator $r5;
        java.lang.Runnable $r8;
        java.util.ArrayList r1, r2, r3;
        android.os.Handler $r7;
        int $i0, i1;
        java.lang.Object $r4;
        boolean z0, $z1;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        z0 = 0;

        entermonitor r0;

     label01:
        r3 = r0.mPendingActions;

        if r3 == null goto label06;

        $i0 = virtualinvoke r3.size();

        if $i0 != 0 goto label02;

        goto label06;

     label02:
        r3 = r0.mPendingActions;

        $i0 = virtualinvoke r3.size();

        i1 = 0;

     label03:
        if i1 >= $i0 goto label04;

        r3 = r0.mPendingActions;

        $r4 = virtualinvoke r3.get(i1);

        $r5 = (androidx.fragment.app.FragmentManagerImpl$OpGenerator) $r4;

        $z1 = interfaceinvoke $r5.generateOps(r1, r2);

        z0 = z0 | $z1;

        i1 = i1 + 1;

        goto label03;

     label04:
        r1 = r0.mPendingActions;

        virtualinvoke r1.clear();

        r6 = r0.mHost;

        $r7 = virtualinvoke r6.getHandler();

        $r8 = r0.mExecCommit;

        virtualinvoke $r7.removeCallbacks($r8);

        exitmonitor r0;

     label05:
        return z0;

     label06:
        exitmonitor r0;

     label07:
        return 0;

     label08:
        r9 := @caughtexception;

        exitmonitor r0;

     label09:
        goto label10;

     label10:
        throw r9;

        catch java.lang.Throwable from label01 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private boolean isMenuAvailable(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.Fragment $r1;
        androidx.fragment.app.FragmentManagerImpl r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = $r1.mHasMenu;

        if $z0 == 0 goto label1;

        $z0 = $r1.mMenuVisible;

        if $z0 != 0 goto label2;

     label1:
        r0 = $r1.mChildFragmentManager;

        $z0 = virtualinvoke r0.checkForMenus();

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    static androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float, float)
    {
        android.view.animation.Interpolator $r1;
        float $f0, $f1;
        android.view.animation.AlphaAnimation r0;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $r2;

        $f0 := @parameter0;

        $f1 := @parameter1;

        r0 = new android.view.animation.AlphaAnimation;

        specialinvoke r0.<init>($f0, $f1);

        $r1 = androidx.fragment.app.FragmentManagerImpl.DECELERATE_CUBIC;

        virtualinvoke r0.setInterpolator($r1);

        virtualinvoke r0.setDuration(220L);

        $r2 = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        specialinvoke $r2.<init>(r0);

        return $r2;
    }

    static androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(float, float, float, float)
    {
        android.view.animation.ScaleAnimation $r1;
        android.view.animation.Interpolator $r2;
        android.view.animation.AnimationSet r0;
        float $f0, $f1, $f2, $f3;
        android.view.animation.AlphaAnimation r3;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $r4;

        $f0 := @parameter0;

        $f1 := @parameter1;

        $f2 := @parameter2;

        $f3 := @parameter3;

        r0 = new android.view.animation.AnimationSet;

        specialinvoke r0.<init>(0);

        $r1 = new android.view.animation.ScaleAnimation;

        specialinvoke $r1.<init>($f0, $f1, $f0, $f1, 1, 0.5F, 1, 0.5F);

        $r2 = androidx.fragment.app.FragmentManagerImpl.DECELERATE_QUINT;

        virtualinvoke $r1.setInterpolator($r2);

        virtualinvoke $r1.setDuration(220L);

        virtualinvoke r0.addAnimation($r1);

        r3 = new android.view.animation.AlphaAnimation;

        specialinvoke r3.<init>($f2, $f3);

        $r2 = androidx.fragment.app.FragmentManagerImpl.DECELERATE_CUBIC;

        virtualinvoke r3.setInterpolator($r2);

        virtualinvoke r3.setDuration(220L);

        virtualinvoke r0.addAnimation(r3);

        $r4 = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        specialinvoke $r4.<init>(r0);

        return $r4;
    }

    private void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.collection.ArraySet r1;
        int $i0, i1;
        androidx.fragment.app.Fragment r3;
        android.view.View $r4;
        float $f0;
        java.lang.Object $r2;
        boolean z0;

        r0 := @this;

        r1 := @parameter0;

        $i0 = virtualinvoke r1.size();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        $r2 = virtualinvoke r1.valueAt(i1);

        r3 = (androidx.fragment.app.Fragment) $r2;

        z0 = r3.mAdded;

        if z0 != 0 goto label2;

        $r4 = virtualinvoke r3.requireView();

        $f0 = virtualinvoke $r4.getAlpha();

        r3.mPostponedAlpha = $f0;

        virtualinvoke $r4.setAlpha(0.0F);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private boolean popBackStackImmediate(java.lang.String, int, int)
    {
        java.lang.Throwable $r6;
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentManager $r5;
        java.util.ArrayList $r2, $r3;
        int $i0, $i1;
        androidx.fragment.app.Fragment r4;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        virtualinvoke r0.execPendingActions();

        specialinvoke r0.ensureExecReady(1);

        r4 = r0.mPrimaryNav;

        if r4 == null goto label1;

        if $i0 >= 0 goto label1;

        if $r1 != null goto label1;

        $r5 = virtualinvoke r4.getChildFragmentManager();

        $z0 = virtualinvoke $r5.popBackStackImmediate();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = r0.mTmpRecords;

        $r3 = r0.mTmpIsPop;

        $z0 = virtualinvoke r0.popBackStackState($r2, $r3, $r1, $i0, $i1);

        if $z0 == 0 goto label5;

        r0.mExecutingActions = 1;

     label2:
        $r2 = r0.mTmpRecords;

        $r3 = r0.mTmpIsPop;

        specialinvoke r0.removeRedundantOperationsAndExecute($r2, $r3);

     label3:
        specialinvoke r0.cleanupExec();

        goto label5;

     label4:
        $r6 := @caughtexception;

        specialinvoke r0.cleanupExec();

        throw $r6;

     label5:
        specialinvoke r0.updateOnBackPressedCallbackEnabled();

        virtualinvoke r0.doPendingDeferredStart();

        specialinvoke r0.burpActive();

        return $z0;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private int postponePostponableTransactions(java.util.ArrayList, java.util.ArrayList, int, int, androidx.collection.ArraySet)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.collection.ArraySet r3;
        androidx.fragment.app.BackStackRecord r6;
        java.util.ArrayList r1, r2, $r4, $r9;
        androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener r8, $r10;
        int $i0, $i1, i2, i3, i4;
        java.lang.Boolean r7;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $i0 := @parameter2;

        $i1 := @parameter3;

        r3 := @parameter4;

        i2 = $i1;

        i3 = -1;

        i3 = $i1 + i3;

     label1:
        if i3 < $i0 goto label9;

        $r5 = virtualinvoke r1.get(i3);

        r6 = (androidx.fragment.app.BackStackRecord) $r5;

        $r5 = virtualinvoke r2.get(i3);

        r7 = (java.lang.Boolean) $r5;

        $z0 = virtualinvoke r7.booleanValue();

        $z1 = virtualinvoke r6.isPostponed();

        if $z1 == 0 goto label2;

        i4 = i3 + 1;

        $z1 = virtualinvoke r6.interactsWith(r1, i4, $i1);

        if $z1 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        if $z1 == 0 goto label8;

        $r4 = r0.mPostponedTransactions;

        if $r4 != null goto label4;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<init>();

        r0.mPostponedTransactions = $r9;

     label4:
        $r10 = new androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener;

        r8 = $r10;

        specialinvoke $r10.<init>(r6, $z0);

        $r4 = r0.mPostponedTransactions;

        virtualinvoke $r4.add(r8);

        virtualinvoke r6.setOnStartPostponedListener(r8);

        if $z0 == 0 goto label5;

        virtualinvoke r6.executeOps();

        goto label6;

     label5:
        virtualinvoke r6.executePopOps(0);

     label6:
        i4 = -1;

        i2 = i2 + i4;

        if i3 == i2 goto label7;

        virtualinvoke r1.remove(i3);

        virtualinvoke r1.add(i2, r6);

     label7:
        specialinvoke r0.addAddedFragments(r3);

     label8:
        i4 = -1;

        i3 = i3 + i4;

        goto label1;

     label9:
        return i2;
    }

    private void removeRedundantOperationsAndExecute(java.util.ArrayList, java.util.ArrayList)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.lang.IllegalStateException $r6;
        androidx.fragment.app.BackStackRecord r4;
        java.util.ArrayList r1, r2;
        int $i0, $i1, i2, i3;
        java.lang.Boolean $r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        if r1 == null goto label9;

        $z0 = virtualinvoke r1.isEmpty();

        if $z0 == 0 goto label1;

        return;

     label1:
        if r2 == null goto label8;

        $i0 = virtualinvoke r1.size();

        $i1 = virtualinvoke r2.size();

        if $i0 != $i1 goto label8;

        specialinvoke r0.executePostponedTransaction(r1, r2);

        $i0 = virtualinvoke r1.size();

        $i1 = 0;

        i2 = 0;

     label2:
        if i2 >= $i0 goto label7;

        $r3 = virtualinvoke r1.get(i2);

        r4 = (androidx.fragment.app.BackStackRecord) $r3;

        $z0 = r4.mReorderingAllowed;

        if $z0 != 0 goto label6;

        if $i1 == i2 goto label3;

        specialinvoke r0.executeOpsTogether(r1, r2, $i1, i2);

     label3:
        i3 = i2 + 1;

        $r3 = virtualinvoke r2.get(i2);

        $r5 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r5.booleanValue();

        if $z0 == 0 goto label5;

     label4:
        if i3 >= $i0 goto label5;

        $r3 = virtualinvoke r2.get(i3);

        $r5 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r5.booleanValue();

        if $z0 == 0 goto label5;

        $r3 = virtualinvoke r1.get(i3);

        r4 = (androidx.fragment.app.BackStackRecord) $r3;

        $z0 = r4.mReorderingAllowed;

        if $z0 != 0 goto label5;

        i3 = i3 + 1;

        goto label4;

     label5:
        specialinvoke r0.executeOpsTogether(r1, r2, i2, i3);

        $i1 = i3;

        i2 = -1;

        i2 = i3 + i2;

     label6:
        i2 = i2 + 1;

        goto label2;

     label7:
        if $i1 == $i0 goto label9;

        specialinvoke r0.executeOpsTogether(r1, r2, $i1, $i0);

        return;

     label8:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<init>("Internal error with the back stack records");

        throw $r6;

     label9:
        return;
    }

    public static int reverseTransit(int)
    {
        int $i0;

        $i0 := @parameter0;

        lookupswitch($i0)
        {
            case 4097: goto label4;
            case 4099: goto label3;
            case 8194: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 4097;

     label3:
        return 4099;

     label4:
        return 8194;
    }

    private void throwException(java.lang.RuntimeException)
    {
        java.io.PrintWriter r2;
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentHostCallback r5;
        java.lang.String[] $r6;
        java.lang.RuntimeException $r1;
        java.lang.Exception r7, r8;
        androidx.core.util.LogWriter r4;
        java.lang.String $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r3 = virtualinvoke $r1.getMessage();

        android.util.Log.e("FragmentManager", $r3);

        android.util.Log.e("FragmentManager", "Activity state:");

        r4 = new androidx.core.util.LogWriter;

        specialinvoke r4.<init>("FragmentManager");

        r2 = new java.io.PrintWriter;

        specialinvoke r2.<init>(r4);

        r5 = r0.mHost;

        if r5 == null goto label5;

        $r6 = newarray (java.lang.String)[0];

     label1:
        virtualinvoke r5.onDump("  ", null, r2, $r6);

     label2:
        goto label4;

     label3:
        r7 := @caughtexception;

        android.util.Log.e("FragmentManager", "Failed dumping state", r7);

     label4:
        goto label9;

     label5:
        $r6 = newarray (java.lang.String)[0];

     label6:
        virtualinvoke r0.dump("  ", null, r2, $r6);

     label7:
        goto label9;

     label8:
        r8 := @caughtexception;

        android.util.Log.e("FragmentManager", "Failed dumping state", r8);

     label9:
        throw $r1;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static int transitToStyleIndex(int, boolean)
    {
        int $i0;
        byte $b1;
        boolean $z0;

        $i0 := @parameter0;

        $z0 := @parameter1;

        lookupswitch($i0)
        {
            case 4097: goto label08;
            case 4099: goto label05;
            case 8194: goto label02;
            default: goto label01;
        };

     label01:
        return -1;

     label02:
        if $z0 == 0 goto label03;

        $b1 = 3;

        goto label04;

     label03:
        $b1 = 4;

     label04:
        return $b1;

     label05:
        if $z0 == 0 goto label06;

        $b1 = 5;

        goto label07;

     label06:
        $b1 = 6;

     label07:
        return $b1;

     label08:
        if $z0 == 0 goto label09;

        $b1 = 1;

        goto label10;

     label09:
        $b1 = 2;

     label10:
        return $b1;
    }

    private void updateOnBackPressedCallbackEnabled()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.activity.OnBackPressedCallback $r2;
        int $i0;
        androidx.fragment.app.Fragment $r3;
        java.util.ArrayList $r1;
        boolean $z0, $z1;

        r0 := @this;

        $r1 = r0.mPendingActions;

        $z0 = 1;

        if $r1 == null goto label1;

        $z1 = virtualinvoke $r1.isEmpty();

        if $z1 != 0 goto label1;

        $r2 = r0.mOnBackPressedCallback;

        virtualinvoke $r2.setEnabled(1);

        return;

     label1:
        $r2 = r0.mOnBackPressedCallback;

        $i0 = virtualinvoke r0.getBackStackEntryCount();

        if $i0 <= 0 goto label2;

        $r3 = r0.mParent;

        $z1 = virtualinvoke r0.isPrimaryNavigation($r3);

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        virtualinvoke $r2.setEnabled($z0);

        return;
    }

    void addBackStackState(androidx.fragment.app.BackStackRecord)
    {
        androidx.fragment.app.BackStackRecord $r1;
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.ArrayList $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mBackStack;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<init>();

        r0.mBackStack = $r2;

     label1:
        $r2 = r0.mBackStack;

        virtualinvoke $r2.add($r1);

        return;
    }

    public void addFragment(androidx.fragment.app.Fragment, boolean)
    {
        java.lang.Throwable $r7;
        androidx.fragment.app.FragmentManagerImpl r0;
        java.lang.IllegalStateException $r8;
        java.util.ArrayList $r4, $r5;
        androidx.fragment.app.Fragment $r1;
        android.view.View $r6;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        $z1 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z1 == 0 goto label01;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<init>();

        $r2 = virtualinvoke $r2.append("add: ");

        $r2 = virtualinvoke $r2.append($r1);

        $r3 = virtualinvoke $r2.toString();

        android.util.Log.v("FragmentManager", $r3);

     label01:
        virtualinvoke r0.makeActive($r1);

        $z1 = $r1.mDetached;

        if $z1 != 0 goto label10;

        $r4 = r0.mAdded;

        $z1 = virtualinvoke $r4.contains($r1);

        if $z1 != 0 goto label09;

        $r4 = r0.mAdded;

        entermonitor $r4;

     label02:
        $r5 = r0.mAdded;

        virtualinvoke $r5.add($r1);

        exitmonitor $r4;

     label03:
        $r1.mAdded = 1;

        $r1.mRemoving = 0;

        $r6 = $r1.mView;

        if $r6 != null goto label04;

        $r1.mHiddenChanged = 0;

     label04:
        $z1 = specialinvoke r0.isMenuAvailable($r1);

        if $z1 == 0 goto label05;

        r0.mNeedMenuInvalidate = 1;

     label05:
        if $z0 == 0 goto label10;

        virtualinvoke r0.moveToState($r1);

        return;

     label06:
        $r7 := @caughtexception;

     label07:
        exitmonitor $r4;

     label08:
        throw $r7;

     label09:
        $r8 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<init>();

        $r2 = virtualinvoke $r2.append("Fragment already added: ");

        $r2 = virtualinvoke $r2.append($r1);

        $r3 = virtualinvoke $r2.toString();

        specialinvoke $r8.<init>($r3);

        throw $r8;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label07 to label08 with label06;
    }

    public void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentManager$OnBackStackChangedListener $r1;
        java.util.ArrayList $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mBackStackChangeListeners;

        if $r2 != null goto label1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<init>();

        r0.mBackStackChangeListeners = $r2;

     label1:
        $r2 = r0.mBackStackChangeListeners;

        virtualinvoke $r2.add($r1);

        return;
    }

    void addRetainedFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentManagerViewModel r2;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = virtualinvoke r0.isStateSaved();

        if $z0 == 0 goto label1;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label2;

        android.util.Log.v("FragmentManager", "Ignoring addRetainedFragment as the state is already saved");

        return;

     label1:
        r2 = r0.mNonConfig;

        $z0 = virtualinvoke r2.addRetainedFragment($r1);

        if $z0 == 0 goto label2;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("Updating retained Fragments: Added ");

        $r3 = virtualinvoke $r3.append($r1);

        $r4 = virtualinvoke $r3.toString();

        android.util.Log.v("FragmentManager", $r4);

     label2:
        return;
    }

    public int allocBackStackIndex(androidx.fragment.app.BackStackRecord)
    {
        java.lang.Throwable r7;
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.BackStackRecord $r1;
        java.lang.Integer r4;
        java.util.ArrayList r2, $r9;
        int $i0;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r8;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        entermonitor r0;

     label01:
        r2 = r0.mAvailBackStackIndices;

        if r2 == null goto label05;

        $i0 = virtualinvoke r2.size();

        if $i0 > 0 goto label02;

        goto label05;

     label02:
        r2 = r0.mAvailBackStackIndices;

        $i0 = virtualinvoke r2.size();

        $i0 = $i0 + -1;

        $r3 = virtualinvoke r2.remove($i0);

        r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke r4.intValue();

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label03;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<init>();

        $r5 = virtualinvoke $r8.append("Adding back stack index ");

        $r5 = virtualinvoke $r5.append($i0);

        $r5 = virtualinvoke $r5.append(" with ");

        $r5 = virtualinvoke $r5.append($r1);

        $r6 = virtualinvoke $r5.toString();

        android.util.Log.v("FragmentManager", $r6);

     label03:
        r2 = r0.mBackStackIndices;

        virtualinvoke r2.set($i0, $r1);

        exitmonitor r0;

     label04:
        return $i0;

     label05:
        r2 = r0.mBackStackIndices;

        if r2 != null goto label06;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<init>();

        r0.mBackStackIndices = $r9;

     label06:
        r2 = r0.mBackStackIndices;

        $i0 = virtualinvoke r2.size();

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label07;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<init>();

        $r5 = virtualinvoke $r8.append("Setting back stack index ");

        $r5 = virtualinvoke $r5.append($i0);

        $r5 = virtualinvoke $r5.append(" to ");

        $r5 = virtualinvoke $r5.append($r1);

        $r6 = virtualinvoke $r5.toString();

        android.util.Log.v("FragmentManager", $r6);

     label07:
        r2 = r0.mBackStackIndices;

        virtualinvoke r2.add($r1);

        exitmonitor r0;

     label08:
        return $i0;

     label09:
        r7 := @caughtexception;

        exitmonitor r0;

     label10:
        throw r7;

        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label05 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void attachController(androidx.fragment.app.FragmentHostCallback, androidx.fragment.app.FragmentContainer, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r9;
        java.lang.IllegalStateException r13;
        androidx.fragment.app.FragmentHostCallback $r1, r5;
        androidx.fragment.app.FragmentContainer $r2;
        androidx.lifecycle.ViewModelStoreOwner r11;
        androidx.activity.OnBackPressedDispatcherOwner r6;
        androidx.fragment.app.FragmentManagerViewModel $r10;
        androidx.lifecycle.ViewModelStore $r12;
        androidx.activity.OnBackPressedCallback $r4;
        androidx.lifecycle.LifecycleOwner r8;
        androidx.fragment.app.Fragment $r3;
        androidx.activity.OnBackPressedDispatcher $r7;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        r5 = r0.mHost;

        if r5 != null goto label7;

        r0.mHost = $r1;

        r0.mContainer = $r2;

        r0.mParent = $r3;

        if $r3 == null goto label1;

        specialinvoke r0.updateOnBackPressedCallbackEnabled();

     label1:
        z0 = $r1 instanceof androidx.activity.OnBackPressedDispatcherOwner;

        if z0 == 0 goto label4;

        r6 = (androidx.activity.OnBackPressedDispatcherOwner) $r1;

        $r7 = interfaceinvoke r6.getOnBackPressedDispatcher();

        r0.mOnBackPressedDispatcher = $r7;

        if $r3 == null goto label2;

        r8 = $r3;

        goto label3;

     label2:
        r8 = r6;

     label3:
        $r4 = r0.mOnBackPressedCallback;

        virtualinvoke $r7.addCallback(r8, $r4);

     label4:
        if $r3 == null goto label5;

        r9 = $r3.mFragmentManager;

        $r10 = virtualinvoke r9.getChildNonConfig($r3);

        r0.mNonConfig = $r10;

        return;

     label5:
        z0 = $r1 instanceof androidx.lifecycle.ViewModelStoreOwner;

        if z0 == 0 goto label6;

        r11 = (androidx.lifecycle.ViewModelStoreOwner) $r1;

        $r12 = interfaceinvoke r11.getViewModelStore();

        $r10 = androidx.fragment.app.FragmentManagerViewModel.getInstance($r12);

        r0.mNonConfig = $r10;

        return;

     label6:
        $r10 = new androidx.fragment.app.FragmentManagerViewModel;

        specialinvoke $r10.<init>(0);

        r0.mNonConfig = $r10;

        return;

     label7:
        r13 = new java.lang.IllegalStateException;

        specialinvoke r13.<init>("Already attached");

        throw r13;
    }

    public void attachFragment(androidx.fragment.app.Fragment)
    {
        java.lang.Throwable $r6;
        androidx.fragment.app.FragmentManagerImpl r0;
        java.lang.IllegalStateException $r7;
        java.util.ArrayList $r4, $r5;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<init>();

        $r2 = virtualinvoke $r2.append("attach: ");

        $r2 = virtualinvoke $r2.append($r1);

        $r3 = virtualinvoke $r2.toString();

        android.util.Log.v("FragmentManager", $r3);

     label1:
        $z0 = $r1.mDetached;

        if $z0 == 0 goto label9;

        $r1.mDetached = 0;

        $z0 = $r1.mAdded;

        if $z0 != 0 goto label9;

        $r4 = r0.mAdded;

        $z0 = virtualinvoke $r4.contains($r1);

        if $z0 != 0 goto label8;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<init>();

        $r2 = virtualinvoke $r2.append("add from attach: ");

        $r2 = virtualinvoke $r2.append($r1);

        $r3 = virtualinvoke $r2.toString();

        android.util.Log.v("FragmentManager", $r3);

     label2:
        $r4 = r0.mAdded;

        entermonitor $r4;

     label3:
        $r5 = r0.mAdded;

        virtualinvoke $r5.add($r1);

        exitmonitor $r4;

     label4:
        $r1.mAdded = 1;

        $z0 = specialinvoke r0.isMenuAvailable($r1);

        if $z0 == 0 goto label9;

        r0.mNeedMenuInvalidate = 1;

        return;

     label5:
        $r6 := @caughtexception;

     label6:
        exitmonitor $r4;

     label7:
        throw $r6;

     label8:
        $r7 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<init>();

        $r2 = virtualinvoke $r2.append("Fragment already added: ");

        $r2 = virtualinvoke $r2.append($r1);

        $r3 = virtualinvoke $r2.toString();

        specialinvoke $r7.<init>($r3);

        throw $r7;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public androidx.fragment.app.FragmentTransaction beginTransaction()
    {
        androidx.fragment.app.BackStackRecord $r1;
        androidx.fragment.app.FragmentManagerImpl r0;

        r0 := @this;

        $r1 = new androidx.fragment.app.BackStackRecord;

        specialinvoke $r1.<init>(r0);

        return $r1;
    }

    boolean checkForMenus()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        java.util.HashMap $r1;
        androidx.fragment.app.Fragment r5;
        java.lang.Object $r4;
        boolean z0, $z1;

        r0 := @this;

        z0 = 0;

        $r1 = r0.mActive;

        $r2 = virtualinvoke $r1.values();

        $r3 = interfaceinvoke $r2.iterator();

     label1:
        $z1 = interfaceinvoke $r3.hasNext();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke $r3.next();

        r5 = (androidx.fragment.app.Fragment) $r4;

        if r5 == null goto label2;

        z0 = specialinvoke r0.isMenuAvailable(r5);

     label2:
        if z0 == 0 goto label1;

        return 1;

     label3:
        return 0;
    }

    void completeExecute(androidx.fragment.app.BackStackRecord, boolean, boolean, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.BackStackRecord $r1;
        java.util.HashMap $r5;
        java.util.ArrayList r2, r3, $r11;
        byte $b1;
        int i0;
        androidx.fragment.app.Fragment r9;
        java.lang.Boolean $r4;
        android.view.View $r10;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r7;
        java.util.Collection $r6;
        float $f0;
        java.lang.Object $r8;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        $z1 := @parameter2;

        $z2 := @parameter3;

        if $z0 == 0 goto label1;

        virtualinvoke $r1.executePopOps($z2);

        goto label2;

     label1:
        virtualinvoke $r1.executeOps();

     label2:
        r3 = new java.util.ArrayList;

        r2 = r3;

        specialinvoke r3.<init>(1);

        $r11 = new java.util.ArrayList;

        r3 = $r11;

        specialinvoke $r11.<init>(1);

        virtualinvoke r2.add($r1);

        $r4 = java.lang.Boolean.valueOf($z0);

        virtualinvoke r3.add($r4);

        if $z1 == 0 goto label3;

        androidx.fragment.app.FragmentTransition.startTransitions(r0, r2, r3, 0, 1, 1);

     label3:
        if $z2 == 0 goto label4;

        i0 = r0.mCurState;

        virtualinvoke r0.moveToState(i0, 1);

     label4:
        $r5 = r0.mActive;

        $r6 = virtualinvoke $r5.values();

        $r7 = interfaceinvoke $r6.iterator();

     label5:
        $z0 = interfaceinvoke $r7.hasNext();

        if $z0 == 0 goto label8;

        $r8 = interfaceinvoke $r7.next();

        r9 = (androidx.fragment.app.Fragment) $r8;

        if r9 == null goto label5;

        $r10 = r9.mView;

        if $r10 == null goto label5;

        $z0 = r9.mIsNewlyAdded;

        if $z0 == 0 goto label5;

        i0 = r9.mContainerId;

        $z0 = virtualinvoke $r1.interactsWith(i0);

        if $z0 == 0 goto label5;

        $f0 = r9.mPostponedAlpha;

        $b1 = $f0 cmpl 0.0F;

        i0 = (int) $b1;

        if i0 <= 0 goto label6;

        $r10 = r9.mView;

        $f0 = r9.mPostponedAlpha;

        virtualinvoke $r10.setAlpha($f0);

     label6:
        if $z2 == 0 goto label7;

        r9.mPostponedAlpha = 0.0F;

        goto label5;

     label7:
        r9.mPostponedAlpha = -1.0F;

        r9.mIsNewlyAdded = 0;

        goto label5;

     label8:
        return;
    }

    void completeShowHideFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentManagerImpl$5 $r3;
        android.animation.Animator $r2;
        android.view.ViewGroup r6;
        byte b2;
        androidx.fragment.app.Fragment $r1;
        int $i0, $i1;
        android.view.View r4;
        android.view.animation.Animation r7;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $r5;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        r4 = $r1.mView;

        if r4 == null goto label8;

        $i0 = virtualinvoke $r1.getNextTransition();

        z0 = $r1.mHidden;

        z0 = z0 ^ 1;

        $i1 = virtualinvoke $r1.getNextTransitionStyle();

        $r5 = virtualinvoke r0.loadAnimation($r1, $i0, z0, $i1);

        if $r5 == null goto label4;

        $r2 = $r5.animator;

        if $r2 == null goto label4;

        $r2 = $r5.animator;

        r4 = $r1.mView;

        virtualinvoke $r2.setTarget(r4);

        z0 = $r1.mHidden;

        if z0 == 0 goto label2;

        z0 = virtualinvoke $r1.isHideReplaced();

        if z0 == 0 goto label1;

        virtualinvoke $r1.setHideReplaced(0);

        goto label3;

     label1:
        r6 = $r1.mContainer;

        r4 = $r1.mView;

        virtualinvoke r6.startViewTransition(r4);

        $r2 = $r5.animator;

        $r3 = new androidx.fragment.app.FragmentManagerImpl$5;

        specialinvoke $r3.<init>(r0, r6, r4, $r1);

        virtualinvoke $r2.addListener($r3);

        goto label3;

     label2:
        r4 = $r1.mView;

        virtualinvoke r4.setVisibility(0);

     label3:
        $r2 = $r5.animator;

        virtualinvoke $r2.start();

        goto label8;

     label4:
        if $r5 == null goto label5;

        r4 = $r1.mView;

        r7 = $r5.animation;

        virtualinvoke r4.startAnimation(r7);

        r7 = $r5.animation;

        virtualinvoke r7.start();

     label5:
        z0 = $r1.mHidden;

        if z0 == 0 goto label6;

        z0 = virtualinvoke $r1.isHideReplaced();

        if z0 != 0 goto label6;

        b2 = 8;

        goto label7;

     label6:
        b2 = 0;

     label7:
        r4 = $r1.mView;

        virtualinvoke r4.setVisibility(b2);

        z0 = virtualinvoke $r1.isHideReplaced();

        if z0 == 0 goto label8;

        virtualinvoke $r1.setHideReplaced(0);

     label8:
        z0 = $r1.mAdded;

        if z0 == 0 goto label9;

        z0 = specialinvoke r0.isMenuAvailable($r1);

        if z0 == 0 goto label9;

        r0.mNeedMenuInvalidate = 1;

     label9:
        $r1.mHiddenChanged = 0;

        z0 = $r1.mHidden;

        virtualinvoke $r1.onHiddenChanged(z0);

        return;
    }

    public void detachFragment(androidx.fragment.app.Fragment)
    {
        java.lang.Throwable $r6;
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.ArrayList $r4, $r5;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<init>();

        $r2 = virtualinvoke $r2.append("detach: ");

        $r2 = virtualinvoke $r2.append($r1);

        $r3 = virtualinvoke $r2.toString();

        android.util.Log.v("FragmentManager", $r3);

     label1:
        $z0 = $r1.mDetached;

        if $z0 != 0 goto label9;

        $r1.mDetached = 1;

        $z0 = $r1.mAdded;

        if $z0 == 0 goto label9;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<init>();

        $r2 = virtualinvoke $r2.append("remove from detach: ");

        $r2 = virtualinvoke $r2.append($r1);

        $r3 = virtualinvoke $r2.toString();

        android.util.Log.v("FragmentManager", $r3);

     label2:
        $r4 = r0.mAdded;

        entermonitor $r4;

     label3:
        $r5 = r0.mAdded;

        virtualinvoke $r5.remove($r1);

        exitmonitor $r4;

     label4:
        $z0 = specialinvoke r0.isMenuAvailable($r1);

        if $z0 == 0 goto label5;

        r0.mNeedMenuInvalidate = 1;

     label5:
        $r1.mAdded = 0;

        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor $r4;

     label8:
        throw $r6;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void dispatchActivityCreated()
    {
        androidx.fragment.app.FragmentManagerImpl r0;

        r0 := @this;

        r0.mStateSaved = 0;

        r0.mStopped = 0;

        specialinvoke r0.dispatchStateChange(2);

        return;
    }

    public void dispatchConfigurationChanged(android.content.res.Configuration)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        android.content.res.Configuration $r1;
        int i0, $i1;
        androidx.fragment.app.Fragment r4;
        java.lang.Object $r3;
        java.util.ArrayList r2;

        r0 := @this;

        $r1 := @parameter0;

        i0 = 0;

     label1:
        r2 = r0.mAdded;

        $i1 = virtualinvoke r2.size();

        if i0 >= $i1 goto label3;

        r2 = r0.mAdded;

        $r3 = virtualinvoke r2.get(i0);

        r4 = (androidx.fragment.app.Fragment) $r3;

        if r4 == null goto label2;

        virtualinvoke r4.performConfigurationChanged($r1);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    public boolean dispatchContextItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        android.view.MenuItem $r1;
        java.util.ArrayList r2;
        int i0, $i1;
        androidx.fragment.app.Fragment r4;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        i0 = r0.mCurState;

        if i0 >= 1 goto label1;

        return 0;

     label1:
        i0 = 0;

     label2:
        r2 = r0.mAdded;

        $i1 = virtualinvoke r2.size();

        if i0 >= $i1 goto label4;

        r2 = r0.mAdded;

        $r3 = virtualinvoke r2.get(i0);

        r4 = (androidx.fragment.app.Fragment) $r3;

        if r4 == null goto label3;

        $z0 = virtualinvoke r4.performContextItemSelected($r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return 0;
    }

    public void dispatchCreate()
    {
        androidx.fragment.app.FragmentManagerImpl r0;

        r0 := @this;

        r0.mStateSaved = 0;

        r0.mStopped = 0;

        specialinvoke r0.dispatchStateChange(1);

        return;
    }

    public boolean dispatchCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.ArrayList r3, r4;
        android.view.MenuInflater $r2;
        android.view.Menu $r1;
        int i0, $i1;
        androidx.fragment.app.Fragment r6;
        java.lang.Object $r5;
        boolean z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        i0 = r0.mCurState;

        if i0 >= 1 goto label1;

        return 0;

     label1:
        z0 = 0;

        r3 = null;

        i0 = 0;

     label2:
        r4 = r0.mAdded;

        $i1 = virtualinvoke r4.size();

        if i0 >= $i1 goto label5;

        r4 = r0.mAdded;

        $r5 = virtualinvoke r4.get(i0);

        r6 = (androidx.fragment.app.Fragment) $r5;

        if r6 == null goto label4;

        $z1 = virtualinvoke r6.performCreateOptionsMenu($r1, $r2);

        if $z1 == 0 goto label4;

        z0 = 1;

        if r3 != null goto label3;

        r3 = new java.util.ArrayList;

        specialinvoke r3.<init>();

     label3:
        virtualinvoke r3.add(r6);

     label4:
        i0 = i0 + 1;

        goto label2;

     label5:
        r4 = r0.mCreatedMenus;

        if r4 == null goto label9;

        i0 = 0;

     label6:
        r4 = r0.mCreatedMenus;

        $i1 = virtualinvoke r4.size();

        if i0 >= $i1 goto label9;

        r4 = r0.mCreatedMenus;

        $r5 = virtualinvoke r4.get(i0);

        r6 = (androidx.fragment.app.Fragment) $r5;

        if r3 == null goto label7;

        $z1 = virtualinvoke r3.contains(r6);

        if $z1 != 0 goto label8;

     label7:
        virtualinvoke r6.onDestroyOptionsMenu();

     label8:
        i0 = i0 + 1;

        goto label6;

     label9:
        r0.mCreatedMenus = r3;

        return z0;
    }

    public void dispatchDestroy()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.activity.OnBackPressedDispatcher $r1;
        androidx.activity.OnBackPressedCallback $r2;

        r0 := @this;

        r0.mDestroyed = 1;

        virtualinvoke r0.execPendingActions();

        specialinvoke r0.dispatchStateChange(0);

        r0.mHost = null;

        r0.mContainer = null;

        r0.mParent = null;

        $r1 = r0.mOnBackPressedDispatcher;

        if $r1 == null goto label1;

        $r2 = r0.mOnBackPressedCallback;

        virtualinvoke $r2.remove();

        r0.mOnBackPressedDispatcher = null;

     label1:
        return;
    }

    public void dispatchDestroyView()
    {
        androidx.fragment.app.FragmentManagerImpl r0;

        r0 := @this;

        specialinvoke r0.dispatchStateChange(1);

        return;
    }

    public void dispatchLowMemory()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        int i0, $i1;
        androidx.fragment.app.Fragment r3;
        java.lang.Object $r2;
        java.util.ArrayList r1;

        r0 := @this;

        i0 = 0;

     label1:
        r1 = r0.mAdded;

        $i1 = virtualinvoke r1.size();

        if i0 >= $i1 goto label3;

        r1 = r0.mAdded;

        $r2 = virtualinvoke r1.get(i0);

        r3 = (androidx.fragment.app.Fragment) $r2;

        if r3 == null goto label2;

        virtualinvoke r3.performLowMemory();

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    public void dispatchMultiWindowModeChanged(boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        int $i0;
        androidx.fragment.app.Fragment r3;
        java.lang.Object $r2;
        boolean $z0;
        java.util.ArrayList r1;

        r0 := @this;

        $z0 := @parameter0;

        r1 = r0.mAdded;

        $i0 = virtualinvoke r1.size();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label3;

        r1 = r0.mAdded;

        $r2 = virtualinvoke r1.get($i0);

        r3 = (androidx.fragment.app.Fragment) $r2;

        if r3 == null goto label2;

        virtualinvoke r3.performMultiWindowModeChanged($z0);

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return;
    }

    void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r5;
        androidx.fragment.app.FragmentManager $r4;
        android.os.Bundle $r2;
        java.util.Iterator $r7;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder r9;
        androidx.fragment.app.Fragment $r1, r3;
        java.lang.Object $r8;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r10;
        boolean $z0, z1;
        java.util.concurrent.CopyOnWriteArrayList r6;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $z0 := @parameter2;

        r3 = r0.mParent;

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.getFragmentManager();

        z1 = $r4 instanceof androidx.fragment.app.FragmentManagerImpl;

        if z1 == 0 goto label1;

        r5 = (androidx.fragment.app.FragmentManagerImpl) $r4;

        virtualinvoke r5.dispatchOnFragmentActivityCreated($r1, $r2, 1);

     label1:
        r6 = r0.mLifecycleCallbacks;

        $r7 = virtualinvoke r6.iterator();

     label2:
        z1 = interfaceinvoke $r7.hasNext();

        if z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.next();

        r9 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r8;

        if $z0 == 0 goto label3;

        z1 = r9.mRecursive;

        if z1 == 0 goto label2;

     label3:
        $r10 = r9.mCallback;

        virtualinvoke $r10.onFragmentActivityCreated(r0, $r1, $r2);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentAttached(androidx.fragment.app.Fragment, android.content.Context, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r5;
        android.content.Context $r2;
        androidx.fragment.app.FragmentManager $r4;
        java.util.Iterator $r7;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder r9;
        androidx.fragment.app.Fragment $r1, r3;
        java.lang.Object $r8;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r10;
        boolean $z0, z1;
        java.util.concurrent.CopyOnWriteArrayList r6;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $z0 := @parameter2;

        r3 = r0.mParent;

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.getFragmentManager();

        z1 = $r4 instanceof androidx.fragment.app.FragmentManagerImpl;

        if z1 == 0 goto label1;

        r5 = (androidx.fragment.app.FragmentManagerImpl) $r4;

        virtualinvoke r5.dispatchOnFragmentAttached($r1, $r2, 1);

     label1:
        r6 = r0.mLifecycleCallbacks;

        $r7 = virtualinvoke r6.iterator();

     label2:
        z1 = interfaceinvoke $r7.hasNext();

        if z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.next();

        r9 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r8;

        if $z0 == 0 goto label3;

        z1 = r9.mRecursive;

        if z1 == 0 goto label2;

     label3:
        $r10 = r9.mCallback;

        virtualinvoke $r10.onFragmentAttached(r0, $r1, $r2);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentCreated(androidx.fragment.app.Fragment, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r5;
        androidx.fragment.app.FragmentManager $r4;
        android.os.Bundle $r2;
        java.util.Iterator $r7;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder r9;
        androidx.fragment.app.Fragment $r1, r3;
        java.lang.Object $r8;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r10;
        boolean $z0, z1;
        java.util.concurrent.CopyOnWriteArrayList r6;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $z0 := @parameter2;

        r3 = r0.mParent;

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.getFragmentManager();

        z1 = $r4 instanceof androidx.fragment.app.FragmentManagerImpl;

        if z1 == 0 goto label1;

        r5 = (androidx.fragment.app.FragmentManagerImpl) $r4;

        virtualinvoke r5.dispatchOnFragmentCreated($r1, $r2, 1);

     label1:
        r6 = r0.mLifecycleCallbacks;

        $r7 = virtualinvoke r6.iterator();

     label2:
        z1 = interfaceinvoke $r7.hasNext();

        if z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.next();

        r9 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r8;

        if $z0 == 0 goto label3;

        z1 = r9.mRecursive;

        if z1 == 0 goto label2;

     label3:
        $r10 = r9.mCallback;

        virtualinvoke $r10.onFragmentCreated(r0, $r1, $r2);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r4;
        androidx.fragment.app.FragmentManager $r3;
        java.util.Iterator $r6;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder r8;
        androidx.fragment.app.Fragment $r1, r2;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;
        boolean $z0, z1;
        java.util.concurrent.CopyOnWriteArrayList r5;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        r2 = r0.mParent;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.getFragmentManager();

        z1 = $r3 instanceof androidx.fragment.app.FragmentManagerImpl;

        if z1 == 0 goto label1;

        r4 = (androidx.fragment.app.FragmentManagerImpl) $r3;

        virtualinvoke r4.dispatchOnFragmentDestroyed($r1, 1);

     label1:
        r5 = r0.mLifecycleCallbacks;

        $r6 = virtualinvoke r5.iterator();

     label2:
        z1 = interfaceinvoke $r6.hasNext();

        if z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.next();

        r8 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r7;

        if $z0 == 0 goto label3;

        z1 = r8.mRecursive;

        if z1 == 0 goto label2;

     label3:
        $r9 = r8.mCallback;

        virtualinvoke $r9.onFragmentDestroyed(r0, $r1);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentDetached(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r4;
        androidx.fragment.app.FragmentManager $r3;
        java.util.Iterator $r6;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder r8;
        androidx.fragment.app.Fragment $r1, r2;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;
        boolean $z0, z1;
        java.util.concurrent.CopyOnWriteArrayList r5;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        r2 = r0.mParent;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.getFragmentManager();

        z1 = $r3 instanceof androidx.fragment.app.FragmentManagerImpl;

        if z1 == 0 goto label1;

        r4 = (androidx.fragment.app.FragmentManagerImpl) $r3;

        virtualinvoke r4.dispatchOnFragmentDetached($r1, 1);

     label1:
        r5 = r0.mLifecycleCallbacks;

        $r6 = virtualinvoke r5.iterator();

     label2:
        z1 = interfaceinvoke $r6.hasNext();

        if z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.next();

        r8 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r7;

        if $z0 == 0 goto label3;

        z1 = r8.mRecursive;

        if z1 == 0 goto label2;

     label3:
        $r9 = r8.mCallback;

        virtualinvoke $r9.onFragmentDetached(r0, $r1);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentPaused(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r4;
        androidx.fragment.app.FragmentManager $r3;
        java.util.Iterator $r6;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder r8;
        androidx.fragment.app.Fragment $r1, r2;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;
        boolean $z0, z1;
        java.util.concurrent.CopyOnWriteArrayList r5;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        r2 = r0.mParent;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.getFragmentManager();

        z1 = $r3 instanceof androidx.fragment.app.FragmentManagerImpl;

        if z1 == 0 goto label1;

        r4 = (androidx.fragment.app.FragmentManagerImpl) $r3;

        virtualinvoke r4.dispatchOnFragmentPaused($r1, 1);

     label1:
        r5 = r0.mLifecycleCallbacks;

        $r6 = virtualinvoke r5.iterator();

     label2:
        z1 = interfaceinvoke $r6.hasNext();

        if z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.next();

        r8 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r7;

        if $z0 == 0 goto label3;

        z1 = r8.mRecursive;

        if z1 == 0 goto label2;

     label3:
        $r9 = r8.mCallback;

        virtualinvoke $r9.onFragmentPaused(r0, $r1);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment, android.content.Context, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r5;
        android.content.Context $r2;
        androidx.fragment.app.FragmentManager $r4;
        java.util.Iterator $r7;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder r9;
        androidx.fragment.app.Fragment $r1, r3;
        java.lang.Object $r8;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r10;
        boolean $z0, z1;
        java.util.concurrent.CopyOnWriteArrayList r6;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $z0 := @parameter2;

        r3 = r0.mParent;

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.getFragmentManager();

        z1 = $r4 instanceof androidx.fragment.app.FragmentManagerImpl;

        if z1 == 0 goto label1;

        r5 = (androidx.fragment.app.FragmentManagerImpl) $r4;

        virtualinvoke r5.dispatchOnFragmentPreAttached($r1, $r2, 1);

     label1:
        r6 = r0.mLifecycleCallbacks;

        $r7 = virtualinvoke r6.iterator();

     label2:
        z1 = interfaceinvoke $r7.hasNext();

        if z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.next();

        r9 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r8;

        if $z0 == 0 goto label3;

        z1 = r9.mRecursive;

        if z1 == 0 goto label2;

     label3:
        $r10 = r9.mCallback;

        virtualinvoke $r10.onFragmentPreAttached(r0, $r1, $r2);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r5;
        androidx.fragment.app.FragmentManager $r4;
        android.os.Bundle $r2;
        java.util.Iterator $r7;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder r9;
        androidx.fragment.app.Fragment $r1, r3;
        java.lang.Object $r8;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r10;
        boolean $z0, z1;
        java.util.concurrent.CopyOnWriteArrayList r6;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $z0 := @parameter2;

        r3 = r0.mParent;

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.getFragmentManager();

        z1 = $r4 instanceof androidx.fragment.app.FragmentManagerImpl;

        if z1 == 0 goto label1;

        r5 = (androidx.fragment.app.FragmentManagerImpl) $r4;

        virtualinvoke r5.dispatchOnFragmentPreCreated($r1, $r2, 1);

     label1:
        r6 = r0.mLifecycleCallbacks;

        $r7 = virtualinvoke r6.iterator();

     label2:
        z1 = interfaceinvoke $r7.hasNext();

        if z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.next();

        r9 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r8;

        if $z0 == 0 goto label3;

        z1 = r9.mRecursive;

        if z1 == 0 goto label2;

     label3:
        $r10 = r9.mCallback;

        virtualinvoke $r10.onFragmentPreCreated(r0, $r1, $r2);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentResumed(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r4;
        androidx.fragment.app.FragmentManager $r3;
        java.util.Iterator $r6;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder r8;
        androidx.fragment.app.Fragment $r1, r2;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;
        boolean $z0, z1;
        java.util.concurrent.CopyOnWriteArrayList r5;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        r2 = r0.mParent;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.getFragmentManager();

        z1 = $r3 instanceof androidx.fragment.app.FragmentManagerImpl;

        if z1 == 0 goto label1;

        r4 = (androidx.fragment.app.FragmentManagerImpl) $r3;

        virtualinvoke r4.dispatchOnFragmentResumed($r1, 1);

     label1:
        r5 = r0.mLifecycleCallbacks;

        $r6 = virtualinvoke r5.iterator();

     label2:
        z1 = interfaceinvoke $r6.hasNext();

        if z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.next();

        r8 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r7;

        if $z0 == 0 goto label3;

        z1 = r8.mRecursive;

        if z1 == 0 goto label2;

     label3:
        $r9 = r8.mCallback;

        virtualinvoke $r9.onFragmentResumed(r0, $r1);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r5;
        androidx.fragment.app.FragmentManager $r4;
        android.os.Bundle $r2;
        java.util.Iterator $r7;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder r9;
        androidx.fragment.app.Fragment $r1, r3;
        java.lang.Object $r8;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r10;
        boolean $z0, z1;
        java.util.concurrent.CopyOnWriteArrayList r6;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $z0 := @parameter2;

        r3 = r0.mParent;

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.getFragmentManager();

        z1 = $r4 instanceof androidx.fragment.app.FragmentManagerImpl;

        if z1 == 0 goto label1;

        r5 = (androidx.fragment.app.FragmentManagerImpl) $r4;

        virtualinvoke r5.dispatchOnFragmentSaveInstanceState($r1, $r2, 1);

     label1:
        r6 = r0.mLifecycleCallbacks;

        $r7 = virtualinvoke r6.iterator();

     label2:
        z1 = interfaceinvoke $r7.hasNext();

        if z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.next();

        r9 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r8;

        if $z0 == 0 goto label3;

        z1 = r9.mRecursive;

        if z1 == 0 goto label2;

     label3:
        $r10 = r9.mCallback;

        virtualinvoke $r10.onFragmentSaveInstanceState(r0, $r1, $r2);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentStarted(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r4;
        androidx.fragment.app.FragmentManager $r3;
        java.util.Iterator $r6;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder r8;
        androidx.fragment.app.Fragment $r1, r2;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;
        boolean $z0, z1;
        java.util.concurrent.CopyOnWriteArrayList r5;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        r2 = r0.mParent;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.getFragmentManager();

        z1 = $r3 instanceof androidx.fragment.app.FragmentManagerImpl;

        if z1 == 0 goto label1;

        r4 = (androidx.fragment.app.FragmentManagerImpl) $r3;

        virtualinvoke r4.dispatchOnFragmentStarted($r1, 1);

     label1:
        r5 = r0.mLifecycleCallbacks;

        $r6 = virtualinvoke r5.iterator();

     label2:
        z1 = interfaceinvoke $r6.hasNext();

        if z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.next();

        r8 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r7;

        if $z0 == 0 goto label3;

        z1 = r8.mRecursive;

        if z1 == 0 goto label2;

     label3:
        $r9 = r8.mCallback;

        virtualinvoke $r9.onFragmentStarted(r0, $r1);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentStopped(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r4;
        androidx.fragment.app.FragmentManager $r3;
        java.util.Iterator $r6;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder r8;
        androidx.fragment.app.Fragment $r1, r2;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;
        boolean $z0, z1;
        java.util.concurrent.CopyOnWriteArrayList r5;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        r2 = r0.mParent;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.getFragmentManager();

        z1 = $r3 instanceof androidx.fragment.app.FragmentManagerImpl;

        if z1 == 0 goto label1;

        r4 = (androidx.fragment.app.FragmentManagerImpl) $r3;

        virtualinvoke r4.dispatchOnFragmentStopped($r1, 1);

     label1:
        r5 = r0.mLifecycleCallbacks;

        $r6 = virtualinvoke r5.iterator();

     label2:
        z1 = interfaceinvoke $r6.hasNext();

        if z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.next();

        r8 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r7;

        if $z0 == 0 goto label3;

        z1 = r8.mRecursive;

        if z1 == 0 goto label2;

     label3:
        $r9 = r8.mCallback;

        virtualinvoke $r9.onFragmentStopped(r0, $r1);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment, android.view.View, android.os.Bundle, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r6;
        androidx.fragment.app.FragmentManager $r5;
        android.os.Bundle $r3;
        java.util.Iterator $r8;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder r10;
        androidx.fragment.app.Fragment $r1, r4;
        android.view.View $r2;
        java.lang.Object $r9;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r11;
        boolean $z0, z1;
        java.util.concurrent.CopyOnWriteArrayList r7;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $z0 := @parameter3;

        r4 = r0.mParent;

        if r4 == null goto label1;

        $r5 = virtualinvoke r4.getFragmentManager();

        z1 = $r5 instanceof androidx.fragment.app.FragmentManagerImpl;

        if z1 == 0 goto label1;

        r6 = (androidx.fragment.app.FragmentManagerImpl) $r5;

        virtualinvoke r6.dispatchOnFragmentViewCreated($r1, $r2, $r3, 1);

     label1:
        r7 = r0.mLifecycleCallbacks;

        $r8 = virtualinvoke r7.iterator();

     label2:
        z1 = interfaceinvoke $r8.hasNext();

        if z1 == 0 goto label4;

        $r9 = interfaceinvoke $r8.next();

        r10 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r9;

        if $z0 == 0 goto label3;

        z1 = r10.mRecursive;

        if z1 == 0 goto label2;

     label3:
        $r11 = r10.mCallback;

        virtualinvoke $r11.onFragmentViewCreated(r0, $r1, $r2, $r3);

        goto label2;

     label4:
        return;
    }

    void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r4;
        androidx.fragment.app.FragmentManager $r3;
        java.util.Iterator $r6;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder r8;
        androidx.fragment.app.Fragment $r1, r2;
        java.lang.Object $r7;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r9;
        boolean $z0, z1;
        java.util.concurrent.CopyOnWriteArrayList r5;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        r2 = r0.mParent;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.getFragmentManager();

        z1 = $r3 instanceof androidx.fragment.app.FragmentManagerImpl;

        if z1 == 0 goto label1;

        r4 = (androidx.fragment.app.FragmentManagerImpl) $r3;

        virtualinvoke r4.dispatchOnFragmentViewDestroyed($r1, 1);

     label1:
        r5 = r0.mLifecycleCallbacks;

        $r6 = virtualinvoke r5.iterator();

     label2:
        z1 = interfaceinvoke $r6.hasNext();

        if z1 == 0 goto label4;

        $r7 = interfaceinvoke $r6.next();

        r8 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r7;

        if $z0 == 0 goto label3;

        z1 = r8.mRecursive;

        if z1 == 0 goto label2;

     label3:
        $r9 = r8.mCallback;

        virtualinvoke $r9.onFragmentViewDestroyed(r0, $r1);

        goto label2;

     label4:
        return;
    }

    public boolean dispatchOptionsItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        android.view.MenuItem $r1;
        java.util.ArrayList r2;
        int i0, $i1;
        androidx.fragment.app.Fragment r4;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        i0 = r0.mCurState;

        if i0 >= 1 goto label1;

        return 0;

     label1:
        i0 = 0;

     label2:
        r2 = r0.mAdded;

        $i1 = virtualinvoke r2.size();

        if i0 >= $i1 goto label4;

        r2 = r0.mAdded;

        $r3 = virtualinvoke r2.get(i0);

        r4 = (androidx.fragment.app.Fragment) $r3;

        if r4 == null goto label3;

        $z0 = virtualinvoke r4.performOptionsItemSelected($r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return 0;
    }

    public void dispatchOptionsMenuClosed(android.view.Menu)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        android.view.Menu $r1;
        int i0, $i1;
        androidx.fragment.app.Fragment r4;
        java.lang.Object $r3;
        java.util.ArrayList r2;

        r0 := @this;

        $r1 := @parameter0;

        i0 = r0.mCurState;

        if i0 >= 1 goto label1;

        return;

     label1:
        i0 = 0;

     label2:
        r2 = r0.mAdded;

        $i1 = virtualinvoke r2.size();

        if i0 >= $i1 goto label4;

        r2 = r0.mAdded;

        $r3 = virtualinvoke r2.get(i0);

        r4 = (androidx.fragment.app.Fragment) $r3;

        if r4 == null goto label3;

        virtualinvoke r4.performOptionsMenuClosed($r1);

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return;
    }

    public void dispatchPause()
    {
        androidx.fragment.app.FragmentManagerImpl r0;

        r0 := @this;

        specialinvoke r0.dispatchStateChange(3);

        return;
    }

    public void dispatchPictureInPictureModeChanged(boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        int $i0;
        androidx.fragment.app.Fragment r3;
        java.lang.Object $r2;
        boolean $z0;
        java.util.ArrayList r1;

        r0 := @this;

        $z0 := @parameter0;

        r1 = r0.mAdded;

        $i0 = virtualinvoke r1.size();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label3;

        r1 = r0.mAdded;

        $r2 = virtualinvoke r1.get($i0);

        r3 = (androidx.fragment.app.Fragment) $r2;

        if r3 == null goto label2;

        virtualinvoke r3.performPictureInPictureModeChanged($z0);

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        return;
    }

    public boolean dispatchPrepareOptionsMenu(android.view.Menu)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.ArrayList r2;
        android.view.Menu $r1;
        int i0, $i1;
        androidx.fragment.app.Fragment r4;
        java.lang.Object $r3;
        boolean z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        i0 = r0.mCurState;

        if i0 >= 1 goto label1;

        return 0;

     label1:
        z0 = 0;

        i0 = 0;

     label2:
        r2 = r0.mAdded;

        $i1 = virtualinvoke r2.size();

        if i0 >= $i1 goto label4;

        r2 = r0.mAdded;

        $r3 = virtualinvoke r2.get(i0);

        r4 = (androidx.fragment.app.Fragment) $r3;

        if r4 == null goto label3;

        $z1 = virtualinvoke r4.performPrepareOptionsMenu($r1);

        if $z1 == 0 goto label3;

        z0 = 1;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return z0;
    }

    void dispatchPrimaryNavigationFragmentChanged()
    {
        androidx.fragment.app.Fragment $r1;
        androidx.fragment.app.FragmentManagerImpl r0;

        r0 := @this;

        specialinvoke r0.updateOnBackPressedCallbackEnabled();

        $r1 = r0.mPrimaryNav;

        specialinvoke r0.dispatchParentPrimaryNavigationFragmentChanged($r1);

        return;
    }

    public void dispatchResume()
    {
        androidx.fragment.app.FragmentManagerImpl r0;

        r0 := @this;

        r0.mStateSaved = 0;

        r0.mStopped = 0;

        specialinvoke r0.dispatchStateChange(4);

        return;
    }

    public void dispatchStart()
    {
        androidx.fragment.app.FragmentManagerImpl r0;

        r0 := @this;

        r0.mStateSaved = 0;

        r0.mStopped = 0;

        specialinvoke r0.dispatchStateChange(3);

        return;
    }

    public void dispatchStop()
    {
        androidx.fragment.app.FragmentManagerImpl r0;

        r0 := @this;

        r0.mStopped = 1;

        specialinvoke r0.dispatchStateChange(2);

        return;
    }

    void doPendingDeferredStart()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.mHavePendingDeferredStart;

        if $z0 == 0 goto label1;

        r0.mHavePendingDeferredStart = 0;

        virtualinvoke r0.startPendingDeferredFragments();

     label1:
        return;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        java.lang.Throwable r19;
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentHostCallback r17;
        java.lang.Object[] $r15;
        androidx.fragment.app.FragmentContainer r18;
        androidx.fragment.app.BackStackRecord r14;
        java.lang.String[] $r4;
        java.util.HashMap r7;
        java.util.ArrayList r13;
        int $i0, i1;
        androidx.fragment.app.Fragment r12;
        java.lang.String $r1, $r6, $r8;
        boolean $z0;
        java.io.PrintWriter $r3;
        java.util.Iterator $r10;
        java.util.Collection $r9;
        androidx.fragment.app.FragmentManagerImpl$OpGenerator r16;
        java.io.FileDescriptor $r2;
        java.lang.StringBuilder r5;
        java.lang.Object $r11;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 := @parameter3;

        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<init>();

        r5 = virtualinvoke r5.append($r1);

        r5 = virtualinvoke r5.append("    ");

        $r6 = virtualinvoke r5.toString();

        r7 = r0.mActive;

        $z0 = virtualinvoke r7.isEmpty();

        if $z0 != 0 goto label02;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("Active Fragments in ");

        $i0 = java.lang.System.identityHashCode(r0);

        $r8 = java.lang.Integer.toHexString($i0);

        virtualinvoke $r3.print($r8);

        virtualinvoke $r3.println(":");

        r7 = r0.mActive;

        $r9 = virtualinvoke r7.values();

        $r10 = interfaceinvoke $r9.iterator();

     label01:
        $z0 = interfaceinvoke $r10.hasNext();

        if $z0 == 0 goto label02;

        $r11 = interfaceinvoke $r10.next();

        r12 = (androidx.fragment.app.Fragment) $r11;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.println(r12);

        if r12 == null goto label01;

        virtualinvoke r12.dump($r6, $r2, $r3, $r4);

        goto label01;

     label02:
        r13 = r0.mAdded;

        $i0 = virtualinvoke r13.size();

        if $i0 <= 0 goto label04;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.println("Added Fragments:");

        i1 = 0;

     label03:
        if i1 >= $i0 goto label04;

        r13 = r0.mAdded;

        $r11 = virtualinvoke r13.get(i1);

        r12 = (androidx.fragment.app.Fragment) $r11;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("  #");

        virtualinvoke $r3.print(i1);

        virtualinvoke $r3.print(": ");

        $r8 = virtualinvoke r12.toString();

        virtualinvoke $r3.println($r8);

        i1 = i1 + 1;

        goto label03;

     label04:
        r13 = r0.mCreatedMenus;

        if r13 == null goto label06;

        $i0 = virtualinvoke r13.size();

        if $i0 <= 0 goto label06;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.println("Fragments Created Menus:");

        i1 = 0;

     label05:
        if i1 >= $i0 goto label06;

        r13 = r0.mCreatedMenus;

        $r11 = virtualinvoke r13.get(i1);

        r12 = (androidx.fragment.app.Fragment) $r11;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("  #");

        virtualinvoke $r3.print(i1);

        virtualinvoke $r3.print(": ");

        $r8 = virtualinvoke r12.toString();

        virtualinvoke $r3.println($r8);

        i1 = i1 + 1;

        goto label05;

     label06:
        r13 = r0.mBackStack;

        if r13 == null goto label08;

        $i0 = virtualinvoke r13.size();

        if $i0 <= 0 goto label08;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.println("Back Stack:");

        i1 = 0;

     label07:
        if i1 >= $i0 goto label08;

        r13 = r0.mBackStack;

        $r11 = virtualinvoke r13.get(i1);

        r14 = (androidx.fragment.app.BackStackRecord) $r11;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("  #");

        virtualinvoke $r3.print(i1);

        virtualinvoke $r3.print(": ");

        $r8 = virtualinvoke r14.toString();

        virtualinvoke $r3.println($r8);

        virtualinvoke r14.dump($r6, $r3);

        i1 = i1 + 1;

        goto label07;

     label08:
        entermonitor r0;

     label09:
        r13 = r0.mBackStackIndices;

        if r13 == null goto label11;

        $i0 = virtualinvoke r13.size();

        if $i0 <= 0 goto label11;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.println("Back Stack Indices:");

        i1 = 0;

     label10:
        if i1 >= $i0 goto label11;

        r13 = r0.mBackStackIndices;

        $r11 = virtualinvoke r13.get(i1);

        r14 = (androidx.fragment.app.BackStackRecord) $r11;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("  #");

        virtualinvoke $r3.print(i1);

        virtualinvoke $r3.print(": ");

        virtualinvoke $r3.println(r14);

        i1 = i1 + 1;

        goto label10;

     label11:
        r13 = r0.mAvailBackStackIndices;

        if r13 == null goto label12;

        $i0 = virtualinvoke r13.size();

        if $i0 <= 0 goto label12;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mAvailBackStackIndices: ");

        r13 = r0.mAvailBackStackIndices;

        $r15 = virtualinvoke r13.toArray();

        $r6 = java.util.Arrays.toString($r15);

        virtualinvoke $r3.println($r6);

     label12:
        exitmonitor r0;

     label13:
        r13 = r0.mPendingActions;

        if r13 == null goto label15;

        $i0 = virtualinvoke r13.size();

        if $i0 <= 0 goto label15;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.println("Pending Actions:");

        i1 = 0;

     label14:
        if i1 >= $i0 goto label15;

        r13 = r0.mPendingActions;

        $r11 = virtualinvoke r13.get(i1);

        r16 = (androidx.fragment.app.FragmentManagerImpl$OpGenerator) $r11;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("  #");

        virtualinvoke $r3.print(i1);

        virtualinvoke $r3.print(": ");

        virtualinvoke $r3.println(r16);

        i1 = i1 + 1;

        goto label14;

     label15:
        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.println("FragmentManager misc state:");

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("  mHost=");

        r17 = r0.mHost;

        virtualinvoke $r3.println(r17);

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("  mContainer=");

        r18 = r0.mContainer;

        virtualinvoke $r3.println(r18);

        r12 = r0.mParent;

        if r12 == null goto label16;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("  mParent=");

        r12 = r0.mParent;

        virtualinvoke $r3.println(r12);

     label16:
        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("  mCurState=");

        $i0 = r0.mCurState;

        virtualinvoke $r3.print($i0);

        virtualinvoke $r3.print(" mStateSaved=");

        $z0 = r0.mStateSaved;

        virtualinvoke $r3.print($z0);

        virtualinvoke $r3.print(" mStopped=");

        $z0 = r0.mStopped;

        virtualinvoke $r3.print($z0);

        virtualinvoke $r3.print(" mDestroyed=");

        $z0 = r0.mDestroyed;

        virtualinvoke $r3.println($z0);

        $z0 = r0.mNeedMenuInvalidate;

        if $z0 == 0 goto label21;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("  mNeedMenuInvalidate=");

        $z0 = r0.mNeedMenuInvalidate;

        virtualinvoke $r3.println($z0);

        return;

     label17:
        r19 := @caughtexception;

     label18:
        exitmonitor r0;

     label19:
        goto label20;

     label20:
        throw r19;

     label21:
        return;

        catch java.lang.Throwable from label09 to label13 with label17;
        catch java.lang.Throwable from label18 to label19 with label17;
    }

    public void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator, boolean)
    {
        java.lang.Throwable $r5;
        androidx.fragment.app.FragmentManagerImpl r0;
        java.lang.IllegalStateException $r4;
        androidx.fragment.app.FragmentHostCallback $r2;
        androidx.fragment.app.FragmentManagerImpl$OpGenerator r1;
        java.util.ArrayList $r3;
        boolean z0, $z1;

        r0 := @this;

        r1 := @parameter0;

        z0 := @parameter1;

        if z0 != 0 goto label01;

        specialinvoke r0.checkStateLoss();

     label01:
        entermonitor r0;

     label02:
        $z1 = r0.mDestroyed;

        if $z1 != 0 goto label06;

        $r2 = r0.mHost;

        if $r2 != null goto label03;

        goto label06;

     label03:
        $r3 = r0.mPendingActions;

        if $r3 != null goto label04;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<init>();

        r0.mPendingActions = $r3;

     label04:
        $r3 = r0.mPendingActions;

        virtualinvoke $r3.add(r1);

        virtualinvoke r0.scheduleCommit();

        exitmonitor r0;

     label05:
        return;

     label06:
        if z0 == 0 goto label08;

        exitmonitor r0;

     label07:
        return;

     label08:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<init>("Activity has been destroyed");

        throw $r4;

     label09:
        $r5 := @caughtexception;

        exitmonitor r0;

     label10:
        throw $r5;

        catch java.lang.Throwable from label02 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label08 to label10 with label09;
    }

    void ensureInflatedFragmentView(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        android.os.Bundle $r3;
        android.view.LayoutInflater $r2;
        androidx.fragment.app.Fragment $r1;
        android.view.View $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = $r1.mFromLayout;

        if $z0 == 0 goto label3;

        $z0 = $r1.mPerformedCreateView;

        if $z0 != 0 goto label3;

        $r3 = $r1.mSavedFragmentState;

        $r2 = virtualinvoke $r1.performGetLayoutInflater($r3);

        $r3 = $r1.mSavedFragmentState;

        virtualinvoke $r1.performCreateView($r2, null, $r3);

        $r4 = $r1.mView;

        if $r4 == null goto label2;

        $r4 = $r1.mView;

        $r1.mInnerView = $r4;

        $r4 = $r1.mView;

        virtualinvoke $r4.setSaveFromParentEnabled(0);

        $z0 = $r1.mHidden;

        if $z0 == 0 goto label1;

        $r4 = $r1.mView;

        virtualinvoke $r4.setVisibility(8);

     label1:
        $r4 = $r1.mView;

        $r3 = $r1.mSavedFragmentState;

        virtualinvoke $r1.onViewCreated($r4, $r3);

        $r4 = $r1.mView;

        $r3 = $r1.mSavedFragmentState;

        virtualinvoke r0.dispatchOnFragmentViewCreated($r1, $r4, $r3, 0);

        return;

     label2:
        $r1.mInnerView = null;

     label3:
        return;
    }

    public boolean execPendingActions()
    {
        java.lang.Throwable $r3;
        androidx.fragment.app.FragmentManagerImpl r0;
        boolean $z0, z1;
        java.util.ArrayList $r1, $r2;

        r0 := @this;

        specialinvoke r0.ensureExecReady(1);

        z1 = 0;

     label1:
        $r1 = r0.mTmpRecords;

        $r2 = r0.mTmpIsPop;

        $z0 = specialinvoke r0.generateOpsForPendingActions($r1, $r2);

        if $z0 == 0 goto label5;

        r0.mExecutingActions = 1;

     label2:
        $r1 = r0.mTmpRecords;

        $r2 = r0.mTmpIsPop;

        specialinvoke r0.removeRedundantOperationsAndExecute($r1, $r2);

     label3:
        specialinvoke r0.cleanupExec();

        z1 = 1;

        goto label1;

     label4:
        $r3 := @caughtexception;

        specialinvoke r0.cleanupExec();

        throw $r3;

     label5:
        specialinvoke r0.updateOnBackPressedCallbackEnabled();

        virtualinvoke r0.doPendingDeferredStart();

        specialinvoke r0.burpActive();

        return z1;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator, boolean)
    {
        java.lang.Throwable $r5;
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentHostCallback $r2;
        androidx.fragment.app.FragmentManagerImpl$OpGenerator $r1;
        java.util.ArrayList $r3, $r4;
        boolean $z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        if $z0 == 0 goto label1;

        $r2 = r0.mHost;

        if $r2 == null goto label6;

        $z1 = r0.mDestroyed;

        if $z1 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.ensureExecReady($z0);

        $r3 = r0.mTmpRecords;

        $r4 = r0.mTmpIsPop;

        $z0 = interfaceinvoke $r1.generateOps($r3, $r4);

        if $z0 == 0 goto label5;

        r0.mExecutingActions = 1;

     label2:
        $r3 = r0.mTmpRecords;

        $r4 = r0.mTmpIsPop;

        specialinvoke r0.removeRedundantOperationsAndExecute($r3, $r4);

     label3:
        specialinvoke r0.cleanupExec();

        goto label5;

     label4:
        $r5 := @caughtexception;

        specialinvoke r0.cleanupExec();

        throw $r5;

     label5:
        specialinvoke r0.updateOnBackPressedCallbackEnabled();

        virtualinvoke r0.doPendingDeferredStart();

        specialinvoke r0.burpActive();

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public boolean executePendingTransactions()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        boolean $z0;

        r0 := @this;

        $z0 = virtualinvoke r0.execPendingActions();

        specialinvoke r0.forcePostponedTransactions();

        return $z0;
    }

    public androidx.fragment.app.Fragment findFragmentById(int)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.Iterator $r6;
        java.util.Collection $r5;
        java.util.HashMap r4;
        java.util.ArrayList r1;
        int $i0, $i1, $i2;
        androidx.fragment.app.Fragment r3;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        r1 = r0.mAdded;

        $i1 = virtualinvoke r1.size();

        $i1 = $i1 + -1;

     label1:
        if $i1 < 0 goto label3;

        r1 = r0.mAdded;

        $r2 = virtualinvoke r1.get($i1);

        r3 = (androidx.fragment.app.Fragment) $r2;

        if r3 == null goto label2;

        $i2 = r3.mFragmentId;

        if $i2 != $i0 goto label2;

        return r3;

     label2:
        $i1 = $i1 + -1;

        goto label1;

     label3:
        r4 = r0.mActive;

        $r5 = virtualinvoke r4.values();

        $r6 = interfaceinvoke $r5.iterator();

     label4:
        $z0 = interfaceinvoke $r6.hasNext();

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke $r6.next();

        r3 = (androidx.fragment.app.Fragment) $r2;

        if r3 == null goto label4;

        $i1 = r3.mFragmentId;

        if $i1 != $i0 goto label4;

        return r3;

     label5:
        return null;
    }

    public androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.Iterator $r8;
        java.util.Collection $r7;
        java.util.HashMap r6;
        java.util.ArrayList r2;
        int $i0;
        androidx.fragment.app.Fragment r4;
        java.lang.Object $r3;
        java.lang.String $r1, $r5;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 == null goto label3;

        r2 = r0.mAdded;

        $i0 = virtualinvoke r2.size();

        $i0 = $i0 + -1;

     label1:
        if $i0 < 0 goto label3;

        r2 = r0.mAdded;

        $r3 = virtualinvoke r2.get($i0);

        r4 = (androidx.fragment.app.Fragment) $r3;

        if r4 == null goto label2;

        $r5 = r4.mTag;

        $z0 = virtualinvoke $r1.equals($r5);

        if $z0 == 0 goto label2;

        return r4;

     label2:
        $i0 = $i0 + -1;

        goto label1;

     label3:
        if $r1 == null goto label5;

        r6 = r0.mActive;

        $r7 = virtualinvoke r6.values();

        $r8 = interfaceinvoke $r7.iterator();

     label4:
        $z0 = interfaceinvoke $r8.hasNext();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r8.next();

        r4 = (androidx.fragment.app.Fragment) $r3;

        if r4 == null goto label4;

        $r5 = r4.mTag;

        $z0 = virtualinvoke $r1.equals($r5);

        if $z0 == 0 goto label4;

        return r4;

     label5:
        return null;
    }

    public androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.Iterator $r4;
        java.util.Collection $r3;
        java.util.HashMap $r2;
        androidx.fragment.app.Fragment r6;
        java.lang.Object $r5;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mActive;

        $r3 = virtualinvoke $r2.values();

        $r4 = interfaceinvoke $r3.iterator();

     label1:
        $z0 = interfaceinvoke $r4.hasNext();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.next();

        r6 = (androidx.fragment.app.Fragment) $r5;

        if r6 == null goto label1;

        r6 = virtualinvoke r6.findFragmentByWho($r1);

        if r6 == null goto label1;

        return r6;

     label2:
        return null;
    }

    public void freeBackStackIndex(int)
    {
        java.lang.Throwable $r5;
        androidx.fragment.app.FragmentManagerImpl r0;
        java.lang.Integer $r4;
        java.util.ArrayList $r1;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        entermonitor r0;

     label1:
        $r1 = r0.mBackStackIndices;

        virtualinvoke $r1.set($i0, null);

        $r1 = r0.mAvailBackStackIndices;

        if $r1 != null goto label2;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<init>();

        r0.mAvailBackStackIndices = $r1;

     label2:
        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<init>();

        $r2 = virtualinvoke $r2.append("Freeing back stack index ");

        $r2 = virtualinvoke $r2.append($i0);

        $r3 = virtualinvoke $r2.toString();

        android.util.Log.v("FragmentManager", $r3);

     label3:
        $r1 = r0.mAvailBackStackIndices;

        $r4 = java.lang.Integer.valueOf($i0);

        virtualinvoke $r1.add($r4);

        exitmonitor r0;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    int getActiveFragmentCount()
    {
        int $i0;
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.HashMap $r1;

        r0 := @this;

        $r1 = r0.mActive;

        $i0 = virtualinvoke $r1.size();

        return $i0;
    }

    java.util.List getActiveFragments()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.Collection $r2;
        java.util.HashMap $r3;
        java.util.ArrayList $r1;

        r0 := @this;

        $r1 = new java.util.ArrayList;

        $r3 = r0.mActive;

        $r2 = virtualinvoke $r3.values();

        specialinvoke $r1.<init>($r2);

        return $r1;
    }

    public androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentManager$BackStackEntry $r3;
        int $i0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;

        r0 := @this;

        $i0 := @parameter0;

        $r2 = r0.mBackStack;

        $r1 = virtualinvoke $r2.get($i0);

        $r3 = (androidx.fragment.app.FragmentManager$BackStackEntry) $r1;

        return $r3;
    }

    public int getBackStackEntryCount()
    {
        int $i0;
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.ArrayList $r1;

        r0 := @this;

        $r1 = r0.mBackStack;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.size();

        return $i0;

     label1:
        return 0;
    }

    androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.Fragment $r1;
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentManagerViewModel $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mNonConfig;

        $r2 = virtualinvoke $r2.getChildNonConfig($r1);

        return $r2;
    }

    public androidx.fragment.app.Fragment getFragment(android.os.Bundle, java.lang.String)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.lang.IllegalStateException $r3;
        android.os.Bundle $r1;
        java.util.HashMap r5;
        androidx.fragment.app.Fragment r7;
        java.lang.Object $r6;
        java.lang.StringBuilder $r8;
        java.lang.String $r2, $r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r4 = virtualinvoke $r1.getString($r2);

        if $r4 != null goto label1;

        return null;

     label1:
        r5 = r0.mActive;

        $r6 = virtualinvoke r5.get($r4);

        r7 = (androidx.fragment.app.Fragment) $r6;

        if r7 != null goto label2;

        $r3 = new java.lang.IllegalStateException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<init>();

        $r8 = virtualinvoke $r8.append("Fragment no longer exists for key ");

        $r8 = virtualinvoke $r8.append($r2);

        $r8 = virtualinvoke $r8.append(": unique id ");

        $r8 = virtualinvoke $r8.append($r4);

        $r2 = virtualinvoke $r8.toString();

        specialinvoke $r3.<init>($r2);

        specialinvoke r0.throwException($r3);

     label2:
        return r7;
    }

    public androidx.fragment.app.FragmentFactory getFragmentFactory()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentFactory $r1, $r2;
        androidx.fragment.app.FragmentManagerImpl$6 $r4;
        androidx.fragment.app.Fragment $r3;

        r0 := @this;

        $r1 = specialinvoke r0.getFragmentFactory();

        $r2 = androidx.fragment.app.FragmentManagerImpl.DEFAULT_FACTORY;

        if $r1 != $r2 goto label2;

        $r3 = r0.mParent;

        if $r3 == null goto label1;

        r0 = $r3.mFragmentManager;

        $r1 = virtualinvoke r0.getFragmentFactory();

        return $r1;

     label1:
        $r4 = new androidx.fragment.app.FragmentManagerImpl$6;

        specialinvoke $r4.<init>(r0);

        virtualinvoke r0.setFragmentFactory($r4);

     label2:
        $r1 = specialinvoke r0.getFragmentFactory();

        return $r1;
    }

    public java.util.List getFragments()
    {
        java.lang.Throwable $r5;
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.List $r2;
        java.lang.Object $r4;
        java.util.ArrayList $r1, $r3;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mAdded;

        $z0 = virtualinvoke $r1.isEmpty();

        if $z0 == 0 goto label1;

        $r2 = java.util.Collections.emptyList();

        return $r2;

     label1:
        $r1 = r0.mAdded;

        entermonitor $r1;

     label2:
        $r3 = r0.mAdded;

        $r4 = virtualinvoke $r3.clone();

        $r2 = (java.util.List) $r4;

        exitmonitor $r1;

     label3:
        return $r2;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()
    {
        androidx.fragment.app.FragmentManagerImpl r0;

        r0 := @this;

        return r0;
    }

    public androidx.fragment.app.Fragment getPrimaryNavigationFragment()
    {
        androidx.fragment.app.Fragment r1;
        androidx.fragment.app.FragmentManagerImpl r0;

        r0 := @this;

        r1 = r0.mPrimaryNav;

        return r1;
    }

    androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.lifecycle.ViewModelStore $r2;
        androidx.fragment.app.FragmentManagerViewModel $r3;
        androidx.fragment.app.Fragment $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r3 = r0.mNonConfig;

        $r2 = virtualinvoke $r3.getViewModelStore($r1);

        return $r2;
    }

    void handleOnBackPressed()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.activity.OnBackPressedCallback $r1;
        androidx.activity.OnBackPressedDispatcher $r2;
        boolean $z0;

        r0 := @this;

        virtualinvoke r0.execPendingActions();

        $r1 = r0.mOnBackPressedCallback;

        $z0 = virtualinvoke $r1.isEnabled();

        if $z0 == 0 goto label1;

        virtualinvoke r0.popBackStackImmediate();

        return;

     label1:
        $r2 = r0.mOnBackPressedDispatcher;

        virtualinvoke $r2.onBackPressed();

        return;
    }

    public void hideFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<init>();

        $r2 = virtualinvoke $r2.append("hide: ");

        $r2 = virtualinvoke $r2.append($r1);

        $r3 = virtualinvoke $r2.toString();

        android.util.Log.v("FragmentManager", $r3);

     label1:
        $z0 = $r1.mHidden;

        if $z0 != 0 goto label2;

        $r1.mHidden = 1;

        $z0 = $r1.mHiddenChanged;

        $z0 = 1 ^ $z0;

        $r1.mHiddenChanged = $z0;

     label2:
        return;
    }

    public boolean isDestroyed()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mDestroyed;

        return z0;
    }

    boolean isPrimaryNavigation(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r2;
        androidx.fragment.app.Fragment $r1, $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 != null goto label1;

        return 1;

     label1:
        r2 = $r1.mFragmentManager;

        $r3 = virtualinvoke r2.getPrimaryNavigationFragment();

        if $r1 != $r3 goto label2;

        $r1 = r2.mParent;

        $z0 = virtualinvoke r0.isPrimaryNavigation($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    boolean isStateAtLeast(int)
    {
        int $i0, $i1;
        androidx.fragment.app.FragmentManagerImpl r0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 = r0.mCurState;

        if $i1 < $i0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isStateSaved()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.mStateSaved;

        if $z0 != 0 goto label2;

        $z0 = r0.mStopped;

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment, int, boolean, int)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        android.content.Context $r8;
        androidx.fragment.app.FragmentHostCallback r7;
        android.animation.Animator $r6;
        android.animation.LayoutTransition $r3;
        androidx.fragment.app.Fragment $r1;
        int $i0, $i1, $i2;
        android.view.animation.Animation $r4;
        java.lang.String $r10, r11;
        boolean $z0, $z1, z2;
        android.content.res.Resources$NotFoundException r13;
        java.lang.RuntimeException r12, r14;
        android.view.ViewGroup r2;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator r5;
        android.content.res.Resources $r9;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $z0 := @parameter2;

        $i1 := @parameter3;

        $i2 = virtualinvoke $r1.getNextAnim();

        virtualinvoke $r1.setNextAnim(0);

        r2 = $r1.mContainer;

        if r2 == null goto label01;

        r2 = $r1.mContainer;

        $r3 = virtualinvoke r2.getLayoutTransition();

        if $r3 == null goto label01;

        return null;

     label01:
        $r4 = virtualinvoke $r1.onCreateAnimation($i0, $z0, $i2);

        if $r4 == null goto label02;

        r5 = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        specialinvoke r5.<init>($r4);

        return r5;

     label02:
        $r6 = virtualinvoke $r1.onCreateAnimator($i0, $z0, $i2);

        if $r6 == null goto label03;

        r5 = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        specialinvoke r5.<init>($r6);

        return r5;

     label03:
        if $i2 == 0 goto label20;

        r7 = r0.mHost;

        $r8 = virtualinvoke r7.getContext();

        $r9 = virtualinvoke $r8.getResources();

        $r10 = virtualinvoke $r9.getResourceTypeName($i2);

        r11 = "anim";

        $z1 = virtualinvoke r11.equals($r10);

        z2 = 0;

        if $z1 == 0 goto label12;

     label04:
        r7 = r0.mHost;

     label05:
        $r8 = virtualinvoke r7.getContext();

        $r4 = android.view.animation.AnimationUtils.loadAnimation($r8, $i2);

     label06:
        if $r4 == null goto label09;

        r5 = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

     label07:
        specialinvoke r5.<init>($r4);

     label08:
        return r5;

     label09:
        z2 = 1;

        goto label12;

     label10:
        r12 := @caughtexception;

        goto label12;

     label11:
        r13 := @caughtexception;

        throw r13;

     label12:
        if z2 != 0 goto label20;

     label13:
        r7 = r0.mHost;

        $r8 = virtualinvoke r7.getContext();

        $r6 = android.animation.AnimatorInflater.loadAnimator($r8, $i2);

     label14:
        if $r6 == null goto label17;

        r5 = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

     label15:
        specialinvoke r5.<init>($r6);

     label16:
        return r5;

     label17:
        goto label20;

     label18:
        r14 := @caughtexception;

        if $z1 != 0 goto label19;

        r7 = r0.mHost;

        $r8 = virtualinvoke r7.getContext();

        $r4 = android.view.animation.AnimationUtils.loadAnimation($r8, $i2);

        if $r4 == null goto label20;

        r5 = new androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator;

        specialinvoke r5.<init>($r4);

        return r5;

     label19:
        throw r14;

     label20:
        if $i0 != 0 goto label21;

        return null;

     label21:
        $i0 = androidx.fragment.app.FragmentManagerImpl.transitToStyleIndex($i0, $z0);

        if $i0 >= 0 goto label22;

        return null;

     label22:
        lookupswitch($i0)
        {
            case 1: goto label29;
            case 2: goto label28;
            case 3: goto label27;
            case 4: goto label26;
            case 5: goto label25;
            case 6: goto label24;
            default: goto label23;
        };

     label23:
        if $i1 != 0 goto label30;

        r7 = r0.mHost;

        $z0 = virtualinvoke r7.onHasWindowAnimations();

        if $z0 == 0 goto label30;

        r7 = r0.mHost;

        virtualinvoke r7.onGetWindowAnimations();

        goto label30;

     label24:
        r5 = androidx.fragment.app.FragmentManagerImpl.makeFadeAnimation(1.0F, 0.0F);

        return r5;

     label25:
        r5 = androidx.fragment.app.FragmentManagerImpl.makeFadeAnimation(0.0F, 1.0F);

        return r5;

     label26:
        r5 = androidx.fragment.app.FragmentManagerImpl.makeOpenCloseAnimation(1.0F, 1.075F, 1.0F, 0.0F);

        return r5;

     label27:
        r5 = androidx.fragment.app.FragmentManagerImpl.makeOpenCloseAnimation(0.975F, 1.0F, 0.0F, 1.0F);

        return r5;

     label28:
        r5 = androidx.fragment.app.FragmentManagerImpl.makeOpenCloseAnimation(1.0F, 0.975F, 1.0F, 0.0F);

        return r5;

     label29:
        r5 = androidx.fragment.app.FragmentManagerImpl.makeOpenCloseAnimation(1.125F, 1.0F, 0.0F, 1.0F);

        return r5;

     label30:
        return null;

        catch android.content.res.Resources$NotFoundException from label05 to label06 with label11;
        catch android.content.res.Resources$NotFoundException from label07 to label08 with label11;
        catch java.lang.RuntimeException from label04 to label06 with label10;
        catch java.lang.RuntimeException from label07 to label08 with label10;
        catch java.lang.RuntimeException from label13 to label14 with label18;
        catch java.lang.RuntimeException from label15 to label16 with label18;
    }

    void makeActive(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.Fragment $r1;
        java.util.HashMap $r2;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mActive;

        $r3 = $r1.mWho;

        $r4 = virtualinvoke $r2.get($r3);

        if $r4 == null goto label1;

        return;

     label1:
        $r2 = r0.mActive;

        $r3 = $r1.mWho;

        virtualinvoke $r2.put($r3, $r1);

        $z0 = $r1.mRetainInstanceChangedWhileDetached;

        if $z0 == 0 goto label4;

        $z0 = $r1.mRetainInstance;

        if $z0 == 0 goto label2;

        virtualinvoke r0.addRetainedFragment($r1);

        goto label3;

     label2:
        virtualinvoke r0.removeRetainedFragment($r1);

     label3:
        $r1.mRetainInstanceChangedWhileDetached = 0;

     label4:
        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label5;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r5 = virtualinvoke $r5.append("Added fragment to active set ");

        $r5 = virtualinvoke $r5.append($r1);

        $r3 = virtualinvoke $r5.toString();

        android.util.Log.v("FragmentManager", $r3);

     label5:
        return;
    }

    void makeInactive(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.Iterator $r7;
        java.util.Collection $r6;
        java.util.HashMap $r3;
        androidx.fragment.app.Fragment $r1, r8;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r2, $r9;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r3 = r0.mActive;

        $r2 = $r1.mWho;

        $r4 = virtualinvoke $r3.get($r2);

        if $r4 != null goto label1;

        return;

     label1:
        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r5 = virtualinvoke $r5.append("Removed fragment from active set ");

        $r5 = virtualinvoke $r5.append($r1);

        $r2 = virtualinvoke $r5.toString();

        android.util.Log.v("FragmentManager", $r2);

     label2:
        $r3 = r0.mActive;

        $r6 = virtualinvoke $r3.values();

        $r7 = interfaceinvoke $r6.iterator();

     label3:
        $z0 = interfaceinvoke $r7.hasNext();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r7.next();

        r8 = (androidx.fragment.app.Fragment) $r4;

        if r8 == null goto label3;

        $r9 = $r1.mWho;

        $r2 = r8.mTargetWho;

        $z0 = virtualinvoke $r9.equals($r2);

        if $z0 == 0 goto label3;

        r8.mTarget = $r1;

        r8.mTargetWho = null;

        goto label3;

     label4:
        $r3 = r0.mActive;

        $r2 = $r1.mWho;

        virtualinvoke $r3.put($r2, null);

        virtualinvoke r0.removeRetainedFragment($r1);

        $r2 = $r1.mTargetWho;

        if $r2 == null goto label5;

        $r3 = r0.mActive;

        $r2 = $r1.mTargetWho;

        $r4 = virtualinvoke $r3.get($r2);

        r8 = (androidx.fragment.app.Fragment) $r4;

        $r1.mTarget = r8;

     label5:
        virtualinvoke $r1.initState();

        return;
    }

    void moveFragmentToExpectedState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.HashMap r2;
        android.animation.Animator $r10;
        byte b3;
        androidx.fragment.app.Fragment $r1, $r6;
        int i0, $i1, $i2;
        android.view.View r5;
        java.lang.String r3;
        android.view.animation.Animation $r9;
        boolean $z0;
        android.view.ViewGroup r7;
        float f0;
        java.lang.StringBuilder r4, $r11;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator $r8;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 != null goto label1;

        return;

     label1:
        r2 = r0.mActive;

        r3 = $r1.mWho;

        $z0 = virtualinvoke r2.containsKey(r3);

        if $z0 != 0 goto label2;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label9;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<init>();

        r4 = virtualinvoke $r11.append("Ignoring moving ");

        r4 = virtualinvoke r4.append($r1);

        r4 = virtualinvoke r4.append(" to state ");

        i0 = r0.mCurState;

        r4 = virtualinvoke r4.append(i0);

        r4 = virtualinvoke r4.append("since it is not added to ");

        r4 = virtualinvoke r4.append(r0);

        r3 = virtualinvoke r4.toString();

        android.util.Log.v("FragmentManager", r3);

        return;

     label2:
        i0 = r0.mCurState;

        $z0 = $r1.mRemoving;

        if $z0 == 0 goto label4;

        $z0 = virtualinvoke $r1.isInBackStack();

        if $z0 == 0 goto label3;

        i0 = java.lang.Math.min(i0, 1);

        goto label4;

     label3:
        i0 = java.lang.Math.min(i0, 0);

     label4:
        $i1 = virtualinvoke $r1.getNextTransition();

        $i2 = virtualinvoke $r1.getNextTransitionStyle();

        virtualinvoke r0.moveToState($r1, i0, $i1, $i2, 0);

        r5 = $r1.mView;

        if r5 == null goto label8;

        $r6 = specialinvoke r0.findFragmentUnder($r1);

        if $r6 == null goto label5;

        r5 = $r6.mView;

        r7 = $r1.mContainer;

        i0 = virtualinvoke r7.indexOfChild(r5);

        r5 = $r1.mView;

        $i1 = virtualinvoke r7.indexOfChild(r5);

        if $i1 >= i0 goto label5;

        virtualinvoke r7.removeViewAt($i1);

        r5 = $r1.mView;

        virtualinvoke r7.addView(r5, i0);

     label5:
        $z0 = $r1.mIsNewlyAdded;

        if $z0 == 0 goto label8;

        r7 = $r1.mContainer;

        if r7 == null goto label8;

        f0 = $r1.mPostponedAlpha;

        b3 = f0 cmpl 0.0F;

        i0 = (int) b3;

        if i0 <= 0 goto label6;

        r5 = $r1.mView;

        f0 = $r1.mPostponedAlpha;

        virtualinvoke r5.setAlpha(f0);

     label6:
        $r1.mPostponedAlpha = 0.0F;

        $r1.mIsNewlyAdded = 0;

        i0 = virtualinvoke $r1.getNextTransition();

        $i1 = virtualinvoke $r1.getNextTransitionStyle();

        $r8 = virtualinvoke r0.loadAnimation($r1, i0, 1, $i1);

        if $r8 == null goto label8;

        $r9 = $r8.animation;

        if $r9 == null goto label7;

        r5 = $r1.mView;

        $r9 = $r8.animation;

        virtualinvoke r5.startAnimation($r9);

        goto label8;

     label7:
        $r10 = $r8.animator;

        r5 = $r1.mView;

        virtualinvoke $r10.setTarget(r5);

        $r10 = $r8.animator;

        virtualinvoke $r10.start();

     label8:
        $z0 = $r1.mHiddenChanged;

        if $z0 == 0 goto label9;

        virtualinvoke r0.completeShowHideFragment($r1);

     label9:
        return;
    }

    void moveToState(int, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.lang.IllegalStateException r2;
        androidx.fragment.app.FragmentHostCallback r1;
        java.util.Iterator $r8;
        java.util.Collection $r7;
        java.util.HashMap r6;
        java.util.ArrayList r3;
        int $i0, i1;
        androidx.fragment.app.Fragment r5;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $z0 := @parameter1;

        r1 = r0.mHost;

        if r1 != null goto label2;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        r2 = new java.lang.IllegalStateException;

        specialinvoke r2.<init>("No activity");

        throw r2;

     label2:
        if $z0 != 0 goto label3;

        i1 = r0.mCurState;

        if $i0 != i1 goto label3;

        return;

     label3:
        r0.mCurState = $i0;

        r3 = r0.mAdded;

        $i0 = virtualinvoke r3.size();

        i1 = 0;

     label4:
        if i1 >= $i0 goto label5;

        r3 = r0.mAdded;

        $r4 = virtualinvoke r3.get(i1);

        r5 = (androidx.fragment.app.Fragment) $r4;

        virtualinvoke r0.moveFragmentToExpectedState(r5);

        i1 = i1 + 1;

        goto label4;

     label5:
        r6 = r0.mActive;

        $r7 = virtualinvoke r6.values();

        $r8 = interfaceinvoke $r7.iterator();

     label6:
        $z0 = interfaceinvoke $r8.hasNext();

        if $z0 == 0 goto label8;

        $r4 = interfaceinvoke $r8.next();

        r5 = (androidx.fragment.app.Fragment) $r4;

        if r5 == null goto label6;

        $z0 = r5.mRemoving;

        if $z0 != 0 goto label7;

        $z0 = r5.mDetached;

        if $z0 == 0 goto label6;

     label7:
        $z0 = r5.mIsNewlyAdded;

        if $z0 != 0 goto label6;

        virtualinvoke r0.moveFragmentToExpectedState(r5);

        goto label6;

     label8:
        virtualinvoke r0.startPendingDeferredFragments();

        $z0 = r0.mNeedMenuInvalidate;

        if $z0 == 0 goto label9;

        r1 = r0.mHost;

        if r1 == null goto label9;

        $i0 = r0.mCurState;

        if $i0 != 4 goto label9;

        virtualinvoke r1.onSupportInvalidateOptionsMenu();

        r0.mNeedMenuInvalidate = 0;

     label9:
        return;
    }

    void moveToState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.Fragment $r1;
        int $i0;
        androidx.fragment.app.FragmentManagerImpl r0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 = r0.mCurState;

        virtualinvoke r0.moveToState($r1, $i0, 0, 0, 0);

        return;
    }

    void moveToState(androidx.fragment.app.Fragment, int, int, int, boolean)
    {
        java.lang.IllegalStateException $r29;
        android.os.Bundle r8;
        androidx.fragment.app.FragmentContainer r19;
        android.animation.Animator $r5;
        byte b4;
        androidx.fragment.app.Fragment $r1, $r13;
        android.view.View $r4;
        boolean $z0, z1, $z2;
        android.content.res.Resources$NotFoundException r21;
        android.view.ViewGroup r18;
        android.util.SparseArray $r12;
        androidx.lifecycle.Lifecycle$State r2, r3;
        float f0;
        java.lang.StringBuilder r6, $r28;
        java.lang.ClassLoader $r11;
        androidx.lifecycle.MutableLiveData r25;
        androidx.fragment.app.FragmentManagerImpl r0, r15;
        android.content.Context $r10;
        androidx.fragment.app.FragmentHostCallback r9;
        java.util.HashMap r16;
        int $i0, $i1, $i2, i3;
        java.lang.Boolean r14;
        java.lang.String $r7, $r22;
        android.view.LayoutInflater $r23;
        java.lang.IllegalArgumentException $r30;
        androidx.fragment.app.FragmentManagerViewModel r26;
        java.lang.Object $r17;
        android.app.Activity r27;
        androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator r24;
        android.content.res.Resources $r20;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        $i2 := @parameter3;

        $z0 := @parameter4;

        z1 = $r1.mAdded;

        $z2 = 1;

        if z1 == 0 goto label02;

        z1 = $r1.mDetached;

        if z1 == 0 goto label01;

        goto label02;

     label01:
        i3 = $i0;

        goto label03;

     label02:
        i3 = $i0;

        if $i0 <= 1 goto label03;

        i3 = 1;

     label03:
        z1 = $r1.mRemoving;

        if z1 == 0 goto label05;

        $i0 = $r1.mState;

        if i3 <= $i0 goto label05;

        $i0 = $r1.mState;

        if $i0 != 0 goto label04;

        z1 = virtualinvoke $r1.isInBackStack();

        if z1 == 0 goto label04;

        i3 = 1;

        goto label05;

     label04:
        i3 = $r1.mState;

     label05:
        z1 = $r1.mDeferStart;

        if z1 == 0 goto label06;

        $i0 = $r1.mState;

        if $i0 >= 3 goto label06;

        if i3 <= 2 goto label06;

        i3 = 2;

     label06:
        r2 = $r1.mMaxState;

        r3 = androidx.lifecycle.Lifecycle$State.CREATED;

        if r2 != r3 goto label07;

        $i0 = java.lang.Math.min(i3, 1);

        goto label08;

     label07:
        r2 = $r1.mMaxState;

        $i0 = virtualinvoke r2.ordinal();

        $i0 = java.lang.Math.min(i3, $i0);

     label08:
        i3 = $r1.mState;

        if i3 > $i0 goto label56;

        $z0 = $r1.mFromLayout;

        if $z0 == 0 goto label09;

        $z0 = $r1.mInLayout;

        if $z0 != 0 goto label09;

        return;

     label09:
        $r4 = virtualinvoke $r1.getAnimatingAway();

        if $r4 != null goto label10;

        $r5 = virtualinvoke $r1.getAnimator();

        if $r5 == null goto label11;

     label10:
        virtualinvoke $r1.setAnimatingAway(null);

        virtualinvoke $r1.setAnimator(null);

        $i1 = virtualinvoke $r1.getStateAfterAnimating();

        virtualinvoke r0.moveToState($r1, $i1, 0, 0, 1);

     label11:
        $i1 = $r1.mState;

        lookupswitch($i1)
        {
            case 0: goto label13;
            case 1: goto label32;
            case 2: goto label51;
            case 3: goto label53;
            default: goto label12;
        };

     label12:
        goto label55;

     label13:
        if $i0 <= 0 goto label32;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label14;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<init>();

        r6 = virtualinvoke $r28.append("moveto CREATED: ");

        r6 = virtualinvoke r6.append($r1);

        $r7 = virtualinvoke r6.toString();

        android.util.Log.v("FragmentManager", $r7);

     label14:
        r8 = $r1.mSavedFragmentState;

        if r8 == null goto label20;

        r8 = $r1.mSavedFragmentState;

        r9 = r0.mHost;

        $r10 = virtualinvoke r9.getContext();

        $r11 = virtualinvoke $r10.getClassLoader();

        virtualinvoke r8.setClassLoader($r11);

        r8 = $r1.mSavedFragmentState;

        $r12 = virtualinvoke r8.getSparseParcelableArray("android:view_state");

        $r1.mSavedViewState = $r12;

        r8 = $r1.mSavedFragmentState;

        $r13 = virtualinvoke r0.getFragment(r8, "android:target_state");

        if $r13 == null goto label15;

        $r7 = $r13.mWho;

        goto label16;

     label15:
        $r7 = null;

     label16:
        $r1.mTargetWho = $r7;

        $r7 = $r1.mTargetWho;

        if $r7 == null goto label17;

        r8 = $r1.mSavedFragmentState;

        $i1 = virtualinvoke r8.getInt("android:target_req_state", 0);

        $r1.mTargetRequestCode = $i1;

     label17:
        r14 = $r1.mSavedUserVisibleHint;

        if r14 == null goto label18;

        r14 = $r1.mSavedUserVisibleHint;

        $z0 = virtualinvoke r14.booleanValue();

        $r1.mUserVisibleHint = $z0;

        $r1.mSavedUserVisibleHint = null;

        goto label19;

     label18:
        r8 = $r1.mSavedFragmentState;

        $z0 = virtualinvoke r8.getBoolean("android:user_visible_hint", 1);

        $r1.mUserVisibleHint = $z0;

     label19:
        $z0 = $r1.mUserVisibleHint;

        if $z0 != 0 goto label20;

        $r1.mDeferStart = 1;

        if $i0 <= 2 goto label20;

        $i0 = 2;

     label20:
        r9 = r0.mHost;

        $r1.mHost = r9;

        $r13 = r0.mParent;

        $r1.mParentFragment = $r13;

        $r13 = r0.mParent;

        if $r13 == null goto label21;

        r15 = $r13.mChildFragmentManager;

        goto label22;

     label21:
        r9 = r0.mHost;

        r15 = r9.mFragmentManager;

     label22:
        $r1.mFragmentManager = r15;

        $r13 = $r1.mTarget;

        if $r13 == null goto label25;

        r16 = r0.mActive;

        $r13 = $r1.mTarget;

        $r7 = $r13.mWho;

        $r17 = virtualinvoke r16.get($r7);

        $r13 = $r1.mTarget;

        if $r17 != $r13 goto label24;

        $r13 = $r1.mTarget;

        $i1 = $r13.mState;

        if $i1 >= 1 goto label23;

        $r13 = $r1.mTarget;

        virtualinvoke r0.moveToState($r13, 1, 0, 0, 1);

        goto label23;

     label23:
        $r13 = $r1.mTarget;

        $r7 = $r13.mWho;

        $r1.mTargetWho = $r7;

        $r1.mTarget = null;

        goto label25;

     label24:
        $r29 = new java.lang.IllegalStateException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<init>();

        r6 = virtualinvoke $r28.append("Fragment ");

        r6 = virtualinvoke r6.append($r1);

        r6 = virtualinvoke r6.append(" declared target fragment ");

        $r1 = $r1.mTarget;

        r6 = virtualinvoke r6.append($r1);

        r6 = virtualinvoke r6.append(" that does not belong to this FragmentManager!");

        $r7 = virtualinvoke r6.toString();

        specialinvoke $r29.<init>($r7);

        throw $r29;

     label25:
        $r7 = $r1.mTargetWho;

        if $r7 == null goto label28;

        r16 = r0.mActive;

        $r7 = $r1.mTargetWho;

        $r17 = virtualinvoke r16.get($r7);

        $r13 = (androidx.fragment.app.Fragment) $r17;

        if $r13 == null goto label27;

        $i1 = $r13.mState;

        if $i1 >= 1 goto label26;

        virtualinvoke r0.moveToState($r13, 1, 0, 0, 1);

        goto label28;

     label26:
        goto label28;

     label27:
        $r29 = new java.lang.IllegalStateException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<init>();

        r6 = virtualinvoke $r28.append("Fragment ");

        r6 = virtualinvoke r6.append($r1);

        r6 = virtualinvoke r6.append(" declared target fragment ");

        $r7 = $r1.mTargetWho;

        r6 = virtualinvoke r6.append($r7);

        r6 = virtualinvoke r6.append(" that does not belong to this FragmentManager!");

        $r7 = virtualinvoke r6.toString();

        specialinvoke $r29.<init>($r7);

        throw $r29;

     label28:
        r9 = r0.mHost;

        $r10 = virtualinvoke r9.getContext();

        virtualinvoke r0.dispatchOnFragmentPreAttached($r1, $r10, 0);

        virtualinvoke $r1.performAttach();

        $r13 = $r1.mParentFragment;

        if $r13 != null goto label29;

        r9 = r0.mHost;

        virtualinvoke r9.onAttachFragment($r1);

        goto label30;

     label29:
        $r13 = $r1.mParentFragment;

        virtualinvoke $r13.onAttachFragment($r1);

     label30:
        r9 = r0.mHost;

        $r10 = virtualinvoke r9.getContext();

        virtualinvoke r0.dispatchOnFragmentAttached($r1, $r10, 0);

        $z0 = $r1.mIsCreated;

        if $z0 != 0 goto label31;

        r8 = $r1.mSavedFragmentState;

        virtualinvoke r0.dispatchOnFragmentPreCreated($r1, r8, 0);

        r8 = $r1.mSavedFragmentState;

        virtualinvoke $r1.performCreate(r8);

        r8 = $r1.mSavedFragmentState;

        virtualinvoke r0.dispatchOnFragmentCreated($r1, r8, 0);

        goto label32;

     label31:
        r8 = $r1.mSavedFragmentState;

        virtualinvoke $r1.restoreChildFragmentState(r8);

        $r1.mState = 1;

     label32:
        $i1 = $i0;

        if $i0 <= 0 goto label33;

        virtualinvoke r0.ensureInflatedFragmentView($r1);

     label33:
        if $i1 <= 1 goto label50;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label34;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<init>();

        r6 = virtualinvoke $r28.append("moveto ACTIVITY_CREATED: ");

        r6 = virtualinvoke r6.append($r1);

        $r7 = virtualinvoke r6.toString();

        android.util.Log.v("FragmentManager", $r7);

     label34:
        $z0 = $r1.mFromLayout;

        if $z0 != 0 goto label48;

        r18 = null;

        $i0 = $r1.mContainerId;

        if $i0 == 0 goto label42;

        $i0 = $r1.mContainerId;

        if $i0 != -1 goto label35;

        $r30 = new java.lang.IllegalArgumentException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<init>();

        r6 = virtualinvoke $r28.append("Cannot create fragment ");

        r6 = virtualinvoke r6.append($r1);

        r6 = virtualinvoke r6.append(" for a container view with no id");

        $r7 = virtualinvoke r6.toString();

        specialinvoke $r30.<init>($r7);

        specialinvoke r0.throwException($r30);

     label35:
        r19 = r0.mContainer;

        $i0 = $r1.mContainerId;

        $r4 = virtualinvoke r19.onFindViewById($i0);

        r18 = (android.view.ViewGroup) $r4;

        if r18 != null goto label42;

        $z0 = $r1.mRestored;

        if $z0 != 0 goto label42;

     label36:
        $r20 = virtualinvoke $r1.getResources();

     label37:
        $i0 = $r1.mContainerId;

     label38:
        $r7 = virtualinvoke $r20.getResourceName($i0);

     label39:
        goto label41;

     label40:
        r21 := @caughtexception;

        $r7 = "unknown";

     label41:
        $r30 = new java.lang.IllegalArgumentException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<init>();

        r6 = virtualinvoke $r28.append("No view found for id 0x");

        $i0 = $r1.mContainerId;

        $r22 = java.lang.Integer.toHexString($i0);

        r6 = virtualinvoke r6.append($r22);

        r6 = virtualinvoke r6.append(" (");

        r6 = virtualinvoke r6.append($r7);

        r6 = virtualinvoke r6.append(") for fragment ");

        r6 = virtualinvoke r6.append($r1);

        $r7 = virtualinvoke r6.toString();

        specialinvoke $r30.<init>($r7);

        specialinvoke r0.throwException($r30);

     label42:
        $r1.mContainer = r18;

        r8 = $r1.mSavedFragmentState;

        $r23 = virtualinvoke $r1.performGetLayoutInflater(r8);

        r8 = $r1.mSavedFragmentState;

        virtualinvoke $r1.performCreateView($r23, r18, r8);

        $r4 = $r1.mView;

        if $r4 == null goto label47;

        $r4 = $r1.mView;

        $r1.mInnerView = $r4;

        $r4 = $r1.mView;

        virtualinvoke $r4.setSaveFromParentEnabled(0);

        if r18 == null goto label43;

        $r4 = $r1.mView;

        virtualinvoke r18.addView($r4);

     label43:
        $z0 = $r1.mHidden;

        if $z0 == 0 goto label44;

        $r4 = $r1.mView;

        virtualinvoke $r4.setVisibility(8);

     label44:
        $r4 = $r1.mView;

        r8 = $r1.mSavedFragmentState;

        virtualinvoke $r1.onViewCreated($r4, r8);

        $r4 = $r1.mView;

        r8 = $r1.mSavedFragmentState;

        virtualinvoke r0.dispatchOnFragmentViewCreated($r1, $r4, r8, 0);

        $r4 = $r1.mView;

        $i0 = virtualinvoke $r4.getVisibility();

        if $i0 != 0 goto label45;

        r18 = $r1.mContainer;

        if r18 == null goto label45;

        goto label46;

     label45:
        $z2 = 0;

     label46:
        $r1.mIsNewlyAdded = $z2;

        goto label48;

     label47:
        $r1.mInnerView = null;

     label48:
        r8 = $r1.mSavedFragmentState;

        virtualinvoke $r1.performActivityCreated(r8);

        r8 = $r1.mSavedFragmentState;

        virtualinvoke r0.dispatchOnFragmentActivityCreated($r1, r8, 0);

        $r4 = $r1.mView;

        if $r4 == null goto label49;

        r8 = $r1.mSavedFragmentState;

        virtualinvoke $r1.restoreViewState(r8);

     label49:
        $r1.mSavedFragmentState = null;

     label50:
        $i0 = $i1;

     label51:
        if $i0 <= 2 goto label53;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label52;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<init>();

        r6 = virtualinvoke $r28.append("moveto STARTED: ");

        r6 = virtualinvoke r6.append($r1);

        $r7 = virtualinvoke r6.toString();

        android.util.Log.v("FragmentManager", $r7);

     label52:
        virtualinvoke $r1.performStart();

        virtualinvoke r0.dispatchOnFragmentStarted($r1, 0);

     label53:
        if $i0 <= 3 goto label55;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label54;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<init>();

        r6 = virtualinvoke $r28.append("moveto RESUMED: ");

        r6 = virtualinvoke r6.append($r1);

        $r7 = virtualinvoke r6.toString();

        android.util.Log.v("FragmentManager", $r7);

     label54:
        virtualinvoke $r1.performResume();

        virtualinvoke r0.dispatchOnFragmentResumed($r1, 0);

        $r1.mSavedFragmentState = null;

        $r1.mSavedViewState = null;

     label55:
        goto label90;

     label56:
        i3 = $r1.mState;

        if i3 <= $i0 goto label90;

        i3 = $r1.mState;

        lookupswitch(i3)
        {
            case 1: goto label72;
            case 2: goto label62;
            case 3: goto label60;
            case 4: goto label58;
            default: goto label57;
        };

     label57:
        goto label90;

     label58:
        if $i0 >= 4 goto label60;

        $z2 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z2 == 0 goto label59;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<init>();

        r6 = virtualinvoke $r28.append("movefrom RESUMED: ");

        r6 = virtualinvoke r6.append($r1);

        $r7 = virtualinvoke r6.toString();

        android.util.Log.v("FragmentManager", $r7);

     label59:
        virtualinvoke $r1.performPause();

        virtualinvoke r0.dispatchOnFragmentPaused($r1, 0);

     label60:
        if $i0 >= 3 goto label62;

        $z2 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z2 == 0 goto label61;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<init>();

        r6 = virtualinvoke $r28.append("movefrom STARTED: ");

        r6 = virtualinvoke r6.append($r1);

        $r7 = virtualinvoke r6.toString();

        android.util.Log.v("FragmentManager", $r7);

     label61:
        virtualinvoke $r1.performStop();

        virtualinvoke r0.dispatchOnFragmentStopped($r1, 0);

     label62:
        if $i0 >= 2 goto label71;

        $z2 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z2 == 0 goto label63;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<init>();

        r6 = virtualinvoke $r28.append("movefrom ACTIVITY_CREATED: ");

        r6 = virtualinvoke r6.append($r1);

        $r7 = virtualinvoke r6.toString();

        android.util.Log.v("FragmentManager", $r7);

     label63:
        $r4 = $r1.mView;

        if $r4 == null goto label64;

        r9 = r0.mHost;

        $z2 = virtualinvoke r9.onShouldSaveFragmentState($r1);

        if $z2 == 0 goto label64;

        $r12 = $r1.mSavedViewState;

        if $r12 != null goto label64;

        virtualinvoke r0.saveFragmentViewState($r1);

     label64:
        virtualinvoke $r1.performDestroyView();

        virtualinvoke r0.dispatchOnFragmentViewDestroyed($r1, 0);

        $r4 = $r1.mView;

        if $r4 == null goto label70;

        r18 = $r1.mContainer;

        if r18 == null goto label70;

        r18 = $r1.mContainer;

        $r4 = $r1.mView;

        virtualinvoke r18.endViewTransition($r4);

        $r4 = $r1.mView;

        virtualinvoke $r4.clearAnimation();

        r24 = null;

        $r13 = virtualinvoke $r1.getParentFragment();

        if $r13 == null goto label66;

        $r13 = virtualinvoke $r1.getParentFragment();

        $z2 = $r13.mRemoving;

        if $z2 != 0 goto label65;

        goto label66;

     label65:
        goto label70;

     label66:
        i3 = r0.mCurState;

        if i3 <= 0 goto label68;

        $z2 = r0.mDestroyed;

        if $z2 != 0 goto label68;

        $r4 = $r1.mView;

        i3 = virtualinvoke $r4.getVisibility();

        if i3 != 0 goto label67;

        f0 = $r1.mPostponedAlpha;

        b4 = f0 cmpl 0.0F;

        i3 = (int) b4;

        if i3 < 0 goto label67;

        r24 = virtualinvoke r0.loadAnimation($r1, $i1, 0, $i2);

        goto label68;

     label67:
        goto label68;

     label68:
        $r1.mPostponedAlpha = 0.0F;

        if r24 == null goto label69;

        specialinvoke r0.animateRemoveFragment($r1, r24, $i0);

     label69:
        r18 = $r1.mContainer;

        $r4 = $r1.mView;

        virtualinvoke r18.removeView($r4);

        goto label70;

     label70:
        $r1.mContainer = null;

        $r1.mView = null;

        $r1.mViewLifecycleOwner = null;

        r25 = $r1.mViewLifecycleOwnerLiveData;

        virtualinvoke r25.setValue(null);

        $r1.mInnerView = null;

        $r1.mInLayout = 0;

        goto label72;

     label71:
        goto label72;

     label72:
        if $i0 >= 1 goto label90;

        $z2 = r0.mDestroyed;

        if $z2 == 0 goto label74;

        $r4 = virtualinvoke $r1.getAnimatingAway();

        if $r4 == null goto label73;

        $r4 = virtualinvoke $r1.getAnimatingAway();

        virtualinvoke $r1.setAnimatingAway(null);

        virtualinvoke $r4.clearAnimation();

        goto label74;

     label73:
        $r5 = virtualinvoke $r1.getAnimator();

        if $r5 == null goto label74;

        $r5 = virtualinvoke $r1.getAnimator();

        virtualinvoke $r1.setAnimator(null);

        virtualinvoke $r5.cancel();

        goto label74;

     label74:
        $r4 = virtualinvoke $r1.getAnimatingAway();

        if $r4 != null goto label89;

        $r5 = virtualinvoke $r1.getAnimator();

        if $r5 == null goto label75;

        goto label89;

     label75:
        $z2 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z2 == 0 goto label76;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<init>();

        r6 = virtualinvoke $r28.append("movefrom CREATED: ");

        r6 = virtualinvoke r6.append($r1);

        $r7 = virtualinvoke r6.toString();

        android.util.Log.v("FragmentManager", $r7);

     label76:
        $z2 = $r1.mRemoving;

        if $z2 == 0 goto label77;

        $z2 = virtualinvoke $r1.isInBackStack();

        if $z2 != 0 goto label77;

        $z2 = 1;

        goto label78;

     label77:
        $z2 = 0;

     label78:
        if $z2 != 0 goto label80;

        r26 = r0.mNonConfig;

        z1 = virtualinvoke r26.shouldDestroy($r1);

        if z1 == 0 goto label79;

        goto label80;

     label79:
        $r1.mState = 0;

        goto label86;

     label80:
        r9 = r0.mHost;

        z1 = r9 instanceof androidx.lifecycle.ViewModelStoreOwner;

        if z1 == 0 goto label81;

        r26 = r0.mNonConfig;

        z1 = virtualinvoke r26.isCleared();

        goto label83;

     label81:
        $r10 = virtualinvoke r9.getContext();

        z1 = $r10 instanceof android.app.Activity;

        if z1 == 0 goto label82;

        r9 = r0.mHost;

        $r10 = virtualinvoke r9.getContext();

        r27 = (android.app.Activity) $r10;

        z1 = virtualinvoke r27.isChangingConfigurations();

        z1 = z1 ^ 1;

        goto label83;

     label82:
        z1 = 1;

     label83:
        if $z2 != 0 goto label84;

        if z1 == 0 goto label85;

     label84:
        r26 = r0.mNonConfig;

        virtualinvoke r26.clearNonConfigState($r1);

     label85:
        virtualinvoke $r1.performDestroy();

        virtualinvoke r0.dispatchOnFragmentDestroyed($r1, 0);

     label86:
        virtualinvoke $r1.performDetach();

        virtualinvoke r0.dispatchOnFragmentDetached($r1, 0);

        if $z0 != 0 goto label90;

        if $z2 != 0 goto label88;

        r26 = r0.mNonConfig;

        $z0 = virtualinvoke r26.shouldDestroy($r1);

        if $z0 == 0 goto label87;

        goto label88;

     label87:
        $r1.mHost = null;

        $r1.mParentFragment = null;

        $r1.mFragmentManager = null;

        $r7 = $r1.mTargetWho;

        if $r7 == null goto label90;

        r16 = r0.mActive;

        $r7 = $r1.mTargetWho;

        $r17 = virtualinvoke r16.get($r7);

        $r13 = (androidx.fragment.app.Fragment) $r17;

        if $r13 == null goto label90;

        $z0 = virtualinvoke $r13.getRetainInstance();

        if $z0 == 0 goto label90;

        $r1.mTarget = $r13;

        goto label90;

     label88:
        virtualinvoke r0.makeInactive($r1);

        goto label90;

     label89:
        virtualinvoke $r1.setStateAfterAnimating($i0);

        $i0 = 1;

        goto label90;

     label90:
        $i1 = $r1.mState;

        if $i1 == $i0 goto label91;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<init>();

        r6 = virtualinvoke $r28.append("moveToState: Fragment state for ");

        r6 = virtualinvoke r6.append($r1);

        r6 = virtualinvoke r6.append(" not updated inline; expected state ");

        r6 = virtualinvoke r6.append($i0);

        r6 = virtualinvoke r6.append(" found ");

        $i1 = $r1.mState;

        r6 = virtualinvoke r6.append($i1);

        $r7 = virtualinvoke r6.toString();

        android.util.Log.w("FragmentManager", $r7);

        $r1.mState = $i0;

     label91:
        return;

        catch android.content.res.Resources$NotFoundException from label36 to label37 with label40;
        catch android.content.res.Resources$NotFoundException from label38 to label39 with label40;
    }

    public void noteStateNotSaved()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        int $i0, i1;
        androidx.fragment.app.Fragment r3;
        java.lang.Object $r2;
        java.util.ArrayList r1;

        r0 := @this;

        r0.mStateSaved = 0;

        r0.mStopped = 0;

        r1 = r0.mAdded;

        $i0 = virtualinvoke r1.size();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label3;

        r1 = r0.mAdded;

        $r2 = virtualinvoke r1.get(i1);

        r3 = (androidx.fragment.app.Fragment) $r2;

        if r3 == null goto label2;

        virtualinvoke r3.noteStateNotSaved();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public android.view.View onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        android.content.Context $r3;
        java.lang.IllegalStateException $r18;
        androidx.fragment.app.FragmentHostCallback $r13;
        android.os.Bundle $r14;
        android.content.res.TypedArray $r8;
        android.util.AttributeSet $r4;
        int[] $r7;
        int i0, $i1, $i2;
        androidx.fragment.app.Fragment r6;
        android.view.View $r1;
        java.lang.String $r2, r5, $r11;
        boolean $z0;
        androidx.fragment.app.FragmentFactory $r12;
        java.lang.IllegalArgumentException $r17;
        java.lang.StringBuilder r10, $r16;
        java.lang.Object $r15;
        java.lang.ClassLoader $r9;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 := @parameter3;

        r5 = "fragment";

        $z0 = virtualinvoke r5.equals($r2);

        r6 = null;

        if $z0 != 0 goto label01;

        return null;

     label01:
        $r2 = interfaceinvoke $r4.getAttributeValue(null, "class");

        $r7 = androidx.fragment.app.FragmentManagerImpl$FragmentTag.Fragment;

        $r8 = virtualinvoke $r3.obtainStyledAttributes($r4, $r7);

        $i1 = 0;

        if $r2 != null goto label02;

        $r2 = virtualinvoke $r8.getString(0);

        goto label02;

     label02:
        $i2 = virtualinvoke $r8.getResourceId(1, -1);

        r5 = virtualinvoke $r8.getString(2);

        virtualinvoke $r8.recycle();

        if $r2 == null goto label21;

        $r9 = virtualinvoke $r3.getClassLoader();

        $z0 = androidx.fragment.app.FragmentFactory.isFragmentClass($r9, $r2);

        if $z0 != 0 goto label03;

        return null;

     label03:
        if $r1 == null goto label04;

        $i1 = virtualinvoke $r1.getId();

     label04:
        i0 = $i1;

        if $i1 != -1 goto label06;

        if $i2 != -1 goto label06;

        if r5 == null goto label05;

        goto label06;

     label05:
        $r17 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<init>();

        r5 = interfaceinvoke $r4.getPositionDescription();

        r10 = virtualinvoke $r16.append(r5);

        r10 = virtualinvoke r10.append(": Must specify unique android:id, android:tag, or have a parent with an id for ");

        r10 = virtualinvoke r10.append($r2);

        $r2 = virtualinvoke r10.toString();

        specialinvoke $r17.<init>($r2);

        throw $r17;

     label06:
        if $i2 == -1 goto label07;

        r6 = virtualinvoke r0.findFragmentById($i2);

     label07:
        if r6 != null goto label08;

        if r5 == null goto label08;

        r6 = virtualinvoke r0.findFragmentByTag(r5);

     label08:
        if r6 != null goto label09;

        if i0 == -1 goto label09;

        r6 = virtualinvoke r0.findFragmentById(i0);

     label09:
        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label10;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<init>();

        r10 = virtualinvoke $r16.append("onCreateView: id=0x");

        $r11 = java.lang.Integer.toHexString($i2);

        r10 = virtualinvoke r10.append($r11);

        r10 = virtualinvoke r10.append(" fname=");

        r10 = virtualinvoke r10.append($r2);

        r10 = virtualinvoke r10.append(" existing=");

        r10 = virtualinvoke r10.append(r6);

        $r11 = virtualinvoke r10.toString();

        android.util.Log.v("FragmentManager", $r11);

     label10:
        if r6 != null goto label13;

        $r12 = virtualinvoke r0.getFragmentFactory();

        $r9 = virtualinvoke $r3.getClassLoader();

        r6 = virtualinvoke $r12.instantiate($r9, $r2);

        r6.mFromLayout = 1;

        if $i2 == 0 goto label11;

        $i1 = $i2;

        goto label12;

     label11:
        $i1 = i0;

     label12:
        r6.mFragmentId = $i1;

        r6.mContainerId = i0;

        r6.mTag = r5;

        r6.mInLayout = 1;

        r6.mFragmentManager = r0;

        $r13 = r0.mHost;

        r6.mHost = $r13;

        $r13 = r0.mHost;

        $r3 = virtualinvoke $r13.getContext();

        $r14 = r6.mSavedFragmentState;

        virtualinvoke r6.onInflate($r3, $r4, $r14);

        virtualinvoke r0.addFragment(r6, 1);

        goto label14;

     label13:
        $z0 = r6.mInLayout;

        if $z0 != 0 goto label20;

        r6.mInLayout = 1;

        $r13 = r0.mHost;

        r6.mHost = $r13;

        $r13 = r0.mHost;

        $r3 = virtualinvoke $r13.getContext();

        $r14 = r6.mSavedFragmentState;

        virtualinvoke r6.onInflate($r3, $r4, $r14);

     label14:
        i0 = r0.mCurState;

        if i0 >= 1 goto label15;

        $z0 = r6.mFromLayout;

        if $z0 == 0 goto label15;

        virtualinvoke r0.moveToState(r6, 1, 0, 0, 0);

        goto label16;

     label15:
        virtualinvoke r0.moveToState(r6);

     label16:
        $r1 = r6.mView;

        if $r1 == null goto label19;

        if $i2 == 0 goto label17;

        $r1 = r6.mView;

        virtualinvoke $r1.setId($i2);

     label17:
        $r1 = r6.mView;

        $r15 = virtualinvoke $r1.getTag();

        if $r15 != null goto label18;

        $r1 = r6.mView;

        virtualinvoke $r1.setTag(r5);

     label18:
        $r1 = r6.mView;

        return $r1;

     label19:
        $r18 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<init>();

        r10 = virtualinvoke $r16.append("Fragment ");

        r10 = virtualinvoke r10.append($r2);

        r10 = virtualinvoke r10.append(" did not create a view.");

        $r2 = virtualinvoke r10.toString();

        specialinvoke $r18.<init>($r2);

        throw $r18;

     label20:
        $r17 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<init>();

        $r11 = interfaceinvoke $r4.getPositionDescription();

        r10 = virtualinvoke $r16.append($r11);

        r10 = virtualinvoke r10.append(": Duplicate id 0x");

        $r11 = java.lang.Integer.toHexString($i2);

        r10 = virtualinvoke r10.append($r11);

        r10 = virtualinvoke r10.append(", tag ");

        r10 = virtualinvoke r10.append(r5);

        r10 = virtualinvoke r10.append(", or parent id 0x");

        r5 = java.lang.Integer.toHexString(i0);

        r10 = virtualinvoke r10.append(r5);

        r10 = virtualinvoke r10.append(" with another fragment for ");

        r10 = virtualinvoke r10.append($r2);

        $r2 = virtualinvoke r10.toString();

        specialinvoke $r17.<init>($r2);

        throw $r17;

     label21:
        return null;
    }

    public android.view.View onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        android.content.Context $r2;
        android.util.AttributeSet $r3;
        android.view.View $r4;
        java.lang.String $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 = virtualinvoke r0.onCreateView(null, $r1, $r2, $r3);

        return $r4;
    }

    public void performPendingDeferredStart(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.Fragment $r1;
        int $i0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = $r1.mDeferStart;

        if $z0 == 0 goto label2;

        $z0 = r0.mExecutingActions;

        if $z0 == 0 goto label1;

        r0.mHavePendingDeferredStart = 1;

        return;

     label1:
        $r1.mDeferStart = 0;

        $i0 = r0.mCurState;

        virtualinvoke r0.moveToState($r1, $i0, 0, 0, 0);

     label2:
        return;
    }

    public void popBackStack()
    {
        androidx.fragment.app.FragmentManagerImpl$PopBackStackState $r1;
        androidx.fragment.app.FragmentManagerImpl r0;

        r0 := @this;

        $r1 = new androidx.fragment.app.FragmentManagerImpl$PopBackStackState;

        specialinvoke $r1.<init>(r0, null, -1, 0);

        virtualinvoke r0.enqueueAction($r1, 0);

        return;
    }

    public void popBackStack(int, int)
    {
        androidx.fragment.app.FragmentManagerImpl$PopBackStackState $r1;
        androidx.fragment.app.FragmentManagerImpl r0;
        int $i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r2;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        if $i0 < 0 goto label1;

        $r1 = new androidx.fragment.app.FragmentManagerImpl$PopBackStackState;

        specialinvoke $r1.<init>(r0, null, $i0, $i1);

        virtualinvoke r0.enqueueAction($r1, 0);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("Bad id: ");

        $r3 = virtualinvoke $r3.append($i0);

        $r4 = virtualinvoke $r3.toString();

        specialinvoke $r2.<init>($r4);

        throw $r2;
    }

    public void popBackStack(java.lang.String, int)
    {
        androidx.fragment.app.FragmentManagerImpl$PopBackStackState $r2;
        androidx.fragment.app.FragmentManagerImpl r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 = new androidx.fragment.app.FragmentManagerImpl$PopBackStackState;

        specialinvoke $r2.<init>(r0, $r1, -1, $i0);

        virtualinvoke r0.enqueueAction($r2, 0);

        return;
    }

    public boolean popBackStackImmediate()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        boolean $z0;

        r0 := @this;

        specialinvoke r0.checkStateLoss();

        $z0 = specialinvoke r0.popBackStackImmediate(null, -1, 0);

        return $z0;
    }

    public boolean popBackStackImmediate(int, int)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        int $i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        specialinvoke r0.checkStateLoss();

        virtualinvoke r0.execPendingActions();

        if $i0 < 0 goto label1;

        $z0 = specialinvoke r0.popBackStackImmediate(null, $i0, $i1);

        return $z0;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<init>();

        $r2 = virtualinvoke $r2.append("Bad id: ");

        $r2 = virtualinvoke $r2.append($i0);

        $r3 = virtualinvoke $r2.toString();

        specialinvoke $r1.<init>($r3);

        throw $r1;
    }

    public boolean popBackStackImmediate(java.lang.String, int)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        int $i0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        specialinvoke r0.checkStateLoss();

        $z0 = specialinvoke r0.popBackStackImmediate($r1, -1, $i0);

        return $z0;
    }

    boolean popBackStackState(java.util.ArrayList, java.util.ArrayList, java.lang.String, int, int)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.BackStackRecord r7;
        java.util.ArrayList r1, r2, r4;
        int $i0, $i1, i2, $i3;
        java.lang.Boolean $r6;
        java.lang.Object $r5;
        java.lang.String $r3, $r8;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        r2 := @parameter1;

        $r3 := @parameter2;

        $i0 := @parameter3;

        $i1 := @parameter4;

        r4 = r0.mBackStack;

        if r4 != null goto label01;

        return 0;

     label01:
        if $r3 != null goto label03;

        if $i0 >= 0 goto label03;

        i2 = $i1 & 1;

        if i2 != 0 goto label03;

        $i0 = virtualinvoke r4.size();

        $i0 = $i0 - 1;

        if $i0 >= 0 goto label02;

        return 0;

     label02:
        r4 = r0.mBackStack;

        $r5 = virtualinvoke r4.remove($i0);

        virtualinvoke r1.add($r5);

        $r6 = java.lang.Boolean.valueOf(1);

        virtualinvoke r2.add($r6);

        return 1;

     label03:
        i2 = -1;

        if $r3 != null goto label04;

        if $i0 < 0 goto label13;

     label04:
        i2 = virtualinvoke r4.size();

        i2 = i2 - 1;

     label05:
        if i2 < 0 goto label08;

        r4 = r0.mBackStack;

        $r5 = virtualinvoke r4.get(i2);

        r7 = (androidx.fragment.app.BackStackRecord) $r5;

        if $r3 == null goto label06;

        $r8 = virtualinvoke r7.getName();

        $z0 = virtualinvoke $r3.equals($r8);

        if $z0 == 0 goto label06;

        goto label08;

     label06:
        if $i0 < 0 goto label07;

        $i3 = r7.mIndex;

        if $i0 != $i3 goto label07;

        goto label08;

     label07:
        i2 = i2 + -1;

        goto label05;

     label08:
        if i2 >= 0 goto label09;

        return 0;

     label09:
        $i1 = $i1 & 1;

        if $i1 == 0 goto label13;

        i2 = i2 + -1;

     label10:
        if i2 < 0 goto label13;

        r4 = r0.mBackStack;

        $r5 = virtualinvoke r4.get(i2);

        r7 = (androidx.fragment.app.BackStackRecord) $r5;

        if $r3 == null goto label11;

        $r8 = virtualinvoke r7.getName();

        $z0 = virtualinvoke $r3.equals($r8);

        if $z0 != 0 goto label12;

     label11:
        if $i0 < 0 goto label13;

        $i1 = r7.mIndex;

        if $i0 != $i1 goto label13;

     label12:
        i2 = i2 + -1;

        goto label10;

     label13:
        r4 = r0.mBackStack;

        $i0 = virtualinvoke r4.size();

        $i0 = $i0 - 1;

        if i2 != $i0 goto label14;

        return 0;

     label14:
        r4 = r0.mBackStack;

        $i0 = virtualinvoke r4.size();

        $i0 = $i0 - 1;

     label15:
        if $i0 <= i2 goto label16;

        r4 = r0.mBackStack;

        $r5 = virtualinvoke r4.remove($i0);

        virtualinvoke r1.add($r5);

        $r6 = java.lang.Boolean.valueOf(1);

        virtualinvoke r2.add($r6);

        $i0 = $i0 + -1;

        goto label15;

     label16:
        return 1;
    }

    public void putFragment(android.os.Bundle, java.lang.String, androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0, $r4;
        java.lang.IllegalStateException $r5;
        android.os.Bundle $r1;
        androidx.fragment.app.Fragment $r3;
        java.lang.StringBuilder $r6;
        java.lang.String $r2, $r7;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 = $r3.mFragmentManager;

        if $r4 == r0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $r6 = virtualinvoke $r6.append("Fragment ");

        $r6 = virtualinvoke $r6.append($r3);

        $r6 = virtualinvoke $r6.append(" is not currently in the FragmentManager");

        $r7 = virtualinvoke $r6.toString();

        specialinvoke $r5.<init>($r7);

        specialinvoke r0.throwException($r5);

     label1:
        $r7 = $r3.mWho;

        virtualinvoke $r1.putString($r2, $r7);

        return;
    }

    public void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks, boolean)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r1;
        boolean $z0;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r3;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        $r2 = r0.mLifecycleCallbacks;

        $r3 = new androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder;

        specialinvoke $r3.<init>($r1, $z0);

        virtualinvoke $r2.add($r3);

        return;
    }

    public void removeFragment(androidx.fragment.app.Fragment)
    {
        java.lang.Throwable $r6;
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.ArrayList $r2, $r5;
        androidx.fragment.app.Fragment $r1;
        int $i0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("remove: ");

        $r3 = virtualinvoke $r3.append($r1);

        $r3 = virtualinvoke $r3.append(" nesting=");

        $i0 = $r1.mBackStackNesting;

        $r3 = virtualinvoke $r3.append($i0);

        $r4 = virtualinvoke $r3.toString();

        android.util.Log.v("FragmentManager", $r4);

     label1:
        z0 = virtualinvoke $r1.isInBackStack();

        z0 = z0 ^ 1;

        $z1 = $r1.mDetached;

        if $z1 == 0 goto label2;

        if z0 == 0 goto label9;

     label2:
        $r5 = r0.mAdded;

        entermonitor $r5;

     label3:
        $r2 = r0.mAdded;

        virtualinvoke $r2.remove($r1);

        exitmonitor $r5;

     label4:
        z0 = specialinvoke r0.isMenuAvailable($r1);

        if z0 == 0 goto label5;

        r0.mNeedMenuInvalidate = 1;

     label5:
        $r1.mAdded = 0;

        $r1.mRemoving = 1;

        return;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor $r5;

     label8:
        throw $r6;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentManager$OnBackStackChangedListener $r1;
        java.util.ArrayList $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mBackStackChangeListeners;

        if $r2 == null goto label1;

        virtualinvoke $r2.remove($r1);

     label1:
        return;
    }

    void removeRetainedFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentManagerViewModel r2;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = virtualinvoke r0.isStateSaved();

        if $z0 == 0 goto label1;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label2;

        android.util.Log.v("FragmentManager", "Ignoring removeRetainedFragment as the state is already saved");

        return;

     label1:
        r2 = r0.mNonConfig;

        $z0 = virtualinvoke r2.removeRetainedFragment($r1);

        if $z0 == 0 goto label2;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("Updating retained Fragments: Removed ");

        $r3 = virtualinvoke $r3.append($r1);

        $r4 = virtualinvoke $r3.toString();

        android.util.Log.v("FragmentManager", $r4);

     label2:
        return;
    }

    void reportBackStackChanged()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentManager$OnBackStackChangedListener $r3;
        int i0, $i1;
        java.lang.Object $r2;
        java.util.ArrayList r1;

        r0 := @this;

        r1 = r0.mBackStackChangeListeners;

        if r1 == null goto label2;

        i0 = 0;

     label1:
        r1 = r0.mBackStackChangeListeners;

        $i1 = virtualinvoke r1.size();

        if i0 >= $i1 goto label2;

        r1 = r0.mBackStackChangeListeners;

        $r2 = virtualinvoke r1.get(i0);

        $r3 = (androidx.fragment.app.FragmentManager$OnBackStackChangedListener) $r2;

        interfaceinvoke $r3.onBackStackChanged();

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    void restoreAllState(android.os.Parcelable, androidx.fragment.app.FragmentManagerNonConfig)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.lang.IllegalStateException $r4;
        androidx.fragment.app.FragmentManagerViewModel $r5;
        androidx.fragment.app.FragmentHostCallback $r3;
        android.os.Parcelable $r1;
        androidx.fragment.app.FragmentManagerNonConfig $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = r0.mHost;

        $z0 = $r3 instanceof androidx.lifecycle.ViewModelStoreOwner;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<init>("You must use restoreSaveState when your FragmentHostCallback implements ViewModelStoreOwner");

        specialinvoke r0.throwException($r4);

     label1:
        $r5 = r0.mNonConfig;

        virtualinvoke $r5.restoreFromSnapshot($r2);

        virtualinvoke r0.restoreSaveState($r1);

        return;
    }

    void restoreSaveState(android.os.Parcelable)
    {
        java.lang.IllegalStateException $r22;
        android.os.Bundle r15;
        androidx.fragment.app.FragmentManagerState r2;
        androidx.fragment.app.Fragment r8, r14;
        boolean $z0;
        java.io.PrintWriter r29;
        java.util.Collection $r5;
        android.util.SparseArray $r19;
        java.lang.StringBuilder $r9;
        java.lang.ClassLoader $r18;
        androidx.fragment.app.FragmentState r12;
        java.lang.Throwable r24;
        androidx.fragment.app.FragmentManagerImpl r0;
        android.content.Context $r17;
        androidx.fragment.app.FragmentHostCallback $r16;
        androidx.fragment.app.BackStackRecord $r27;
        java.util.HashMap r20;
        java.util.ArrayList r3, r23;
        int i0, i1;
        java.lang.String $r10, $r13;
        android.os.Parcelable $r1;
        androidx.fragment.app.FragmentFactory $r21;
        java.util.Iterator $r6, $r11;
        androidx.fragment.app.BackStackState r26;
        androidx.fragment.app.BackStackState[] r25;
        androidx.core.util.LogWriter r28;
        androidx.fragment.app.FragmentManagerViewModel r4;
        java.lang.Object $r7;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 != null goto label01;

        return;

     label01:
        r2 = (androidx.fragment.app.FragmentManagerState) $r1;

        r3 = r2.mActive;

        if r3 != null goto label02;

        return;

     label02:
        r4 = r0.mNonConfig;

        $r5 = virtualinvoke r4.getRetainedFragments();

        $r6 = interfaceinvoke $r5.iterator();

     label03:
        $z0 = interfaceinvoke $r6.hasNext();

        if $z0 == 0 goto label12;

        $r7 = interfaceinvoke $r6.next();

        r8 = (androidx.fragment.app.Fragment) $r7;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label04;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r9 = virtualinvoke $r9.append("restoreSaveState: re-attaching retained ");

        $r9 = virtualinvoke $r9.append(r8);

        $r10 = virtualinvoke $r9.toString();

        android.util.Log.v("FragmentManager", $r10);

     label04:
        r3 = r2.mActive;

        $r11 = virtualinvoke r3.iterator();

     label05:
        $z0 = interfaceinvoke $r11.hasNext();

        if $z0 == 0 goto label06;

        $r7 = interfaceinvoke $r11.next();

        r12 = (androidx.fragment.app.FragmentState) $r7;

        $r10 = r12.mWho;

        $r13 = r8.mWho;

        $z0 = virtualinvoke $r10.equals($r13);

        if $z0 == 0 goto label05;

        goto label07;

     label06:
        r12 = null;

     label07:
        if r12 != null goto label09;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label08;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r9 = virtualinvoke $r9.append("Discarding retained Fragment ");

        $r9 = virtualinvoke $r9.append(r8);

        $r9 = virtualinvoke $r9.append(" that was not found in the set of active Fragments ");

        r3 = r2.mActive;

        $r9 = virtualinvoke $r9.append(r3);

        $r10 = virtualinvoke $r9.toString();

        android.util.Log.v("FragmentManager", $r10);

     label08:
        virtualinvoke r0.moveToState(r8, 1, 0, 0, 0);

        r8.mRemoving = 1;

        virtualinvoke r0.moveToState(r8, 0, 0, 0, 0);

        goto label03;

     label09:
        r12.mInstance = r8;

        r8.mSavedViewState = null;

        r8.mBackStackNesting = 0;

        r8.mInLayout = 0;

        r8.mAdded = 0;

        r14 = r8.mTarget;

        if r14 == null goto label10;

        r14 = r8.mTarget;

        $r10 = r14.mWho;

        goto label11;

     label10:
        $r10 = null;

     label11:
        r8.mTargetWho = $r10;

        r8.mTarget = null;

        r15 = r12.mSavedFragmentState;

        if r15 == null goto label03;

        r15 = r12.mSavedFragmentState;

        $r16 = r0.mHost;

        $r17 = virtualinvoke $r16.getContext();

        $r18 = virtualinvoke $r17.getClassLoader();

        virtualinvoke r15.setClassLoader($r18);

        r15 = r12.mSavedFragmentState;

        $r19 = virtualinvoke r15.getSparseParcelableArray("android:view_state");

        r8.mSavedViewState = $r19;

        r15 = r12.mSavedFragmentState;

        r8.mSavedFragmentState = r15;

        goto label03;

     label12:
        r20 = r0.mActive;

        virtualinvoke r20.clear();

        r3 = r2.mActive;

        $r6 = virtualinvoke r3.iterator();

     label13:
        $z0 = interfaceinvoke $r6.hasNext();

        if $z0 == 0 goto label15;

        $r7 = interfaceinvoke $r6.next();

        r12 = (androidx.fragment.app.FragmentState) $r7;

        if r12 == null goto label13;

        $r16 = r0.mHost;

        $r17 = virtualinvoke $r16.getContext();

        $r18 = virtualinvoke $r17.getClassLoader();

        $r21 = virtualinvoke r0.getFragmentFactory();

        r8 = virtualinvoke r12.instantiate($r18, $r21);

        r8.mFragmentManager = r0;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label14;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r9 = virtualinvoke $r9.append("restoreSaveState: active (");

        $r10 = r8.mWho;

        $r9 = virtualinvoke $r9.append($r10);

        $r9 = virtualinvoke $r9.append("): ");

        $r9 = virtualinvoke $r9.append(r8);

        $r10 = virtualinvoke $r9.toString();

        android.util.Log.v("FragmentManager", $r10);

     label14:
        r20 = r0.mActive;

        $r10 = r8.mWho;

        virtualinvoke r20.put($r10, r8);

        r12.mInstance = null;

        goto label13;

     label15:
        r3 = r0.mAdded;

        virtualinvoke r3.clear();

        r3 = r2.mAdded;

        if r3 == null goto label24;

        r3 = r2.mAdded;

        $r6 = virtualinvoke r3.iterator();

     label16:
        $z0 = interfaceinvoke $r6.hasNext();

        if $z0 == 0 goto label24;

        $r7 = interfaceinvoke $r6.next();

        $r10 = (java.lang.String) $r7;

        r20 = r0.mActive;

        $r7 = virtualinvoke r20.get($r10);

        r8 = (androidx.fragment.app.Fragment) $r7;

        if r8 != null goto label17;

        $r22 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r9 = virtualinvoke $r9.append("No instantiated fragment for (");

        $r9 = virtualinvoke $r9.append($r10);

        $r9 = virtualinvoke $r9.append(")");

        $r13 = virtualinvoke $r9.toString();

        specialinvoke $r22.<init>($r13);

        specialinvoke r0.throwException($r22);

     label17:
        r8.mAdded = 1;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label18;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r9 = virtualinvoke $r9.append("restoreSaveState: added (");

        $r9 = virtualinvoke $r9.append($r10);

        $r9 = virtualinvoke $r9.append("): ");

        $r9 = virtualinvoke $r9.append(r8);

        $r10 = virtualinvoke $r9.toString();

        android.util.Log.v("FragmentManager", $r10);

     label18:
        r3 = r0.mAdded;

        $z0 = virtualinvoke r3.contains(r8);

        if $z0 != 0 goto label23;

        r3 = r0.mAdded;

        entermonitor r3;

     label19:
        r23 = r0.mAdded;

        virtualinvoke r23.add(r8);

        exitmonitor r3;

     label20:
        goto label16;

     label21:
        r24 := @caughtexception;

        exitmonitor r3;

     label22:
        throw r24;

     label23:
        $r22 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r9 = virtualinvoke $r9.append("Already added ");

        $r9 = virtualinvoke $r9.append(r8);

        $r10 = virtualinvoke $r9.toString();

        specialinvoke $r22.<init>($r10);

        throw $r22;

     label24:
        r25 = r2.mBackStack;

        if r25 == null goto label29;

        r3 = new java.util.ArrayList;

        r25 = r2.mBackStack;

        i0 = lengthof r25;

        specialinvoke r3.<init>(i0);

        r0.mBackStack = r3;

        i0 = 0;

     label25:
        r25 = r2.mBackStack;

        i1 = lengthof r25;

        if i0 >= i1 goto label28;

        r25 = r2.mBackStack;

        r26 = r25[i0];

        $r27 = virtualinvoke r26.instantiate(r0);

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label26;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r9 = virtualinvoke $r9.append("restoreAllState: back stack #");

        $r9 = virtualinvoke $r9.append(i0);

        $r9 = virtualinvoke $r9.append(" (index ");

        i1 = $r27.mIndex;

        $r9 = virtualinvoke $r9.append(i1);

        $r9 = virtualinvoke $r9.append("): ");

        $r9 = virtualinvoke $r9.append($r27);

        $r10 = virtualinvoke $r9.toString();

        android.util.Log.v("FragmentManager", $r10);

        r28 = new androidx.core.util.LogWriter;

        specialinvoke r28.<init>("FragmentManager");

        r29 = new java.io.PrintWriter;

        specialinvoke r29.<init>(r28);

        virtualinvoke $r27.dump("  ", r29, 0);

        virtualinvoke r29.close();

     label26:
        r3 = r0.mBackStack;

        virtualinvoke r3.add($r27);

        i1 = $r27.mIndex;

        if i1 < 0 goto label27;

        i1 = $r27.mIndex;

        virtualinvoke r0.setBackStackIndex(i1, $r27);

     label27:
        i0 = i0 + 1;

        goto label25;

     label28:
        goto label30;

     label29:
        r0.mBackStack = null;

     label30:
        $r10 = r2.mPrimaryNavActiveWho;

        if $r10 == null goto label31;

        r20 = r0.mActive;

        $r10 = r2.mPrimaryNavActiveWho;

        $r7 = virtualinvoke r20.get($r10);

        r8 = (androidx.fragment.app.Fragment) $r7;

        r0.mPrimaryNav = r8;

        specialinvoke r0.dispatchParentPrimaryNavigationFragmentChanged(r8);

     label31:
        i0 = r2.mNextFragmentIndex;

        r0.mNextFragmentIndex = i0;

        return;

        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    androidx.fragment.app.FragmentManagerNonConfig retainNonConfig()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.lang.IllegalStateException $r3;
        androidx.fragment.app.FragmentManagerViewModel $r4;
        androidx.fragment.app.FragmentHostCallback $r2;
        androidx.fragment.app.FragmentManagerNonConfig $r1;
        boolean $z0;

        r0 := @this;

        $r2 = r0.mHost;

        $z0 = $r2 instanceof androidx.lifecycle.ViewModelStoreOwner;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<init>("You cannot use retainNonConfig when your FragmentHostCallback implements ViewModelStoreOwner.");

        specialinvoke r0.throwException($r3);

     label1:
        $r4 = r0.mNonConfig;

        $r1 = virtualinvoke $r4.getSnapshot();

        return $r1;
    }

    android.os.Parcelable saveAllState()
    {
        androidx.fragment.app.FragmentState r11;
        androidx.fragment.app.FragmentManagerImpl r0, r7;
        java.lang.IllegalStateException r8;
        android.os.Bundle r12;
        androidx.fragment.app.FragmentManagerState r20;
        androidx.fragment.app.BackStackRecord r19;
        java.util.HashMap r2;
        java.util.ArrayList r1, r14, r16, r17;
        int $i0, i1;
        androidx.fragment.app.Fragment r6, r13;
        java.lang.String $r10;
        boolean $z0, $z1;
        java.util.Iterator $r4;
        java.util.Collection $r3;
        androidx.fragment.app.BackStackState r18;
        androidx.fragment.app.BackStackState[] r15;
        java.lang.Object $r5;
        java.lang.StringBuilder $r9;

        r0 := @this;

        specialinvoke r0.forcePostponedTransactions();

        specialinvoke r0.endAnimatingAwayFragments();

        virtualinvoke r0.execPendingActions();

        r0.mStateSaved = 1;

        r2 = r0.mActive;

        $z0 = virtualinvoke r2.isEmpty();

        if $z0 == 0 goto label01;

        return null;

     label01:
        r2 = r0.mActive;

        $i0 = virtualinvoke r2.size();

        r1 = new java.util.ArrayList;

        specialinvoke r1.<init>($i0);

        $z0 = 0;

        r2 = r0.mActive;

        $r3 = virtualinvoke r2.values();

        $r4 = interfaceinvoke $r3.iterator();

     label02:
        $z1 = interfaceinvoke $r4.hasNext();

        if $z1 == 0 goto label09;

        $r5 = interfaceinvoke $r4.next();

        r6 = (androidx.fragment.app.Fragment) $r5;

        if r6 == null goto label02;

        r7 = r6.mFragmentManager;

        if r7 == r0 goto label03;

        r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r9 = virtualinvoke $r9.append("Failure saving state: active ");

        $r9 = virtualinvoke $r9.append(r6);

        $r9 = virtualinvoke $r9.append(" was removed from the FragmentManager");

        $r10 = virtualinvoke $r9.toString();

        specialinvoke r8.<init>($r10);

        specialinvoke r0.throwException(r8);

     label03:
        $z0 = 1;

        r11 = new androidx.fragment.app.FragmentState;

        specialinvoke r11.<init>(r6);

        virtualinvoke r1.add(r11);

        $i0 = r6.mState;

        if $i0 <= 0 goto label07;

        r12 = r11.mSavedFragmentState;

        if r12 != null goto label07;

        r12 = virtualinvoke r0.saveFragmentBasicState(r6);

        r11.mSavedFragmentState = r12;

        $r10 = r6.mTargetWho;

        if $r10 == null goto label08;

        r2 = r0.mActive;

        $r10 = r6.mTargetWho;

        $r5 = virtualinvoke r2.get($r10);

        r13 = (androidx.fragment.app.Fragment) $r5;

        if r13 != null goto label04;

        r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r9 = virtualinvoke $r9.append("Failure saving state: ");

        $r9 = virtualinvoke $r9.append(r6);

        $r9 = virtualinvoke $r9.append(" has target not in fragment manager: ");

        $r10 = r6.mTargetWho;

        $r9 = virtualinvoke $r9.append($r10);

        $r10 = virtualinvoke $r9.toString();

        specialinvoke r8.<init>($r10);

        specialinvoke r0.throwException(r8);

     label04:
        r12 = r11.mSavedFragmentState;

        if r12 != null goto label05;

        r12 = new android.os.Bundle;

        specialinvoke r12.<init>();

        r11.mSavedFragmentState = r12;

     label05:
        r12 = r11.mSavedFragmentState;

        virtualinvoke r0.putFragment(r12, "android:target_state", r13);

        $i0 = r6.mTargetRequestCode;

        if $i0 == 0 goto label06;

        r12 = r11.mSavedFragmentState;

        $i0 = r6.mTargetRequestCode;

        virtualinvoke r12.putInt("android:target_req_state", $i0);

     label06:
        goto label08;

     label07:
        r12 = r6.mSavedFragmentState;

        r11.mSavedFragmentState = r12;

     label08:
        $z1 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z1 == 0 goto label02;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r9 = virtualinvoke $r9.append("Saved state of ");

        $r9 = virtualinvoke $r9.append(r6);

        $r9 = virtualinvoke $r9.append(": ");

        r12 = r11.mSavedFragmentState;

        $r9 = virtualinvoke $r9.append(r12);

        $r10 = virtualinvoke $r9.toString();

        android.util.Log.v("FragmentManager", $r10);

        goto label02;

     label09:
        if $z0 != 0 goto label10;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label18;

        android.util.Log.v("FragmentManager", "saveAllState: no fragments!");

        return null;

     label10:
        r14 = null;

        r15 = null;

        r16 = r0.mAdded;

        $i0 = virtualinvoke r16.size();

        if $i0 <= 0 goto label13;

        r16 = new java.util.ArrayList;

        specialinvoke r16.<init>($i0);

        r14 = r16;

        r17 = r0.mAdded;

        $r4 = virtualinvoke r17.iterator();

     label11:
        $z0 = interfaceinvoke $r4.hasNext();

        if $z0 == 0 goto label13;

        $r5 = interfaceinvoke $r4.next();

        r6 = (androidx.fragment.app.Fragment) $r5;

        $r10 = r6.mWho;

        virtualinvoke r16.add($r10);

        r7 = r6.mFragmentManager;

        if r7 == r0 goto label12;

        r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r9 = virtualinvoke $r9.append("Failure saving state: active ");

        $r9 = virtualinvoke $r9.append(r6);

        $r9 = virtualinvoke $r9.append(" was removed from the FragmentManager");

        $r10 = virtualinvoke $r9.toString();

        specialinvoke r8.<init>($r10);

        specialinvoke r0.throwException(r8);

     label12:
        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label11;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r9 = virtualinvoke $r9.append("saveAllState: adding fragment (");

        $r10 = r6.mWho;

        $r9 = virtualinvoke $r9.append($r10);

        $r9 = virtualinvoke $r9.append("): ");

        $r9 = virtualinvoke $r9.append(r6);

        $r10 = virtualinvoke $r9.toString();

        android.util.Log.v("FragmentManager", $r10);

        goto label11;

     label13:
        r16 = r0.mBackStack;

        if r16 == null goto label16;

        $i0 = virtualinvoke r16.size();

        if $i0 <= 0 goto label16;

        r15 = newarray (androidx.fragment.app.BackStackState)[$i0];

        i1 = 0;

     label14:
        if i1 >= $i0 goto label16;

        r18 = new androidx.fragment.app.BackStackState;

        r16 = r0.mBackStack;

        $r5 = virtualinvoke r16.get(i1);

        r19 = (androidx.fragment.app.BackStackRecord) $r5;

        specialinvoke r18.<init>(r19);

        r15[i1] = r18;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label15;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r9 = virtualinvoke $r9.append("saveAllState: adding back stack #");

        $r9 = virtualinvoke $r9.append(i1);

        $r9 = virtualinvoke $r9.append(": ");

        r16 = r0.mBackStack;

        $r5 = virtualinvoke r16.get(i1);

        $r9 = virtualinvoke $r9.append($r5);

        $r10 = virtualinvoke $r9.toString();

        android.util.Log.v("FragmentManager", $r10);

     label15:
        i1 = i1 + 1;

        goto label14;

     label16:
        r20 = new androidx.fragment.app.FragmentManagerState;

        specialinvoke r20.<init>();

        r20.mActive = r1;

        r20.mAdded = r14;

        r20.mBackStack = r15;

        r6 = r0.mPrimaryNav;

        if r6 == null goto label17;

        $r10 = r6.mWho;

        r20.mPrimaryNavActiveWho = $r10;

     label17:
        $i0 = r0.mNextFragmentIndex;

        r20.mNextFragmentIndex = $i0;

        return r20;

     label18:
        return null;
    }

    android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        android.util.SparseArray $r5;
        android.os.Bundle r2, $r3;
        androidx.fragment.app.Fragment $r1;
        android.view.View $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        r2 = null;

        $r3 = r0.mStateBundle;

        if $r3 != null goto label1;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<init>();

        r0.mStateBundle = $r3;

     label1:
        $r3 = r0.mStateBundle;

        virtualinvoke $r1.performSaveInstanceState($r3);

        $r3 = r0.mStateBundle;

        virtualinvoke r0.dispatchOnFragmentSaveInstanceState($r1, $r3, 0);

        $r3 = r0.mStateBundle;

        $z0 = virtualinvoke $r3.isEmpty();

        if $z0 != 0 goto label2;

        r2 = r0.mStateBundle;

        r0.mStateBundle = null;

     label2:
        $r4 = $r1.mView;

        if $r4 == null goto label3;

        virtualinvoke r0.saveFragmentViewState($r1);

     label3:
        $r5 = $r1.mSavedViewState;

        if $r5 == null goto label5;

        if r2 != null goto label4;

        r2 = new android.os.Bundle;

        specialinvoke r2.<init>();

     label4:
        $r5 = $r1.mSavedViewState;

        virtualinvoke r2.putSparseParcelableArray("android:view_state", $r5);

     label5:
        $z0 = $r1.mUserVisibleHint;

        if $z0 != 0 goto label7;

        if r2 != null goto label6;

        r2 = new android.os.Bundle;

        specialinvoke r2.<init>();

     label6:
        $z0 = $r1.mUserVisibleHint;

        virtualinvoke r2.putBoolean("android:user_visible_hint", $z0);

     label7:
        return r2;
    }

    public androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0, r2;
        java.lang.IllegalStateException r3;
        android.os.Bundle $r6;
        androidx.fragment.app.Fragment$SavedState $r7;
        androidx.fragment.app.Fragment $r1;
        int i0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this;

        $r1 := @parameter0;

        r2 = $r1.mFragmentManager;

        if r2 == r0 goto label1;

        r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<init>();

        $r4 = virtualinvoke $r4.append("Fragment ");

        $r4 = virtualinvoke $r4.append($r1);

        $r4 = virtualinvoke $r4.append(" is not currently in the FragmentManager");

        $r5 = virtualinvoke $r4.toString();

        specialinvoke r3.<init>($r5);

        specialinvoke r0.throwException(r3);

     label1:
        i0 = $r1.mState;

        if i0 <= 0 goto label2;

        $r6 = virtualinvoke r0.saveFragmentBasicState($r1);

        if $r6 == null goto label2;

        $r7 = new androidx.fragment.app.Fragment$SavedState;

        specialinvoke $r7.<init>($r6);

        return $r7;

     label2:
        return null;
    }

    void saveFragmentViewState(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        android.util.SparseArray $r2;
        androidx.fragment.app.Fragment $r1;
        int $i0;
        android.view.View $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r3 = $r1.mInnerView;

        if $r3 != null goto label1;

        return;

     label1:
        $r2 = r0.mStateArray;

        if $r2 != null goto label2;

        $r2 = new android.util.SparseArray;

        specialinvoke $r2.<init>();

        r0.mStateArray = $r2;

        goto label3;

     label2:
        virtualinvoke $r2.clear();

     label3:
        $r3 = $r1.mInnerView;

        $r2 = r0.mStateArray;

        virtualinvoke $r3.saveHierarchyState($r2);

        $r2 = r0.mStateArray;

        $i0 = virtualinvoke $r2.size();

        if $i0 <= 0 goto label4;

        $r2 = r0.mStateArray;

        $r1.mSavedViewState = $r2;

        r0.mStateArray = null;

     label4:
        return;
    }

    void scheduleCommit()
    {
        java.lang.Throwable r5;
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentHostCallback $r2;
        java.lang.Runnable $r4;
        java.util.ArrayList r1;
        android.os.Handler $r3;
        int $i0;
        boolean z0, $z1;

        r0 := @this;

        entermonitor r0;

     label1:
        r1 = r0.mPostponedTransactions;

        z0 = 0;

        if r1 == null goto label2;

        $z1 = virtualinvoke r1.isEmpty();

        if $z1 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        r1 = r0.mPendingActions;

        if r1 == null goto label4;

        $i0 = virtualinvoke r1.size();

        if $i0 != 1 goto label4;

        z0 = 1;

     label4:
        if $z1 != 0 goto label5;

        if z0 == 0 goto label6;

     label5:
        $r2 = r0.mHost;

        $r3 = virtualinvoke $r2.getHandler();

        $r4 = r0.mExecCommit;

        virtualinvoke $r3.removeCallbacks($r4);

        $r2 = r0.mHost;

        $r3 = virtualinvoke $r2.getHandler();

        $r4 = r0.mExecCommit;

        virtualinvoke $r3.post($r4);

        specialinvoke r0.updateOnBackPressedCallbackEnabled();

     label6:
        exitmonitor r0;

     label7:
        return;

     label8:
        r5 := @caughtexception;

        exitmonitor r0;

     label9:
        throw r5;

        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public void setBackStackIndex(int, androidx.fragment.app.BackStackRecord)
    {
        java.lang.Throwable r6;
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.BackStackRecord $r1;
        java.lang.Integer $r5;
        java.util.ArrayList r2;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        entermonitor r0;

     label01:
        r2 = r0.mBackStackIndices;

        if r2 != null goto label02;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<init>();

        r0.mBackStackIndices = r2;

     label02:
        r2 = r0.mBackStackIndices;

        $i1 = virtualinvoke r2.size();

        i2 = $i1;

        if $i0 >= $i1 goto label04;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label03;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("Setting back stack index ");

        $r3 = virtualinvoke $r3.append($i0);

        $r3 = virtualinvoke $r3.append(" to ");

        $r3 = virtualinvoke $r3.append($r1);

        $r4 = virtualinvoke $r3.toString();

        android.util.Log.v("FragmentManager", $r4);

     label03:
        r2 = r0.mBackStackIndices;

        virtualinvoke r2.set($i0, $r1);

        goto label09;

     label04:
        if i2 >= $i0 goto label07;

        r2 = r0.mBackStackIndices;

        virtualinvoke r2.add(null);

        r2 = r0.mAvailBackStackIndices;

        if r2 != null goto label05;

        r2 = new java.util.ArrayList;

        specialinvoke r2.<init>();

        r0.mAvailBackStackIndices = r2;

     label05:
        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label06;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("Adding available back stack index ");

        $r3 = virtualinvoke $r3.append(i2);

        $r4 = virtualinvoke $r3.toString();

        android.util.Log.v("FragmentManager", $r4);

     label06:
        r2 = r0.mAvailBackStackIndices;

        $r5 = java.lang.Integer.valueOf(i2);

        virtualinvoke r2.add($r5);

        i2 = i2 + 1;

        goto label04;

     label07:
        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label08;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("Adding back stack index ");

        $r3 = virtualinvoke $r3.append($i0);

        $r3 = virtualinvoke $r3.append(" with ");

        $r3 = virtualinvoke $r3.append($r1);

        $r4 = virtualinvoke $r3.toString();

        android.util.Log.v("FragmentManager", $r4);

     label08:
        r2 = r0.mBackStackIndices;

        virtualinvoke r2.add($r1);

     label09:
        exitmonitor r0;

     label10:
        return;

     label11:
        r6 := @caughtexception;

        exitmonitor r0;

     label12:
        goto label13;

     label13:
        throw r6;

        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void setMaxLifecycle(androidx.fragment.app.Fragment, androidx.lifecycle.Lifecycle$State)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentHostCallback $r6;
        androidx.fragment.app.FragmentManager $r7;
        java.util.HashMap $r3;
        java.lang.IllegalArgumentException $r8;
        androidx.lifecycle.Lifecycle$State $r2;
        androidx.fragment.app.Fragment $r1;
        java.lang.Object $r5;
        java.lang.StringBuilder $r9;
        java.lang.String $r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = r0.mActive;

        $r4 = $r1.mWho;

        $r5 = virtualinvoke $r3.get($r4);

        if $r5 != $r1 goto label2;

        $r6 = $r1.mHost;

        if $r6 == null goto label1;

        $r7 = virtualinvoke $r1.getFragmentManager();

        if $r7 != r0 goto label2;

     label1:
        $r1.mMaxState = $r2;

        return;

     label2:
        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<init>();

        $r9 = virtualinvoke $r9.append("Fragment ");

        $r9 = virtualinvoke $r9.append($r1);

        $r9 = virtualinvoke $r9.append(" is not an active fragment of FragmentManager ");

        $r9 = virtualinvoke $r9.append(r0);

        $r4 = virtualinvoke $r9.toString();

        specialinvoke $r8.<init>($r4);

        throw $r8;
    }

    public void setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentHostCallback r5;
        androidx.fragment.app.FragmentManager $r6;
        java.util.HashMap r2;
        java.lang.IllegalArgumentException r7;
        androidx.fragment.app.Fragment $r1, r9;
        java.lang.Object $r4;
        java.lang.StringBuilder $r8;
        java.lang.String $r3;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 == null goto label2;

        r2 = r0.mActive;

        $r3 = $r1.mWho;

        $r4 = virtualinvoke r2.get($r3);

        if $r4 != $r1 goto label1;

        r5 = $r1.mHost;

        if r5 == null goto label2;

        $r6 = virtualinvoke $r1.getFragmentManager();

        if $r6 != r0 goto label1;

        goto label2;

     label1:
        r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<init>();

        $r8 = virtualinvoke $r8.append("Fragment ");

        $r8 = virtualinvoke $r8.append($r1);

        $r8 = virtualinvoke $r8.append(" is not an active fragment of FragmentManager ");

        $r8 = virtualinvoke $r8.append(r0);

        $r3 = virtualinvoke $r8.toString();

        specialinvoke r7.<init>($r3);

        throw r7;

     label2:
        r9 = r0.mPrimaryNav;

        r0.mPrimaryNav = $r1;

        specialinvoke r0.dispatchParentPrimaryNavigationFragmentChanged(r9);

        $r1 = r0.mPrimaryNav;

        specialinvoke r0.dispatchParentPrimaryNavigationFragmentChanged($r1);

        return;
    }

    public void showFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.Fragment $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = androidx.fragment.app.FragmentManagerImpl.DEBUG;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<init>();

        $r2 = virtualinvoke $r2.append("show: ");

        $r2 = virtualinvoke $r2.append($r1);

        $r3 = virtualinvoke $r2.toString();

        android.util.Log.v("FragmentManager", $r3);

     label1:
        $z0 = $r1.mHidden;

        if $z0 == 0 goto label2;

        $r1.mHidden = 0;

        $z0 = $r1.mHiddenChanged;

        $z0 = $z0 ^ 1;

        $r1.mHiddenChanged = $z0;

     label2:
        return;
    }

    void startPendingDeferredFragments()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        androidx.fragment.app.Fragment r5;
        java.util.HashMap $r1;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mActive;

        $r2 = virtualinvoke $r1.values();

        $r3 = interfaceinvoke $r2.iterator();

     label1:
        $z0 = interfaceinvoke $r3.hasNext();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.next();

        r5 = (androidx.fragment.app.Fragment) $r4;

        if r5 == null goto label1;

        virtualinvoke r0.performPendingDeferredStart(r5);

        goto label1;

     label2:
        return;
    }

    public java.lang.String toString()
    {
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentHostCallback $r4;
        int $i0;
        androidx.fragment.app.Fragment $r3;
        java.lang.StringBuilder r1;
        java.lang.String $r2;

        r0 := @this;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<init>(128);

        virtualinvoke r1.append("FragmentManager{");

        $i0 = java.lang.System.identityHashCode(r0);

        $r2 = java.lang.Integer.toHexString($i0);

        virtualinvoke r1.append($r2);

        virtualinvoke r1.append(" in ");

        $r3 = r0.mParent;

        if $r3 == null goto label1;

        androidx.core.util.DebugUtils.buildShortClassTag($r3, r1);

        goto label2;

     label1:
        $r4 = r0.mHost;

        androidx.core.util.DebugUtils.buildShortClassTag($r4, r1);

     label2:
        virtualinvoke r1.append("}}");

        $r2 = virtualinvoke r1.toString();

        return $r2;
    }

    public void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks)
    {
        java.lang.Throwable r7;
        androidx.fragment.app.FragmentManagerImpl r0;
        androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder $r5;
        int i0, $i1;
        java.lang.Object $r4;
        androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks $r1, $r6;
        java.util.concurrent.CopyOnWriteArrayList $r2, r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mLifecycleCallbacks;

        entermonitor $r2;

        i0 = 0;

     label1:
        r3 = r0.mLifecycleCallbacks;

        $i1 = virtualinvoke r3.size();

     label2:
        if i0 >= $i1 goto label4;

        r3 = r0.mLifecycleCallbacks;

        $r4 = virtualinvoke r3.get(i0);

        $r5 = (androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder) $r4;

        $r6 = $r5.mCallback;

        if $r6 != $r1 goto label3;

        r3 = r0.mLifecycleCallbacks;

        virtualinvoke r3.remove(i0);

        goto label4;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        exitmonitor $r2;

     label5:
        return;

     label6:
        r7 := @caughtexception;

        exitmonitor $r2;

     label7:
        goto label8;

     label8:
        throw r7;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }
}
