final class androidx.collection.MapCollections$EntrySet extends java.lang.Object implements java.util.Set
{
    final androidx.collection.MapCollections this$0;

    void <init>(androidx.collection.MapCollections)
    {
        androidx.collection.MapCollections$EntrySet r0;
        androidx.collection.MapCollections $r1;

        r0 := @this;

        $r1 := @parameter0;

        r0.this$0 = $r1;

        specialinvoke r0.<init>();

        return;
    }

    public volatile boolean add(java.lang.Object)
    {
        androidx.collection.MapCollections$EntrySet r0;
        java.util.Map$Entry $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = (java.util.Map$Entry) $r1;

        $z0 = virtualinvoke r0.add($r2);

        return $z0;
    }

    public boolean add(java.util.Map$Entry)
    {
        androidx.collection.MapCollections$EntrySet r0;
        java.lang.UnsupportedOperationException $r2;
        java.util.Map$Entry r1;

        r0 := @this;

        r1 := @parameter0;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<init>();

        throw $r2;
    }

    public boolean addAll(java.util.Collection)
    {
        androidx.collection.MapCollections$EntrySet r0;
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        java.util.Collection r1;
        int $i0, $i1;
        androidx.collection.MapCollections $r2;
        java.lang.Object $r4, $r6;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        $r2 = r0.this$0;

        $i0 = virtualinvoke $r2.colGetSize();

        $r3 = interfaceinvoke r1.iterator();

     label1:
        $z0 = interfaceinvoke $r3.hasNext();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.next();

        r5 = (java.util.Map$Entry) $r4;

        $r2 = r0.this$0;

        $r4 = interfaceinvoke r5.getKey();

        $r6 = interfaceinvoke r5.getValue();

        virtualinvoke $r2.colPut($r4, $r6);

        goto label1;

     label2:
        $r2 = r0.this$0;

        $i1 = virtualinvoke $r2.colGetSize();

        if $i0 == $i1 goto label3;

        return 1;

     label3:
        return 0;
    }

    public void clear()
    {
        androidx.collection.MapCollections$EntrySet r0;
        androidx.collection.MapCollections $r1;

        r0 := @this;

        $r1 = r0.this$0;

        virtualinvoke $r1.colClear();

        return;
    }

    public boolean contains(java.lang.Object)
    {
        androidx.collection.MapCollections$EntrySet r0;
        java.util.Map$Entry r2;
        int $i0;
        java.lang.Object $r1, $r4;
        androidx.collection.MapCollections r3;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        z0 = $r1 instanceof java.util.Map$Entry;

        if z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (java.util.Map$Entry) $r1;

        r3 = r0.this$0;

        $r1 = interfaceinvoke r2.getKey();

        $i0 = virtualinvoke r3.colIndexOfKey($r1);

        if $i0 >= 0 goto label2;

        return 0;

     label2:
        r3 = r0.this$0;

        $r1 = virtualinvoke r3.colGetEntry($i0, 1);

        $r4 = interfaceinvoke r2.getValue();

        z0 = androidx.collection.ContainerHelpers.equal($r1, $r4);

        return z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        androidx.collection.MapCollections$EntrySet r0;
        java.util.Iterator $r2;
        java.util.Collection r1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this;

        r1 := @parameter0;

        $r2 = interfaceinvoke r1.iterator();

     label1:
        $z0 = interfaceinvoke $r2.hasNext();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.next();

        $z0 = virtualinvoke r0.contains($r3);

        if $z0 != 0 goto label1;

        return 0;

     label2:
        return 1;
    }

    public boolean equals(java.lang.Object)
    {
        androidx.collection.MapCollections$EntrySet r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = androidx.collection.MapCollections.equalsSetHelper(r0, $r1);

        return $z0;
    }

    public int hashCode()
    {
        androidx.collection.MapCollections$EntrySet r0;
        int i0, $i1, $i2, $i3;
        androidx.collection.MapCollections r1;
        java.lang.Object $r2, $r3;

        r0 := @this;

        i0 = 0;

        r1 = r0.this$0;

        $i1 = virtualinvoke r1.colGetSize();

        $i1 = $i1 - 1;

     label1:
        if $i1 < 0 goto label6;

        r1 = r0.this$0;

        $i2 = 0;

        $r2 = virtualinvoke r1.colGetEntry($i1, 0);

        r1 = r0.this$0;

        $r3 = virtualinvoke r1.colGetEntry($i1, 1);

        if $r2 != null goto label2;

        $i3 = 0;

        goto label3;

     label2:
        $i3 = virtualinvoke $r2.hashCode();

     label3:
        if $r3 != null goto label4;

        goto label5;

     label4:
        $i2 = virtualinvoke $r3.hashCode();

     label5:
        $i2 = $i2 ^ $i3;

        i0 = i0 + $i2;

        $i1 = $i1 + -1;

        goto label1;

     label6:
        return i0;
    }

    public boolean isEmpty()
    {
        androidx.collection.MapCollections$EntrySet r0;
        int $i0;
        androidx.collection.MapCollections $r1;

        r0 := @this;

        $r1 = r0.this$0;

        $i0 = virtualinvoke $r1.colGetSize();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Iterator iterator()
    {
        androidx.collection.MapCollections$EntrySet r0;
        androidx.collection.MapCollections $r2;
        androidx.collection.MapCollections$MapIterator $r1;

        r0 := @this;

        $r1 = new androidx.collection.MapCollections$MapIterator;

        $r2 = r0.this$0;

        specialinvoke $r1.<init>($r2);

        return $r1;
    }

    public boolean remove(java.lang.Object)
    {
        androidx.collection.MapCollections$EntrySet r0;
        java.lang.UnsupportedOperationException $r2;
        java.lang.Object $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<init>();

        throw $r2;
    }

    public boolean removeAll(java.util.Collection)
    {
        androidx.collection.MapCollections$EntrySet r0;
        java.lang.UnsupportedOperationException $r2;
        java.util.Collection r1;

        r0 := @this;

        r1 := @parameter0;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<init>();

        throw $r2;
    }

    public boolean retainAll(java.util.Collection)
    {
        androidx.collection.MapCollections$EntrySet r0;
        java.lang.UnsupportedOperationException $r2;
        java.util.Collection r1;

        r0 := @this;

        r1 := @parameter0;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<init>();

        throw $r2;
    }

    public int size()
    {
        androidx.collection.MapCollections$EntrySet r0;
        int $i0;
        androidx.collection.MapCollections $r1;

        r0 := @this;

        $r1 = r0.this$0;

        $i0 = virtualinvoke $r1.colGetSize();

        return $i0;
    }

    public java.lang.Object[] toArray()
    {
        androidx.collection.MapCollections$EntrySet r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<init>();

        throw $r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        androidx.collection.MapCollections$EntrySet r0;
        java.lang.UnsupportedOperationException $r2;
        java.lang.Object[] r1;

        r0 := @this;

        r1 := @parameter0;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<init>();

        throw $r2;
    }
}
