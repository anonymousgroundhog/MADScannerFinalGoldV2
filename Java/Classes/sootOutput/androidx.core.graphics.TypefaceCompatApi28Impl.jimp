public class androidx.core.graphics.TypefaceCompatApi28Impl extends androidx.core.graphics.TypefaceCompatApi26Impl
{
    private static final java.lang.String CREATE_FROM_FAMILIES_WITH_DEFAULT_METHOD;
    private static final java.lang.String DEFAULT_FAMILY;
    private static final int RESOLVE_BY_FONT_TABLE;

    public void <init>()
    {
        androidx.core.graphics.TypefaceCompatApi28Impl r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    protected android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
    {
        android.graphics.Typeface $r7;
        java.lang.Object[] $r5;
        java.lang.ReflectiveOperationException r8;
        java.lang.RuntimeException $r9;
        java.lang.Integer $r6;
        androidx.core.graphics.TypefaceCompatApi28Impl r0;
        java.lang.Object $r1, $r4;
        java.lang.Class r3;
        java.lang.reflect.Method $r2;

        r0 := @this;

        $r1 := @parameter0;

        r3 = r0.mFontFamily;

     label01:
        $r4 = java.lang.reflect.Array.newInstance(r3, 1);

        java.lang.reflect.Array.set($r4, 0, $r1);

     label02:
        $r2 = r0.mCreateFromFamiliesWithDefault;

        $r5 = newarray (java.lang.Object)[4];

        $r5[0] = $r4;

        $r5[1] = "sans-serif";

     label03:
        $r6 = java.lang.Integer.valueOf(-1);

     label04:
        $r5[2] = $r6;

     label05:
        $r6 = java.lang.Integer.valueOf(-1);

     label06:
        $r5[3] = $r6;

     label07:
        $r1 = virtualinvoke $r2.invoke(null, $r5);

     label08:
        $r7 = (android.graphics.Typeface) $r1;

        return $r7;

     label09:
        r8 := @caughtexception;

        goto label11;

     label10:
        r8 := @caughtexception;

     label11:
        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<init>(r8);

        throw $r9;

        catch java.lang.IllegalAccessException from label01 to label02 with label10;
        catch java.lang.IllegalAccessException from label03 to label04 with label10;
        catch java.lang.IllegalAccessException from label05 to label06 with label10;
        catch java.lang.IllegalAccessException from label07 to label08 with label10;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label09;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label09;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label09;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label09;
    }

    protected java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) throws java.lang.NoSuchMethodException
    {
        java.lang.Class[] $r3;
        java.lang.Class r1, $r4;
        java.lang.Object $r2;
        java.lang.reflect.Method $r5;
        androidx.core.graphics.TypefaceCompatApi28Impl r0;

        r0 := @this;

        r1 := @parameter0;

        $r2 = java.lang.reflect.Array.newInstance(r1, 1);

        r1 = class "Landroid/graphics/Typeface;";

        $r3 = newarray (java.lang.Class)[4];

        $r4 = virtualinvoke $r2.getClass();

        $r3[0] = $r4;

        $r3[1] = class "Ljava/lang/String;";

        $r4 = java.lang.Integer.TYPE;

        $r3[2] = $r4;

        $r4 = java.lang.Integer.TYPE;

        $r3[3] = $r4;

        $r5 = virtualinvoke r1.getDeclaredMethod("createFromFamiliesWithDefault", $r3);

        virtualinvoke $r5.setAccessible(1);

        return $r5;
    }
}
