class androidx.appcompat.app.AppCompatDelegateImpl extends androidx.appcompat.app.AppCompatDelegate implements androidx.appcompat.view.menu.MenuBuilder$Callback, android.view.LayoutInflater$Factory2
{
    static final java.lang.String EXCEPTION_HANDLER_MESSAGE_SUFFIX;
    private static final boolean IS_PRE_LOLLIPOP;
    private static final boolean sCanApplyOverrideConfiguration;
    private static final boolean sCanReturnDifferentContext;
    private static boolean sInstalledExceptionHandler;
    private static final androidx.collection.SimpleArrayMap sLocalNightModes;
    private static final int[] sWindowBackgroundStyleable;
    androidx.appcompat.app.ActionBar mActionBar;
    private androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback;
    androidx.appcompat.view.ActionMode mActionMode;
    android.widget.PopupWindow mActionModePopup;
    androidx.appcompat.widget.ActionBarContextView mActionModeView;
    private boolean mActivityHandlesUiMode;
    private boolean mActivityHandlesUiModeChecked;
    final androidx.appcompat.app.AppCompatCallback mAppCompatCallback;
    private androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater;
    private androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback;
    private androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager;
    private androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager;
    private boolean mBaseContextAttached;
    private boolean mClosingActionMenu;
    final android.content.Context mContext;
    private boolean mCreated;
    private androidx.appcompat.widget.DecorContentParent mDecorContentParent;
    private boolean mEnableDefaultActionBarUp;
    androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim;
    private boolean mFeatureIndeterminateProgress;
    private boolean mFeatureProgress;
    private boolean mHandleNativeActionModes;
    boolean mHasActionBar;
    final java.lang.Object mHost;
    int mInvalidatePanelMenuFeatures;
    boolean mInvalidatePanelMenuPosted;
    private final java.lang.Runnable mInvalidatePanelMenuRunnable;
    boolean mIsDestroyed;
    boolean mIsFloating;
    private int mLocalNightMode;
    private boolean mLongPressBackDown;
    android.view.MenuInflater mMenuInflater;
    boolean mOverlayActionBar;
    boolean mOverlayActionMode;
    private androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback;
    private androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels;
    private androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel;
    java.lang.Runnable mShowActionModePopup;
    private boolean mStarted;
    private android.view.View mStatusGuard;
    android.view.ViewGroup mSubDecor;
    private boolean mSubDecorInstalled;
    private android.graphics.Rect mTempRect1;
    private android.graphics.Rect mTempRect2;
    private int mThemeResId;
    private java.lang.CharSequence mTitle;
    private android.widget.TextView mTitleView;
    android.view.Window mWindow;
    boolean mWindowNoTitle;

    static void <clinit>()
    {
        java.lang.Thread$UncaughtExceptionHandler $r4;
        int[] $r1;
        int i0;
        java.lang.String $r2, $r3;
        androidx.appcompat.app.AppCompatDelegateImpl$1 $r5;
        androidx.collection.SimpleArrayMap r0;
        boolean z0, $z1;

        r0 = new androidx.collection.SimpleArrayMap;

        specialinvoke r0.<init>();

        androidx.appcompat.app.AppCompatDelegateImpl.sLocalNightModes = r0;

        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 >= 21 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        androidx.appcompat.app.AppCompatDelegateImpl.IS_PRE_LOLLIPOP = z0;

        $r1 = newarray (int)[1];

        $r1[0] = 16842836;

        androidx.appcompat.app.AppCompatDelegateImpl.sWindowBackgroundStyleable = $r1;

        $r2 = android.os.Build.FINGERPRINT;

        $r3 = "robolectric";

        $z1 = virtualinvoke $r3.equals($r2);

        $z1 = $z1 ^ 1;

        androidx.appcompat.app.AppCompatDelegateImpl.sCanReturnDifferentContext = $z1;

        androidx.appcompat.app.AppCompatDelegateImpl.sCanApplyOverrideConfiguration = 1;

        if z0 == 0 goto label3;

        z0 = androidx.appcompat.app.AppCompatDelegateImpl.sInstalledExceptionHandler;

        if z0 != 0 goto label3;

        $r4 = java.lang.Thread.getDefaultUncaughtExceptionHandler();

        $r5 = new androidx.appcompat.app.AppCompatDelegateImpl$1;

        specialinvoke $r5.<init>($r4);

        java.lang.Thread.setDefaultUncaughtExceptionHandler($r5);

        androidx.appcompat.app.AppCompatDelegateImpl.sInstalledExceptionHandler = 1;

     label3:
        return;
    }

    void <init>(android.app.Activity, androidx.appcompat.app.AppCompatCallback)
    {
        androidx.appcompat.app.AppCompatCallback $r2;
        android.app.Activity $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.<init>($r1, null, $r2, $r1);

        return;
    }

    void <init>(android.app.Dialog, androidx.appcompat.app.AppCompatCallback)
    {
        android.content.Context $r3;
        androidx.appcompat.app.AppCompatCallback $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.app.Dialog $r1;
        android.view.Window $r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = virtualinvoke $r1.getContext();

        $r4 = virtualinvoke $r1.getWindow();

        specialinvoke r0.<init>($r3, $r4, $r2, $r1);

        return;
    }

    void <init>(android.content.Context, android.app.Activity, androidx.appcompat.app.AppCompatCallback)
    {
        android.content.Context $r1;
        androidx.appcompat.app.AppCompatCallback $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.app.Activity $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        specialinvoke r0.<init>($r1, null, $r3, $r2);

        return;
    }

    void <init>(android.content.Context, android.view.Window, androidx.appcompat.app.AppCompatCallback)
    {
        android.content.Context $r1;
        androidx.appcompat.app.AppCompatCallback $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.Window $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        specialinvoke r0.<init>($r1, $r2, $r3, $r1);

        return;
    }

    private void <init>(android.content.Context, android.view.Window, androidx.appcompat.app.AppCompatCallback, java.lang.Object)
    {
        android.content.Context $r1;
        androidx.appcompat.app.AppCompatCallback $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegate $r6;
        androidx.appcompat.app.AppCompatActivity $r5;
        java.lang.Integer r11;
        int i0;
        java.lang.Object $r4, $r10;
        java.lang.Class $r8;
        androidx.appcompat.app.AppCompatDelegateImpl$2 $r12;
        java.lang.String $r9;
        android.view.Window $r2;
        boolean z0;
        androidx.collection.SimpleArrayMap $r7;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 := @parameter3;

        specialinvoke r0.<init>();

        r0.mFadeAnim = null;

        r0.mHandleNativeActionModes = 1;

        i0 = -100;

        r0.mLocalNightMode = i0;

        $r12 = new androidx.appcompat.app.AppCompatDelegateImpl$2;

        specialinvoke $r12.<init>(r0);

        r0.mInvalidatePanelMenuRunnable = $r12;

        r0.mContext = $r1;

        r0.mAppCompatCallback = $r3;

        r0.mHost = $r4;

        i0 = r0.mLocalNightMode;

        if i0 != -100 goto label1;

        z0 = $r4 instanceof android.app.Dialog;

        if z0 == 0 goto label1;

        $r5 = specialinvoke r0.tryUnwrapContext();

        if $r5 == null goto label1;

        $r6 = virtualinvoke $r5.getDelegate();

        i0 = virtualinvoke $r6.getLocalNightMode();

        r0.mLocalNightMode = i0;

     label1:
        i0 = r0.mLocalNightMode;

        if i0 != -100 goto label2;

        $r7 = androidx.appcompat.app.AppCompatDelegateImpl.sLocalNightModes;

        $r8 = virtualinvoke $r4.getClass();

        $r9 = virtualinvoke $r8.getName();

        $r10 = virtualinvoke $r7.get($r9);

        r11 = (java.lang.Integer) $r10;

        if r11 == null goto label2;

        i0 = virtualinvoke r11.intValue();

        r0.mLocalNightMode = i0;

        $r8 = virtualinvoke $r4.getClass();

        $r9 = virtualinvoke $r8.getName();

        virtualinvoke $r7.remove($r9);

     label2:
        if $r2 == null goto label3;

        specialinvoke r0.attachToWindow($r2);

     label3:
        androidx.appcompat.widget.AppCompatDrawableManager.preload();

        return;
    }

    private boolean applyDayNight(boolean)
    {
        android.content.Context r1;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0, $i1;
        boolean $z0, z1;

        r0 := @this;

        $z0 := @parameter0;

        z1 = r0.mIsDestroyed;

        if z1 == 0 goto label1;

        return 0;

     label1:
        $i0 = specialinvoke r0.calculateNightMode();

        r1 = r0.mContext;

        $i1 = virtualinvoke r0.mapNightMode(r1, $i0);

        $z0 = specialinvoke r0.updateForNightMode($i1, $z0);

        if $i0 != 0 goto label2;

        r1 = r0.mContext;

        $r2 = specialinvoke r0.getAutoTimeNightModeManager(r1);

        virtualinvoke $r2.setup();

        goto label3;

     label2:
        $r2 = r0.mAutoTimeNightModeManager;

        if $r2 == null goto label3;

        virtualinvoke $r2.cleanup();

     label3:
        if $i0 != 3 goto label4;

        r1 = r0.mContext;

        $r2 = specialinvoke r0.getAutoBatteryNightModeManager(r1);

        virtualinvoke $r2.setup();

        return $z0;

     label4:
        $r2 = r0.mAutoBatteryNightModeManager;

        if $r2 == null goto label5;

        virtualinvoke $r2.cleanup();

     label5:
        return $z0;
    }

    private void applyFixedSizeWindow()
    {
        android.content.Context r5;
        androidx.appcompat.widget.ContentFrameLayout r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.ViewGroup r1;
        android.content.res.TypedArray $r7;
        android.util.TypedValue $r8;
        int[] $r6;
        int $i0, $i1, $i2, $i3;
        android.view.View $r2;
        android.view.Window r4;
        boolean $z0;

        r0 := @this;

        r1 = r0.mSubDecor;

        $r2 = virtualinvoke r1.findViewById(16908290);

        r3 = (androidx.appcompat.widget.ContentFrameLayout) $r2;

        r4 = r0.mWindow;

        $r2 = virtualinvoke r4.getDecorView();

        $i0 = virtualinvoke $r2.getPaddingLeft();

        $i1 = virtualinvoke $r2.getPaddingTop();

        $i2 = virtualinvoke $r2.getPaddingRight();

        $i3 = virtualinvoke $r2.getPaddingBottom();

        virtualinvoke r3.setDecorPadding($i0, $i1, $i2, $i3);

        r5 = r0.mContext;

        $r6 = androidx.appcompat.R$styleable.AppCompatTheme;

        $r7 = virtualinvoke r5.obtainStyledAttributes($r6);

        $i0 = androidx.appcompat.R$styleable.AppCompatTheme_windowMinWidthMajor;

        $r8 = virtualinvoke r3.getMinWidthMajor();

        virtualinvoke $r7.getValue($i0, $r8);

        $i0 = androidx.appcompat.R$styleable.AppCompatTheme_windowMinWidthMinor;

        $r8 = virtualinvoke r3.getMinWidthMinor();

        virtualinvoke $r7.getValue($i0, $r8);

        $i0 = androidx.appcompat.R$styleable.AppCompatTheme_windowFixedWidthMajor;

        $z0 = virtualinvoke $r7.hasValue($i0);

        if $z0 == 0 goto label1;

        $i0 = androidx.appcompat.R$styleable.AppCompatTheme_windowFixedWidthMajor;

        $r8 = virtualinvoke r3.getFixedWidthMajor();

        virtualinvoke $r7.getValue($i0, $r8);

     label1:
        $i0 = androidx.appcompat.R$styleable.AppCompatTheme_windowFixedWidthMinor;

        $z0 = virtualinvoke $r7.hasValue($i0);

        if $z0 == 0 goto label2;

        $i0 = androidx.appcompat.R$styleable.AppCompatTheme_windowFixedWidthMinor;

        $r8 = virtualinvoke r3.getFixedWidthMinor();

        virtualinvoke $r7.getValue($i0, $r8);

     label2:
        $i0 = androidx.appcompat.R$styleable.AppCompatTheme_windowFixedHeightMajor;

        $z0 = virtualinvoke $r7.hasValue($i0);

        if $z0 == 0 goto label3;

        $i0 = androidx.appcompat.R$styleable.AppCompatTheme_windowFixedHeightMajor;

        $r8 = virtualinvoke r3.getFixedHeightMajor();

        virtualinvoke $r7.getValue($i0, $r8);

     label3:
        $i0 = androidx.appcompat.R$styleable.AppCompatTheme_windowFixedHeightMinor;

        $z0 = virtualinvoke $r7.hasValue($i0);

        if $z0 == 0 goto label4;

        $i0 = androidx.appcompat.R$styleable.AppCompatTheme_windowFixedHeightMinor;

        $r8 = virtualinvoke r3.getFixedHeightMinor();

        virtualinvoke $r7.getValue($i0, $r8);

     label4:
        virtualinvoke $r7.recycle();

        virtualinvoke r3.requestLayout();

        return;
    }

    private void attachToWindow(android.view.Window)
    {
        android.content.Context r6;
        java.lang.IllegalStateException r9;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.graphics.drawable.Drawable $r8;
        android.view.Window$Callback $r4;
        int[] $r2;
        androidx.appcompat.widget.TintTypedArray $r7;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r5;
        android.view.Window $r1, r3;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        r3 = r0.mWindow;

        if r3 != null goto label3;

        $r4 = virtualinvoke $r1.getCallback();

        z0 = $r4 instanceof androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        if z0 != 0 goto label2;

        r5 = new androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback;

        specialinvoke r5.<init>(r0, $r4);

        r0.mAppCompatWindowCallback = r5;

        virtualinvoke $r1.setCallback(r5);

        r6 = r0.mContext;

        $r2 = androidx.appcompat.app.AppCompatDelegateImpl.sWindowBackgroundStyleable;

        $r7 = androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(r6, null, $r2);

        $r8 = virtualinvoke $r7.getDrawableIfKnown(0);

        if $r8 == null goto label1;

        virtualinvoke $r1.setBackgroundDrawable($r8);

     label1:
        virtualinvoke $r7.recycle();

        r0.mWindow = $r1;

        return;

     label2:
        r9 = new java.lang.IllegalStateException;

        specialinvoke r9.<init>("AppCompat has already installed itself into the Window");

        throw r9;

     label3:
        r9 = new java.lang.IllegalStateException;

        specialinvoke r9.<init>("AppCompat has already installed itself into the Window");

        throw r9;
    }

    private int calculateNightMode()
    {
        int $i0;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        $i0 = r0.mLocalNightMode;

        if $i0 == -100 goto label1;

        return $i0;

     label1:
        $i0 = androidx.appcompat.app.AppCompatDelegateImpl.getDefaultNightMode();

        return $i0;
    }

    private void cleanupAutoManagers()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        $r1 = r0.mAutoTimeNightModeManager;

        if $r1 == null goto label1;

        virtualinvoke $r1.cleanup();

     label1:
        $r1 = r0.mAutoBatteryNightModeManager;

        if $r1 == null goto label2;

        virtualinvoke $r1.cleanup();

     label2:
        return;
    }

    private android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context, int, android.content.res.Configuration)
    {
        android.content.Context $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.res.Configuration $r2, $r4, $r5;
        int $i0, $i1;
        android.content.res.Resources $r3;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 := @parameter2;

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        $r1 = virtualinvoke $r1.getApplicationContext();

        $r3 = virtualinvoke $r1.getResources();

        $r4 = virtualinvoke $r3.getConfiguration();

        $i0 = $r4.uiMode;

        $i0 = $i0 & 48;

        goto label4;

     label2:
        $i0 = 32;

        goto label4;

     label3:
        $i0 = 16;

     label4:
        $r5 = new android.content.res.Configuration;

        specialinvoke $r5.<init>();

        $r5.fontScale = 0.0F;

        if $r2 == null goto label5;

        virtualinvoke $r5.setTo($r2);

     label5:
        $i1 = $r5.uiMode;

        $i1 = $i1 & -49;

        $i0 = $i1 | $i0;

        $r5.uiMode = $i0;

        return $r5;
    }

    private android.view.ViewGroup createSubDecor()
    {
        android.content.Context r1, r10;
        java.lang.IllegalStateException $r27;
        android.widget.FrameLayout $r17;
        androidx.appcompat.widget.FitWindowsViewGroup r13;
        androidx.appcompat.widget.DecorContentParent r11;
        android.content.res.TypedArray $r3;
        int[] r2;
        int i0;
        androidx.appcompat.app.AppCompatDelegateImpl$4 $r23;
        android.view.View $r7;
        androidx.appcompat.app.AppCompatDelegateImpl$3 $r22;
        java.lang.String $r19;
        android.content.res.Resources$Theme $r9;
        boolean $z0;
        androidx.appcompat.app.AppCompatDelegateImpl$5 $r24;
        androidx.appcompat.widget.ContentFrameLayout r15;
        android.view.LayoutInflater $r5;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.IllegalArgumentException $r26;
        android.view.ViewGroup r6, r16;
        android.view.Window$Callback $r12;
        androidx.appcompat.view.ContextThemeWrapper $r21;
        android.widget.TextView r14;
        android.util.TypedValue r8, $r20;
        java.lang.StringBuilder r18, $r25;
        android.view.Window r4;

        r0 := @this;

        r1 = r0.mContext;

        r2 = androidx.appcompat.R$styleable.AppCompatTheme;

        $r3 = virtualinvoke r1.obtainStyledAttributes(r2);

        i0 = androidx.appcompat.R$styleable.AppCompatTheme_windowActionBar;

        $z0 = virtualinvoke $r3.hasValue(i0);

        if $z0 == 0 goto label21;

        i0 = androidx.appcompat.R$styleable.AppCompatTheme_windowNoTitle;

        $z0 = virtualinvoke $r3.getBoolean(i0, 0);

        if $z0 == 0 goto label01;

        virtualinvoke r0.requestWindowFeature(1);

        goto label02;

     label01:
        i0 = androidx.appcompat.R$styleable.AppCompatTheme_windowActionBar;

        $z0 = virtualinvoke $r3.getBoolean(i0, 0);

        if $z0 == 0 goto label02;

        virtualinvoke r0.requestWindowFeature(108);

     label02:
        i0 = androidx.appcompat.R$styleable.AppCompatTheme_windowActionBarOverlay;

        $z0 = virtualinvoke $r3.getBoolean(i0, 0);

        if $z0 == 0 goto label03;

        virtualinvoke r0.requestWindowFeature(109);

     label03:
        i0 = androidx.appcompat.R$styleable.AppCompatTheme_windowActionModeOverlay;

        $z0 = virtualinvoke $r3.getBoolean(i0, 0);

        if $z0 == 0 goto label04;

        virtualinvoke r0.requestWindowFeature(10);

     label04:
        i0 = androidx.appcompat.R$styleable.AppCompatTheme_android_windowIsFloating;

        $z0 = virtualinvoke $r3.getBoolean(i0, 0);

        r0.mIsFloating = $z0;

        virtualinvoke $r3.recycle();

        specialinvoke r0.ensureWindow();

        r4 = r0.mWindow;

        virtualinvoke r4.getDecorView();

        r1 = r0.mContext;

        $r5 = android.view.LayoutInflater.from(r1);

        r6 = null;

        $z0 = r0.mWindowNoTitle;

        if $z0 != 0 goto label11;

        $z0 = r0.mIsFloating;

        if $z0 == 0 goto label05;

        i0 = androidx.appcompat.R$layout.abc_dialog_title_material;

        $r7 = virtualinvoke $r5.inflate(i0, null);

        r6 = (android.view.ViewGroup) $r7;

        r0.mOverlayActionBar = 0;

        r0.mHasActionBar = 0;

        goto label13;

     label05:
        $z0 = r0.mHasActionBar;

        if $z0 == 0 goto label13;

        $r20 = new android.util.TypedValue;

        r8 = $r20;

        specialinvoke $r20.<init>();

        r1 = r0.mContext;

        $r9 = virtualinvoke r1.getTheme();

        i0 = androidx.appcompat.R$attr.actionBarTheme;

        virtualinvoke $r9.resolveAttribute(i0, r8, 1);

        i0 = r8.resourceId;

        if i0 == 0 goto label06;

        $r21 = new androidx.appcompat.view.ContextThemeWrapper;

        r1 = $r21;

        r10 = r0.mContext;

        i0 = r8.resourceId;

        specialinvoke $r21.<init>(r10, i0);

        goto label07;

     label06:
        r1 = r0.mContext;

     label07:
        $r5 = android.view.LayoutInflater.from(r1);

        i0 = androidx.appcompat.R$layout.abc_screen_toolbar;

        $r7 = virtualinvoke $r5.inflate(i0, null);

        r6 = (android.view.ViewGroup) $r7;

        i0 = androidx.appcompat.R$id.decor_content_parent;

        $r7 = virtualinvoke r6.findViewById(i0);

        r11 = (androidx.appcompat.widget.DecorContentParent) $r7;

        r0.mDecorContentParent = r11;

        $r12 = virtualinvoke r0.getWindowCallback();

        interfaceinvoke r11.setWindowCallback($r12);

        $z0 = r0.mOverlayActionBar;

        if $z0 == 0 goto label08;

        r11 = r0.mDecorContentParent;

        interfaceinvoke r11.initFeature(109);

     label08:
        $z0 = r0.mFeatureProgress;

        if $z0 == 0 goto label09;

        r11 = r0.mDecorContentParent;

        interfaceinvoke r11.initFeature(2);

     label09:
        $z0 = r0.mFeatureIndeterminateProgress;

        if $z0 == 0 goto label10;

        r11 = r0.mDecorContentParent;

        interfaceinvoke r11.initFeature(5);

     label10:
        goto label13;

     label11:
        $z0 = r0.mOverlayActionMode;

        if $z0 == 0 goto label12;

        i0 = androidx.appcompat.R$layout.abc_screen_simple_overlay_action_mode;

        $r7 = virtualinvoke $r5.inflate(i0, null);

        r6 = (android.view.ViewGroup) $r7;

        goto label13;

     label12:
        i0 = androidx.appcompat.R$layout.abc_screen_simple;

        $r7 = virtualinvoke $r5.inflate(i0, null);

        r6 = (android.view.ViewGroup) $r7;

     label13:
        if r6 == null goto label20;

        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 < 21 goto label14;

        $r22 = new androidx.appcompat.app.AppCompatDelegateImpl$3;

        specialinvoke $r22.<init>(r0);

        androidx.core.view.ViewCompat.setOnApplyWindowInsetsListener(r6, $r22);

        goto label15;

     label14:
        $z0 = r6 instanceof androidx.appcompat.widget.FitWindowsViewGroup;

        if $z0 == 0 goto label15;

        r13 = (androidx.appcompat.widget.FitWindowsViewGroup) r6;

        $r23 = new androidx.appcompat.app.AppCompatDelegateImpl$4;

        specialinvoke $r23.<init>(r0);

        interfaceinvoke r13.setOnFitSystemWindowsListener($r23);

     label15:
        r11 = r0.mDecorContentParent;

        if r11 != null goto label16;

        i0 = androidx.appcompat.R$id.title;

        $r7 = virtualinvoke r6.findViewById(i0);

        r14 = (android.widget.TextView) $r7;

        r0.mTitleView = r14;

     label16:
        androidx.appcompat.widget.ViewUtils.makeOptionalFitsSystemWindows(r6);

        i0 = androidx.appcompat.R$id.action_bar_activity_content;

        $r7 = virtualinvoke r6.findViewById(i0);

        r15 = (androidx.appcompat.widget.ContentFrameLayout) $r7;

        r4 = r0.mWindow;

        $r7 = virtualinvoke r4.findViewById(16908290);

        r16 = (android.view.ViewGroup) $r7;

        if r16 == null goto label19;

     label17:
        i0 = virtualinvoke r16.getChildCount();

        if i0 <= 0 goto label18;

        $r7 = virtualinvoke r16.getChildAt(0);

        virtualinvoke r16.removeViewAt(0);

        virtualinvoke r15.addView($r7);

        goto label17;

     label18:
        i0 = -1;

        virtualinvoke r16.setId(i0);

        virtualinvoke r15.setId(16908290);

        $z0 = r16 instanceof android.widget.FrameLayout;

        if $z0 == 0 goto label19;

        $r17 = (android.widget.FrameLayout) r16;

        virtualinvoke $r17.setForeground(null);

     label19:
        r4 = r0.mWindow;

        virtualinvoke r4.setContentView(r6);

        $r24 = new androidx.appcompat.app.AppCompatDelegateImpl$5;

        specialinvoke $r24.<init>(r0);

        virtualinvoke r15.setAttachListener($r24);

        return r6;

     label20:
        $r26 = new java.lang.IllegalArgumentException;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<init>();

        r18 = virtualinvoke $r25.append("AppCompat does not support the current theme features: { windowActionBar: ");

        $z0 = r0.mHasActionBar;

        r18 = virtualinvoke r18.append($z0);

        r18 = virtualinvoke r18.append(", windowActionBarOverlay: ");

        $z0 = r0.mOverlayActionBar;

        r18 = virtualinvoke r18.append($z0);

        r18 = virtualinvoke r18.append(", android:windowIsFloating: ");

        $z0 = r0.mIsFloating;

        r18 = virtualinvoke r18.append($z0);

        r18 = virtualinvoke r18.append(", windowActionModeOverlay: ");

        $z0 = r0.mOverlayActionMode;

        r18 = virtualinvoke r18.append($z0);

        r18 = virtualinvoke r18.append(", windowNoTitle: ");

        $z0 = r0.mWindowNoTitle;

        r18 = virtualinvoke r18.append($z0);

        r18 = virtualinvoke r18.append(" }");

        $r19 = virtualinvoke r18.toString();

        specialinvoke $r26.<init>($r19);

        throw $r26;

     label21:
        virtualinvoke $r3.recycle();

        $r27 = new java.lang.IllegalStateException;

        specialinvoke $r27.<init>("You need to use a Theme.AppCompat theme (or descendant) with this activity.");

        goto label22;

     label22:
        throw $r27;
    }

    private void ensureSubDecor()
    {
        java.lang.CharSequence $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r6;
        androidx.appcompat.view.menu.MenuBuilder $r7;
        android.view.ViewGroup $r1;
        androidx.appcompat.widget.DecorContentParent r3;
        androidx.appcompat.app.ActionBar $r4;
        android.widget.TextView r5;
        boolean z0;

        r0 := @this;

        z0 = r0.mSubDecorInstalled;

        if z0 != 0 goto label5;

        $r1 = specialinvoke r0.createSubDecor();

        r0.mSubDecor = $r1;

        $r2 = virtualinvoke r0.getTitle();

        z0 = android.text.TextUtils.isEmpty($r2);

        if z0 != 0 goto label3;

        r3 = r0.mDecorContentParent;

        if r3 == null goto label1;

        interfaceinvoke r3.setWindowTitle($r2);

        goto label3;

     label1:
        $r4 = virtualinvoke r0.peekSupportActionBar();

        if $r4 == null goto label2;

        $r4 = virtualinvoke r0.peekSupportActionBar();

        virtualinvoke $r4.setWindowTitle($r2);

        goto label3;

     label2:
        r5 = r0.mTitleView;

        if r5 == null goto label3;

        virtualinvoke r5.setText($r2);

     label3:
        specialinvoke r0.applyFixedSizeWindow();

        $r1 = r0.mSubDecor;

        virtualinvoke r0.onSubDecorInstalled($r1);

        r0.mSubDecorInstalled = 1;

        $r6 = virtualinvoke r0.getPanelState(0, 0);

        z0 = r0.mIsDestroyed;

        if z0 != 0 goto label5;

        if $r6 == null goto label4;

        $r7 = $r6.menu;

        if $r7 != null goto label5;

     label4:
        specialinvoke r0.invalidatePanelMenu(108);

     label5:
        return;
    }

    private void ensureWindow()
    {
        java.lang.IllegalStateException $r4;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.Object $r2;
        android.view.Window $r1;
        android.app.Activity $r3;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mWindow;

        if $r1 != null goto label1;

        $r2 = r0.mHost;

        $z0 = $r2 instanceof android.app.Activity;

        if $z0 == 0 goto label1;

        $r3 = (android.app.Activity) $r2;

        $r1 = virtualinvoke $r3.getWindow();

        specialinvoke r0.attachToWindow($r1);

     label1:
        $r1 = r0.mWindow;

        if $r1 == null goto label2;

        return;

     label2:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<init>("We have not been given a Window");

        throw $r4;
    }

    private static android.content.res.Configuration generateConfigDelta(android.content.res.Configuration, android.content.res.Configuration)
    {
        byte $b1;
        java.util.Locale $r3, $r4;
        android.content.res.Configuration $r0, $r1, r2;
        int $i0, $i2;
        float $f0, $f1;
        boolean $z0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        r2 = new android.content.res.Configuration;

        specialinvoke r2.<init>();

        r2.fontScale = 0.0F;

        if $r1 == null goto label23;

        $i0 = virtualinvoke $r0.diff($r1);

        if $i0 != 0 goto label01;

        return r2;

     label01:
        $f0 = $r0.fontScale;

        $f1 = $r1.fontScale;

        $b1 = $f0 cmpl $f1;

        if $b1 == 0 goto label02;

        $f0 = $r1.fontScale;

        r2.fontScale = $f0;

     label02:
        $i0 = $r0.mcc;

        $i2 = $r1.mcc;

        if $i0 == $i2 goto label03;

        $i0 = $r1.mcc;

        r2.mcc = $i0;

     label03:
        $i0 = $r0.mnc;

        $i2 = $r1.mnc;

        if $i0 == $i2 goto label04;

        $i0 = $r1.mnc;

        r2.mnc = $i0;

     label04:
        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 24 goto label05;

        androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi24.generateConfigDelta_locale($r0, $r1, r2);

        goto label06;

     label05:
        $r3 = $r0.locale;

        $r4 = $r1.locale;

        $z0 = androidx.core.util.ObjectsCompat.equals($r3, $r4);

        if $z0 != 0 goto label06;

        $r3 = $r1.locale;

        r2.locale = $r3;

     label06:
        $i0 = $r0.touchscreen;

        $i2 = $r1.touchscreen;

        if $i0 == $i2 goto label07;

        $i0 = $r1.touchscreen;

        r2.touchscreen = $i0;

     label07:
        $i0 = $r0.keyboard;

        $i2 = $r1.keyboard;

        if $i0 == $i2 goto label08;

        $i0 = $r1.keyboard;

        r2.keyboard = $i0;

     label08:
        $i0 = $r0.keyboardHidden;

        $i2 = $r1.keyboardHidden;

        if $i0 == $i2 goto label09;

        $i0 = $r1.keyboardHidden;

        r2.keyboardHidden = $i0;

     label09:
        $i0 = $r0.navigation;

        $i2 = $r1.navigation;

        if $i0 == $i2 goto label10;

        $i0 = $r1.navigation;

        r2.navigation = $i0;

     label10:
        $i0 = $r0.navigationHidden;

        $i2 = $r1.navigationHidden;

        if $i0 == $i2 goto label11;

        $i0 = $r1.navigationHidden;

        r2.navigationHidden = $i0;

     label11:
        $i0 = $r0.orientation;

        $i2 = $r1.orientation;

        if $i0 == $i2 goto label12;

        $i0 = $r1.orientation;

        r2.orientation = $i0;

     label12:
        $i0 = $r0.screenLayout;

        $i0 = $i0 & 15;

        $i2 = $r1.screenLayout;

        $i2 = $i2 & 15;

        if $i0 == $i2 goto label13;

        $i0 = r2.screenLayout;

        $i2 = $r1.screenLayout;

        $i2 = $i2 & 15;

        $i0 = $i0 | $i2;

        r2.screenLayout = $i0;

     label13:
        $i0 = $r0.screenLayout;

        $i0 = $i0 & 192;

        $i2 = $r1.screenLayout;

        $i2 = $i2 & 192;

        if $i0 == $i2 goto label14;

        $i0 = r2.screenLayout;

        $i2 = $r1.screenLayout;

        $i2 = $i2 & 192;

        $i0 = $i0 | $i2;

        r2.screenLayout = $i0;

     label14:
        $i0 = $r0.screenLayout;

        $i0 = $i0 & 48;

        $i2 = $r1.screenLayout;

        $i2 = $i2 & 48;

        if $i0 == $i2 goto label15;

        $i0 = r2.screenLayout;

        $i2 = $r1.screenLayout;

        $i2 = $i2 & 48;

        $i0 = $i0 | $i2;

        r2.screenLayout = $i0;

     label15:
        $i0 = $r0.screenLayout;

        $i0 = $i0 & 768;

        $i2 = $r1.screenLayout;

        $i2 = $i2 & 768;

        if $i0 == $i2 goto label16;

        $i0 = r2.screenLayout;

        $i2 = $r1.screenLayout;

        $i2 = $i2 & 768;

        $i0 = $i0 | $i2;

        r2.screenLayout = $i0;

     label16:
        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 26 goto label17;

        androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi26.generateConfigDelta_colorMode($r0, $r1, r2);

     label17:
        $i0 = $r0.uiMode;

        $i0 = $i0 & 15;

        $i2 = $r1.uiMode;

        $i2 = $i2 & 15;

        if $i0 == $i2 goto label18;

        $i0 = r2.uiMode;

        $i2 = $r1.uiMode;

        $i2 = $i2 & 15;

        $i0 = $i0 | $i2;

        r2.uiMode = $i0;

     label18:
        $i0 = $r0.uiMode;

        $i0 = $i0 & 48;

        $i2 = $r1.uiMode;

        $i2 = $i2 & 48;

        if $i0 == $i2 goto label19;

        $i0 = r2.uiMode;

        $i2 = $r1.uiMode;

        $i2 = $i2 & 48;

        $i0 = $i0 | $i2;

        r2.uiMode = $i0;

     label19:
        $i0 = $r0.screenWidthDp;

        $i2 = $r1.screenWidthDp;

        if $i0 == $i2 goto label20;

        $i0 = $r1.screenWidthDp;

        r2.screenWidthDp = $i0;

     label20:
        $i0 = $r0.screenHeightDp;

        $i2 = $r1.screenHeightDp;

        if $i0 == $i2 goto label21;

        $i0 = $r1.screenHeightDp;

        r2.screenHeightDp = $i0;

     label21:
        $i0 = $r0.smallestScreenWidthDp;

        $i2 = $r1.smallestScreenWidthDp;

        if $i0 == $i2 goto label22;

        $i0 = $r1.smallestScreenWidthDp;

        r2.smallestScreenWidthDp = $i0;

     label22:
        androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi17.generateConfigDelta_densityDpi($r0, $r1, r2);

     label23:
        return r2;
    }

    private androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)
    {
        android.content.Context $r1;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mAutoBatteryNightModeManager;

        if $r2 != null goto label1;

        $r3 = new androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager;

        specialinvoke $r3.<init>(r0, $r1);

        r0.mAutoBatteryNightModeManager = $r3;

     label1:
        $r2 = r0.mAutoBatteryNightModeManager;

        return $r2;
    }

    private androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)
    {
        android.content.Context $r1;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.TwilightManager $r2;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager $r4;

        r0 := @this;

        $r1 := @parameter0;

        $r3 = r0.mAutoTimeNightModeManager;

        if $r3 != null goto label1;

        $r4 = new androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager;

        $r2 = androidx.appcompat.app.TwilightManager.getInstance($r1);

        specialinvoke $r4.<init>(r0, $r2);

        r0.mAutoTimeNightModeManager = $r4;

     label1:
        $r3 = r0.mAutoTimeNightModeManager;

        return $r3;
    }

    private void initWindowDecorActionBar()
    {
        androidx.appcompat.app.ActionBar $r1;
        androidx.appcompat.app.WindowDecorActionBar $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.Object $r2;
        android.app.Dialog $r5;
        android.app.Activity $r4;
        boolean $z0;

        r0 := @this;

        specialinvoke r0.ensureSubDecor();

        $z0 = r0.mHasActionBar;

        if $z0 == 0 goto label4;

        $r1 = r0.mActionBar;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = r0.mHost;

        $z0 = $r2 instanceof android.app.Activity;

        if $z0 == 0 goto label2;

        $r3 = new androidx.appcompat.app.WindowDecorActionBar;

        $r2 = r0.mHost;

        $r4 = (android.app.Activity) $r2;

        $z0 = r0.mOverlayActionBar;

        specialinvoke $r3.<init>($r4, $z0);

        r0.mActionBar = $r3;

        goto label3;

     label2:
        $z0 = $r2 instanceof android.app.Dialog;

        if $z0 == 0 goto label3;

        $r3 = new androidx.appcompat.app.WindowDecorActionBar;

        $r2 = r0.mHost;

        $r5 = (android.app.Dialog) $r2;

        specialinvoke $r3.<init>($r5);

        r0.mActionBar = $r3;

     label3:
        $r1 = r0.mActionBar;

        if $r1 == null goto label4;

        $z0 = r0.mEnableDefaultActionBarUp;

        virtualinvoke $r1.setDefaultDisplayHomeAsUpEnabled($z0);

     label4:
        return;
    }

    private boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1;
        androidx.appcompat.view.menu.MenuBuilder r4;
        android.view.View r3;
        androidx.appcompat.view.menu.MenuView $r2;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback r5;

        r0 := @this;

        $r1 := @parameter0;

        r3 = $r1.createdPanelView;

        if r3 == null goto label1;

        r3 = $r1.createdPanelView;

        $r1.shownPanelView = r3;

        return 1;

     label1:
        r4 = $r1.menu;

        if r4 != null goto label2;

        return 0;

     label2:
        r5 = r0.mPanelMenuPresenterCallback;

        if r5 != null goto label3;

        r5 = new androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback;

        specialinvoke r5.<init>(r0);

        r0.mPanelMenuPresenterCallback = r5;

     label3:
        r5 = r0.mPanelMenuPresenterCallback;

        $r2 = virtualinvoke $r1.getListMenuView(r5);

        r3 = (android.view.View) $r2;

        $r1.shownPanelView = r3;

        r3 = $r1.shownPanelView;

        if r3 == null goto label4;

        return 1;

     label4:
        return 0;
    }

    private boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    {
        android.content.Context $r2;
        androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke r0.getActionBarThemedContext();

        virtualinvoke $r1.setStyle($r2);

        $r3 = new androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView;

        $r2 = $r1.listPresenterContext;

        specialinvoke $r3.<init>(r0, $r2);

        $r1.decorView = $r3;

        $r1.gravity = 81;

        return 1;
    }

    private boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
    {
        android.content.Context r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1;
        androidx.appcompat.view.menu.MenuBuilder r10;
        androidx.appcompat.widget.DecorContentParent r3;
        androidx.appcompat.view.ContextThemeWrapper $r9;
        android.util.TypedValue r4;
        int i0;
        android.content.res.Resources$Theme $r5, r6, $r8;
        android.content.res.Resources $r7;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mContext;

        i0 = $r1.featureId;

        if i0 == 0 goto label1;

        i0 = $r1.featureId;

        if i0 != 108 goto label6;

     label1:
        r3 = r0.mDecorContentParent;

        if r3 == null goto label6;

        r4 = new android.util.TypedValue;

        specialinvoke r4.<init>();

        $r5 = virtualinvoke r2.getTheme();

        i0 = androidx.appcompat.R$attr.actionBarTheme;

        virtualinvoke $r5.resolveAttribute(i0, r4, 1);

        r6 = null;

        i0 = r4.resourceId;

        if i0 == 0 goto label2;

        $r7 = virtualinvoke r2.getResources();

        $r8 = virtualinvoke $r7.newTheme();

        r6 = $r8;

        virtualinvoke $r8.setTo($r5);

        i0 = r4.resourceId;

        virtualinvoke $r8.applyStyle(i0, 1);

        i0 = androidx.appcompat.R$attr.actionBarWidgetTheme;

        virtualinvoke $r8.resolveAttribute(i0, r4, 1);

        goto label3;

     label2:
        i0 = androidx.appcompat.R$attr.actionBarWidgetTheme;

        virtualinvoke $r5.resolveAttribute(i0, r4, 1);

     label3:
        i0 = r4.resourceId;

        if i0 == 0 goto label5;

        if r6 != null goto label4;

        $r7 = virtualinvoke r2.getResources();

        $r8 = virtualinvoke $r7.newTheme();

        r6 = $r8;

        virtualinvoke $r8.setTo($r5);

     label4:
        i0 = r4.resourceId;

        virtualinvoke r6.applyStyle(i0, 1);

     label5:
        if r6 == null goto label6;

        $r9 = new androidx.appcompat.view.ContextThemeWrapper;

        specialinvoke $r9.<init>(r2, 0);

        r2 = $r9;

        $r5 = virtualinvoke $r9.getTheme();

        virtualinvoke $r5.setTo(r6);

     label6:
        r10 = new androidx.appcompat.view.menu.MenuBuilder;

        specialinvoke r10.<init>(r2);

        virtualinvoke r10.setCallback(r0);

        virtualinvoke $r1.setMenu(r10);

        return 1;
    }

    private void invalidatePanelMenu(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0, $i1;
        android.view.View $r1;
        android.view.Window $r2;
        java.lang.Runnable $r3;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 = r0.mInvalidatePanelMenuFeatures;

        $i0 = 1 << $i0;

        $i0 = $i1 | $i0;

        r0.mInvalidatePanelMenuFeatures = $i0;

        $z0 = r0.mInvalidatePanelMenuPosted;

        if $z0 != 0 goto label1;

        $r2 = r0.mWindow;

        $r1 = virtualinvoke $r2.getDecorView();

        $r3 = r0.mInvalidatePanelMenuRunnable;

        androidx.core.view.ViewCompat.postOnAnimation($r1, $r3);

        r0.mInvalidatePanelMenuPosted = 1;

     label1:
        return;
    }

    private boolean isActivityManifestHandlingUiMode()
    {
        android.content.Context r2;
        android.content.pm.PackageManager $r3;
        android.content.ComponentName r4;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.pm.PackageManager$NameNotFoundException r7;
        int i0, i1;
        android.content.pm.ActivityInfo $r6;
        java.lang.Object r1;
        java.lang.Class $r5;
        boolean z0;

        r0 := @this;

        z0 = r0.mActivityHandlesUiModeChecked;

        if z0 != 0 goto label9;

        r1 = r0.mHost;

        z0 = r1 instanceof android.app.Activity;

        if z0 == 0 goto label9;

        r2 = r0.mContext;

        $r3 = virtualinvoke r2.getPackageManager();

        if $r3 != null goto label1;

        return 0;

     label1:
        i0 = 0;

        i1 = android.os.Build$VERSION.SDK_INT;

        if i1 < 29 goto label2;

        i0 = 269221888;

        goto label3;

     label2:
        i1 = android.os.Build$VERSION.SDK_INT;

        if i1 < 24 goto label3;

        i0 = 786432;

     label3:
        r4 = new android.content.ComponentName;

        r2 = r0.mContext;

        r1 = r0.mHost;

     label4:
        $r5 = virtualinvoke r1.getClass();

        specialinvoke r4.<init>(r2, $r5);

        $r6 = virtualinvoke $r3.getActivityInfo(r4, i0);

     label5:
        if $r6 == null goto label6;

        i0 = $r6.configChanges;

        i0 = i0 & 512;

        if i0 == 0 goto label6;

        z0 = 1;

        goto label7;

     label6:
        z0 = 0;

     label7:
        r0.mActivityHandlesUiMode = z0;

        goto label9;

     label8:
        r7 := @caughtexception;

        android.util.Log.d("AppCompatDelegate", "Exception while getting ActivityInfo", r7);

        r0.mActivityHandlesUiMode = 0;

     label9:
        r0.mActivityHandlesUiModeChecked = 1;

        z0 = r0.mActivityHandlesUiMode;

        return z0;

        catch android.content.pm.PackageManager$NameNotFoundException from label4 to label5 with label8;
    }

    private boolean onKeyDownPanel(int, android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $i1 = virtualinvoke $r1.getRepeatCount();

        if $i1 != 0 goto label1;

        $r2 = virtualinvoke r0.getPanelState($i0, 1);

        $z0 = $r2.isOpen;

        if $z0 != 0 goto label1;

        $z0 = specialinvoke r0.preparePanel($r2, $r1);

        return $z0;

     label1:
        return 0;
    }

    private boolean onKeyUpPanel(int, android.view.KeyEvent)
    {
        android.content.Context $r5;
        android.view.KeyEvent $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r3;
        androidx.appcompat.widget.DecorContentParent $r4;
        androidx.appcompat.view.ActionMode r2;
        android.media.AudioManager r8;
        android.view.ViewConfiguration $r6;
        int $i0;
        java.lang.Object $r7;
        boolean z0, $z1, $z2;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        r2 = r0.mActionMode;

        if r2 == null goto label1;

        return 0;

     label1:
        z0 = 0;

        $r3 = virtualinvoke r0.getPanelState($i0, 1);

        if $i0 != 0 goto label3;

        $r4 = r0.mDecorContentParent;

        if $r4 == null goto label3;

        $z1 = interfaceinvoke $r4.canShowOverflowMenu();

        if $z1 == 0 goto label3;

        $r5 = r0.mContext;

        $r6 = android.view.ViewConfiguration.get($r5);

        $z1 = virtualinvoke $r6.hasPermanentMenuKey();

        if $z1 != 0 goto label3;

        $r4 = r0.mDecorContentParent;

        $z1 = interfaceinvoke $r4.isOverflowMenuShowing();

        if $z1 != 0 goto label2;

        $z1 = r0.mIsDestroyed;

        if $z1 != 0 goto label7;

        $z1 = specialinvoke r0.preparePanel($r3, $r1);

        if $z1 == 0 goto label7;

        $r4 = r0.mDecorContentParent;

        z0 = interfaceinvoke $r4.showOverflowMenu();

        goto label7;

     label2:
        $r4 = r0.mDecorContentParent;

        z0 = interfaceinvoke $r4.hideOverflowMenu();

        goto label7;

     label3:
        $z1 = $r3.isOpen;

        if $z1 != 0 goto label6;

        $z1 = $r3.isHandled;

        if $z1 == 0 goto label4;

        goto label6;

     label4:
        $z1 = $r3.isPrepared;

        if $z1 == 0 goto label7;

        $z1 = 1;

        $z2 = $r3.refreshMenuContent;

        if $z2 == 0 goto label5;

        $r3.isPrepared = 0;

        $z1 = specialinvoke r0.preparePanel($r3, $r1);

     label5:
        if $z1 == 0 goto label7;

        specialinvoke r0.openPanel($r3, $r1);

        z0 = 1;

        goto label7;

     label6:
        z0 = $r3.isOpen;

        virtualinvoke r0.closePanel($r3, 1);

     label7:
        if z0 == 0 goto label9;

        $r5 = r0.mContext;

        $r5 = virtualinvoke $r5.getApplicationContext();

        $r7 = virtualinvoke $r5.getSystemService("audio");

        r8 = (android.media.AudioManager) $r7;

        if r8 == null goto label8;

        virtualinvoke r8.playSoundEffect(0);

        return z0;

     label8:
        android.util.Log.w("AppCompatDelegate", "Couldn\'t get audio manager");

     label9:
        return z0;
    }

    private void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, android.view.KeyEvent)
    {
        android.content.Context r3;
        android.view.ViewParent $r14;
        android.view.KeyEvent $r2;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1;
        android.view.WindowManager r9;
        byte b2;
        int $i0, $i1, $i3;
        android.view.View r11;
        android.view.WindowManager$LayoutParams r15, $r16;
        boolean z0;
        android.view.ViewGroup$LayoutParams $r12, r13;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.menu.MenuBuilder r7;
        android.view.ViewGroup r10;
        android.view.Window$Callback $r6;
        android.content.res.Configuration $r5;
        java.lang.Object $r8;
        android.content.res.Resources $r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        z0 = $r1.isOpen;

        if z0 != 0 goto label18;

        z0 = r0.mIsDestroyed;

        if z0 == 0 goto label01;

        return;

     label01:
        $i0 = $r1.featureId;

        if $i0 != 0 goto label04;

        r3 = r0.mContext;

        $r4 = virtualinvoke r3.getResources();

        $r5 = virtualinvoke $r4.getConfiguration();

        $i0 = $r5.screenLayout;

        $i0 = $i0 & 15;

        if $i0 != 4 goto label02;

        z0 = 1;

        goto label03;

     label02:
        z0 = 0;

     label03:
        if z0 == 0 goto label04;

        return;

     label04:
        $r6 = virtualinvoke r0.getWindowCallback();

        if $r6 == null goto label05;

        $i0 = $r1.featureId;

        r7 = $r1.menu;

        z0 = interfaceinvoke $r6.onMenuOpened($i0, r7);

        if z0 != 0 goto label05;

        virtualinvoke r0.closePanel($r1, 1);

        return;

     label05:
        r3 = r0.mContext;

        $r8 = virtualinvoke r3.getSystemService("window");

        r9 = (android.view.WindowManager) $r8;

        if r9 != null goto label06;

        return;

     label06:
        z0 = specialinvoke r0.preparePanel($r1, $r2);

        if z0 != 0 goto label07;

        return;

     label07:
        b2 = -2;

        r10 = $r1.decorView;

        if r10 == null goto label10;

        z0 = $r1.refreshDecorView;

        if z0 == 0 goto label08;

        goto label10;

     label08:
        r11 = $r1.createdPanelView;

        if r11 == null goto label09;

        r11 = $r1.createdPanelView;

        $r12 = virtualinvoke r11.getLayoutParams();

        if $r12 == null goto label16;

        $i0 = $r12.width;

        if $i0 != -1 goto label16;

        b2 = -1;

        goto label16;

     label09:
        goto label16;

     label10:
        r10 = $r1.decorView;

        if r10 != null goto label11;

        z0 = specialinvoke r0.initializePanelDecor($r1);

        if z0 == 0 goto label18;

        r10 = $r1.decorView;

        if r10 != null goto label12;

        return;

     label11:
        z0 = $r1.refreshDecorView;

        if z0 == 0 goto label12;

        r10 = $r1.decorView;

        $i0 = virtualinvoke r10.getChildCount();

        if $i0 <= 0 goto label12;

        r10 = $r1.decorView;

        virtualinvoke r10.removeAllViews();

     label12:
        z0 = specialinvoke r0.initializePanelContent($r1);

        if z0 == 0 goto label17;

        z0 = virtualinvoke $r1.hasPanelItems();

        if z0 != 0 goto label13;

        goto label17;

     label13:
        r11 = $r1.shownPanelView;

        $r12 = virtualinvoke r11.getLayoutParams();

        r13 = $r12;

        if $r12 != null goto label14;

        r13 = new android.view.ViewGroup$LayoutParams;

        specialinvoke r13.<init>(-2, -2);

     label14:
        $i0 = $r1.background;

        r10 = $r1.decorView;

        virtualinvoke r10.setBackgroundResource($i0);

        r11 = $r1.shownPanelView;

        $r14 = virtualinvoke r11.getParent();

        z0 = $r14 instanceof android.view.ViewGroup;

        if z0 == 0 goto label15;

        r10 = (android.view.ViewGroup) $r14;

        r11 = $r1.shownPanelView;

        virtualinvoke r10.removeView(r11);

     label15:
        r10 = $r1.decorView;

        r11 = $r1.shownPanelView;

        virtualinvoke r10.addView(r11, r13);

        r11 = $r1.shownPanelView;

        z0 = virtualinvoke r11.hasFocus();

        if z0 != 0 goto label09;

        r11 = $r1.shownPanelView;

        virtualinvoke r11.requestFocus();

        goto label09;

     label16:
        $r1.isHandled = 0;

        $r16 = new android.view.WindowManager$LayoutParams;

        r15 = $r16;

        $i0 = $r1.x;

        $i1 = $r1.y;

        $i3 = (int) b2;

        specialinvoke $r16.<init>($i3, -2, $i0, $i1, 1002, 8519680, -3);

        $i0 = $r1.gravity;

        r15.gravity = $i0;

        $i0 = $r1.windowAnimations;

        r15.windowAnimations = $i0;

        r10 = $r1.decorView;

        interfaceinvoke r9.addView(r10, r15);

        $r1.isOpen = 1;

        return;

     label17:
        $r1.refreshDecorView = 1;

     label18:
        return;
    }

    private boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, int, android.view.KeyEvent, int)
    {
        android.view.KeyEvent $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1;
        androidx.appcompat.view.menu.MenuBuilder $r3;
        androidx.appcompat.widget.DecorContentParent $r4;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 := @parameter2;

        $i1 := @parameter3;

        $z0 = virtualinvoke $r2.isSystem();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z0 = 0;

        $z1 = $r1.isPrepared;

        if $z1 != 0 goto label2;

        $z1 = specialinvoke r0.preparePanel($r1, $r2);

        if $z1 == 0 goto label3;

     label2:
        $r3 = $r1.menu;

        if $r3 == null goto label3;

        $r3 = $r1.menu;

        $z0 = virtualinvoke $r3.performShortcut($i0, $r2, $i1);

     label3:
        if $z0 == 0 goto label4;

        $i0 = $i1 & 1;

        if $i0 != 0 goto label4;

        $r4 = r0.mDecorContentParent;

        if $r4 != null goto label4;

        virtualinvoke r0.closePanel($r1, 1);

     label4:
        return $z0;
    }

    private boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, android.view.KeyEvent)
    {
        android.view.KeyEvent $r2;
        android.os.Bundle r10;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1, r4;
        androidx.appcompat.widget.DecorContentParent r7;
        androidx.appcompat.app.ActionBar $r8;
        int i0;
        android.view.View $r6;
        boolean z0, z1;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback $r3, $r12;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.menu.MenuBuilder r9;
        android.view.Window$Callback $r5;
        android.view.KeyCharacterMap $r11;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        z0 = r0.mIsDestroyed;

        if z0 == 0 goto label01;

        return 0;

     label01:
        z0 = $r1.isPrepared;

        if z0 == 0 goto label02;

        return 1;

     label02:
        r4 = r0.mPreparedPanel;

        if r4 == null goto label03;

        if r4 == $r1 goto label03;

        virtualinvoke r0.closePanel(r4, 0);

     label03:
        $r5 = virtualinvoke r0.getWindowCallback();

        if $r5 == null goto label04;

        i0 = $r1.featureId;

        $r6 = interfaceinvoke $r5.onCreatePanelView(i0);

        $r1.createdPanelView = $r6;

     label04:
        i0 = $r1.featureId;

        if i0 == 0 goto label06;

        i0 = $r1.featureId;

        if i0 != 108 goto label05;

        goto label06;

     label05:
        z0 = 0;

        goto label07;

     label06:
        z0 = 1;

     label07:
        if z0 == 0 goto label08;

        r7 = r0.mDecorContentParent;

        if r7 == null goto label08;

        interfaceinvoke r7.setMenuPrepared();

     label08:
        $r6 = $r1.createdPanelView;

        if $r6 != null goto label23;

        if z0 == 0 goto label09;

        $r8 = virtualinvoke r0.peekSupportActionBar();

        z1 = $r8 instanceof androidx.appcompat.app.ToolbarActionBar;

        if z1 != 0 goto label23;

     label09:
        r9 = $r1.menu;

        if r9 == null goto label10;

        z1 = $r1.refreshMenuContent;

        if z1 == 0 goto label15;

     label10:
        r9 = $r1.menu;

        if r9 != null goto label11;

        z1 = specialinvoke r0.initializePanelMenu($r1);

        if z1 == 0 goto label24;

        r9 = $r1.menu;

        if r9 != null goto label11;

        return 0;

     label11:
        if z0 == 0 goto label13;

        r7 = r0.mDecorContentParent;

        if r7 == null goto label13;

        $r3 = r0.mActionMenuPresenterCallback;

        if $r3 != null goto label12;

        $r12 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback;

        specialinvoke $r12.<init>(r0);

        r0.mActionMenuPresenterCallback = $r12;

     label12:
        r7 = r0.mDecorContentParent;

        r9 = $r1.menu;

        $r3 = r0.mActionMenuPresenterCallback;

        interfaceinvoke r7.setMenu(r9, $r3);

     label13:
        r9 = $r1.menu;

        virtualinvoke r9.stopDispatchingItemsChanged();

        i0 = $r1.featureId;

        r9 = $r1.menu;

        z1 = interfaceinvoke $r5.onCreatePanelMenu(i0, r9);

        if z1 != 0 goto label14;

        virtualinvoke $r1.setMenu(null);

        if z0 == 0 goto label24;

        r7 = r0.mDecorContentParent;

        if r7 == null goto label24;

        $r3 = r0.mActionMenuPresenterCallback;

        interfaceinvoke r7.setMenu(null, $r3);

        return 0;

     label14:
        $r1.refreshMenuContent = 0;

     label15:
        r9 = $r1.menu;

        virtualinvoke r9.stopDispatchingItemsChanged();

        r10 = $r1.frozenActionViewState;

        if r10 == null goto label16;

        r9 = $r1.menu;

        r10 = $r1.frozenActionViewState;

        virtualinvoke r9.restoreActionViewStates(r10);

        $r1.frozenActionViewState = null;

     label16:
        $r6 = $r1.createdPanelView;

        r9 = $r1.menu;

        z1 = interfaceinvoke $r5.onPreparePanel(0, $r6, r9);

        if z1 != 0 goto label18;

        if z0 == 0 goto label17;

        r7 = r0.mDecorContentParent;

        if r7 == null goto label17;

        $r3 = r0.mActionMenuPresenterCallback;

        interfaceinvoke r7.setMenu(null, $r3);

     label17:
        r9 = $r1.menu;

        virtualinvoke r9.startDispatchingItemsChanged();

        return 0;

     label18:
        if $r2 == null goto label19;

        i0 = virtualinvoke $r2.getDeviceId();

        goto label20;

     label19:
        i0 = -1;

     label20:
        $r11 = android.view.KeyCharacterMap.load(i0);

        i0 = virtualinvoke $r11.getKeyboardType();

        if i0 == 1 goto label21;

        z0 = 1;

        goto label22;

     label21:
        z0 = 0;

     label22:
        $r1.qwertyMode = z0;

        r9 = $r1.menu;

        z0 = $r1.qwertyMode;

        virtualinvoke r9.setQwertyMode(z0);

        r9 = $r1.menu;

        virtualinvoke r9.startDispatchingItemsChanged();

     label23:
        $r1.isPrepared = 1;

        $r1.isHandled = 0;

        r0.mPreparedPanel = $r1;

        return 1;

     label24:
        return 0;
    }

    private void reopenMenu(boolean)
    {
        android.content.Context r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r5;
        androidx.appcompat.view.menu.MenuBuilder $r6;
        java.lang.Runnable $r9;
        androidx.appcompat.widget.DecorContentParent r1;
        android.view.Window$Callback $r4;
        android.view.ViewConfiguration $r3;
        int $i0;
        android.view.View $r8;
        android.view.Window $r7;
        boolean $z0, $z1;

        r0 := @this;

        $z0 := @parameter0;

        r1 = r0.mDecorContentParent;

        if r1 == null goto label6;

        $z1 = interfaceinvoke r1.canShowOverflowMenu();

        if $z1 == 0 goto label6;

        r2 = r0.mContext;

        $r3 = android.view.ViewConfiguration.get(r2);

        $z1 = virtualinvoke $r3.hasPermanentMenuKey();

        if $z1 == 0 goto label1;

        r1 = r0.mDecorContentParent;

        $z1 = interfaceinvoke r1.isOverflowMenuShowPending();

        if $z1 == 0 goto label6;

     label1:
        $r4 = virtualinvoke r0.getWindowCallback();

        r1 = r0.mDecorContentParent;

        $z1 = interfaceinvoke r1.isOverflowMenuShowing();

        if $z1 == 0 goto label3;

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        r1 = r0.mDecorContentParent;

        interfaceinvoke r1.hideOverflowMenu();

        $z0 = r0.mIsDestroyed;

        if $z0 != 0 goto label7;

        $r5 = virtualinvoke r0.getPanelState(0, 1);

        $r6 = $r5.menu;

        interfaceinvoke $r4.onPanelClosed(108, $r6);

        return;

     label3:
        if $r4 == null goto label7;

        $z0 = r0.mIsDestroyed;

        if $z0 != 0 goto label7;

        $z0 = r0.mInvalidatePanelMenuPosted;

        if $z0 == 0 goto label4;

        $i0 = r0.mInvalidatePanelMenuFeatures;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label4;

        $r7 = r0.mWindow;

        $r8 = virtualinvoke $r7.getDecorView();

        $r9 = r0.mInvalidatePanelMenuRunnable;

        virtualinvoke $r8.removeCallbacks($r9);

        $r9 = r0.mInvalidatePanelMenuRunnable;

        interfaceinvoke $r9.run();

     label4:
        $r5 = virtualinvoke r0.getPanelState(0, 1);

        $r6 = $r5.menu;

        if $r6 == null goto label5;

        $z0 = $r5.refreshMenuContent;

        if $z0 != 0 goto label5;

        $r8 = $r5.createdPanelView;

        $r6 = $r5.menu;

        $z0 = interfaceinvoke $r4.onPreparePanel(0, $r8, $r6);

        if $z0 == 0 goto label5;

        $r6 = $r5.menu;

        interfaceinvoke $r4.onMenuOpened(108, $r6);

        r1 = r0.mDecorContentParent;

        interfaceinvoke r1.showOverflowMenu();

     label5:
        return;

     label6:
        $r5 = virtualinvoke r0.getPanelState(0, 1);

        $r5.refreshDecorView = 1;

        virtualinvoke r0.closePanel($r5, 0);

        specialinvoke r0.openPanel($r5, null);

     label7:
        return;
    }

    private int sanitizeWindowFeatureId(int)
    {
        int $i0;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        $i0 := @parameter0;

        if $i0 != 8 goto label1;

        android.util.Log.i("AppCompatDelegate", "You should now use the AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR id when requesting this feature.");

        return 108;

     label1:
        if $i0 != 9 goto label2;

        android.util.Log.i("AppCompatDelegate", "You should now use the AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR_OVERLAY id when requesting this feature.");

        return 109;

     label2:
        return $i0;
    }

    private boolean shouldInheritContext(android.view.ViewParent)
    {
        android.view.ViewParent $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View $r3, $r4;
        android.view.Window r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 != null goto label1;

        return 0;

     label1:
        r2 = r0.mWindow;

        $r3 = virtualinvoke r2.getDecorView();

     label2:
        if $r1 != null goto label3;

        return 1;

     label3:
        if $r1 == $r3 goto label5;

        $z0 = $r1 instanceof android.view.View;

        if $z0 == 0 goto label5;

        $r4 = (android.view.View) $r1;

        $z0 = androidx.core.view.ViewCompat.isAttachedToWindow($r4);

        if $z0 == 0 goto label4;

        return 0;

     label4:
        $r1 = interfaceinvoke $r1.getParent();

        goto label2;

     label5:
        return 0;
    }

    private void throwFeatureRequestIfSubDecorInstalled()
    {
        android.util.AndroidRuntimeException $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.mSubDecorInstalled;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new android.util.AndroidRuntimeException;

        specialinvoke $r1.<init>("Window feature must be requested before adding content");

        throw $r1;
    }

    private androidx.appcompat.app.AppCompatActivity tryUnwrapContext()
    {
        android.content.Context $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.ContextWrapper $r3;
        androidx.appcompat.app.AppCompatActivity $r2;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mContext;

     label1:
        if $r1 == null goto label3;

        $z0 = $r1 instanceof androidx.appcompat.app.AppCompatActivity;

        if $z0 == 0 goto label2;

        $r2 = (androidx.appcompat.app.AppCompatActivity) $r1;

        return $r2;

     label2:
        $z0 = $r1 instanceof android.content.ContextWrapper;

        if $z0 == 0 goto label3;

        $r3 = (android.content.ContextWrapper) $r1;

        $r1 = virtualinvoke $r3.getBaseContext();

        goto label1;

     label3:
        return null;
    }

    private boolean updateForNightMode(int, boolean)
    {
        android.content.Context r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatActivity $r7;
        android.content.res.Configuration $r2, $r4;
        int $i0, i1, i2;
        java.lang.Object $r5;
        android.app.Activity $r6;
        boolean $z0, z1, $z2;
        android.content.res.Resources $r3;

        r0 := @this;

        $i0 := @parameter0;

        $z0 := @parameter1;

        z1 = 0;

        r1 = r0.mContext;

        $r2 = specialinvoke r0.createOverrideConfigurationForDayNight(r1, $i0, null);

        $z2 = specialinvoke r0.isActivityManifestHandlingUiMode();

        r1 = r0.mContext;

        $r3 = virtualinvoke r1.getResources();

        $r4 = virtualinvoke $r3.getConfiguration();

        i1 = $r4.uiMode;

        i1 = i1 & 48;

        i2 = $r2.uiMode;

        i2 = i2 & 48;

        if i1 == i2 goto label2;

        if $z0 == 0 goto label2;

        if $z2 != 0 goto label2;

        $z0 = r0.mBaseContextAttached;

        if $z0 == 0 goto label2;

        $z0 = androidx.appcompat.app.AppCompatDelegateImpl.sCanReturnDifferentContext;

        if $z0 != 0 goto label1;

        $z0 = r0.mCreated;

        if $z0 == 0 goto label2;

     label1:
        $r5 = r0.mHost;

        $z0 = $r5 instanceof android.app.Activity;

        if $z0 == 0 goto label2;

        $r6 = (android.app.Activity) $r5;

        $z0 = virtualinvoke $r6.isChild();

        if $z0 != 0 goto label2;

        $r5 = r0.mHost;

        $r6 = (android.app.Activity) $r5;

        androidx.core.app.ActivityCompat.recreate($r6);

        z1 = 1;

     label2:
        if z1 != 0 goto label3;

        if i1 == i2 goto label3;

        specialinvoke r0.updateResourcesConfigurationForNightMode(i2, $z2, null);

        z1 = 1;

     label3:
        if z1 == 0 goto label4;

        $r5 = r0.mHost;

        $z0 = $r5 instanceof androidx.appcompat.app.AppCompatActivity;

        if $z0 == 0 goto label4;

        $r7 = (androidx.appcompat.app.AppCompatActivity) $r5;

        virtualinvoke $r7.onNightModeChanged($i0);

     label4:
        return z1;
    }

    private void updateResourcesConfigurationForNightMode(int, boolean, android.content.res.Configuration)
    {
        android.content.Context r4;
        androidx.lifecycle.Lifecycle $r11;
        androidx.lifecycle.LifecycleOwner r10;
        int $i0, i1;
        android.content.res.Resources$Theme $r7;
        boolean $z0;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.lifecycle.Lifecycle$State $r3, $r12;
        android.content.res.Configuration $r1, r2, $r6, $r13;
        java.lang.Object r8;
        android.app.Activity r9;
        android.content.res.Resources $r5;

        r0 := @this;

        $i0 := @parameter0;

        $z0 := @parameter1;

        $r1 := @parameter2;

        r4 = r0.mContext;

        $r5 = virtualinvoke r4.getResources();

        $r13 = new android.content.res.Configuration;

        r2 = $r13;

        $r6 = virtualinvoke $r5.getConfiguration();

        specialinvoke $r13.<init>($r6);

        if $r1 == null goto label1;

        virtualinvoke r2.updateFrom($r1);

     label1:
        $r1 = virtualinvoke $r5.getConfiguration();

        i1 = $r1.uiMode;

        i1 = i1 & -49;

        $i0 = i1 | $i0;

        r2.uiMode = $i0;

        virtualinvoke $r5.updateConfiguration(r2, null);

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 >= 26 goto label2;

        androidx.appcompat.app.ResourcesFlusher.flush($r5);

     label2:
        $i0 = r0.mThemeResId;

        if $i0 == 0 goto label3;

        r4 = r0.mContext;

        virtualinvoke r4.setTheme($i0);

        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 23 goto label3;

        r4 = r0.mContext;

        $r7 = virtualinvoke r4.getTheme();

        $i0 = r0.mThemeResId;

        virtualinvoke $r7.applyStyle($i0, 1);

     label3:
        if $z0 == 0 goto label6;

        r8 = r0.mHost;

        $z0 = r8 instanceof android.app.Activity;

        if $z0 == 0 goto label6;

        r9 = (android.app.Activity) r8;

        $z0 = r9 instanceof androidx.lifecycle.LifecycleOwner;

        if $z0 == 0 goto label5;

        r10 = (androidx.lifecycle.LifecycleOwner) r9;

        $r11 = interfaceinvoke r10.getLifecycle();

        $r12 = virtualinvoke $r11.getCurrentState();

        $r3 = androidx.lifecycle.Lifecycle$State.STARTED;

        $z0 = virtualinvoke $r12.isAtLeast($r3);

        if $z0 == 0 goto label4;

        virtualinvoke r9.onConfigurationChanged(r2);

     label4:
        return;

     label5:
        $z0 = r0.mStarted;

        if $z0 == 0 goto label6;

        virtualinvoke r9.onConfigurationChanged(r2);

     label6:
        return;
    }

    private void updateStatusGuardColor(android.view.View)
    {
        android.content.Context $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0;
        android.view.View $r1;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 = androidx.core.view.ViewCompat.getWindowSystemUiVisibility($r1);

        $i0 = $i0 & 8192;

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if z0 == 0 goto label3;

        $r2 = r0.mContext;

        $i0 = androidx.appcompat.R$color.abc_decor_view_status_guard_light;

        $i0 = androidx.core.content.ContextCompat.getColor($r2, $i0);

        goto label4;

     label3:
        $r2 = r0.mContext;

        $i0 = androidx.appcompat.R$color.abc_decor_view_status_guard;

        $i0 = androidx.core.content.ContextCompat.getColor($r2, $i0);

     label4:
        virtualinvoke $r1.setBackgroundColor($i0);

        return;
    }

    public void addContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup$LayoutParams $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View $r1, $r4;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r5;
        android.view.ViewGroup r3;
        android.view.Window$Callback $r6;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.ensureSubDecor();

        r3 = r0.mSubDecor;

        $r4 = virtualinvoke r3.findViewById(16908290);

        r3 = (android.view.ViewGroup) $r4;

        virtualinvoke r3.addView($r1, $r2);

        $r5 = r0.mAppCompatWindowCallback;

        $r6 = virtualinvoke $r5.getWrapped();

        interfaceinvoke $r6.onContentChanged();

        return;
    }

    public boolean applyDayNight()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.applyDayNight(1);

        return $z0;
    }

    public android.content.Context attachBaseContext2(android.content.Context)
    {
        android.content.Context $r1;
        java.lang.IllegalStateException r5, r6;
        android.content.pm.PackageManager $r7;
        android.content.pm.PackageManager$NameNotFoundException r13;
        java.lang.NullPointerException r12;
        int $i0;
        android.view.ContextThemeWrapper r4;
        android.content.res.Resources$Theme $r11;
        boolean z0, z1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.RuntimeException r14;
        androidx.appcompat.view.ContextThemeWrapper r2;
        android.content.res.Configuration $r3, $r10;
        android.content.pm.ApplicationInfo $r8;
        android.content.res.Resources $r9;

        r0 := @this;

        $r1 := @parameter0;

        z0 = 1;

        r0.mBaseContextAttached = 1;

        $i0 = specialinvoke r0.calculateNightMode();

        $i0 = virtualinvoke r0.mapNightMode($r1, $i0);

        z1 = androidx.appcompat.app.AppCompatDelegateImpl.sCanApplyOverrideConfiguration;

        if z1 == 0 goto label04;

        z1 = $r1 instanceof android.view.ContextThemeWrapper;

        if z1 == 0 goto label04;

        $r3 = specialinvoke r0.createOverrideConfigurationForDayNight($r1, $i0, null);

        r4 = (android.view.ContextThemeWrapper) $r1;

     label01:
        androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl.applyOverrideConfiguration(r4, $r3);

     label02:
        return $r1;

     label03:
        r5 := @caughtexception;

     label04:
        z1 = $r1 instanceof androidx.appcompat.view.ContextThemeWrapper;

        if z1 == 0 goto label08;

        $r3 = specialinvoke r0.createOverrideConfigurationForDayNight($r1, $i0, null);

        r2 = (androidx.appcompat.view.ContextThemeWrapper) $r1;

     label05:
        virtualinvoke r2.applyOverrideConfiguration($r3);

     label06:
        return $r1;

     label07:
        r6 := @caughtexception;

     label08:
        z1 = androidx.appcompat.app.AppCompatDelegateImpl.sCanReturnDifferentContext;

        if z1 != 0 goto label09;

        $r1 = specialinvoke r0.attachBaseContext2($r1);

        return $r1;

     label09:
        $r7 = virtualinvoke $r1.getPackageManager();

        $r8 = virtualinvoke $r1.getApplicationInfo();

        $r9 = virtualinvoke $r7.getResourcesForApplication($r8);

        $r3 = virtualinvoke $r9.getConfiguration();

     label10:
        $r9 = virtualinvoke $r1.getResources();

        $r10 = virtualinvoke $r9.getConfiguration();

        z1 = virtualinvoke $r3.equals($r10);

        if z1 != 0 goto label11;

        $r3 = androidx.appcompat.app.AppCompatDelegateImpl.generateConfigDelta($r3, $r10);

        goto label12;

     label11:
        $r3 = null;

     label12:
        $r3 = specialinvoke r0.createOverrideConfigurationForDayNight($r1, $i0, $r3);

        r2 = new androidx.appcompat.view.ContextThemeWrapper;

        $i0 = androidx.appcompat.R$style.Theme_AppCompat_Empty;

        specialinvoke r2.<init>($r1, $i0);

        virtualinvoke r2.applyOverrideConfiguration($r3);

     label13:
        $r11 = virtualinvoke $r1.getTheme();

     label14:
        if $r11 == null goto label15;

        goto label16;

     label15:
        z0 = 0;

     label16:
        goto label18;

     label17:
        r12 := @caughtexception;

        z0 = 0;

     label18:
        if z0 == 0 goto label19;

        $r11 = virtualinvoke r2.getTheme();

        androidx.core.content.res.ResourcesCompat$ThemeCompat.rebase($r11);

     label19:
        $r1 = specialinvoke r0.attachBaseContext2(r2);

        return $r1;

     label20:
        r13 := @caughtexception;

        r14 = new java.lang.RuntimeException;

        specialinvoke r14.<init>("Application failed to obtain resources from itself", r13);

        throw r14;

        catch java.lang.IllegalStateException from label01 to label02 with label03;
        catch java.lang.IllegalStateException from label05 to label06 with label07;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label20;
        catch java.lang.NullPointerException from label13 to label14 with label17;
    }

    void callOnPanelClosed(int, androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, android.view.Menu)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r2;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] $r4;
        android.view.Window$Callback $r1;
        int $i0, $i1;
        android.view.Menu $r3;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r5;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        if $r3 != null goto label2;

        if $r2 != null goto label1;

        if $i0 < 0 goto label1;

        $r4 = r0.mPanels;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label1;

        $r2 = $r4[$i0];

     label1:
        if $r2 == null goto label2;

        $r3 = $r2.menu;

     label2:
        if $r2 == null goto label3;

        $z0 = $r2.isOpen;

        if $z0 != 0 goto label3;

        return;

     label3:
        $z0 = r0.mIsDestroyed;

        if $z0 != 0 goto label4;

        $r5 = r0.mAppCompatWindowCallback;

        $r1 = virtualinvoke $r5.getWrapped();

        interfaceinvoke $r1.onPanelClosed($i0, $r3);

     label4:
        return;
    }

    void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.menu.MenuBuilder $r1;
        androidx.appcompat.widget.DecorContentParent r3;
        android.view.Window$Callback $r2;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        z0 = r0.mClosingActionMenu;

        if z0 == 0 goto label1;

        return;

     label1:
        r0.mClosingActionMenu = 1;

        r3 = r0.mDecorContentParent;

        interfaceinvoke r3.dismissPopups();

        $r2 = virtualinvoke r0.getWindowCallback();

        if $r2 == null goto label2;

        z0 = r0.mIsDestroyed;

        if z0 != 0 goto label2;

        interfaceinvoke $r2.onPanelClosed(108, $r1);

     label2:
        r0.mClosingActionMenu = 0;

        return;
    }

    void closePanel(int)
    {
        int $i0;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = virtualinvoke r0.getPanelState($i0, 1);

        virtualinvoke r0.closePanel($r1, 1);

        return;
    }

    void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState, boolean)
    {
        android.content.Context r4;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1, $r8;
        androidx.appcompat.view.menu.MenuBuilder r3;
        android.view.WindowManager r6;
        androidx.appcompat.widget.DecorContentParent r2;
        android.view.ViewGroup $r7;
        int i0;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        $z0 := @parameter1;

        if $z0 == 0 goto label1;

        i0 = $r1.featureId;

        if i0 != 0 goto label1;

        r2 = r0.mDecorContentParent;

        if r2 == null goto label1;

        $z1 = interfaceinvoke r2.isOverflowMenuShowing();

        if $z1 == 0 goto label1;

        r3 = $r1.menu;

        virtualinvoke r0.checkCloseActionMenu(r3);

        return;

     label1:
        r4 = r0.mContext;

        $r5 = virtualinvoke r4.getSystemService("window");

        r6 = (android.view.WindowManager) $r5;

        if r6 == null goto label2;

        $z1 = $r1.isOpen;

        if $z1 == 0 goto label2;

        $r7 = $r1.decorView;

        if $r7 == null goto label2;

        $r7 = $r1.decorView;

        interfaceinvoke r6.removeView($r7);

        if $z0 == 0 goto label2;

        i0 = $r1.featureId;

        virtualinvoke r0.callOnPanelClosed(i0, $r1, null);

     label2:
        $r1.isPrepared = 0;

        $r1.isHandled = 0;

        $r1.isOpen = 0;

        $r1.shownPanelView = null;

        $r1.refreshDecorView = 1;

        $r8 = r0.mPreparedPanel;

        if $r8 != $r1 goto label3;

        r0.mPreparedPanel = null;

     label3:
        return;
    }

    public android.view.View createView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        java.lang.Throwable r15;
        android.content.Context $r3, r6;
        android.view.ViewParent $r18;
        java.lang.Object[] $r13;
        java.lang.reflect.Constructor $r12;
        android.content.res.TypedArray $r8;
        android.util.AttributeSet $r4;
        int[] r7;
        int i0;
        android.view.View $r1;
        java.lang.String $r2, $r9;
        boolean $z0, $z1, z2;
        org.xmlpull.v1.XmlPullParser r17;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.Class[] $r11;
        androidx.appcompat.app.AppCompatViewInflater r5;
        java.lang.Class $r10;
        java.lang.Object $r14;
        java.lang.StringBuilder $r16;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 := @parameter3;

        r5 = r0.mAppCompatViewInflater;

        $z1 = 0;

        if r5 != null goto label4;

        r6 = r0.mContext;

        r7 = androidx.appcompat.R$styleable.AppCompatTheme;

        $r8 = virtualinvoke r6.obtainStyledAttributes(r7);

        i0 = androidx.appcompat.R$styleable.AppCompatTheme_viewInflaterClass;

        $r9 = virtualinvoke $r8.getString(i0);

        if $r9 != null goto label1;

        r5 = new androidx.appcompat.app.AppCompatViewInflater;

        specialinvoke r5.<init>();

        r0.mAppCompatViewInflater = r5;

        goto label4;

     label1:
        $r10 = java.lang.Class.forName($r9);

        $r11 = newarray (java.lang.Class)[0];

        $r12 = virtualinvoke $r10.getDeclaredConstructor($r11);

        $r13 = newarray (java.lang.Object)[0];

        $r14 = virtualinvoke $r12.newInstance($r13);

        r5 = (androidx.appcompat.app.AppCompatViewInflater) $r14;

        r0.mAppCompatViewInflater = r5;

     label2:
        goto label4;

     label3:
        r15 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<init>();

        $r16 = virtualinvoke $r16.append("Failed to instantiate custom view inflater ");

        $r16 = virtualinvoke $r16.append($r9);

        $r16 = virtualinvoke $r16.append(". Falling back to default.");

        $r9 = virtualinvoke $r16.toString();

        android.util.Log.i("AppCompatDelegate", $r9, r15);

        r5 = new androidx.appcompat.app.AppCompatViewInflater;

        specialinvoke r5.<init>();

        r0.mAppCompatViewInflater = r5;

     label4:
        z2 = 0;

        $z0 = androidx.appcompat.app.AppCompatDelegateImpl.IS_PRE_LOLLIPOP;

        if $z0 == 0 goto label7;

        z2 = $r4 instanceof org.xmlpull.v1.XmlPullParser;

        if z2 == 0 goto label5;

        r17 = (org.xmlpull.v1.XmlPullParser) $r4;

        i0 = interfaceinvoke r17.getDepth();

        if i0 <= 1 goto label6;

        $z1 = 1;

        goto label6;

     label5:
        $r18 = (android.view.ViewParent) $r1;

        $z1 = specialinvoke r0.shouldInheritContext($r18);

     label6:
        z2 = $z1;

     label7:
        r5 = r0.mAppCompatViewInflater;

        $z1 = androidx.appcompat.widget.VectorEnabledTintResources.shouldBeUsed();

        $r1 = virtualinvoke r5.createView($r1, $r2, $r3, $r4, z2, $z0, 1, $z1);

        return $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void dismissPopups()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r7;
        androidx.appcompat.view.menu.MenuBuilder $r8;
        android.widget.PopupWindow r2;
        java.lang.IllegalArgumentException r6;
        java.lang.Runnable $r5;
        androidx.appcompat.widget.DecorContentParent r1;
        android.view.View $r4;
        android.view.Window r3;
        boolean $z0;

        r0 := @this;

        r1 = r0.mDecorContentParent;

        if r1 == null goto label1;

        interfaceinvoke r1.dismissPopups();

     label1:
        r2 = r0.mActionModePopup;

        if r2 == null goto label6;

        r3 = r0.mWindow;

        $r4 = virtualinvoke r3.getDecorView();

        $r5 = r0.mShowActionModePopup;

        virtualinvoke $r4.removeCallbacks($r5);

        r2 = r0.mActionModePopup;

        $z0 = virtualinvoke r2.isShowing();

        if $z0 == 0 goto label5;

        r2 = r0.mActionModePopup;

     label2:
        virtualinvoke r2.dismiss();

     label3:
        goto label5;

     label4:
        r6 := @caughtexception;

     label5:
        r0.mActionModePopup = null;

     label6:
        virtualinvoke r0.endOnGoingFadeAnimation();

        $r7 = virtualinvoke r0.getPanelState(0, 0);

        if $r7 == null goto label7;

        $r8 = $r7.menu;

        if $r8 == null goto label7;

        $r8 = $r7.menu;

        virtualinvoke $r8.close();

     label7:
        return;

        catch java.lang.IllegalArgumentException from label2 to label3 with label4;
    }

    boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.Window$Callback $r6;
        int $i0, $i1;
        android.view.View $r4;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback r5;
        java.lang.Object r2;
        android.view.Window r3;
        boolean z0, z1;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mHost;

        z0 = r2 instanceof androidx.core.view.KeyEventDispatcher$Component;

        z1 = 1;

        if z0 != 0 goto label1;

        z0 = r2 instanceof androidx.appcompat.app.AppCompatDialog;

        if z0 == 0 goto label2;

     label1:
        r3 = r0.mWindow;

        $r4 = virtualinvoke r3.getDecorView();

        if $r4 == null goto label2;

        z0 = androidx.core.view.KeyEventDispatcher.dispatchBeforeHierarchy($r4, $r1);

        if z0 == 0 goto label2;

        return 1;

     label2:
        $i0 = virtualinvoke $r1.getKeyCode();

        if $i0 != 82 goto label3;

        r5 = r0.mAppCompatWindowCallback;

        $r6 = virtualinvoke r5.getWrapped();

        z0 = interfaceinvoke $r6.dispatchKeyEvent($r1);

        if z0 == 0 goto label3;

        return 1;

     label3:
        $i0 = virtualinvoke $r1.getKeyCode();

        $i1 = virtualinvoke $r1.getAction();

        if $i1 != 0 goto label4;

        goto label5;

     label4:
        z1 = 0;

     label5:
        if z1 == 0 goto label6;

        z1 = virtualinvoke r0.onKeyDown($i0, $r1);

        return z1;

     label6:
        z1 = virtualinvoke r0.onKeyUp($i0, $r1);

        return z1;
    }

    void doInvalidatePanelMenu(int)
    {
        android.os.Bundle $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r1;
        androidx.appcompat.view.menu.MenuBuilder $r2;
        int $i0, $i1;
        androidx.appcompat.widget.DecorContentParent $r4;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = virtualinvoke r0.getPanelState($i0, 1);

        $r2 = $r1.menu;

        if $r2 == null goto label2;

        $r3 = new android.os.Bundle;

        specialinvoke $r3.<init>();

        $r2 = $r1.menu;

        virtualinvoke $r2.saveActionViewStates($r3);

        $i1 = virtualinvoke $r3.size();

        if $i1 <= 0 goto label1;

        $r1.frozenActionViewState = $r3;

     label1:
        $r2 = $r1.menu;

        virtualinvoke $r2.stopDispatchingItemsChanged();

        $r2 = $r1.menu;

        virtualinvoke $r2.clear();

     label2:
        $r1.refreshMenuContent = 1;

        $r1.refreshDecorView = 1;

        if $i0 == 108 goto label3;

        if $i0 != 0 goto label4;

     label3:
        $r4 = r0.mDecorContentParent;

        if $r4 == null goto label4;

        $r1 = virtualinvoke r0.getPanelState(0, 0);

        if $r1 == null goto label4;

        $r1.isPrepared = 0;

        specialinvoke r0.preparePanel($r1, null);

     label4:
        return;
    }

    void endOnGoingFadeAnimation()
    {
        androidx.core.view.ViewPropertyAnimatorCompat $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        $r1 = r0.mFadeAnim;

        if $r1 == null goto label1;

        virtualinvoke $r1.cancel();

     label1:
        return;
    }

    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r3;
        androidx.appcompat.view.menu.MenuBuilder $r4;
        android.view.Menu $r1;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] r2;
        int i0, i1;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mPanels;

        if r2 == null goto label1;

        i0 = lengthof r2;

        goto label2;

     label1:
        i0 = 0;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r3 = r2[i1];

        if r3 == null goto label4;

        $r4 = r3.menu;

        if $r4 != $r1 goto label4;

        return r3;

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return null;
    }

    public android.view.View findViewById(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0;
        android.view.View $r1;
        android.view.Window $r2;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.ensureSubDecor();

        $r2 = r0.mWindow;

        $r1 = virtualinvoke $r2.findViewById($i0);

        return $r1;
    }

    final android.content.Context getActionBarThemedContext()
    {
        android.content.Context r1;
        androidx.appcompat.app.ActionBar $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        r1 = null;

        $r2 = virtualinvoke r0.getSupportActionBar();

        if $r2 == null goto label1;

        r1 = virtualinvoke $r2.getThemedContext();

     label1:
        if r1 != null goto label2;

        r1 = r0.mContext;

     label2:
        return r1;
    }

    final androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r1;
        android.content.Context $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        $r2 = r0.mContext;

        $r1 = specialinvoke r0.getAutoTimeNightModeManager($r2);

        return $r1;
    }

    public final androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        $r1 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl;

        specialinvoke $r1.<init>(r0);

        return $r1;
    }

    public int getLocalNightMode()
    {
        int i0;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        i0 = r0.mLocalNightMode;

        return i0;
    }

    public android.view.MenuInflater getMenuInflater()
    {
        android.content.Context $r1;
        androidx.appcompat.app.ActionBar $r4;
        androidx.appcompat.view.SupportMenuInflater $r3;
        android.view.MenuInflater $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        $r2 = r0.mMenuInflater;

        if $r2 != null goto label3;

        specialinvoke r0.initWindowDecorActionBar();

        $r3 = new androidx.appcompat.view.SupportMenuInflater;

        $r4 = r0.mActionBar;

        if $r4 == null goto label1;

        $r1 = virtualinvoke $r4.getThemedContext();

        goto label2;

     label1:
        $r1 = r0.mContext;

     label2:
        specialinvoke $r3.<init>($r1);

        r0.mMenuInflater = $r3;

     label3:
        $r2 = r0.mMenuInflater;

        return $r2;
    }

    protected androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int, boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r4;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] r1, r2, r3;
        int $i0, i1;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $z0 := @parameter1;

        r1 = r0.mPanels;

        r2 = r1;

        if r1 == null goto label1;

        i1 = lengthof r1;

        if i1 > $i0 goto label3;

     label1:
        i1 = $i0 + 1;

        r3 = newarray (androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)[i1];

        if r1 == null goto label2;

        i1 = lengthof r1;

        java.lang.System.arraycopy(r1, 0, r3, 0, i1);

     label2:
        r2 = r3;

        r0.mPanels = r3;

     label3:
        r4 = r2[$i0];

        if r4 != null goto label4;

        r4 = new androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState;

        specialinvoke r4.<init>($i0);

        r2[$i0] = r4;

     label4:
        return r4;
    }

    android.view.ViewGroup getSubDecor()
    {
        android.view.ViewGroup r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        r1 = r0.mSubDecor;

        return r1;
    }

    public androidx.appcompat.app.ActionBar getSupportActionBar()
    {
        androidx.appcompat.app.ActionBar r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        specialinvoke r0.initWindowDecorActionBar();

        r1 = r0.mActionBar;

        return r1;
    }

    final java.lang.CharSequence getTitle()
    {
        java.lang.CharSequence $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.Object $r2;
        android.app.Activity $r3;
        boolean $z0;

        r0 := @this;

        $r2 = r0.mHost;

        $z0 = $r2 instanceof android.app.Activity;

        if $z0 == 0 goto label1;

        $r3 = (android.app.Activity) $r2;

        $r1 = virtualinvoke $r3.getTitle();

        return $r1;

     label1:
        $r1 = r0.mTitle;

        return $r1;
    }

    final android.view.Window$Callback getWindowCallback()
    {
        android.view.Window $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.Window$Callback $r1;

        r0 := @this;

        $r2 = r0.mWindow;

        $r1 = virtualinvoke $r2.getCallback();

        return $r1;
    }

    public boolean hasWindowFeature(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0, $i1;
        android.view.Window $r1;
        boolean z0;

        r0 := @this;

        $i0 := @parameter0;

        z0 = 0;

        $i1 = specialinvoke r0.sanitizeWindowFeatureId($i0);

        lookupswitch($i1)
        {
            case 1: goto label07;
            case 2: goto label06;
            case 5: goto label05;
            case 10: goto label04;
            case 108: goto label03;
            case 109: goto label02;
            default: goto label01;
        };

     label01:
        goto label08;

     label02:
        z0 = r0.mOverlayActionBar;

        goto label08;

     label03:
        z0 = r0.mHasActionBar;

        goto label08;

     label04:
        z0 = r0.mOverlayActionMode;

        goto label08;

     label05:
        z0 = r0.mFeatureIndeterminateProgress;

        goto label08;

     label06:
        z0 = r0.mFeatureProgress;

        goto label08;

     label07:
        z0 = r0.mWindowNoTitle;

     label08:
        if z0 != 0 goto label10;

        $r1 = r0.mWindow;

        z0 = virtualinvoke $r1.hasFeature($i0);

        if z0 == 0 goto label09;

        goto label10;

     label09:
        return 0;

     label10:
        return 1;
    }

    public void installViewFactory()
    {
        android.content.Context r1;
        android.view.LayoutInflater $r2;
        android.view.LayoutInflater$Factory $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.LayoutInflater$Factory2 $r4;
        boolean $z0;

        r0 := @this;

        r1 = r0.mContext;

        $r2 = android.view.LayoutInflater.from(r1);

        $r3 = virtualinvoke $r2.getFactory();

        if $r3 != null goto label1;

        androidx.core.view.LayoutInflaterCompat.setFactory2($r2, r0);

        return;

     label1:
        $r4 = virtualinvoke $r2.getFactory2();

        $z0 = $r4 instanceof androidx.appcompat.app.AppCompatDelegateImpl;

        if $z0 != 0 goto label2;

        android.util.Log.i("AppCompatDelegate", "The Activity\'s LayoutInflater already has a Factory installed so we can not install AppCompat\'s");

     label2:
        return;
    }

    public void invalidateOptionsMenu()
    {
        androidx.appcompat.app.ActionBar $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0;

        r0 := @this;

        $r1 = virtualinvoke r0.getSupportActionBar();

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.invalidateOptionsMenu();

        if $z0 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.invalidatePanelMenu(0);

        return;
    }

    public boolean isHandleNativeActionModesEnabled()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mHandleNativeActionModes;

        return z0;
    }

    int mapNightMode(android.content.Context, int)
    {
        android.content.Context $r1, $r3;
        java.lang.IllegalStateException $r6;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager $r2;
        android.app.UiModeManager r5;
        int $i0;
        java.lang.Object $r4;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        lookupswitch($i0)
        {
            case -100: goto label6;
            case -1: goto label5;
            case 0: goto label3;
            case 1: goto label5;
            case 2: goto label5;
            case 3: goto label2;
            default: goto label1;
        };

     label1:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<init>("Unknown value set for night mode. Please use one of the MODE_NIGHT values from AppCompatDelegate.");

        throw $r6;

     label2:
        $r2 = specialinvoke r0.getAutoBatteryNightModeManager($r1);

        $i0 = virtualinvoke $r2.getApplyableNightMode();

        return $i0;

     label3:
        $i0 = android.os.Build$VERSION.SDK_INT;

        if $i0 < 23 goto label4;

        $r3 = virtualinvoke $r1.getApplicationContext();

        $r4 = virtualinvoke $r3.getSystemService(class "Landroid/app/UiModeManager;");

        r5 = (android.app.UiModeManager) $r4;

        $i0 = virtualinvoke r5.getNightMode();

        if $i0 != 0 goto label4;

        return -1;

     label4:
        $r2 = specialinvoke r0.getAutoTimeNightModeManager($r1);

        $i0 = virtualinvoke $r2.getApplyableNightMode();

     label5:
        return $i0;

     label6:
        return -1;
    }

    boolean onBackPressed()
    {
        androidx.appcompat.app.ActionBar $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.ActionMode r1;
        boolean $z0;

        r0 := @this;

        r1 = r0.mActionMode;

        if r1 == null goto label1;

        virtualinvoke r1.finish();

        return 1;

     label1:
        $r2 = virtualinvoke r0.getSupportActionBar();

        if $r2 == null goto label2;

        $z0 = virtualinvoke $r2.collapseActionView();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.content.Context $r2;
        androidx.appcompat.app.ActionBar $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.content.res.Configuration $r1;
        androidx.appcompat.widget.AppCompatDrawableManager $r4;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        z0 = r0.mHasActionBar;

        if z0 == 0 goto label1;

        z0 = r0.mSubDecorInstalled;

        if z0 == 0 goto label1;

        $r3 = virtualinvoke r0.getSupportActionBar();

        if $r3 == null goto label1;

        virtualinvoke $r3.onConfigurationChanged($r1);

     label1:
        $r4 = androidx.appcompat.widget.AppCompatDrawableManager.get();

        $r2 = r0.mContext;

        virtualinvoke $r4.onConfigurationChanged($r2);

        specialinvoke r0.applyDayNight(0);

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        android.os.Bundle $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.IllegalArgumentException r6;
        androidx.appcompat.app.ActionBar $r7;
        java.lang.Object r2;
        java.lang.String r3, $r5;
        android.app.Activity r4;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        r0.mBaseContextAttached = 1;

        specialinvoke r0.applyDayNight(0);

        specialinvoke r0.ensureWindow();

        r2 = r0.mHost;

        z0 = r2 instanceof android.app.Activity;

        if z0 == 0 goto label7;

        r3 = null;

        r4 = (android.app.Activity) r2;

     label1:
        $r5 = androidx.core.app.NavUtils.getParentActivityName(r4);

     label2:
        r3 = $r5;

        goto label4;

     label3:
        r6 := @caughtexception;

     label4:
        if r3 == null goto label6;

        $r7 = virtualinvoke r0.peekSupportActionBar();

        if $r7 != null goto label5;

        r0.mEnableDefaultActionBarUp = 1;

        goto label6;

     label5:
        virtualinvoke $r7.setDefaultDisplayHomeAsUpEnabled(1);

     label6:
        androidx.appcompat.app.AppCompatDelegateImpl.addActiveDelegate(r0);

     label7:
        r0.mCreated = 1;

        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public final android.view.View onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r3;
        android.util.AttributeSet $r4;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View $r1;
        java.lang.String $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 := @parameter3;

        $r1 = virtualinvoke r0.createView($r1, $r2, $r3, $r4);

        return $r1;
    }

    public android.view.View onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r2;
        android.util.AttributeSet $r3;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View $r4;
        java.lang.String $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 = virtualinvoke r0.onCreateView(null, $r1, $r2, $r3);

        return $r4;
    }

    public void onDestroy()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        java.lang.Runnable $r4;
        java.lang.Integer $r9;
        androidx.appcompat.app.ActionBar $r10;
        int $i0;
        android.view.View $r3;
        java.lang.Object $r1;
        java.lang.Class $r7;
        java.lang.String $r8;
        android.view.Window $r2;
        android.app.Activity $r5;
        boolean $z0;
        androidx.collection.SimpleArrayMap $r6;

        r0 := @this;

        $r1 = r0.mHost;

        $z0 = $r1 instanceof android.app.Activity;

        if $z0 == 0 goto label1;

        androidx.appcompat.app.AppCompatDelegateImpl.removeActivityDelegate(r0);

     label1:
        $z0 = r0.mInvalidatePanelMenuPosted;

        if $z0 == 0 goto label2;

        $r2 = r0.mWindow;

        $r3 = virtualinvoke $r2.getDecorView();

        $r4 = r0.mInvalidatePanelMenuRunnable;

        virtualinvoke $r3.removeCallbacks($r4);

     label2:
        r0.mStarted = 0;

        r0.mIsDestroyed = 1;

        $i0 = r0.mLocalNightMode;

        if $i0 == -100 goto label3;

        $r1 = r0.mHost;

        $z0 = $r1 instanceof android.app.Activity;

        if $z0 == 0 goto label3;

        $r5 = (android.app.Activity) $r1;

        $z0 = virtualinvoke $r5.isChangingConfigurations();

        if $z0 == 0 goto label3;

        $r6 = androidx.appcompat.app.AppCompatDelegateImpl.sLocalNightModes;

        $r1 = r0.mHost;

        $r7 = virtualinvoke $r1.getClass();

        $r8 = virtualinvoke $r7.getName();

        $i0 = r0.mLocalNightMode;

        $r9 = java.lang.Integer.valueOf($i0);

        virtualinvoke $r6.put($r8, $r9);

        goto label4;

     label3:
        $r6 = androidx.appcompat.app.AppCompatDelegateImpl.sLocalNightModes;

        $r1 = r0.mHost;

        $r7 = virtualinvoke $r1.getClass();

        $r8 = virtualinvoke $r7.getName();

        virtualinvoke $r6.remove($r8);

     label4:
        $r10 = r0.mActionBar;

        if $r10 == null goto label5;

        virtualinvoke $r10.onDestroy();

     label5:
        specialinvoke r0.cleanupAutoManagers();

        return;
    }

    boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $z0 = 1;

        lookupswitch($i0)
        {
            case 4: goto label3;
            case 82: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        specialinvoke r0.onKeyDownPanel(0, $r1);

        return 1;

     label3:
        $i0 = virtualinvoke $r1.getFlags();

        $i0 = $i0 & 128;

        if $i0 == 0 goto label4;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        r0.mLongPressBackDown = $z0;

        return 0;
    }

    boolean onKeyShortcut(int, android.view.KeyEvent)
    {
        androidx.appcompat.app.ActionBar $r2;
        android.view.KeyEvent $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState r3;
        int $i0;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $r2 = virtualinvoke r0.getSupportActionBar();

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.onKeyShortcut($i0, $r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r3 = r0.mPreparedPanel;

        if r3 == null goto label2;

        $i0 = virtualinvoke $r1.getKeyCode();

        $z0 = specialinvoke r0.performPanelShortcut(r3, $i0, $r1, 1);

        if $z0 == 0 goto label2;

        r3 = r0.mPreparedPanel;

        if r3 == null goto label4;

        r3.isHandled = 1;

        return 1;

     label2:
        r3 = r0.mPreparedPanel;

        if r3 != null goto label3;

        r3 = virtualinvoke r0.getPanelState(0, 1);

        specialinvoke r0.preparePanel(r3, $r1);

        $i0 = virtualinvoke $r1.getKeyCode();

        $z0 = specialinvoke r0.performPanelShortcut(r3, $i0, $r1, 1);

        r3.isPrepared = 0;

        if $z0 == 0 goto label5;

        return 1;

     label3:
        return 0;

     label4:
        return 1;

     label5:
        return 0;
    }

    boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r2;
        int $i0;
        boolean z0, $z1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        lookupswitch($i0)
        {
            case 4: goto label3;
            case 82: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        specialinvoke r0.onKeyUpPanel(0, $r1);

        return 1;

     label3:
        z0 = r0.mLongPressBackDown;

        r0.mLongPressBackDown = 0;

        $r2 = virtualinvoke r0.getPanelState(0, 0);

        if $r2 == null goto label4;

        $z1 = $r2.isOpen;

        if $z1 == 0 goto label4;

        if z0 != 0 goto label6;

        virtualinvoke r0.closePanel($r2, 1);

        return 1;

     label4:
        z0 = virtualinvoke r0.onBackPressed();

        if z0 == 0 goto label5;

        return 1;

     label5:
        return 0;

     label6:
        return 1;
    }

    public boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder, android.view.MenuItem)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.menu.MenuBuilder $r1;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r4;
        int $i0;
        android.view.MenuItem $r2;
        android.view.Window$Callback $r3;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = virtualinvoke r0.getWindowCallback();

        if $r3 == null goto label1;

        z0 = r0.mIsDestroyed;

        if z0 != 0 goto label1;

        $r1 = virtualinvoke $r1.getRootMenu();

        $r4 = virtualinvoke r0.findMenuPanel($r1);

        if $r4 == null goto label1;

        $i0 = $r4.featureId;

        z0 = interfaceinvoke $r3.onMenuItemSelected($i0, $r2);

        return z0;

     label1:
        return 0;
    }

    public void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.menu.MenuBuilder $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.reopenMenu(1);

        return;
    }

    void onMenuOpened(int)
    {
        int $i0;
        androidx.appcompat.app.ActionBar $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        $i0 := @parameter0;

        if $i0 != 108 goto label1;

        $r1 = virtualinvoke r0.getSupportActionBar();

        if $r1 == null goto label1;

        virtualinvoke $r1.dispatchMenuVisibilityChanged(1);

     label1:
        return;
    }

    void onPanelClosed(int)
    {
        androidx.appcompat.app.ActionBar $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState $r2;
        int $i0;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        if $i0 != 108 goto label1;

        $r1 = virtualinvoke r0.getSupportActionBar();

        if $r1 == null goto label2;

        virtualinvoke $r1.dispatchMenuVisibilityChanged(0);

        goto label2;

     label1:
        if $i0 != 0 goto label2;

        $r2 = virtualinvoke r0.getPanelState($i0, 1);

        $z0 = $r2.isOpen;

        if $z0 == 0 goto label2;

        virtualinvoke r0.closePanel($r2, 0);

     label2:
        return;
    }

    public void onPostCreate(android.os.Bundle)
    {
        android.os.Bundle $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.ensureSubDecor();

        return;
    }

    public void onPostResume()
    {
        androidx.appcompat.app.ActionBar $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        $r1 = virtualinvoke r0.getSupportActionBar();

        if $r1 == null goto label1;

        virtualinvoke $r1.setShowHideAnimationEnabled(1);

     label1:
        return;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        android.os.Bundle $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    public void onStart()
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        r0.mStarted = 1;

        virtualinvoke r0.applyDayNight();

        return;
    }

    public void onStop()
    {
        androidx.appcompat.app.ActionBar $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        r0.mStarted = 0;

        $r1 = virtualinvoke r0.getSupportActionBar();

        if $r1 == null goto label1;

        virtualinvoke $r1.setShowHideAnimationEnabled(0);

     label1:
        return;
    }

    void onSubDecorInstalled(android.view.ViewGroup)
    {
        android.view.ViewGroup $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    final androidx.appcompat.app.ActionBar peekSupportActionBar()
    {
        androidx.appcompat.app.ActionBar r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        r1 = r0.mActionBar;

        return r1;
    }

    public boolean requestWindowFeature(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0;
        android.view.Window $r1;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $i0 = specialinvoke r0.sanitizeWindowFeatureId($i0);

        $z0 = r0.mWindowNoTitle;

        if $z0 == 0 goto label1;

        if $i0 != 108 goto label1;

        return 0;

     label1:
        $z0 = r0.mHasActionBar;

        if $z0 == 0 goto label2;

        if $i0 != 1 goto label2;

        r0.mHasActionBar = 0;

     label2:
        lookupswitch($i0)
        {
            case 1: goto label9;
            case 2: goto label8;
            case 5: goto label7;
            case 10: goto label6;
            case 108: goto label5;
            case 109: goto label4;
            default: goto label3;
        };

     label3:
        $r1 = r0.mWindow;

        $z0 = virtualinvoke $r1.requestFeature($i0);

        return $z0;

     label4:
        specialinvoke r0.throwFeatureRequestIfSubDecorInstalled();

        r0.mOverlayActionBar = 1;

        return 1;

     label5:
        specialinvoke r0.throwFeatureRequestIfSubDecorInstalled();

        r0.mHasActionBar = 1;

        return 1;

     label6:
        specialinvoke r0.throwFeatureRequestIfSubDecorInstalled();

        r0.mOverlayActionMode = 1;

        return 1;

     label7:
        specialinvoke r0.throwFeatureRequestIfSubDecorInstalled();

        r0.mFeatureIndeterminateProgress = 1;

        return 1;

     label8:
        specialinvoke r0.throwFeatureRequestIfSubDecorInstalled();

        r0.mFeatureProgress = 1;

        return 1;

     label9:
        specialinvoke r0.throwFeatureRequestIfSubDecorInstalled();

        r0.mWindowNoTitle = 1;

        return 1;
    }

    public void setContentView(int)
    {
        android.content.Context $r3;
        android.view.LayoutInflater $r4;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.ViewGroup r1;
        android.view.Window$Callback $r6;
        int $i0;
        android.view.View $r2;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r5;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.ensureSubDecor();

        r1 = r0.mSubDecor;

        $r2 = virtualinvoke r1.findViewById(16908290);

        r1 = (android.view.ViewGroup) $r2;

        virtualinvoke r1.removeAllViews();

        $r3 = r0.mContext;

        $r4 = android.view.LayoutInflater.from($r3);

        virtualinvoke $r4.inflate($i0, r1);

        $r5 = r0.mAppCompatWindowCallback;

        $r6 = virtualinvoke $r5.getWrapped();

        interfaceinvoke $r6.onContentChanged();

        return;
    }

    public void setContentView(android.view.View)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View $r1, $r3;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r4;
        android.view.ViewGroup r2;
        android.view.Window$Callback $r5;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.ensureSubDecor();

        r2 = r0.mSubDecor;

        $r3 = virtualinvoke r2.findViewById(16908290);

        r2 = (android.view.ViewGroup) $r3;

        virtualinvoke r2.removeAllViews();

        virtualinvoke r2.addView($r1);

        $r4 = r0.mAppCompatWindowCallback;

        $r5 = virtualinvoke $r4.getWrapped();

        interfaceinvoke $r5.onContentChanged();

        return;
    }

    public void setContentView(android.view.View, android.view.ViewGroup$LayoutParams)
    {
        android.view.ViewGroup$LayoutParams $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.View $r1, $r4;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r5;
        android.view.ViewGroup r3;
        android.view.Window$Callback $r6;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.ensureSubDecor();

        r3 = r0.mSubDecor;

        $r4 = virtualinvoke r3.findViewById(16908290);

        r3 = (android.view.ViewGroup) $r4;

        virtualinvoke r3.removeAllViews();

        virtualinvoke r3.addView($r1, $r2);

        $r5 = r0.mAppCompatWindowCallback;

        $r6 = virtualinvoke $r5.getWrapped();

        interfaceinvoke $r6.onContentChanged();

        return;
    }

    public void setHandleNativeActionModesEnabled(boolean)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        r0.mHandleNativeActionModes = $z0;

        return;
    }

    public void setLocalNightMode(int)
    {
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 = r0.mLocalNightMode;

        if $i1 == $i0 goto label1;

        r0.mLocalNightMode = $i0;

        $z0 = r0.mBaseContextAttached;

        if $z0 == 0 goto label1;

        virtualinvoke r0.applyDayNight();

     label1:
        return;
    }

    public void setSupportActionBar(androidx.appcompat.widget.Toolbar)
    {
        java.lang.IllegalStateException r9;
        androidx.appcompat.app.ToolbarActionBar r4;
        java.lang.CharSequence $r5;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        android.view.Window$Callback $r8;
        androidx.appcompat.app.ActionBar $r3;
        androidx.appcompat.widget.Toolbar $r1;
        androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback $r6;
        java.lang.Object r2;
        android.view.Window $r7;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mHost;

        z0 = r2 instanceof android.app.Activity;

        if z0 != 0 goto label1;

        return;

     label1:
        $r3 = virtualinvoke r0.getSupportActionBar();

        z0 = $r3 instanceof androidx.appcompat.app.WindowDecorActionBar;

        if z0 != 0 goto label5;

        r0.mMenuInflater = null;

        if $r3 == null goto label2;

        virtualinvoke $r3.onDestroy();

     label2:
        if $r1 == null goto label3;

        r4 = new androidx.appcompat.app.ToolbarActionBar;

        $r5 = virtualinvoke r0.getTitle();

        $r6 = r0.mAppCompatWindowCallback;

        specialinvoke r4.<init>($r1, $r5, $r6);

        r0.mActionBar = r4;

        $r7 = r0.mWindow;

        $r8 = virtualinvoke r4.getWrappedWindowCallback();

        virtualinvoke $r7.setCallback($r8);

        goto label4;

     label3:
        r0.mActionBar = null;

        $r7 = r0.mWindow;

        $r6 = r0.mAppCompatWindowCallback;

        virtualinvoke $r7.setCallback($r6);

     label4:
        virtualinvoke r0.invalidateOptionsMenu();

        return;

     label5:
        r9 = new java.lang.IllegalStateException;

        specialinvoke r9.<init>("This Activity already has an action bar supplied by the window decor. Do not request Window.FEATURE_SUPPORT_ACTION_BAR and set windowActionBar to false in your theme to use a Toolbar instead.");

        throw r9;
    }

    public void setTheme(int)
    {
        int $i0;
        androidx.appcompat.app.AppCompatDelegateImpl r0;

        r0 := @this;

        $i0 := @parameter0;

        r0.mThemeResId = $i0;

        return;
    }

    public final void setTitle(java.lang.CharSequence)
    {
        androidx.appcompat.app.ActionBar $r3;
        android.widget.TextView $r4;
        java.lang.CharSequence $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.widget.DecorContentParent $r2;

        r0 := @this;

        $r1 := @parameter0;

        r0.mTitle = $r1;

        $r2 = r0.mDecorContentParent;

        if $r2 == null goto label1;

        interfaceinvoke $r2.setWindowTitle($r1);

        return;

     label1:
        $r3 = virtualinvoke r0.peekSupportActionBar();

        if $r3 == null goto label2;

        $r3 = virtualinvoke r0.peekSupportActionBar();

        virtualinvoke $r3.setWindowTitle($r1);

        return;

     label2:
        $r4 = r0.mTitleView;

        if $r4 == null goto label3;

        virtualinvoke $r4.setText($r1);

     label3:
        return;
    }

    final boolean shouldAnimateActionModeView()
    {
        android.view.ViewGroup $r1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.mSubDecorInstalled;

        if $z0 == 0 goto label1;

        $r1 = r0.mSubDecor;

        if $r1 == null goto label1;

        $z0 = androidx.core.view.ViewCompat.isLaidOut($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
    {
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 r4;
        androidx.appcompat.app.ActionBar $r5;
        androidx.appcompat.app.AppCompatCallback $r2;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.view.ActionMode$Callback $r1;
        java.lang.IllegalArgumentException r6;
        androidx.appcompat.view.ActionMode r3;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 == null goto label4;

        r3 = r0.mActionMode;

        if r3 == null goto label1;

        virtualinvoke r3.finish();

     label1:
        r4 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        specialinvoke r4.<init>(r0, $r1);

        $r5 = virtualinvoke r0.getSupportActionBar();

        if $r5 == null goto label2;

        r3 = virtualinvoke $r5.startActionMode(r4);

        r0.mActionMode = r3;

        if r3 == null goto label2;

        $r2 = r0.mAppCompatCallback;

        if $r2 == null goto label2;

        interfaceinvoke $r2.onSupportActionModeStarted(r3);

     label2:
        r3 = r0.mActionMode;

        if r3 != null goto label3;

        r3 = virtualinvoke r0.startSupportActionModeFromWindow(r4);

        r0.mActionMode = r3;

     label3:
        r3 = r0.mActionMode;

        return r3;

     label4:
        r6 = new java.lang.IllegalArgumentException;

        specialinvoke r6.<init>("ActionMode callback can not be null.");

        throw r6;
    }

    androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)
    {
        java.lang.AbstractMethodError r5;
        java.lang.Runnable $r24;
        android.view.View $r16;
        boolean z0, z1;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.widget.ViewStubCompat r17;
        androidx.appcompat.widget.ActionBarContextView r6, $r28;
        android.util.DisplayMetrics $r14;
        android.view.ViewGroup r15;
        androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 $r25;
        android.view.Window r23;
        android.content.Context r8, $r12;
        android.view.ViewParent $r22;
        androidx.appcompat.app.AppCompatCallback r3;
        androidx.core.view.ViewPropertyAnimatorCompat $r21;
        androidx.appcompat.view.ActionMode$Callback $r1;
        int i0;
        android.view.Menu $r20;
        android.content.res.Resources$Theme $r9, $r11;
        androidx.appcompat.app.AppCompatDelegateImpl$7 $r32;
        androidx.appcompat.app.AppCompatDelegateImpl$6 $r30;
        android.view.LayoutInflater $r18;
        android.widget.PopupWindow r13, $r29;
        androidx.appcompat.view.StandaloneActionMode r19, $r31;
        androidx.appcompat.view.ActionMode r2, $r4;
        androidx.appcompat.view.ContextThemeWrapper $r27;
        android.util.TypedValue r7, $r26;
        android.content.res.Resources $r10;

        r0 := @this;

        $r1 := @parameter0;

        virtualinvoke r0.endOnGoingFadeAnimation();

        r2 = r0.mActionMode;

        if r2 == null goto label01;

        virtualinvoke r2.finish();

     label01:
        z0 = $r1 instanceof androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        if z0 != 0 goto label02;

        $r25 = new androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9;

        specialinvoke $r25.<init>(r0, $r1);

        $r1 = $r25;

     label02:
        r2 = null;

        r3 = r0.mAppCompatCallback;

        if r3 == null goto label06;

        z0 = r0.mIsDestroyed;

        if z0 != 0 goto label06;

     label03:
        $r4 = interfaceinvoke r3.onWindowStartingSupportActionMode($r1);

     label04:
        r2 = $r4;

        goto label06;

     label05:
        r5 := @caughtexception;

     label06:
        if r2 == null goto label07;

        r0.mActionMode = r2;

        goto label17;

     label07:
        r6 = r0.mActionModeView;

        z0 = 1;

        if r6 != null goto label11;

        z1 = r0.mIsFloating;

        if z1 == 0 goto label10;

        $r26 = new android.util.TypedValue;

        r7 = $r26;

        specialinvoke $r26.<init>();

        r8 = r0.mContext;

        $r9 = virtualinvoke r8.getTheme();

        i0 = androidx.appcompat.R$attr.actionBarTheme;

        virtualinvoke $r9.resolveAttribute(i0, r7, 1);

        i0 = r7.resourceId;

        if i0 == 0 goto label08;

        r8 = r0.mContext;

        $r10 = virtualinvoke r8.getResources();

        $r11 = virtualinvoke $r10.newTheme();

        virtualinvoke $r11.setTo($r9);

        i0 = r7.resourceId;

        virtualinvoke $r11.applyStyle(i0, 1);

        $r27 = new androidx.appcompat.view.ContextThemeWrapper;

        r8 = $r27;

        $r12 = r0.mContext;

        specialinvoke $r27.<init>($r12, 0);

        $r9 = virtualinvoke r8.getTheme();

        virtualinvoke $r9.setTo($r11);

        goto label09;

     label08:
        r8 = r0.mContext;

     label09:
        $r28 = new androidx.appcompat.widget.ActionBarContextView;

        specialinvoke $r28.<init>(r8);

        r0.mActionModeView = $r28;

        $r29 = new android.widget.PopupWindow;

        r13 = $r29;

        i0 = androidx.appcompat.R$attr.actionModePopupWindowStyle;

        specialinvoke $r29.<init>(r8, null, i0);

        r0.mActionModePopup = r13;

        androidx.core.widget.PopupWindowCompat.setWindowLayoutType(r13, 2);

        r13 = r0.mActionModePopup;

        r6 = r0.mActionModeView;

        virtualinvoke r13.setContentView(r6);

        r13 = r0.mActionModePopup;

        i0 = -1;

        virtualinvoke r13.setWidth(i0);

        $r11 = virtualinvoke r8.getTheme();

        i0 = androidx.appcompat.R$attr.actionBarSize;

        virtualinvoke $r11.resolveAttribute(i0, r7, 1);

        i0 = r7.data;

        $r10 = virtualinvoke r8.getResources();

        $r14 = virtualinvoke $r10.getDisplayMetrics();

        i0 = android.util.TypedValue.complexToDimensionPixelSize(i0, $r14);

        r6 = r0.mActionModeView;

        virtualinvoke r6.setContentHeight(i0);

        r13 = r0.mActionModePopup;

        i0 = -2;

        virtualinvoke r13.setHeight(i0);

        $r30 = new androidx.appcompat.app.AppCompatDelegateImpl$6;

        specialinvoke $r30.<init>(r0);

        r0.mShowActionModePopup = $r30;

        goto label11;

     label10:
        r15 = r0.mSubDecor;

        i0 = androidx.appcompat.R$id.action_mode_bar_stub;

        $r16 = virtualinvoke r15.findViewById(i0);

        r17 = (androidx.appcompat.widget.ViewStubCompat) $r16;

        if r17 == null goto label11;

        r8 = virtualinvoke r0.getActionBarThemedContext();

        $r18 = android.view.LayoutInflater.from(r8);

        virtualinvoke r17.setLayoutInflater($r18);

        $r16 = virtualinvoke r17.inflate();

        r6 = (androidx.appcompat.widget.ActionBarContextView) $r16;

        r0.mActionModeView = r6;

     label11:
        r6 = r0.mActionModeView;

        if r6 == null goto label17;

        virtualinvoke r0.endOnGoingFadeAnimation();

        r6 = r0.mActionModeView;

        virtualinvoke r6.killMode();

        $r31 = new androidx.appcompat.view.StandaloneActionMode;

        r19 = $r31;

        r6 = r0.mActionModeView;

        r8 = virtualinvoke r6.getContext();

        r6 = r0.mActionModeView;

        r13 = r0.mActionModePopup;

        if r13 != null goto label12;

        goto label13;

     label12:
        z0 = 0;

     label13:
        specialinvoke $r31.<init>(r8, r6, $r1, z0);

        $r20 = virtualinvoke r19.getMenu();

        z0 = interfaceinvoke $r1.onCreateActionMode(r19, $r20);

        if z0 == 0 goto label16;

        virtualinvoke r19.invalidate();

        r6 = r0.mActionModeView;

        virtualinvoke r6.initForMode(r19);

        r0.mActionMode = r19;

        z0 = virtualinvoke r0.shouldAnimateActionModeView();

        if z0 == 0 goto label14;

        r6 = r0.mActionModeView;

        virtualinvoke r6.setAlpha(0.0F);

        r6 = r0.mActionModeView;

        $r21 = androidx.core.view.ViewCompat.animate(r6);

        $r21 = virtualinvoke $r21.alpha(1.0F);

        r0.mFadeAnim = $r21;

        $r32 = new androidx.appcompat.app.AppCompatDelegateImpl$7;

        specialinvoke $r32.<init>(r0);

        virtualinvoke $r21.setListener($r32);

        goto label15;

     label14:
        r6 = r0.mActionModeView;

        virtualinvoke r6.setAlpha(1.0F);

        r6 = r0.mActionModeView;

        virtualinvoke r6.setVisibility(0);

        r6 = r0.mActionModeView;

        virtualinvoke r6.sendAccessibilityEvent(32);

        r6 = r0.mActionModeView;

        $r22 = virtualinvoke r6.getParent();

        z0 = $r22 instanceof android.view.View;

        if z0 == 0 goto label15;

        r6 = r0.mActionModeView;

        $r22 = virtualinvoke r6.getParent();

        $r16 = (android.view.View) $r22;

        androidx.core.view.ViewCompat.requestApplyInsets($r16);

     label15:
        r13 = r0.mActionModePopup;

        if r13 == null goto label17;

        r23 = r0.mWindow;

        $r16 = virtualinvoke r23.getDecorView();

        $r24 = r0.mShowActionModePopup;

        virtualinvoke $r16.post($r24);

        goto label17;

     label16:
        r0.mActionMode = null;

     label17:
        r2 = r0.mActionMode;

        if r2 == null goto label18;

        r3 = r0.mAppCompatCallback;

        if r3 == null goto label18;

        interfaceinvoke r3.onSupportActionModeStarted(r2);

     label18:
        r2 = r0.mActionMode;

        return r2;

        catch java.lang.AbstractMethodError from label03 to label04 with label05;
    }

    final int updateStatusGuard(androidx.core.view.WindowInsetsCompat, android.graphics.Rect)
    {
        android.graphics.Rect $r2, r3, r7;
        android.content.Context $r10;
        byte $b7;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        android.view.View r9, $r13;
        android.widget.FrameLayout$LayoutParams r11, $r14;
        androidx.core.view.WindowInsetsCompat $r1;
        boolean z0, z1, $z2;
        android.view.ViewGroup$LayoutParams $r5;
        androidx.appcompat.app.AppCompatDelegateImpl r0;
        androidx.appcompat.widget.ActionBarContextView r4;
        android.view.ViewGroup r8;
        android.view.ViewGroup$MarginLayoutParams r6, r12;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        i0 = 0;

        if $r1 == null goto label01;

        i0 = virtualinvoke $r1.getSystemWindowInsetTop();

        goto label02;

     label01:
        if $r2 == null goto label02;

        i0 = $r2.top;

     label02:
        z0 = 0;

        r4 = r0.mActionModeView;

        if r4 == null goto label24;

        $r5 = virtualinvoke r4.getLayoutParams();

        z1 = $r5 instanceof android.view.ViewGroup$MarginLayoutParams;

        if z1 == 0 goto label23;

        r4 = r0.mActionModeView;

        $r5 = virtualinvoke r4.getLayoutParams();

        r6 = (android.view.ViewGroup$MarginLayoutParams) $r5;

        z1 = 0;

        r4 = r0.mActionModeView;

        $z2 = virtualinvoke r4.isShown();

        if $z2 == 0 goto label20;

        r3 = r0.mTempRect1;

        if r3 != null goto label03;

        r7 = new android.graphics.Rect;

        specialinvoke r7.<init>();

        r0.mTempRect1 = r7;

        r7 = new android.graphics.Rect;

        specialinvoke r7.<init>();

        r0.mTempRect2 = r7;

     label03:
        r7 = r0.mTempRect1;

        r3 = r0.mTempRect2;

        if $r1 != null goto label04;

        virtualinvoke r7.set($r2);

        goto label05;

     label04:
        $i1 = virtualinvoke $r1.getSystemWindowInsetLeft();

        $i2 = virtualinvoke $r1.getSystemWindowInsetTop();

        $i3 = virtualinvoke $r1.getSystemWindowInsetRight();

        $i4 = virtualinvoke $r1.getSystemWindowInsetBottom();

        virtualinvoke r7.set($i1, $i2, $i3, $i4);

     label05:
        r8 = r0.mSubDecor;

        androidx.appcompat.widget.ViewUtils.computeFitSystemWindows(r8, r7, r3);

        $i3 = r7.top;

        $i4 = r7.left;

        i5 = r7.right;

        r8 = r0.mSubDecor;

        $r1 = androidx.core.view.ViewCompat.getRootWindowInsets(r8);

        if $r1 != null goto label06;

        $i1 = 0;

        goto label07;

     label06:
        $i1 = virtualinvoke $r1.getSystemWindowInsetLeft();

     label07:
        if $r1 != null goto label08;

        $i2 = 0;

        goto label09;

     label08:
        $i2 = virtualinvoke $r1.getSystemWindowInsetRight();

     label09:
        i6 = r6.topMargin;

        if i6 != $i3 goto label10;

        i6 = r6.leftMargin;

        if i6 != $i4 goto label10;

        i6 = r6.rightMargin;

        if i6 == i5 goto label11;

     label10:
        r6.topMargin = $i3;

        r6.leftMargin = $i4;

        r6.rightMargin = i5;

        z1 = 1;

     label11:
        if $i3 <= 0 goto label12;

        r9 = r0.mStatusGuard;

        if r9 != null goto label12;

        $r13 = new android.view.View;

        r9 = $r13;

        $r10 = r0.mContext;

        specialinvoke $r13.<init>($r10);

        r0.mStatusGuard = r9;

        virtualinvoke r9.setVisibility(8);

        $r14 = new android.widget.FrameLayout$LayoutParams;

        r11 = $r14;

        $i3 = r6.topMargin;

        specialinvoke $r14.<init>(-1, $i3, 51);

        r11.leftMargin = $i1;

        r11.rightMargin = $i2;

        r8 = r0.mSubDecor;

        r9 = r0.mStatusGuard;

        virtualinvoke r8.addView(r9, -1, r11);

        goto label14;

     label12:
        r9 = r0.mStatusGuard;

        if r9 == null goto label14;

        $r5 = virtualinvoke r9.getLayoutParams();

        r12 = (android.view.ViewGroup$MarginLayoutParams) $r5;

        $i3 = r12.height;

        $i4 = r6.topMargin;

        if $i3 != $i4 goto label13;

        $i3 = r12.leftMargin;

        if $i3 != $i1 goto label13;

        $i3 = r12.rightMargin;

        if $i3 == $i2 goto label14;

     label13:
        $i3 = r6.topMargin;

        r12.height = $i3;

        r12.leftMargin = $i1;

        r12.rightMargin = $i2;

        r9 = r0.mStatusGuard;

        virtualinvoke r9.setLayoutParams(r12);

        goto label14;

     label14:
        r9 = r0.mStatusGuard;

        if r9 == null goto label15;

        z0 = 1;

        goto label16;

     label15:
        z0 = 0;

     label16:
        if z0 == 0 goto label17;

        $i1 = virtualinvoke r9.getVisibility();

        if $i1 == 0 goto label17;

        r9 = r0.mStatusGuard;

        specialinvoke r0.updateStatusGuardColor(r9);

     label17:
        $z2 = r0.mOverlayActionMode;

        if $z2 != 0 goto label18;

        if z0 == 0 goto label18;

        $i1 = 0;

        goto label19;

     label18:
        $i1 = i0;

     label19:
        goto label22;

     label20:
        $i1 = r6.topMargin;

        if $i1 == 0 goto label21;

        z1 = 1;

        r6.topMargin = 0;

        $i1 = i0;

        goto label22;

     label21:
        $i1 = i0;

     label22:
        if z1 == 0 goto label25;

        r4 = r0.mActionModeView;

        virtualinvoke r4.setLayoutParams(r6);

        goto label25;

     label23:
        $i1 = i0;

        goto label25;

     label24:
        $i1 = i0;

     label25:
        r9 = r0.mStatusGuard;

        if r9 == null goto label28;

        if z0 == 0 goto label26;

        $b7 = 0;

        goto label27;

     label26:
        $b7 = 8;

     label27:
        virtualinvoke r9.setVisibility($b7);

     label28:
        return $i1;
    }
}
