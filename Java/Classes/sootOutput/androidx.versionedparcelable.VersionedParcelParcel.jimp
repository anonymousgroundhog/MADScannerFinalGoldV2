class androidx.versionedparcelable.VersionedParcelParcel extends androidx.versionedparcelable.VersionedParcel
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private int mCurrentField;
    private final int mEnd;
    private int mFieldId;
    private int mNextRead;
    private final int mOffset;
    private final android.os.Parcel mParcel;
    private final android.util.SparseIntArray mPositionLookup;
    private final java.lang.String mPrefix;

    void <init>(android.os.Parcel)
    {
        int $i0, $i1;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r1;
        androidx.collection.ArrayMap $r2, $r3, $r4;

        r0 := @this;

        $r1 := @parameter0;

        $i0 = virtualinvoke $r1.dataPosition();

        $i1 = virtualinvoke $r1.dataSize();

        $r2 = new androidx.collection.ArrayMap;

        specialinvoke $r2.<init>();

        $r3 = new androidx.collection.ArrayMap;

        specialinvoke $r3.<init>();

        $r4 = new androidx.collection.ArrayMap;

        specialinvoke $r4.<init>();

        specialinvoke r0.<init>($r1, $i0, $i1, "", $r2, $r3, $r4);

        return;
    }

    private void <init>(android.os.Parcel, int, int, java.lang.String, androidx.collection.ArrayMap, androidx.collection.ArrayMap, androidx.collection.ArrayMap)
    {
        android.util.SparseIntArray $r6;
        android.os.Parcel $r1;
        int $i0, $i1;
        java.lang.String $r2;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        androidx.collection.ArrayMap r3, r4, r5;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        $r2 := @parameter3;

        r3 := @parameter4;

        r4 := @parameter5;

        r5 := @parameter6;

        specialinvoke r0.<init>(r3, r4, r5);

        $r6 = new android.util.SparseIntArray;

        specialinvoke $r6.<init>();

        r0.mPositionLookup = $r6;

        r0.mCurrentField = -1;

        r0.mNextRead = 0;

        r0.mFieldId = -1;

        r0.mParcel = $r1;

        r0.mOffset = $i0;

        r0.mEnd = $i1;

        r0.mNextRead = $i0;

        r0.mPrefix = $r2;

        return;
    }

    public void closeField()
    {
        android.util.SparseIntArray r1;
        int i0, $i1, $i2;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel r2;

        r0 := @this;

        i0 = r0.mCurrentField;

        if i0 < 0 goto label1;

        r1 = r0.mPositionLookup;

        $i1 = virtualinvoke r1.get(i0);

        r2 = r0.mParcel;

        $i2 = virtualinvoke r2.dataPosition();

        i0 = $i2 - $i1;

        r2 = r0.mParcel;

        virtualinvoke r2.setDataPosition($i1);

        r2 = r0.mParcel;

        virtualinvoke r2.writeInt(i0);

        r2 = r0.mParcel;

        virtualinvoke r2.setDataPosition($i2);

     label1:
        return;
    }

    protected androidx.versionedparcelable.VersionedParcel createSubParcel()
    {
        android.os.Parcel $r1;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        androidx.versionedparcelable.VersionedParcelParcel r0, $r5;
        androidx.collection.ArrayMap $r2, $r3, $r4;

        r0 := @this;

        $r5 = new androidx.versionedparcelable.VersionedParcelParcel;

        $r1 = r0.mParcel;

        $i0 = virtualinvoke $r1.dataPosition();

        $i1 = r0.mNextRead;

        $i2 = r0.mOffset;

        if $i1 != $i2 goto label1;

        $i1 = r0.mEnd;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $r7 = r0.mPrefix;

        $r6 = virtualinvoke $r6.append($r7);

        $r6 = virtualinvoke $r6.append("  ");

        $r7 = virtualinvoke $r6.toString();

        $r2 = r0.mReadCache;

        $r3 = r0.mWriteCache;

        $r4 = r0.mParcelizerCache;

        specialinvoke $r5.<init>($r1, $i0, $i1, $r7, $r2, $r3, $r4);

        return $r5;
    }

    public boolean readBoolean()
    {
        int $i0;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r1;

        r0 := @this;

        $r1 = r0.mParcel;

        $i0 = virtualinvoke $r1.readInt();

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public android.os.Bundle readBundle()
    {
        android.os.Bundle $r4;
        java.lang.Class $r2;
        java.lang.ClassLoader $r3;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r1;

        r0 := @this;

        $r1 = r0.mParcel;

        $r2 = virtualinvoke r0.getClass();

        $r3 = virtualinvoke $r2.getClassLoader();

        $r4 = virtualinvoke $r1.readBundle($r3);

        return $r4;
    }

    public byte[] readByteArray()
    {
        byte[] r2;
        int $i0;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r1;

        r0 := @this;

        $r1 = r0.mParcel;

        $i0 = virtualinvoke $r1.readInt();

        if $i0 >= 0 goto label1;

        return null;

     label1:
        r2 = newarray (byte)[$i0];

        $r1 = r0.mParcel;

        virtualinvoke $r1.readByteArray(r2);

        return r2;
    }

    protected java.lang.CharSequence readCharSequence()
    {
        java.lang.CharSequence $r4;
        java.lang.Object $r2;
        android.os.Parcelable$Creator $r3;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r1;

        r0 := @this;

        $r3 = android.text.TextUtils.CHAR_SEQUENCE_CREATOR;

        $r1 = r0.mParcel;

        $r2 = interfaceinvoke $r3.createFromParcel($r1);

        $r4 = (java.lang.CharSequence) $r2;

        return $r4;
    }

    public double readDouble()
    {
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r1;
        double $d0;

        r0 := @this;

        $r1 = r0.mParcel;

        $d0 = virtualinvoke $r1.readDouble();

        return $d0;
    }

    public boolean readField(int)
    {
        int $i0, i1, $i2;
        java.lang.String $r1, $r2;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel r3;

        r0 := @this;

        $i0 := @parameter0;

     label1:
        i1 = r0.mNextRead;

        $i2 = r0.mEnd;

        if i1 >= $i2 goto label4;

        i1 = r0.mFieldId;

        if i1 != $i0 goto label2;

        return 1;

     label2:
        $r1 = java.lang.String.valueOf(i1);

        $r2 = java.lang.String.valueOf($i0);

        i1 = virtualinvoke $r1.compareTo($r2);

        if i1 <= 0 goto label3;

        return 0;

     label3:
        r3 = r0.mParcel;

        i1 = r0.mNextRead;

        virtualinvoke r3.setDataPosition(i1);

        r3 = r0.mParcel;

        i1 = virtualinvoke r3.readInt();

        r3 = r0.mParcel;

        $i2 = virtualinvoke r3.readInt();

        r0.mFieldId = $i2;

        $i2 = r0.mNextRead;

        i1 = $i2 + i1;

        r0.mNextRead = i1;

        goto label1;

     label4:
        i1 = r0.mFieldId;

        if i1 != $i0 goto label5;

        return 1;

     label5:
        return 0;
    }

    public float readFloat()
    {
        float $f0;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r1;

        r0 := @this;

        $r1 = r0.mParcel;

        $f0 = virtualinvoke $r1.readFloat();

        return $f0;
    }

    public int readInt()
    {
        int $i0;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r1;

        r0 := @this;

        $r1 = r0.mParcel;

        $i0 = virtualinvoke $r1.readInt();

        return $i0;
    }

    public long readLong()
    {
        long $l0;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r1;

        r0 := @this;

        $r1 = r0.mParcel;

        $l0 = virtualinvoke $r1.readLong();

        return $l0;
    }

    public android.os.Parcelable readParcelable()
    {
        android.os.Parcelable $r4;
        java.lang.Class $r2;
        java.lang.ClassLoader $r3;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r1;

        r0 := @this;

        $r1 = r0.mParcel;

        $r2 = virtualinvoke r0.getClass();

        $r3 = virtualinvoke $r2.getClassLoader();

        $r4 = virtualinvoke $r1.readParcelable($r3);

        return $r4;
    }

    public java.lang.String readString()
    {
        java.lang.String $r1;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r2;

        r0 := @this;

        $r2 = r0.mParcel;

        $r1 = virtualinvoke $r2.readString();

        return $r1;
    }

    public android.os.IBinder readStrongBinder()
    {
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.IBinder $r1;
        android.os.Parcel $r2;

        r0 := @this;

        $r2 = r0.mParcel;

        $r1 = virtualinvoke $r2.readStrongBinder();

        return $r1;
    }

    public void setOutputField(int)
    {
        android.util.SparseIntArray $r1;
        int $i0, $i1;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r2;

        r0 := @this;

        $i0 := @parameter0;

        virtualinvoke r0.closeField();

        r0.mCurrentField = $i0;

        $r1 = r0.mPositionLookup;

        $r2 = r0.mParcel;

        $i1 = virtualinvoke $r2.dataPosition();

        virtualinvoke $r1.put($i0, $i1);

        virtualinvoke r0.writeInt(0);

        virtualinvoke r0.writeInt($i0);

        return;
    }

    public void writeBoolean(boolean)
    {
        int $i0;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r1;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        $r1 = r0.mParcel;

        $i0 = (int) $z0;

        virtualinvoke $r1.writeInt($i0);

        return;
    }

    public void writeBundle(android.os.Bundle)
    {
        android.os.Bundle $r1;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mParcel;

        virtualinvoke $r2.writeBundle($r1);

        return;
    }

    public void writeByteArray(byte[])
    {
        byte[] $r1;
        int $i0;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r2;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 == null goto label1;

        $r2 = r0.mParcel;

        $i0 = lengthof $r1;

        virtualinvoke $r2.writeInt($i0);

        $r2 = r0.mParcel;

        virtualinvoke $r2.writeByteArray($r1);

        return;

     label1:
        $r2 = r0.mParcel;

        virtualinvoke $r2.writeInt(-1);

        return;
    }

    public void writeByteArray(byte[], int, int)
    {
        byte[] $r1;
        int $i0, $i1, $i2;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r2;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        if $r1 == null goto label1;

        $r2 = r0.mParcel;

        $i2 = lengthof $r1;

        virtualinvoke $r2.writeInt($i2);

        $r2 = r0.mParcel;

        virtualinvoke $r2.writeByteArray($r1, $i0, $i1);

        return;

     label1:
        $r2 = r0.mParcel;

        virtualinvoke $r2.writeInt(-1);

        return;
    }

    protected void writeCharSequence(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mParcel;

        android.text.TextUtils.writeToParcel($r1, $r2, 0);

        return;
    }

    public void writeDouble(double)
    {
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r1;
        double $d0;

        r0 := @this;

        $d0 := @parameter0;

        $r1 = r0.mParcel;

        virtualinvoke $r1.writeDouble($d0);

        return;
    }

    public void writeFloat(float)
    {
        float $f0;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r1;

        r0 := @this;

        $f0 := @parameter0;

        $r1 = r0.mParcel;

        virtualinvoke $r1.writeFloat($f0);

        return;
    }

    public void writeInt(int)
    {
        int $i0;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mParcel;

        virtualinvoke $r1.writeInt($i0);

        return;
    }

    public void writeLong(long)
    {
        long $l0;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r1;

        r0 := @this;

        $l0 := @parameter0;

        $r1 = r0.mParcel;

        virtualinvoke $r1.writeLong($l0);

        return;
    }

    public void writeParcelable(android.os.Parcelable)
    {
        android.os.Parcelable $r1;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mParcel;

        virtualinvoke $r2.writeParcelable($r1, 0);

        return;
    }

    public void writeString(java.lang.String)
    {
        java.lang.String $r1;
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.Parcel $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mParcel;

        virtualinvoke $r2.writeString($r1);

        return;
    }

    public void writeStrongBinder(android.os.IBinder)
    {
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.IBinder $r1;
        android.os.Parcel $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mParcel;

        virtualinvoke $r2.writeStrongBinder($r1);

        return;
    }

    public void writeStrongInterface(android.os.IInterface)
    {
        androidx.versionedparcelable.VersionedParcelParcel r0;
        android.os.IInterface $r1;
        android.os.Parcel $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mParcel;

        virtualinvoke $r2.writeStrongInterface($r1);

        return;
    }
}
