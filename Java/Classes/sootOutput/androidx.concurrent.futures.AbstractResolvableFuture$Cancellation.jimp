final class androidx.concurrent.futures.AbstractResolvableFuture$Cancellation extends java.lang.Object
{
    static final androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_CANCELLED;
    static final androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_INTERRUPTED;
    final java.lang.Throwable cause;
    final boolean wasInterrupted;

    static void <clinit>()
    {
        boolean $z0;
        androidx.concurrent.futures.AbstractResolvableFuture$Cancellation $r0;

        $z0 = androidx.concurrent.futures.AbstractResolvableFuture.GENERATE_CANCELLATION_CAUSES;

        if $z0 == 0 goto label1;

        androidx.concurrent.futures.AbstractResolvableFuture$Cancellation.CAUSELESS_CANCELLED = null;

        androidx.concurrent.futures.AbstractResolvableFuture$Cancellation.CAUSELESS_INTERRUPTED = null;

        return;

     label1:
        $r0 = new androidx.concurrent.futures.AbstractResolvableFuture$Cancellation;

        specialinvoke $r0.<init>(0, null);

        androidx.concurrent.futures.AbstractResolvableFuture$Cancellation.CAUSELESS_CANCELLED = $r0;

        $r0 = new androidx.concurrent.futures.AbstractResolvableFuture$Cancellation;

        specialinvoke $r0.<init>(1, null);

        androidx.concurrent.futures.AbstractResolvableFuture$Cancellation.CAUSELESS_INTERRUPTED = $r0;

        return;
    }

    void <init>(boolean, java.lang.Throwable)
    {
        java.lang.Throwable $r1;
        androidx.concurrent.futures.AbstractResolvableFuture$Cancellation r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        $r1 := @parameter1;

        specialinvoke r0.<init>();

        r0.wasInterrupted = $z0;

        r0.cause = $r1;

        return;
    }
}
