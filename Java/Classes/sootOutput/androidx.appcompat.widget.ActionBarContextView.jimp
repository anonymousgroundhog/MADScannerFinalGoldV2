public class androidx.appcompat.widget.ActionBarContextView extends androidx.appcompat.widget.AbsActionBarView
{
    private android.view.View mClose;
    private int mCloseItemLayout;
    private android.view.View mCustomView;
    private java.lang.CharSequence mSubtitle;
    private int mSubtitleStyleRes;
    private android.widget.TextView mSubtitleView;
    private java.lang.CharSequence mTitle;
    private android.widget.LinearLayout mTitleLayout;
    private boolean mTitleOptional;
    private int mTitleStyleRes;
    private android.widget.TextView mTitleView;

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>($r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int $i0;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 = androidx.appcompat.R$attr.actionModeStyle;

        specialinvoke r0.<init>($r1, $r2, $i0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r5;
        androidx.appcompat.widget.ActionBarContextView r0;
        android.util.AttributeSet $r2;
        int[] r3;
        androidx.appcompat.widget.TintTypedArray $r4;
        int $i0, $i1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 := @parameter2;

        specialinvoke r0.<init>($r1, $r2, $i0);

        r3 = androidx.appcompat.R$styleable.ActionMode;

        $r4 = androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes($r1, $r2, r3, $i0, 0);

        $i0 = androidx.appcompat.R$styleable.ActionMode_background;

        $r5 = virtualinvoke $r4.getDrawable($i0);

        androidx.core.view.ViewCompat.setBackground(r0, $r5);

        $i0 = androidx.appcompat.R$styleable.ActionMode_titleTextStyle;

        $i0 = virtualinvoke $r4.getResourceId($i0, 0);

        r0.mTitleStyleRes = $i0;

        $i0 = androidx.appcompat.R$styleable.ActionMode_subtitleTextStyle;

        $i0 = virtualinvoke $r4.getResourceId($i0, 0);

        r0.mSubtitleStyleRes = $i0;

        $i0 = androidx.appcompat.R$styleable.ActionMode_height;

        $i0 = virtualinvoke $r4.getLayoutDimension($i0, 0);

        r0.mContentHeight = $i0;

        $i0 = androidx.appcompat.R$styleable.ActionMode_closeItemLayout;

        $i1 = androidx.appcompat.R$layout.abc_action_mode_close_item_material;

        $i0 = virtualinvoke $r4.getResourceId($i0, $i1);

        r0.mCloseItemLayout = $i0;

        virtualinvoke $r4.recycle();

        return;
    }

    private void initTitle()
    {
        android.content.Context $r2;
        android.widget.LinearLayout r1;
        android.view.ViewParent $r7;
        java.lang.CharSequence r6;
        android.view.LayoutInflater $r3;
        androidx.appcompat.widget.ActionBarContextView r0;
        android.widget.TextView r5;
        byte $b1, $b2;
        int i0;
        android.view.View $r4;
        boolean $z0, $z1;

        r0 := @this;

        r1 = r0.mTitleLayout;

        if r1 != null goto label2;

        $r2 = virtualinvoke r0.getContext();

        $r3 = android.view.LayoutInflater.from($r2);

        i0 = androidx.appcompat.R$layout.abc_action_bar_title_item;

        virtualinvoke $r3.inflate(i0, r0);

        i0 = virtualinvoke r0.getChildCount();

        i0 = i0 + -1;

        $r4 = virtualinvoke r0.getChildAt(i0);

        r1 = (android.widget.LinearLayout) $r4;

        r0.mTitleLayout = r1;

        i0 = androidx.appcompat.R$id.action_bar_title;

        $r4 = virtualinvoke r1.findViewById(i0);

        r5 = (android.widget.TextView) $r4;

        r0.mTitleView = r5;

        r1 = r0.mTitleLayout;

        i0 = androidx.appcompat.R$id.action_bar_subtitle;

        $r4 = virtualinvoke r1.findViewById(i0);

        r5 = (android.widget.TextView) $r4;

        r0.mSubtitleView = r5;

        i0 = r0.mTitleStyleRes;

        if i0 == 0 goto label1;

        r5 = r0.mTitleView;

        $r2 = virtualinvoke r0.getContext();

        i0 = r0.mTitleStyleRes;

        virtualinvoke r5.setTextAppearance($r2, i0);

     label1:
        i0 = r0.mSubtitleStyleRes;

        if i0 == 0 goto label2;

        r5 = r0.mSubtitleView;

        $r2 = virtualinvoke r0.getContext();

        i0 = r0.mSubtitleStyleRes;

        virtualinvoke r5.setTextAppearance($r2, i0);

     label2:
        r5 = r0.mTitleView;

        r6 = r0.mTitle;

        virtualinvoke r5.setText(r6);

        r5 = r0.mSubtitleView;

        r6 = r0.mSubtitle;

        virtualinvoke r5.setText(r6);

        r6 = r0.mTitle;

        $z0 = android.text.TextUtils.isEmpty(r6);

        $z0 = $z0 ^ 1;

        r6 = r0.mSubtitle;

        $z1 = android.text.TextUtils.isEmpty(r6);

        $z1 = $z1 ^ 1;

        r5 = r0.mSubtitleView;

        $b1 = 0;

        if $z1 == 0 goto label3;

        $b2 = 0;

        goto label4;

     label3:
        $b2 = 8;

     label4:
        virtualinvoke r5.setVisibility($b2);

        r1 = r0.mTitleLayout;

        if $z0 != 0 goto label6;

        if $z1 == 0 goto label5;

        goto label6;

     label5:
        $b1 = 8;

     label6:
        virtualinvoke r1.setVisibility($b1);

        r1 = r0.mTitleLayout;

        $r7 = virtualinvoke r1.getParent();

        if $r7 != null goto label7;

        r1 = r0.mTitleLayout;

        virtualinvoke r0.addView(r1);

     label7:
        return;
    }

    public volatile void animateToVisibility(int)
    {
        int $i0;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.animateToVisibility($i0);

        return;
    }

    public volatile boolean canShowOverflowMenu()
    {
        androidx.appcompat.widget.ActionBarContextView r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.canShowOverflowMenu();

        return $z0;
    }

    public void closeMode()
    {
        android.view.View $r1;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        $r1 = r0.mClose;

        if $r1 != null goto label1;

        virtualinvoke r0.killMode();

     label1:
        return;
    }

    public volatile void dismissPopupMenus()
    {
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        specialinvoke r0.dismissPopupMenus();

        return;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        androidx.appcompat.widget.ActionBarContextView r0;
        android.view.ViewGroup$MarginLayoutParams $r1;

        r0 := @this;

        $r1 = new android.view.ViewGroup$MarginLayoutParams;

        specialinvoke $r1.<init>(-1, -2);

        return $r1;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.content.Context $r3;
        android.util.AttributeSet $r1;
        android.view.ViewGroup$MarginLayoutParams $r2;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = new android.view.ViewGroup$MarginLayoutParams;

        $r3 = virtualinvoke r0.getContext();

        specialinvoke $r2.<init>($r3, $r1);

        return $r2;
    }

    public volatile int getAnimatedVisibility()
    {
        int $i0;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        $i0 = specialinvoke r0.getAnimatedVisibility();

        return $i0;
    }

    public volatile int getContentHeight()
    {
        int $i0;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        $i0 = specialinvoke r0.getContentHeight();

        return $i0;
    }

    public java.lang.CharSequence getSubtitle()
    {
        java.lang.CharSequence r1;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        r1 = r0.mSubtitle;

        return r1;
    }

    public java.lang.CharSequence getTitle()
    {
        java.lang.CharSequence r1;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        r1 = r0.mTitle;

        return r1;
    }

    public boolean hideOverflowMenu()
    {
        androidx.appcompat.widget.ActionMenuPresenter $r1;
        androidx.appcompat.widget.ActionBarContextView r0;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mActionMenuPresenter;

        if $r1 == null goto label1;

        $r1 = r0.mActionMenuPresenter;

        $z0 = virtualinvoke $r1.hideOverflowMenu();

        return $z0;

     label1:
        return 0;
    }

    public void initForMode(androidx.appcompat.view.ActionMode)
    {
        android.content.Context $r3;
        android.view.ViewParent $r5;
        android.view.ViewGroup$LayoutParams $r13;
        android.view.LayoutInflater $r4;
        androidx.appcompat.view.menu.MenuBuilder r7;
        androidx.appcompat.view.menu.MenuView $r9;
        androidx.appcompat.widget.ActionBarContextView r0;
        androidx.appcompat.view.ActionMode $r1;
        androidx.appcompat.widget.ActionMenuView $r10;
        int i0;
        android.view.Menu $r6;
        android.view.View r2;
        androidx.appcompat.widget.ActionMenuPresenter r8, $r12;
        androidx.appcompat.widget.ActionBarContextView$1 $r11;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mClose;

        if r2 != null goto label1;

        $r3 = virtualinvoke r0.getContext();

        $r4 = android.view.LayoutInflater.from($r3);

        i0 = r0.mCloseItemLayout;

        r2 = virtualinvoke $r4.inflate(i0, r0, 0);

        r0.mClose = r2;

        virtualinvoke r0.addView(r2);

        goto label2;

     label1:
        $r5 = virtualinvoke r2.getParent();

        if $r5 != null goto label2;

        r2 = r0.mClose;

        virtualinvoke r0.addView(r2);

        goto label2;

     label2:
        r2 = r0.mClose;

        i0 = androidx.appcompat.R$id.action_mode_close_button;

        r2 = virtualinvoke r2.findViewById(i0);

        $r11 = new androidx.appcompat.widget.ActionBarContextView$1;

        specialinvoke $r11.<init>(r0, $r1);

        virtualinvoke r2.setOnClickListener($r11);

        $r6 = virtualinvoke $r1.getMenu();

        r7 = (androidx.appcompat.view.menu.MenuBuilder) $r6;

        r8 = r0.mActionMenuPresenter;

        if r8 == null goto label3;

        r8 = r0.mActionMenuPresenter;

        virtualinvoke r8.dismissPopupMenus();

     label3:
        $r12 = new androidx.appcompat.widget.ActionMenuPresenter;

        $r3 = virtualinvoke r0.getContext();

        specialinvoke $r12.<init>($r3);

        r0.mActionMenuPresenter = $r12;

        r8 = r0.mActionMenuPresenter;

        virtualinvoke r8.setReserveOverflow(1);

        $r13 = new android.view.ViewGroup$LayoutParams;

        i0 = -2;

        specialinvoke $r13.<init>(i0, -1);

        r8 = r0.mActionMenuPresenter;

        $r3 = r0.mPopupContext;

        virtualinvoke r7.addMenuPresenter(r8, $r3);

        r8 = r0.mActionMenuPresenter;

        $r9 = virtualinvoke r8.getMenuView(r0);

        $r10 = (androidx.appcompat.widget.ActionMenuView) $r9;

        r0.mMenuView = $r10;

        $r10 = r0.mMenuView;

        androidx.core.view.ViewCompat.setBackground($r10, null);

        $r10 = r0.mMenuView;

        virtualinvoke r0.addView($r10, $r13);

        return;
    }

    public volatile boolean isOverflowMenuShowPending()
    {
        androidx.appcompat.widget.ActionBarContextView r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.isOverflowMenuShowPending();

        return $z0;
    }

    public boolean isOverflowMenuShowing()
    {
        androidx.appcompat.widget.ActionMenuPresenter $r1;
        androidx.appcompat.widget.ActionBarContextView r0;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mActionMenuPresenter;

        if $r1 == null goto label1;

        $r1 = r0.mActionMenuPresenter;

        $z0 = virtualinvoke $r1.isOverflowMenuShowing();

        return $z0;

     label1:
        return 0;
    }

    public volatile boolean isOverflowReserved()
    {
        androidx.appcompat.widget.ActionBarContextView r0;
        boolean $z0;

        r0 := @this;

        $z0 = specialinvoke r0.isOverflowReserved();

        return $z0;
    }

    public boolean isTitleOptional()
    {
        androidx.appcompat.widget.ActionBarContextView r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mTitleOptional;

        return z0;
    }

    public void killMode()
    {
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        virtualinvoke r0.removeAllViews();

        r0.mCustomView = null;

        r0.mMenuView = null;

        return;
    }

    public void onDetachedFromWindow()
    {
        androidx.appcompat.widget.ActionMenuPresenter $r1;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        specialinvoke r0.onDetachedFromWindow();

        $r1 = r0.mActionMenuPresenter;

        if $r1 == null goto label1;

        $r1 = r0.mActionMenuPresenter;

        virtualinvoke $r1.hideOverflowMenu();

        $r1 = r0.mActionMenuPresenter;

        virtualinvoke $r1.hideSubMenus();

     label1:
        return;
    }

    public volatile boolean onHoverEvent(android.view.MotionEvent)
    {
        androidx.appcompat.widget.ActionBarContextView r0;
        android.view.MotionEvent $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = specialinvoke r0.onHoverEvent($r1);

        return $z0;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.content.Context $r4;
        java.lang.CharSequence $r5;
        int $i0;
        java.lang.Class $r2;
        android.view.accessibility.AccessibilityEvent $r1;
        java.lang.String $r3;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 = virtualinvoke $r1.getEventType();

        if $i0 != 32 goto label1;

        virtualinvoke $r1.setSource(r0);

        $r2 = virtualinvoke r0.getClass();

        $r3 = virtualinvoke $r2.getName();

        virtualinvoke $r1.setClassName($r3);

        $r4 = virtualinvoke r0.getContext();

        $r3 = virtualinvoke $r4.getPackageName();

        virtualinvoke $r1.setPackageName($r3);

        $r5 = r0.mTitle;

        virtualinvoke $r1.setContentDescription($r5);

        return;

     label1:
        specialinvoke r0.onInitializeAccessibilityEvent($r1);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.LinearLayout r4;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.appcompat.widget.ActionBarContextView r0;
        androidx.appcompat.widget.ActionMenuView r5;
        android.view.ViewGroup$MarginLayoutParams r3;
        int $i0, $i1, $i2, $i3, i4, i5, $i6;
        android.view.View $r1;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        $i2 := @parameter3;

        $i3 := @parameter4;

        $z0 = androidx.appcompat.widget.ViewUtils.isLayoutRtl(r0);

        if $z0 == 0 goto label01;

        i5 = $i2 - $i0;

        $i6 = virtualinvoke r0.getPaddingRight();

        $i6 = i5 - $i6;

        goto label02;

     label01:
        $i6 = virtualinvoke r0.getPaddingLeft();

     label02:
        i5 = virtualinvoke r0.getPaddingTop();

        $i1 = $i3 - $i1;

        $i3 = virtualinvoke r0.getPaddingTop();

        $i1 = $i1 - $i3;

        $i3 = virtualinvoke r0.getPaddingBottom();

        $i1 = $i1 - $i3;

        $r1 = r0.mClose;

        if $r1 == null goto label07;

        $i3 = virtualinvoke $r1.getVisibility();

        if $i3 == 8 goto label07;

        $r1 = r0.mClose;

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        if $z0 == 0 goto label03;

        $i3 = r3.rightMargin;

        goto label04;

     label03:
        $i3 = r3.leftMargin;

     label04:
        i4 = $i3;

        if $z0 == 0 goto label05;

        $i3 = r3.leftMargin;

        goto label06;

     label05:
        $i3 = r3.rightMargin;

     label06:
        $i6 = androidx.appcompat.widget.ActionBarContextView.next($i6, i4, $z0);

        $r1 = r0.mClose;

        i4 = virtualinvoke r0.positionChild($r1, $i6, i5, $i1, $z0);

        $i6 = $i6 + i4;

        $i3 = androidx.appcompat.widget.ActionBarContextView.next($i6, $i3, $z0);

        goto label08;

     label07:
        $i3 = $i6;

     label08:
        r4 = r0.mTitleLayout;

        if r4 == null goto label09;

        $r1 = r0.mCustomView;

        if $r1 != null goto label09;

        $i6 = virtualinvoke r4.getVisibility();

        if $i6 == 8 goto label09;

        r4 = r0.mTitleLayout;

        $i6 = virtualinvoke r0.positionChild(r4, $i3, i5, $i1, $z0);

        $i3 = $i3 + $i6;

     label09:
        $r1 = r0.mCustomView;

        if $r1 == null goto label10;

        virtualinvoke r0.positionChild($r1, $i3, i5, $i1, $z0);

     label10:
        if $z0 == 0 goto label11;

        $i0 = virtualinvoke r0.getPaddingLeft();

        goto label12;

     label11:
        $i0 = $i2 - $i0;

        $i2 = virtualinvoke r0.getPaddingRight();

        $i0 = $i0 - $i2;

     label12:
        r5 = r0.mMenuView;

        if r5 == null goto label13;

        r5 = r0.mMenuView;

        $z0 = $z0 ^ 1;

        virtualinvoke r0.positionChild(r5, $i0, i5, $i1, $z0);

     label13:
        return;
    }

    protected void onMeasure(int, int)
    {
        java.lang.IllegalStateException $r11;
        android.view.ViewParent $r5;
        android.widget.LinearLayout r6;
        androidx.appcompat.widget.ActionMenuView r4;
        byte b7;
        int $i0, $i1, $i2, i3, $i4, $i5, i6, i8, i9;
        android.view.View r1;
        java.lang.String $r9;
        boolean z0;
        android.view.ViewGroup$LayoutParams $r2;
        androidx.appcompat.widget.ActionBarContextView r0;
        android.view.ViewGroup$MarginLayoutParams r3;
        java.lang.StringBuilder r7, $r10;
        java.lang.Class $r8;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 = android.view.View$MeasureSpec.getMode($i0);

        i3 = 1073741824;

        if $i2 != 1073741824 goto label24;

        $i2 = android.view.View$MeasureSpec.getMode($i1);

        if $i2 == 0 goto label23;

        $i0 = android.view.View$MeasureSpec.getSize($i0);

        $i2 = r0.mContentHeight;

        if $i2 <= 0 goto label01;

        $i2 = r0.mContentHeight;

        goto label02;

     label01:
        $i2 = android.view.View$MeasureSpec.getSize($i1);

     label02:
        $i1 = virtualinvoke r0.getPaddingTop();

        $i4 = virtualinvoke r0.getPaddingBottom();

        $i1 = $i1 + $i4;

        $i4 = virtualinvoke r0.getPaddingLeft();

        $i4 = $i0 - $i4;

        $i5 = virtualinvoke r0.getPaddingRight();

        i6 = $i4 - $i5;

        $i4 = $i2 - $i1;

        $i5 = android.view.View$MeasureSpec.makeMeasureSpec($i4, -2147483648);

        r1 = r0.mClose;

        b7 = 0;

        if r1 == null goto label03;

        i6 = virtualinvoke r0.measureChildView(r1, i6, $i5, 0);

        r1 = r0.mClose;

        $r2 = virtualinvoke r1.getLayoutParams();

        r3 = (android.view.ViewGroup$MarginLayoutParams) $r2;

        i8 = r3.leftMargin;

        i9 = r3.rightMargin;

        i8 = i8 + i9;

        i6 = i6 - i8;

     label03:
        r4 = r0.mMenuView;

        if r4 == null goto label04;

        r4 = r0.mMenuView;

        $r5 = virtualinvoke r4.getParent();

        if $r5 != r0 goto label04;

        r4 = r0.mMenuView;

        i6 = virtualinvoke r0.measureChildView(r4, i6, $i5, 0);

     label04:
        r6 = r0.mTitleLayout;

        if r6 == null goto label11;

        r1 = r0.mCustomView;

        if r1 != null goto label11;

        z0 = r0.mTitleOptional;

        if z0 == 0 goto label10;

        i8 = android.view.View$MeasureSpec.makeMeasureSpec(0, 0);

        r6 = r0.mTitleLayout;

        virtualinvoke r6.measure(i8, $i5);

        r6 = r0.mTitleLayout;

        $i5 = virtualinvoke r6.getMeasuredWidth();

        if $i5 > i6 goto label05;

        z0 = 1;

        goto label06;

     label05:
        z0 = 0;

     label06:
        if z0 == 0 goto label07;

        i6 = i6 - $i5;

     label07:
        r6 = r0.mTitleLayout;

        if z0 == 0 goto label08;

        goto label09;

     label08:
        b7 = 8;

     label09:
        virtualinvoke r6.setVisibility(b7);

        goto label11;

     label10:
        i6 = virtualinvoke r0.measureChildView(r6, i6, $i5, 0);

     label11:
        r1 = r0.mCustomView;

        if r1 == null goto label18;

        $r2 = virtualinvoke r1.getLayoutParams();

        $i5 = $r2.width;

        i8 = -2;

        if $i5 == i8 goto label12;

        $i5 = 1073741824;

        goto label13;

     label12:
        $i5 = -2147483648;

     label13:
        i8 = $r2.width;

        if i8 < 0 goto label14;

        i8 = $r2.width;

        i6 = java.lang.Math.min(i8, i6);

        goto label14;

     label14:
        i8 = $r2.height;

        i9 = -2;

        if i8 == i9 goto label15;

        goto label16;

     label15:
        i3 = -2147483648;

     label16:
        i8 = $r2.height;

        if i8 < 0 goto label17;

        i8 = $r2.height;

        $i4 = java.lang.Math.min(i8, $i4);

        goto label17;

     label17:
        r1 = r0.mCustomView;

        $i5 = android.view.View$MeasureSpec.makeMeasureSpec(i6, $i5);

        i3 = android.view.View$MeasureSpec.makeMeasureSpec($i4, i3);

        virtualinvoke r1.measure($i5, i3);

        goto label18;

     label18:
        i3 = r0.mContentHeight;

        if i3 > 0 goto label22;

        i3 = 0;

        $i2 = virtualinvoke r0.getChildCount();

        $i4 = 0;

     label19:
        if $i4 >= $i2 goto label21;

        r1 = virtualinvoke r0.getChildAt($i4);

        $i5 = virtualinvoke r1.getMeasuredHeight();

        $i5 = $i5 + $i1;

        if $i5 <= i3 goto label20;

        i3 = $i5;

     label20:
        $i4 = $i4 + 1;

        goto label19;

     label21:
        virtualinvoke r0.setMeasuredDimension($i0, i3);

        return;

     label22:
        virtualinvoke r0.setMeasuredDimension($i0, $i2);

        return;

     label23:
        $r11 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<init>();

        $r8 = virtualinvoke r0.getClass();

        $r9 = virtualinvoke $r8.getSimpleName();

        r7 = virtualinvoke $r10.append($r9);

        r7 = virtualinvoke r7.append(" can only be used with android:layout_height=\"wrap_content\"");

        $r9 = virtualinvoke r7.toString();

        specialinvoke $r11.<init>($r9);

        throw $r11;

     label24:
        $r11 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<init>();

        $r8 = virtualinvoke r0.getClass();

        $r9 = virtualinvoke $r8.getSimpleName();

        r7 = virtualinvoke $r10.append($r9);

        r7 = virtualinvoke r7.append(" can only be used with android:layout_width=\"match_parent\" (or fill_parent)");

        $r9 = virtualinvoke r7.toString();

        specialinvoke $r11.<init>($r9);

        goto label25;

     label25:
        throw $r11;
    }

    public volatile boolean onTouchEvent(android.view.MotionEvent)
    {
        androidx.appcompat.widget.ActionBarContextView r0;
        android.view.MotionEvent $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = specialinvoke r0.onTouchEvent($r1);

        return $z0;
    }

    public volatile void postShowOverflowMenu()
    {
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        specialinvoke r0.postShowOverflowMenu();

        return;
    }

    public void setContentHeight(int)
    {
        int $i0;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        $i0 := @parameter0;

        r0.mContentHeight = $i0;

        return;
    }

    public void setCustomView(android.view.View)
    {
        android.widget.LinearLayout $r3;
        android.view.View $r1, $r2;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mCustomView;

        if $r2 == null goto label1;

        virtualinvoke r0.removeView($r2);

     label1:
        r0.mCustomView = $r1;

        if $r1 == null goto label2;

        $r3 = r0.mTitleLayout;

        if $r3 == null goto label2;

        virtualinvoke r0.removeView($r3);

        r0.mTitleLayout = null;

     label2:
        if $r1 == null goto label3;

        virtualinvoke r0.addView($r1);

     label3:
        virtualinvoke r0.requestLayout();

        return;
    }

    public void setSubtitle(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        $r1 := @parameter0;

        r0.mSubtitle = $r1;

        specialinvoke r0.initTitle();

        return;
    }

    public void setTitle(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        $r1 := @parameter0;

        r0.mTitle = $r1;

        specialinvoke r0.initTitle();

        return;
    }

    public void setTitleOptional(boolean)
    {
        androidx.appcompat.widget.ActionBarContextView r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 := @parameter0;

        $z1 = r0.mTitleOptional;

        if $z0 == $z1 goto label1;

        virtualinvoke r0.requestLayout();

     label1:
        r0.mTitleOptional = $z0;

        return;
    }

    public volatile void setVisibility(int)
    {
        int $i0;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.setVisibility($i0);

        return;
    }

    public volatile androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int, long)
    {
        androidx.core.view.ViewPropertyAnimatorCompat $r1;
        int $i1;
        long $l0;
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        $i1 := @parameter0;

        $l0 := @parameter1;

        $r1 = specialinvoke r0.setupAnimatorToVisibility($i1, $l0);

        return $r1;
    }

    public boolean shouldDelayChildPressedState()
    {
        androidx.appcompat.widget.ActionBarContextView r0;

        r0 := @this;

        return 0;
    }

    public boolean showOverflowMenu()
    {
        androidx.appcompat.widget.ActionMenuPresenter $r1;
        androidx.appcompat.widget.ActionBarContextView r0;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mActionMenuPresenter;

        if $r1 == null goto label1;

        $r1 = r0.mActionMenuPresenter;

        $z0 = virtualinvoke $r1.showOverflowMenu();

        return $z0;

     label1:
        return 0;
    }
}
