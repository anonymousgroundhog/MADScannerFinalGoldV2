class androidx.room.MultiInstanceInvalidationClient$3 extends java.lang.Object implements java.lang.Runnable
{
    final androidx.room.MultiInstanceInvalidationClient this$0;

    void <init>(androidx.room.MultiInstanceInvalidationClient)
    {
        androidx.room.MultiInstanceInvalidationClient $r1;
        androidx.room.MultiInstanceInvalidationClient$3 r0;

        r0 := @this;

        $r1 := @parameter0;

        r0.this$0 = $r1;

        specialinvoke r0.<init>();

        return;
    }

    public void run()
    {
        androidx.room.InvalidationTracker $r6;
        androidx.room.MultiInstanceInvalidationClient$3 r0;
        androidx.room.IMultiInstanceInvalidationCallback $r3;
        androidx.room.InvalidationTracker$Observer $r7;
        android.os.RemoteException r8;
        int $i0;
        androidx.room.MultiInstanceInvalidationClient r1, $r4;
        androidx.room.IMultiInstanceInvalidationService r2;
        java.lang.String $r5;

        r0 := @this;

        r1 = r0.this$0;

        r2 = r1.mService;

        if r2 == null goto label4;

        r1 = r0.this$0;

        $r3 = r1.mCallback;

        $r4 = r0.this$0;

        $r5 = $r4.mName;

     label1:
        $i0 = interfaceinvoke r2.registerCallback($r3, $r5);

     label2:
        r1.mClientId = $i0;

        r1 = r0.this$0;

        $r6 = r1.mInvalidationTracker;

        r1 = r0.this$0;

        $r7 = r1.mObserver;

     label3:
        virtualinvoke $r6.addObserver($r7);

     label4:
        return;

     label5:
        r8 := @caughtexception;

        android.util.Log.w("ROOM", "Cannot register multi-instance invalidation callback", r8);

        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }
}
