public class androidx.fragment.app.Fragment extends java.lang.Object implements android.content.ComponentCallbacks, android.view.View$OnCreateContextMenuListener, androidx.lifecycle.LifecycleOwner, androidx.lifecycle.ViewModelStoreOwner, androidx.savedstate.SavedStateRegistryOwner
{
    static final int ACTIVITY_CREATED;
    static final int CREATED;
    static final int INITIALIZING;
    static final int RESUMED;
    static final int STARTED;
    static final java.lang.Object USE_DEFAULT_TRANSITION;
    boolean mAdded;
    androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo;
    android.os.Bundle mArguments;
    int mBackStackNesting;
    private boolean mCalled;
    androidx.fragment.app.FragmentManagerImpl mChildFragmentManager;
    android.view.ViewGroup mContainer;
    int mContainerId;
    private int mContentLayoutId;
    boolean mDeferStart;
    boolean mDetached;
    int mFragmentId;
    androidx.fragment.app.FragmentManagerImpl mFragmentManager;
    boolean mFromLayout;
    boolean mHasMenu;
    boolean mHidden;
    boolean mHiddenChanged;
    androidx.fragment.app.FragmentHostCallback mHost;
    boolean mInLayout;
    android.view.View mInnerView;
    boolean mIsCreated;
    boolean mIsNewlyAdded;
    private java.lang.Boolean mIsPrimaryNavigationFragment;
    android.view.LayoutInflater mLayoutInflater;
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry;
    androidx.lifecycle.Lifecycle$State mMaxState;
    boolean mMenuVisible;
    androidx.fragment.app.Fragment mParentFragment;
    boolean mPerformedCreateView;
    float mPostponedAlpha;
    java.lang.Runnable mPostponedDurationRunnable;
    boolean mRemoving;
    boolean mRestored;
    boolean mRetainInstance;
    boolean mRetainInstanceChangedWhileDetached;
    android.os.Bundle mSavedFragmentState;
    androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController;
    java.lang.Boolean mSavedUserVisibleHint;
    android.util.SparseArray mSavedViewState;
    int mState;
    java.lang.String mTag;
    androidx.fragment.app.Fragment mTarget;
    int mTargetRequestCode;
    java.lang.String mTargetWho;
    boolean mUserVisibleHint;
    android.view.View mView;
    androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner;
    androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData;
    java.lang.String mWho;

    static void <clinit>()
    {
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<init>();

        androidx.fragment.app.Fragment.USE_DEFAULT_TRANSITION = $r0;

        return;
    }

    public void <init>()
    {
        androidx.lifecycle.MutableLiveData $r6;
        androidx.fragment.app.FragmentManagerImpl $r3;
        androidx.lifecycle.Lifecycle$State $r5;
        androidx.fragment.app.Fragment r0;
        java.util.UUID $r1;
        java.lang.String $r2;
        androidx.fragment.app.Fragment$1 $r4;

        r0 := @this;

        specialinvoke r0.<init>();

        r0.mState = 0;

        $r1 = java.util.UUID.randomUUID();

        $r2 = virtualinvoke $r1.toString();

        r0.mWho = $r2;

        r0.mTargetWho = null;

        r0.mIsPrimaryNavigationFragment = null;

        $r3 = new androidx.fragment.app.FragmentManagerImpl;

        specialinvoke $r3.<init>();

        r0.mChildFragmentManager = $r3;

        r0.mMenuVisible = 1;

        r0.mUserVisibleHint = 1;

        $r4 = new androidx.fragment.app.Fragment$1;

        specialinvoke $r4.<init>(r0);

        r0.mPostponedDurationRunnable = $r4;

        $r5 = androidx.lifecycle.Lifecycle$State.RESUMED;

        r0.mMaxState = $r5;

        $r6 = new androidx.lifecycle.MutableLiveData;

        specialinvoke $r6.<init>();

        r0.mViewLifecycleOwnerLiveData = $r6;

        specialinvoke r0.initLifecycle();

        return;
    }

    public void <init>(int)
    {
        androidx.fragment.app.Fragment r0;
        int $i0;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.<init>();

        r0.mContentLayoutId = $i0;

        return;
    }

    private androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;

        r0 := @this;

        $r1 = r0.mAnimationInfo;

        if $r1 != null goto label1;

        $r1 = new androidx.fragment.app.Fragment$AnimationInfo;

        specialinvoke $r1.<init>();

        r0.mAnimationInfo = $r1;

     label1:
        $r1 = r0.mAnimationInfo;

        return $r1;
    }

    private void initLifecycle()
    {
        androidx.savedstate.SavedStateRegistryController $r2;
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$2 $r1;
        androidx.lifecycle.LifecycleRegistry $r3;

        r0 := @this;

        $r3 = new androidx.lifecycle.LifecycleRegistry;

        specialinvoke $r3.<init>(r0);

        r0.mLifecycleRegistry = $r3;

        $r2 = androidx.savedstate.SavedStateRegistryController.create(r0);

        r0.mSavedStateRegistryController = $r2;

        $r3 = r0.mLifecycleRegistry;

        $r1 = new androidx.fragment.app.Fragment$2;

        specialinvoke $r1.<init>(r0);

        virtualinvoke $r3.addObserver($r1);

        return;
    }

    public static androidx.fragment.app.Fragment instantiate(android.content.Context, java.lang.String)
    {
        androidx.fragment.app.Fragment $r2;
        android.content.Context $r0;
        java.lang.String $r1;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 = androidx.fragment.app.Fragment.instantiate($r0, $r1, null);

        return $r2;
    }

    public static androidx.fragment.app.Fragment instantiate(android.content.Context, java.lang.String, android.os.Bundle)
    {
        android.content.Context $r0;
        android.os.Bundle $r2;
        java.lang.Object[] r7;
        androidx.fragment.app.Fragment$InstantiationException r11;
        java.lang.NoSuchMethodException r13;
        java.lang.reflect.Constructor $r6;
        androidx.fragment.app.Fragment r9;
        java.lang.InstantiationException r15;
        java.lang.String $r1;
        java.lang.IllegalAccessException r14;
        java.lang.Class[] $r5;
        java.lang.reflect.InvocationTargetException r10;
        java.lang.Class $r4;
        java.lang.Object $r8;
        java.lang.StringBuilder r12;
        java.lang.ClassLoader $r3;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

     label01:
        $r3 = virtualinvoke $r0.getClassLoader();

        $r4 = androidx.fragment.app.FragmentFactory.loadFragmentClass($r3, $r1);

     label02:
        $r5 = newarray (java.lang.Class)[0];

     label03:
        $r6 = virtualinvoke $r4.getConstructor($r5);

     label04:
        r7 = newarray (java.lang.Object)[0];

     label05:
        $r8 = virtualinvoke $r6.newInstance(r7);

     label06:
        r9 = (androidx.fragment.app.Fragment) $r8;

        if $r2 == null goto label13;

     label07:
        $r4 = virtualinvoke r9.getClass();

        $r3 = virtualinvoke $r4.getClassLoader();

        virtualinvoke $r2.setClassLoader($r3);

        virtualinvoke r9.setArguments($r2);

     label08:
        return r9;

     label09:
        r10 := @caughtexception;

        r11 = new androidx.fragment.app.Fragment$InstantiationException;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<init>();

        r12 = virtualinvoke r12.append("Unable to instantiate fragment ");

        r12 = virtualinvoke r12.append($r1);

        r12 = virtualinvoke r12.append(": calling Fragment constructor caused an exception");

        $r1 = virtualinvoke r12.toString();

        specialinvoke r11.<init>($r1, r10);

        throw r11;

     label10:
        r13 := @caughtexception;

        r11 = new androidx.fragment.app.Fragment$InstantiationException;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<init>();

        r12 = virtualinvoke r12.append("Unable to instantiate fragment ");

        r12 = virtualinvoke r12.append($r1);

        r12 = virtualinvoke r12.append(": could not find Fragment constructor");

        $r1 = virtualinvoke r12.toString();

        specialinvoke r11.<init>($r1, r13);

        throw r11;

     label11:
        r14 := @caughtexception;

        r11 = new androidx.fragment.app.Fragment$InstantiationException;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<init>();

        r12 = virtualinvoke r12.append("Unable to instantiate fragment ");

        r12 = virtualinvoke r12.append($r1);

        r12 = virtualinvoke r12.append(": make sure class name exists, is public, and has an empty constructor that is public");

        $r1 = virtualinvoke r12.toString();

        specialinvoke r11.<init>($r1, r14);

        throw r11;

     label12:
        r15 := @caughtexception;

        r11 = new androidx.fragment.app.Fragment$InstantiationException;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<init>();

        r12 = virtualinvoke r12.append("Unable to instantiate fragment ");

        r12 = virtualinvoke r12.append($r1);

        r12 = virtualinvoke r12.append(": make sure class name exists, is public, and has an empty constructor that is public");

        $r1 = virtualinvoke r12.toString();

        specialinvoke r11.<init>($r1, r15);

        throw r11;

     label13:
        return r9;

        catch java.lang.InstantiationException from label01 to label02 with label12;
        catch java.lang.InstantiationException from label03 to label04 with label12;
        catch java.lang.InstantiationException from label05 to label06 with label12;
        catch java.lang.InstantiationException from label07 to label08 with label12;
        catch java.lang.IllegalAccessException from label01 to label02 with label11;
        catch java.lang.IllegalAccessException from label03 to label04 with label11;
        catch java.lang.IllegalAccessException from label05 to label06 with label11;
        catch java.lang.IllegalAccessException from label07 to label08 with label11;
        catch java.lang.NoSuchMethodException from label01 to label02 with label10;
        catch java.lang.NoSuchMethodException from label03 to label04 with label10;
        catch java.lang.NoSuchMethodException from label05 to label06 with label10;
        catch java.lang.NoSuchMethodException from label07 to label08 with label10;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label09;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label09;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label09;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label09;
    }

    void callStartTransitionListener()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo r1;
        androidx.fragment.app.Fragment$OnStartEnterTransitionListener r2;

        r0 := @this;

        r1 = r0.mAnimationInfo;

        if r1 != null goto label1;

        r2 = null;

        goto label2;

     label1:
        r1.mEnterTransitionPostponed = 0;

        r1 = r0.mAnimationInfo;

        r2 = r1.mStartEnterTransitionListener;

        r1 = r0.mAnimationInfo;

        r1.mStartEnterTransitionListener = null;

     label2:
        if r2 == null goto label3;

        interfaceinvoke r2.onStartEnterTransition();

     label3:
        return;
    }

    public void dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        androidx.fragment.app.FragmentManagerImpl r6;
        android.content.Context $r13;
        androidx.fragment.app.FragmentHostCallback r7;
        android.os.Bundle r9;
        java.lang.String[] $r4;
        androidx.loader.app.LoaderManager $r14;
        androidx.fragment.app.Fragment r0, r8;
        int i0;
        android.view.View $r12;
        java.lang.String $r1, $r5;
        boolean z0;
        java.io.PrintWriter $r3;
        android.view.ViewGroup $r11;
        android.util.SparseArray r10;
        java.io.FileDescriptor $r2;
        java.lang.StringBuilder $r15;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 := @parameter3;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mFragmentId=#");

        i0 = r0.mFragmentId;

        $r5 = java.lang.Integer.toHexString(i0);

        virtualinvoke $r3.print($r5);

        virtualinvoke $r3.print(" mContainerId=#");

        i0 = r0.mContainerId;

        $r5 = java.lang.Integer.toHexString(i0);

        virtualinvoke $r3.print($r5);

        virtualinvoke $r3.print(" mTag=");

        $r5 = r0.mTag;

        virtualinvoke $r3.println($r5);

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mState=");

        i0 = r0.mState;

        virtualinvoke $r3.print(i0);

        virtualinvoke $r3.print(" mWho=");

        $r5 = r0.mWho;

        virtualinvoke $r3.print($r5);

        virtualinvoke $r3.print(" mBackStackNesting=");

        i0 = r0.mBackStackNesting;

        virtualinvoke $r3.println(i0);

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mAdded=");

        z0 = r0.mAdded;

        virtualinvoke $r3.print(z0);

        virtualinvoke $r3.print(" mRemoving=");

        z0 = r0.mRemoving;

        virtualinvoke $r3.print(z0);

        virtualinvoke $r3.print(" mFromLayout=");

        z0 = r0.mFromLayout;

        virtualinvoke $r3.print(z0);

        virtualinvoke $r3.print(" mInLayout=");

        z0 = r0.mInLayout;

        virtualinvoke $r3.println(z0);

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mHidden=");

        z0 = r0.mHidden;

        virtualinvoke $r3.print(z0);

        virtualinvoke $r3.print(" mDetached=");

        z0 = r0.mDetached;

        virtualinvoke $r3.print(z0);

        virtualinvoke $r3.print(" mMenuVisible=");

        z0 = r0.mMenuVisible;

        virtualinvoke $r3.print(z0);

        virtualinvoke $r3.print(" mHasMenu=");

        z0 = r0.mHasMenu;

        virtualinvoke $r3.println(z0);

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mRetainInstance=");

        z0 = r0.mRetainInstance;

        virtualinvoke $r3.print(z0);

        virtualinvoke $r3.print(" mUserVisibleHint=");

        z0 = r0.mUserVisibleHint;

        virtualinvoke $r3.println(z0);

        r6 = r0.mFragmentManager;

        if r6 == null goto label01;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mFragmentManager=");

        r6 = r0.mFragmentManager;

        virtualinvoke $r3.println(r6);

     label01:
        r7 = r0.mHost;

        if r7 == null goto label02;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mHost=");

        r7 = r0.mHost;

        virtualinvoke $r3.println(r7);

     label02:
        r8 = r0.mParentFragment;

        if r8 == null goto label03;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mParentFragment=");

        r8 = r0.mParentFragment;

        virtualinvoke $r3.println(r8);

     label03:
        r9 = r0.mArguments;

        if r9 == null goto label04;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mArguments=");

        r9 = r0.mArguments;

        virtualinvoke $r3.println(r9);

     label04:
        r9 = r0.mSavedFragmentState;

        if r9 == null goto label05;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mSavedFragmentState=");

        r9 = r0.mSavedFragmentState;

        virtualinvoke $r3.println(r9);

     label05:
        r10 = r0.mSavedViewState;

        if r10 == null goto label06;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mSavedViewState=");

        r10 = r0.mSavedViewState;

        virtualinvoke $r3.println(r10);

     label06:
        r8 = virtualinvoke r0.getTargetFragment();

        if r8 == null goto label07;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mTarget=");

        virtualinvoke $r3.print(r8);

        virtualinvoke $r3.print(" mTargetRequestCode=");

        i0 = r0.mTargetRequestCode;

        virtualinvoke $r3.println(i0);

     label07:
        i0 = virtualinvoke r0.getNextAnim();

        if i0 == 0 goto label08;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mNextAnim=");

        i0 = virtualinvoke r0.getNextAnim();

        virtualinvoke $r3.println(i0);

     label08:
        $r11 = r0.mContainer;

        if $r11 == null goto label09;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mContainer=");

        $r11 = r0.mContainer;

        virtualinvoke $r3.println($r11);

     label09:
        $r12 = r0.mView;

        if $r12 == null goto label10;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mView=");

        $r12 = r0.mView;

        virtualinvoke $r3.println($r12);

     label10:
        $r12 = r0.mInnerView;

        if $r12 == null goto label11;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mInnerView=");

        $r12 = r0.mView;

        virtualinvoke $r3.println($r12);

     label11:
        $r12 = virtualinvoke r0.getAnimatingAway();

        if $r12 == null goto label12;

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mAnimatingAway=");

        $r12 = virtualinvoke r0.getAnimatingAway();

        virtualinvoke $r3.println($r12);

        virtualinvoke $r3.print($r1);

        virtualinvoke $r3.print("mStateAfterAnimating=");

        i0 = virtualinvoke r0.getStateAfterAnimating();

        virtualinvoke $r3.println(i0);

     label12:
        $r13 = virtualinvoke r0.getContext();

        if $r13 == null goto label13;

        $r14 = androidx.loader.app.LoaderManager.getInstance(r0);

        virtualinvoke $r14.dump($r1, $r2, $r3, $r4);

     label13:
        virtualinvoke $r3.print($r1);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<init>();

        $r15 = virtualinvoke $r15.append("Child ");

        r6 = r0.mChildFragmentManager;

        $r15 = virtualinvoke $r15.append(r6);

        $r15 = virtualinvoke $r15.append(":");

        $r5 = virtualinvoke $r15.toString();

        virtualinvoke $r3.println($r5);

        r6 = r0.mChildFragmentManager;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<init>();

        $r15 = virtualinvoke $r15.append($r1);

        $r15 = virtualinvoke $r15.append("  ");

        $r1 = virtualinvoke $r15.toString();

        virtualinvoke r6.dump($r1, $r2, $r3, $r4);

        return;
    }

    public final boolean equals(java.lang.Object)
    {
        androidx.fragment.app.Fragment r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = specialinvoke r0.equals($r1);

        return $z0;
    }

    androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
    {
        androidx.fragment.app.FragmentManagerImpl $r3;
        androidx.fragment.app.Fragment r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mWho;

        $z0 = virtualinvoke $r1.equals($r2);

        if $z0 == 0 goto label1;

        return r0;

     label1:
        $r3 = r0.mChildFragmentManager;

        r0 = virtualinvoke $r3.findFragmentByWho($r1);

        return r0;
    }

    public final androidx.fragment.app.FragmentActivity getActivity()
    {
        androidx.fragment.app.FragmentHostCallback $r2;
        androidx.fragment.app.Fragment r0;
        android.app.Activity $r1;
        androidx.fragment.app.FragmentActivity $r3;

        r0 := @this;

        $r2 = r0.mHost;

        if $r2 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r2.getActivity();

        $r3 = (androidx.fragment.app.FragmentActivity) $r1;

        return $r3;
    }

    public boolean getAllowEnterTransitionOverlap()
    {
        androidx.fragment.app.Fragment$AnimationInfo $r1;
        androidx.fragment.app.Fragment r0;
        java.lang.Boolean $r2;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mAnimationInfo;

        if $r1 == null goto label2;

        $r2 = $r1.mAllowEnterTransitionOverlap;

        if $r2 != null goto label1;

        goto label2;

     label1:
        $r1 = r0.mAnimationInfo;

        $r2 = $r1.mAllowEnterTransitionOverlap;

        $z0 = virtualinvoke $r2.booleanValue();

        return $z0;

     label2:
        return 1;
    }

    public boolean getAllowReturnTransitionOverlap()
    {
        androidx.fragment.app.Fragment$AnimationInfo $r1;
        androidx.fragment.app.Fragment r0;
        java.lang.Boolean $r2;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mAnimationInfo;

        if $r1 == null goto label2;

        $r2 = $r1.mAllowReturnTransitionOverlap;

        if $r2 != null goto label1;

        goto label2;

     label1:
        $r1 = r0.mAnimationInfo;

        $r2 = $r1.mAllowReturnTransitionOverlap;

        $z0 = virtualinvoke $r2.booleanValue();

        return $z0;

     label2:
        return 1;
    }

    android.view.View getAnimatingAway()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;
        android.view.View r2;

        r0 := @this;

        $r1 = r0.mAnimationInfo;

        if $r1 != null goto label1;

        return null;

     label1:
        r2 = $r1.mAnimatingAway;

        return r2;
    }

    android.animation.Animator getAnimator()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;
        android.animation.Animator r2;

        r0 := @this;

        $r1 = r0.mAnimationInfo;

        if $r1 != null goto label1;

        return null;

     label1:
        r2 = $r1.mAnimator;

        return r2;
    }

    public final android.os.Bundle getArguments()
    {
        androidx.fragment.app.Fragment r0;
        android.os.Bundle r1;

        r0 := @this;

        r1 = r0.mArguments;

        return r1;
    }

    public final androidx.fragment.app.FragmentManager getChildFragmentManager()
    {
        java.lang.IllegalStateException $r2;
        androidx.fragment.app.FragmentManagerImpl r5;
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.Fragment r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this;

        $r1 = r0.mHost;

        if $r1 == null goto label1;

        r5 = r0.mChildFragmentManager;

        return r5;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("Fragment ");

        $r3 = virtualinvoke $r3.append(r0);

        $r3 = virtualinvoke $r3.append(" has not been attached yet.");

        $r4 = virtualinvoke $r3.toString();

        specialinvoke $r2.<init>($r4);

        throw $r2;
    }

    public android.content.Context getContext()
    {
        androidx.fragment.app.Fragment r0;
        android.content.Context $r1;
        androidx.fragment.app.FragmentHostCallback $r2;

        r0 := @this;

        $r2 = r0.mHost;

        if $r2 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r2.getContext();

        return $r1;
    }

    public java.lang.Object getEnterTransition()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;
        java.lang.Object r2;

        r0 := @this;

        $r1 = r0.mAnimationInfo;

        if $r1 != null goto label1;

        return null;

     label1:
        r2 = $r1.mEnterTransition;

        return r2;
    }

    androidx.core.app.SharedElementCallback getEnterTransitionCallback()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;
        androidx.core.app.SharedElementCallback r2;

        r0 := @this;

        $r1 = r0.mAnimationInfo;

        if $r1 != null goto label1;

        return null;

     label1:
        r2 = $r1.mEnterTransitionCallback;

        return r2;
    }

    public java.lang.Object getExitTransition()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;
        java.lang.Object r2;

        r0 := @this;

        $r1 = r0.mAnimationInfo;

        if $r1 != null goto label1;

        return null;

     label1:
        r2 = $r1.mExitTransition;

        return r2;
    }

    androidx.core.app.SharedElementCallback getExitTransitionCallback()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;
        androidx.core.app.SharedElementCallback r2;

        r0 := @this;

        $r1 = r0.mAnimationInfo;

        if $r1 != null goto label1;

        return null;

     label1:
        r2 = $r1.mExitTransitionCallback;

        return r2;
    }

    public final androidx.fragment.app.FragmentManager getFragmentManager()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.FragmentManagerImpl r1;

        r0 := @this;

        r1 = r0.mFragmentManager;

        return r1;
    }

    public final java.lang.Object getHost()
    {
        androidx.fragment.app.Fragment r0;
        java.lang.Object $r1;
        androidx.fragment.app.FragmentHostCallback $r2;

        r0 := @this;

        $r2 = r0.mHost;

        if $r2 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r2.onGetHost();

        return $r1;
    }

    public final int getId()
    {
        androidx.fragment.app.Fragment r0;
        int i0;

        r0 := @this;

        i0 = r0.mFragmentId;

        return i0;
    }

    public final android.view.LayoutInflater getLayoutInflater()
    {
        androidx.fragment.app.Fragment r0;
        android.view.LayoutInflater $r1;

        r0 := @this;

        $r1 = r0.mLayoutInflater;

        if $r1 != null goto label1;

        $r1 = virtualinvoke r0.performGetLayoutInflater(null);

     label1:
        return $r1;
    }

    public android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
    {
        androidx.fragment.app.FragmentManagerImpl $r4;
        java.lang.IllegalStateException r6;
        androidx.fragment.app.FragmentHostCallback r2;
        android.os.Bundle $r1;
        android.view.LayoutInflater $r3;
        androidx.fragment.app.Fragment r0;
        android.view.LayoutInflater$Factory2 $r5;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mHost;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.onGetLayoutInflater();

        $r4 = r0.mChildFragmentManager;

        $r5 = virtualinvoke $r4.getLayoutInflaterFactory();

        androidx.core.view.LayoutInflaterCompat.setFactory2($r3, $r5);

        return $r3;

     label1:
        r6 = new java.lang.IllegalStateException;

        specialinvoke r6.<init>("onGetLayoutInflater() cannot be executed until the Fragment is attached to the FragmentManager.");

        throw r6;
    }

    public androidx.lifecycle.Lifecycle getLifecycle()
    {
        androidx.fragment.app.Fragment r0;
        androidx.lifecycle.LifecycleRegistry r1;

        r0 := @this;

        r1 = r0.mLifecycleRegistry;

        return r1;
    }

    public androidx.loader.app.LoaderManager getLoaderManager()
    {
        androidx.fragment.app.Fragment r0;
        androidx.loader.app.LoaderManager $r1;

        r0 := @this;

        $r1 = androidx.loader.app.LoaderManager.getInstance(r0);

        return $r1;
    }

    int getNextAnim()
    {
        androidx.fragment.app.Fragment r0;
        int i0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;

        r0 := @this;

        $r1 = r0.mAnimationInfo;

        if $r1 != null goto label1;

        return 0;

     label1:
        i0 = $r1.mNextAnim;

        return i0;
    }

    int getNextTransition()
    {
        androidx.fragment.app.Fragment r0;
        int i0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;

        r0 := @this;

        $r1 = r0.mAnimationInfo;

        if $r1 != null goto label1;

        return 0;

     label1:
        i0 = $r1.mNextTransition;

        return i0;
    }

    int getNextTransitionStyle()
    {
        androidx.fragment.app.Fragment r0;
        int i0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;

        r0 := @this;

        $r1 = r0.mAnimationInfo;

        if $r1 != null goto label1;

        return 0;

     label1:
        i0 = $r1.mNextTransitionStyle;

        return i0;
    }

    public final androidx.fragment.app.Fragment getParentFragment()
    {
        androidx.fragment.app.Fragment r0;

        r0 := @this;

        r0 = r0.mParentFragment;

        return r0;
    }

    public java.lang.Object getReenterTransition()
    {
        androidx.fragment.app.Fragment$AnimationInfo $r2;
        androidx.fragment.app.Fragment r0;
        java.lang.Object $r1, $r3;

        r0 := @this;

        $r2 = r0.mAnimationInfo;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = $r2.mReenterTransition;

        $r1 = androidx.fragment.app.Fragment.USE_DEFAULT_TRANSITION;

        if $r3 != $r1 goto label2;

        $r1 = virtualinvoke r0.getExitTransition();

        return $r1;

     label2:
        $r2 = r0.mAnimationInfo;

        $r1 = $r2.mReenterTransition;

        return $r1;
    }

    public final android.content.res.Resources getResources()
    {
        androidx.fragment.app.Fragment r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;

        r0 := @this;

        $r1 = virtualinvoke r0.requireContext();

        $r2 = virtualinvoke $r1.getResources();

        return $r2;
    }

    public final boolean getRetainInstance()
    {
        androidx.fragment.app.Fragment r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mRetainInstance;

        return z0;
    }

    public java.lang.Object getReturnTransition()
    {
        androidx.fragment.app.Fragment$AnimationInfo $r2;
        androidx.fragment.app.Fragment r0;
        java.lang.Object $r1, $r3;

        r0 := @this;

        $r2 = r0.mAnimationInfo;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = $r2.mReturnTransition;

        $r1 = androidx.fragment.app.Fragment.USE_DEFAULT_TRANSITION;

        if $r3 != $r1 goto label2;

        $r1 = virtualinvoke r0.getEnterTransition();

        return $r1;

     label2:
        $r2 = r0.mAnimationInfo;

        $r1 = $r2.mReturnTransition;

        return $r1;
    }

    public final androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
    {
        androidx.fragment.app.Fragment r0;
        androidx.savedstate.SavedStateRegistryController $r2;
        androidx.savedstate.SavedStateRegistry $r1;

        r0 := @this;

        $r2 = r0.mSavedStateRegistryController;

        $r1 = virtualinvoke $r2.getSavedStateRegistry();

        return $r1;
    }

    public java.lang.Object getSharedElementEnterTransition()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;
        java.lang.Object r2;

        r0 := @this;

        $r1 = r0.mAnimationInfo;

        if $r1 != null goto label1;

        return null;

     label1:
        r2 = $r1.mSharedElementEnterTransition;

        return r2;
    }

    public java.lang.Object getSharedElementReturnTransition()
    {
        androidx.fragment.app.Fragment$AnimationInfo $r2;
        androidx.fragment.app.Fragment r0;
        java.lang.Object $r1, $r3;

        r0 := @this;

        $r2 = r0.mAnimationInfo;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = $r2.mSharedElementReturnTransition;

        $r1 = androidx.fragment.app.Fragment.USE_DEFAULT_TRANSITION;

        if $r3 != $r1 goto label2;

        $r1 = virtualinvoke r0.getSharedElementEnterTransition();

        return $r1;

     label2:
        $r2 = r0.mAnimationInfo;

        $r1 = $r2.mSharedElementReturnTransition;

        return $r1;
    }

    int getStateAfterAnimating()
    {
        androidx.fragment.app.Fragment r0;
        int i0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;

        r0 := @this;

        $r1 = r0.mAnimationInfo;

        if $r1 != null goto label1;

        return 0;

     label1:
        i0 = $r1.mStateAfterAnimating;

        return i0;
    }

    public final java.lang.String getString(int)
    {
        androidx.fragment.app.Fragment r0;
        int $i0;
        java.lang.String $r2;
        android.content.res.Resources $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = virtualinvoke r0.getResources();

        $r2 = virtualinvoke $r1.getString($i0);

        return $r2;
    }

    public final transient java.lang.String getString(int, java.lang.Object[])
    {
        java.lang.Object[] $r1;
        androidx.fragment.app.Fragment r0;
        int $i0;
        java.lang.String $r3;
        android.content.res.Resources $r2;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $r2 = virtualinvoke r0.getResources();

        $r3 = virtualinvoke $r2.getString($i0, $r1);

        return $r3;
    }

    public final java.lang.String getTag()
    {
        androidx.fragment.app.Fragment r0;
        java.lang.String r1;

        r0 := @this;

        r1 = r0.mTag;

        return r1;
    }

    public final androidx.fragment.app.Fragment getTargetFragment()
    {
        androidx.fragment.app.FragmentManagerImpl $r3;
        androidx.fragment.app.Fragment r0, $r2;
        java.lang.Object $r1;
        java.util.HashMap $r5;
        java.lang.String $r4;

        r0 := @this;

        $r2 = r0.mTarget;

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = r0.mFragmentManager;

        if $r3 == null goto label2;

        $r4 = r0.mTargetWho;

        if $r4 == null goto label2;

        $r5 = $r3.mActive;

        $r4 = r0.mTargetWho;

        $r1 = virtualinvoke $r5.get($r4);

        r0 = (androidx.fragment.app.Fragment) $r1;

        return r0;

     label2:
        return null;
    }

    public final int getTargetRequestCode()
    {
        androidx.fragment.app.Fragment r0;
        int i0;

        r0 := @this;

        i0 = r0.mTargetRequestCode;

        return i0;
    }

    public final java.lang.CharSequence getText(int)
    {
        java.lang.CharSequence $r2;
        androidx.fragment.app.Fragment r0;
        int $i0;
        android.content.res.Resources $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = virtualinvoke r0.getResources();

        $r2 = virtualinvoke $r1.getText($i0);

        return $r2;
    }

    public boolean getUserVisibleHint()
    {
        androidx.fragment.app.Fragment r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mUserVisibleHint;

        return z0;
    }

    public android.view.View getView()
    {
        androidx.fragment.app.Fragment r0;
        android.view.View r1;

        r0 := @this;

        r1 = r0.mView;

        return r1;
    }

    public androidx.lifecycle.LifecycleOwner getViewLifecycleOwner()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.FragmentViewLifecycleOwner $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this;

        $r1 = r0.mViewLifecycleOwner;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<init>("Can\'t access the Fragment View\'s LifecycleOwner when getView() is null i.e., before onCreateView() or after onDestroyView()");

        throw $r2;
    }

    public androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData()
    {
        androidx.fragment.app.Fragment r0;
        androidx.lifecycle.MutableLiveData r1;

        r0 := @this;

        r1 = r0.mViewLifecycleOwnerLiveData;

        return r1;
    }

    public androidx.lifecycle.ViewModelStore getViewModelStore()
    {
        androidx.lifecycle.ViewModelStore $r1;
        androidx.fragment.app.FragmentManagerImpl $r2;
        java.lang.IllegalStateException $r3;
        androidx.fragment.app.Fragment r0;

        r0 := @this;

        $r2 = r0.mFragmentManager;

        if $r2 == null goto label1;

        $r1 = virtualinvoke $r2.getViewModelStore(r0);

        return $r1;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<init>("Can\'t access ViewModels from detached fragment");

        throw $r3;
    }

    public final boolean hasOptionsMenu()
    {
        androidx.fragment.app.Fragment r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mHasMenu;

        return z0;
    }

    public final int hashCode()
    {
        androidx.fragment.app.Fragment r0;
        int $i0;

        r0 := @this;

        $i0 = specialinvoke r0.hashCode();

        return $i0;
    }

    void initState()
    {
        androidx.fragment.app.FragmentManagerImpl $r1;
        androidx.fragment.app.Fragment r0;
        java.util.UUID $r2;
        java.lang.String $r3;

        r0 := @this;

        specialinvoke r0.initLifecycle();

        $r2 = java.util.UUID.randomUUID();

        $r3 = virtualinvoke $r2.toString();

        r0.mWho = $r3;

        r0.mAdded = 0;

        r0.mRemoving = 0;

        r0.mFromLayout = 0;

        r0.mInLayout = 0;

        r0.mRestored = 0;

        r0.mBackStackNesting = 0;

        r0.mFragmentManager = null;

        $r1 = new androidx.fragment.app.FragmentManagerImpl;

        specialinvoke $r1.<init>();

        r0.mChildFragmentManager = $r1;

        r0.mHost = null;

        r0.mFragmentId = 0;

        r0.mContainerId = 0;

        r0.mTag = null;

        r0.mHidden = 0;

        r0.mDetached = 0;

        return;
    }

    public final boolean isAdded()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.FragmentHostCallback $r1;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mHost;

        if $r1 == null goto label1;

        $z0 = r0.mAdded;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isDetached()
    {
        androidx.fragment.app.Fragment r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mDetached;

        return z0;
    }

    public final boolean isHidden()
    {
        androidx.fragment.app.Fragment r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mHidden;

        return z0;
    }

    boolean isHideReplaced()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;
        boolean z0;

        r0 := @this;

        $r1 = r0.mAnimationInfo;

        if $r1 != null goto label1;

        return 0;

     label1:
        z0 = $r1.mIsHideReplaced;

        return z0;
    }

    final boolean isInBackStack()
    {
        androidx.fragment.app.Fragment r0;
        int $i0;

        r0 := @this;

        $i0 = r0.mBackStackNesting;

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isInLayout()
    {
        androidx.fragment.app.Fragment r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mInLayout;

        return z0;
    }

    public final boolean isMenuVisible()
    {
        androidx.fragment.app.Fragment r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mMenuVisible;

        return z0;
    }

    boolean isPostponed()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;
        boolean z0;

        r0 := @this;

        $r1 = r0.mAnimationInfo;

        if $r1 != null goto label1;

        return 0;

     label1:
        z0 = $r1.mEnterTransitionPostponed;

        return z0;
    }

    public final boolean isRemoving()
    {
        androidx.fragment.app.Fragment r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mRemoving;

        return z0;
    }

    public final boolean isResumed()
    {
        androidx.fragment.app.Fragment r0;
        int $i0;

        r0 := @this;

        $i0 = r0.mState;

        if $i0 < 4 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final boolean isStateSaved()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.FragmentManagerImpl $r1;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mFragmentManager;

        if $r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke $r1.isStateSaved();

        return $z0;
    }

    public final boolean isVisible()
    {
        androidx.fragment.app.Fragment r0;
        int $i0;
        android.view.View $r1;
        android.os.IBinder $r2;
        boolean $z0;

        r0 := @this;

        $z0 = virtualinvoke r0.isAdded();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r0.isHidden();

        if $z0 != 0 goto label1;

        $r1 = r0.mView;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.getWindowToken();

        if $r2 == null goto label1;

        $r1 = r0.mView;

        $i0 = virtualinvoke $r1.getVisibility();

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    void noteStateNotSaved()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.FragmentManagerImpl $r1;

        r0 := @this;

        $r1 = r0.mChildFragmentManager;

        virtualinvoke $r1.noteStateNotSaved();

        return;
    }

    public void onActivityCreated(android.os.Bundle)
    {
        androidx.fragment.app.Fragment r0;
        android.os.Bundle $r1;

        r0 := @this;

        $r1 := @parameter0;

        r0.mCalled = 1;

        return;
    }

    public void onActivityResult(int, int, android.content.Intent)
    {
        androidx.fragment.app.Fragment r0;
        int $i0, $i1;
        android.content.Intent $r1;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $r1 := @parameter2;

        return;
    }

    public void onAttach(android.app.Activity)
    {
        androidx.fragment.app.Fragment r0;
        android.app.Activity $r1;

        r0 := @this;

        $r1 := @parameter0;

        r0.mCalled = 1;

        return;
    }

    public void onAttach(android.content.Context)
    {
        android.content.Context $r1;
        androidx.fragment.app.FragmentHostCallback r3;
        androidx.fragment.app.Fragment r0;
        android.app.Activity $r2;

        r0 := @this;

        $r1 := @parameter0;

        r0.mCalled = 1;

        r3 = r0.mHost;

        if r3 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r3.getActivity();

     label2:
        if $r2 == null goto label3;

        r0.mCalled = 0;

        virtualinvoke r0.onAttach($r2);

     label3:
        return;
    }

    public void onAttachFragment(androidx.fragment.app.Fragment)
    {
        androidx.fragment.app.Fragment r0, $r1;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        androidx.fragment.app.Fragment r0;
        android.content.res.Configuration $r1;

        r0 := @this;

        $r1 := @parameter0;

        r0.mCalled = 1;

        return;
    }

    public boolean onContextItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.Fragment r0;
        android.view.MenuItem $r1;

        r0 := @this;

        $r1 := @parameter0;

        return 0;
    }

    public void onCreate(android.os.Bundle)
    {
        androidx.fragment.app.FragmentManagerImpl $r2;
        android.os.Bundle $r1;
        androidx.fragment.app.Fragment r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        r0.mCalled = 1;

        virtualinvoke r0.restoreChildFragmentState($r1);

        $r2 = r0.mChildFragmentManager;

        $z0 = virtualinvoke $r2.isStateAtLeast(1);

        if $z0 != 0 goto label1;

        $r2 = r0.mChildFragmentManager;

        virtualinvoke $r2.dispatchCreate();

     label1:
        return;
    }

    public android.view.animation.Animation onCreateAnimation(int, boolean, int)
    {
        androidx.fragment.app.Fragment r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $z0 := @parameter1;

        $i1 := @parameter2;

        return null;
    }

    public android.animation.Animator onCreateAnimator(int, boolean, int)
    {
        androidx.fragment.app.Fragment r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $z0 := @parameter1;

        $i1 := @parameter2;

        return null;
    }

    public void onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu$ContextMenuInfo)
    {
        android.view.ContextMenu $r1;
        androidx.fragment.app.Fragment r0;
        android.view.View $r2;
        android.view.ContextMenu$ContextMenuInfo $r3;
        androidx.fragment.app.FragmentActivity $r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 = virtualinvoke r0.requireActivity();

        virtualinvoke $r4.onCreateContextMenu($r1, $r2, $r3);

        return;
    }

    public void onCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)
    {
        androidx.fragment.app.Fragment r0;
        android.view.Menu $r1;
        android.view.MenuInflater $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        return;
    }

    public android.view.View onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)
    {
        android.os.Bundle $r3;
        android.view.LayoutInflater $r1;
        androidx.fragment.app.Fragment r0;
        int $i0;
        android.view.View $r4;
        android.view.ViewGroup $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $i0 = r0.mContentLayoutId;

        if $i0 == 0 goto label1;

        $r4 = virtualinvoke $r1.inflate($i0, $r2, 0);

        return $r4;

     label1:
        return null;
    }

    public void onDestroy()
    {
        androidx.fragment.app.Fragment r0;

        r0 := @this;

        r0.mCalled = 1;

        return;
    }

    public void onDestroyOptionsMenu()
    {
        androidx.fragment.app.Fragment r0;

        r0 := @this;

        return;
    }

    public void onDestroyView()
    {
        androidx.fragment.app.Fragment r0;

        r0 := @this;

        r0.mCalled = 1;

        return;
    }

    public void onDetach()
    {
        androidx.fragment.app.Fragment r0;

        r0 := @this;

        r0.mCalled = 1;

        return;
    }

    public android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
    {
        androidx.fragment.app.Fragment r0;
        android.os.Bundle $r1;
        android.view.LayoutInflater $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke r0.getLayoutInflater($r1);

        return $r2;
    }

    public void onHiddenChanged(boolean)
    {
        androidx.fragment.app.Fragment r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        return;
    }

    public void onInflate(android.app.Activity, android.util.AttributeSet, android.os.Bundle)
    {
        android.os.Bundle $r3;
        android.util.AttributeSet $r2;
        androidx.fragment.app.Fragment r0;
        android.app.Activity $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        r0.mCalled = 1;

        return;
    }

    public void onInflate(android.content.Context, android.util.AttributeSet, android.os.Bundle)
    {
        android.content.Context $r1;
        androidx.fragment.app.FragmentHostCallback r5;
        android.os.Bundle $r3;
        android.util.AttributeSet $r2;
        androidx.fragment.app.Fragment r0;
        android.app.Activity $r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        r0.mCalled = 1;

        r5 = r0.mHost;

        if r5 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = virtualinvoke r5.getActivity();

     label2:
        if $r4 == null goto label3;

        r0.mCalled = 0;

        virtualinvoke r0.onInflate($r4, $r2, $r3);

     label3:
        return;
    }

    public void onLowMemory()
    {
        androidx.fragment.app.Fragment r0;

        r0 := @this;

        r0.mCalled = 1;

        return;
    }

    public void onMultiWindowModeChanged(boolean)
    {
        androidx.fragment.app.Fragment r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.Fragment r0;
        android.view.MenuItem $r1;

        r0 := @this;

        $r1 := @parameter0;

        return 0;
    }

    public void onOptionsMenuClosed(android.view.Menu)
    {
        androidx.fragment.app.Fragment r0;
        android.view.Menu $r1;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    public void onPause()
    {
        androidx.fragment.app.Fragment r0;

        r0 := @this;

        r0.mCalled = 1;

        return;
    }

    public void onPictureInPictureModeChanged(boolean)
    {
        androidx.fragment.app.Fragment r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        return;
    }

    public void onPrepareOptionsMenu(android.view.Menu)
    {
        androidx.fragment.app.Fragment r0;
        android.view.Menu $r1;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    public void onPrimaryNavigationFragmentChanged(boolean)
    {
        androidx.fragment.app.Fragment r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        return;
    }

    public void onRequestPermissionsResult(int, java.lang.String[], int[])
    {
        int[] $r2;
        androidx.fragment.app.Fragment r0;
        int $i0;
        java.lang.String[] $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        return;
    }

    public void onResume()
    {
        androidx.fragment.app.Fragment r0;

        r0 := @this;

        r0.mCalled = 1;

        return;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        androidx.fragment.app.Fragment r0;
        android.os.Bundle $r1;

        r0 := @this;

        $r1 := @parameter0;

        return;
    }

    public void onStart()
    {
        androidx.fragment.app.Fragment r0;

        r0 := @this;

        r0.mCalled = 1;

        return;
    }

    public void onStop()
    {
        androidx.fragment.app.Fragment r0;

        r0 := @this;

        r0.mCalled = 1;

        return;
    }

    public void onViewCreated(android.view.View, android.os.Bundle)
    {
        androidx.fragment.app.Fragment r0;
        android.view.View $r1;
        android.os.Bundle $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        return;
    }

    public void onViewStateRestored(android.os.Bundle)
    {
        androidx.fragment.app.Fragment r0;
        android.os.Bundle $r1;

        r0 := @this;

        $r1 := @parameter0;

        r0.mCalled = 1;

        return;
    }

    void performActivityCreated(android.os.Bundle)
    {
        androidx.fragment.app.FragmentManagerImpl $r2;
        android.os.Bundle $r1;
        androidx.fragment.app.Fragment r0;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;
        androidx.fragment.app.SuperNotCalledException $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mChildFragmentManager;

        virtualinvoke $r2.noteStateNotSaved();

        r0.mState = 2;

        r0.mCalled = 0;

        virtualinvoke r0.onActivityCreated($r1);

        $z0 = r0.mCalled;

        if $z0 == 0 goto label1;

        $r2 = r0.mChildFragmentManager;

        virtualinvoke $r2.dispatchActivityCreated();

        return;

     label1:
        $r3 = new androidx.fragment.app.SuperNotCalledException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<init>();

        $r4 = virtualinvoke $r4.append("Fragment ");

        $r4 = virtualinvoke $r4.append(r0);

        $r4 = virtualinvoke $r4.append(" did not call through to super.onActivityCreated()");

        $r5 = virtualinvoke $r4.toString();

        specialinvoke $r3.<init>($r5);

        throw $r3;
    }

    void performAttach()
    {
        androidx.fragment.app.FragmentManagerImpl $r1;
        android.content.Context $r4;
        androidx.fragment.app.FragmentHostCallback $r2;
        androidx.fragment.app.SuperNotCalledException $r5;
        androidx.fragment.app.Fragment r0;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;
        androidx.fragment.app.Fragment$4 $r3;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mChildFragmentManager;

        $r2 = r0.mHost;

        $r3 = new androidx.fragment.app.Fragment$4;

        specialinvoke $r3.<init>(r0);

        virtualinvoke $r1.attachController($r2, $r3, r0);

        r0.mCalled = 0;

        $r2 = r0.mHost;

        $r4 = virtualinvoke $r2.getContext();

        virtualinvoke r0.onAttach($r4);

        $z0 = r0.mCalled;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = new androidx.fragment.app.SuperNotCalledException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $r6 = virtualinvoke $r6.append("Fragment ");

        $r6 = virtualinvoke $r6.append(r0);

        $r6 = virtualinvoke $r6.append(" did not call through to super.onAttach()");

        $r7 = virtualinvoke $r6.toString();

        specialinvoke $r5.<init>($r7);

        throw $r5;
    }

    void performConfigurationChanged(android.content.res.Configuration)
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.FragmentManagerImpl $r2;
        android.content.res.Configuration $r1;

        r0 := @this;

        $r1 := @parameter0;

        virtualinvoke r0.onConfigurationChanged($r1);

        $r2 = r0.mChildFragmentManager;

        virtualinvoke $r2.dispatchConfigurationChanged($r1);

        return;
    }

    boolean performContextItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.FragmentManagerImpl $r2;
        androidx.fragment.app.Fragment r0;
        android.view.MenuItem $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = r0.mHidden;

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke r0.onContextItemSelected($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = r0.mChildFragmentManager;

        $z0 = virtualinvoke $r2.dispatchContextItemSelected($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    void performCreate(android.os.Bundle)
    {
        androidx.fragment.app.FragmentManagerImpl $r2;
        android.os.Bundle $r1;
        androidx.lifecycle.LifecycleRegistry $r4;
        androidx.fragment.app.SuperNotCalledException $r6;
        androidx.lifecycle.Lifecycle$Event $r5;
        androidx.savedstate.SavedStateRegistryController $r3;
        androidx.fragment.app.Fragment r0;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mChildFragmentManager;

        virtualinvoke $r2.noteStateNotSaved();

        r0.mState = 1;

        r0.mCalled = 0;

        $r3 = r0.mSavedStateRegistryController;

        virtualinvoke $r3.performRestore($r1);

        virtualinvoke r0.onCreate($r1);

        r0.mIsCreated = 1;

        $z0 = r0.mCalled;

        if $z0 == 0 goto label1;

        $r4 = r0.mLifecycleRegistry;

        $r5 = androidx.lifecycle.Lifecycle$Event.ON_CREATE;

        virtualinvoke $r4.handleLifecycleEvent($r5);

        return;

     label1:
        $r6 = new androidx.fragment.app.SuperNotCalledException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<init>();

        $r7 = virtualinvoke $r7.append("Fragment ");

        $r7 = virtualinvoke $r7.append(r0);

        $r7 = virtualinvoke $r7.append(" did not call through to super.onCreate()");

        $r8 = virtualinvoke $r7.toString();

        specialinvoke $r6.<init>($r8);

        throw $r6;
    }

    boolean performCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)
    {
        androidx.fragment.app.FragmentManagerImpl $r3;
        android.view.MenuInflater $r2;
        androidx.fragment.app.Fragment r0;
        android.view.Menu $r1;
        boolean $z0, z1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        z1 = 0;

        $z0 = r0.mHidden;

        if $z0 != 0 goto label2;

        $z0 = r0.mHasMenu;

        if $z0 == 0 goto label1;

        $z0 = r0.mMenuVisible;

        if $z0 == 0 goto label1;

        z1 = 1;

        virtualinvoke r0.onCreateOptionsMenu($r1, $r2);

     label1:
        $r3 = r0.mChildFragmentManager;

        $z0 = virtualinvoke $r3.dispatchCreateOptionsMenu($r1, $r2);

        z1 = z1 | $z0;

        return z1;

     label2:
        return 0;
    }

    void performCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)
    {
        androidx.fragment.app.FragmentViewLifecycleOwner $r5;
        androidx.lifecycle.MutableLiveData $r7;
        androidx.fragment.app.FragmentManagerImpl $r4;
        java.lang.IllegalStateException $r8;
        android.os.Bundle $r3;
        android.view.LayoutInflater $r1;
        android.view.ViewGroup $r2;
        androidx.fragment.app.Fragment r0;
        android.view.View $r6;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 = r0.mChildFragmentManager;

        virtualinvoke $r4.noteStateNotSaved();

        r0.mPerformedCreateView = 1;

        $r5 = new androidx.fragment.app.FragmentViewLifecycleOwner;

        specialinvoke $r5.<init>();

        r0.mViewLifecycleOwner = $r5;

        $r6 = virtualinvoke r0.onCreateView($r1, $r2, $r3);

        r0.mView = $r6;

        if $r6 == null goto label1;

        $r5 = r0.mViewLifecycleOwner;

        virtualinvoke $r5.initialize();

        $r7 = r0.mViewLifecycleOwnerLiveData;

        $r5 = r0.mViewLifecycleOwner;

        virtualinvoke $r7.setValue($r5);

        return;

     label1:
        $r5 = r0.mViewLifecycleOwner;

        $z0 = virtualinvoke $r5.isInitialized();

        if $z0 != 0 goto label2;

        r0.mViewLifecycleOwner = null;

        return;

     label2:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<init>("Called getViewLifecycleOwner() but onCreateView() returned null");

        throw $r8;
    }

    void performDestroy()
    {
        androidx.fragment.app.FragmentManagerImpl $r1;
        androidx.lifecycle.LifecycleRegistry $r2;
        androidx.fragment.app.SuperNotCalledException $r4;
        androidx.lifecycle.Lifecycle$Event $r3;
        androidx.fragment.app.Fragment r0;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mChildFragmentManager;

        virtualinvoke $r1.dispatchDestroy();

        $r2 = r0.mLifecycleRegistry;

        $r3 = androidx.lifecycle.Lifecycle$Event.ON_DESTROY;

        virtualinvoke $r2.handleLifecycleEvent($r3);

        r0.mState = 0;

        r0.mCalled = 0;

        r0.mIsCreated = 0;

        virtualinvoke r0.onDestroy();

        $z0 = r0.mCalled;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = new androidx.fragment.app.SuperNotCalledException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r5 = virtualinvoke $r5.append("Fragment ");

        $r5 = virtualinvoke $r5.append(r0);

        $r5 = virtualinvoke $r5.append(" did not call through to super.onDestroy()");

        $r6 = virtualinvoke $r5.toString();

        specialinvoke $r4.<init>($r6);

        throw $r4;
    }

    void performDestroyView()
    {
        androidx.fragment.app.FragmentViewLifecycleOwner $r3;
        androidx.fragment.app.FragmentManagerImpl $r1;
        androidx.loader.app.LoaderManager $r5;
        androidx.fragment.app.SuperNotCalledException $r6;
        androidx.lifecycle.Lifecycle$Event $r4;
        androidx.fragment.app.Fragment r0;
        android.view.View $r2;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mChildFragmentManager;

        virtualinvoke $r1.dispatchDestroyView();

        $r2 = r0.mView;

        if $r2 == null goto label1;

        $r3 = r0.mViewLifecycleOwner;

        $r4 = androidx.lifecycle.Lifecycle$Event.ON_DESTROY;

        virtualinvoke $r3.handleLifecycleEvent($r4);

     label1:
        r0.mState = 1;

        r0.mCalled = 0;

        virtualinvoke r0.onDestroyView();

        $z0 = r0.mCalled;

        if $z0 == 0 goto label2;

        $r5 = androidx.loader.app.LoaderManager.getInstance(r0);

        virtualinvoke $r5.markForRedelivery();

        r0.mPerformedCreateView = 0;

        return;

     label2:
        $r6 = new androidx.fragment.app.SuperNotCalledException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<init>();

        $r7 = virtualinvoke $r7.append("Fragment ");

        $r7 = virtualinvoke $r7.append(r0);

        $r7 = virtualinvoke $r7.append(" did not call through to super.onDestroyView()");

        $r8 = virtualinvoke $r7.toString();

        specialinvoke $r6.<init>($r8);

        throw $r6;
    }

    void performDetach()
    {
        androidx.fragment.app.FragmentManagerImpl $r1;
        androidx.fragment.app.Fragment r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        androidx.fragment.app.SuperNotCalledException $r2;
        boolean $z0;

        r0 := @this;

        r0.mCalled = 0;

        virtualinvoke r0.onDetach();

        r0.mLayoutInflater = null;

        $z0 = r0.mCalled;

        if $z0 == 0 goto label1;

        $r1 = r0.mChildFragmentManager;

        $z0 = virtualinvoke $r1.isDestroyed();

        if $z0 != 0 goto label2;

        $r1 = r0.mChildFragmentManager;

        virtualinvoke $r1.dispatchDestroy();

        $r1 = new androidx.fragment.app.FragmentManagerImpl;

        specialinvoke $r1.<init>();

        r0.mChildFragmentManager = $r1;

        return;

     label1:
        $r2 = new androidx.fragment.app.SuperNotCalledException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("Fragment ");

        $r3 = virtualinvoke $r3.append(r0);

        $r3 = virtualinvoke $r3.append(" did not call through to super.onDetach()");

        $r4 = virtualinvoke $r3.toString();

        specialinvoke $r2.<init>($r4);

        throw $r2;

     label2:
        return;
    }

    android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
    {
        androidx.fragment.app.Fragment r0;
        android.os.Bundle $r1;
        android.view.LayoutInflater $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke r0.onGetLayoutInflater($r1);

        r0.mLayoutInflater = $r2;

        return $r2;
    }

    void performLowMemory()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.FragmentManagerImpl $r1;

        r0 := @this;

        virtualinvoke r0.onLowMemory();

        $r1 = r0.mChildFragmentManager;

        virtualinvoke $r1.dispatchLowMemory();

        return;
    }

    void performMultiWindowModeChanged(boolean)
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.FragmentManagerImpl $r1;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        virtualinvoke r0.onMultiWindowModeChanged($z0);

        $r1 = r0.mChildFragmentManager;

        virtualinvoke $r1.dispatchMultiWindowModeChanged($z0);

        return;
    }

    boolean performOptionsItemSelected(android.view.MenuItem)
    {
        androidx.fragment.app.FragmentManagerImpl $r2;
        androidx.fragment.app.Fragment r0;
        android.view.MenuItem $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = r0.mHidden;

        if $z0 != 0 goto label2;

        $z0 = r0.mHasMenu;

        if $z0 == 0 goto label1;

        $z0 = r0.mMenuVisible;

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r0.onOptionsItemSelected($r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = r0.mChildFragmentManager;

        $z0 = virtualinvoke $r2.dispatchOptionsItemSelected($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    void performOptionsMenuClosed(android.view.Menu)
    {
        androidx.fragment.app.FragmentManagerImpl $r2;
        androidx.fragment.app.Fragment r0;
        android.view.Menu $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = r0.mHidden;

        if $z0 != 0 goto label2;

        $z0 = r0.mHasMenu;

        if $z0 == 0 goto label1;

        $z0 = r0.mMenuVisible;

        if $z0 == 0 goto label1;

        virtualinvoke r0.onOptionsMenuClosed($r1);

     label1:
        $r2 = r0.mChildFragmentManager;

        virtualinvoke $r2.dispatchOptionsMenuClosed($r1);

     label2:
        return;
    }

    void performPause()
    {
        androidx.fragment.app.FragmentViewLifecycleOwner $r3;
        androidx.fragment.app.FragmentManagerImpl $r1;
        androidx.lifecycle.LifecycleRegistry $r5;
        androidx.fragment.app.SuperNotCalledException $r6;
        androidx.lifecycle.Lifecycle$Event $r4;
        androidx.fragment.app.Fragment r0;
        android.view.View $r2;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mChildFragmentManager;

        virtualinvoke $r1.dispatchPause();

        $r2 = r0.mView;

        if $r2 == null goto label1;

        $r3 = r0.mViewLifecycleOwner;

        $r4 = androidx.lifecycle.Lifecycle$Event.ON_PAUSE;

        virtualinvoke $r3.handleLifecycleEvent($r4);

     label1:
        $r5 = r0.mLifecycleRegistry;

        $r4 = androidx.lifecycle.Lifecycle$Event.ON_PAUSE;

        virtualinvoke $r5.handleLifecycleEvent($r4);

        r0.mState = 3;

        r0.mCalled = 0;

        virtualinvoke r0.onPause();

        $z0 = r0.mCalled;

        if $z0 == 0 goto label2;

        return;

     label2:
        $r6 = new androidx.fragment.app.SuperNotCalledException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<init>();

        $r7 = virtualinvoke $r7.append("Fragment ");

        $r7 = virtualinvoke $r7.append(r0);

        $r7 = virtualinvoke $r7.append(" did not call through to super.onPause()");

        $r8 = virtualinvoke $r7.toString();

        specialinvoke $r6.<init>($r8);

        throw $r6;
    }

    void performPictureInPictureModeChanged(boolean)
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.FragmentManagerImpl $r1;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        virtualinvoke r0.onPictureInPictureModeChanged($z0);

        $r1 = r0.mChildFragmentManager;

        virtualinvoke $r1.dispatchPictureInPictureModeChanged($z0);

        return;
    }

    boolean performPrepareOptionsMenu(android.view.Menu)
    {
        androidx.fragment.app.FragmentManagerImpl $r2;
        androidx.fragment.app.Fragment r0;
        android.view.Menu $r1;
        boolean $z0, z1;

        r0 := @this;

        $r1 := @parameter0;

        z1 = 0;

        $z0 = r0.mHidden;

        if $z0 != 0 goto label2;

        $z0 = r0.mHasMenu;

        if $z0 == 0 goto label1;

        $z0 = r0.mMenuVisible;

        if $z0 == 0 goto label1;

        z1 = 1;

        virtualinvoke r0.onPrepareOptionsMenu($r1);

     label1:
        $r2 = r0.mChildFragmentManager;

        $z0 = virtualinvoke $r2.dispatchPrepareOptionsMenu($r1);

        z1 = z1 | $z0;

        return z1;

     label2:
        return 0;
    }

    void performPrimaryNavigationFragmentChanged()
    {
        androidx.fragment.app.FragmentManagerImpl r1;
        androidx.fragment.app.Fragment r0;
        java.lang.Boolean $r2;
        boolean $z0, $z1;

        r0 := @this;

        r1 = r0.mFragmentManager;

        $z0 = virtualinvoke r1.isPrimaryNavigation(r0);

        $r2 = r0.mIsPrimaryNavigationFragment;

        if $r2 == null goto label1;

        $z1 = virtualinvoke $r2.booleanValue();

        if $z1 == $z0 goto label2;

     label1:
        $r2 = java.lang.Boolean.valueOf($z0);

        r0.mIsPrimaryNavigationFragment = $r2;

        virtualinvoke r0.onPrimaryNavigationFragmentChanged($z0);

        r1 = r0.mChildFragmentManager;

        virtualinvoke r1.dispatchPrimaryNavigationFragmentChanged();

     label2:
        return;
    }

    void performResume()
    {
        androidx.fragment.app.FragmentViewLifecycleOwner $r5;
        androidx.fragment.app.FragmentManagerImpl $r1;
        androidx.lifecycle.LifecycleRegistry $r2;
        androidx.fragment.app.SuperNotCalledException $r6;
        androidx.lifecycle.Lifecycle$Event $r3;
        androidx.fragment.app.Fragment r0;
        android.view.View $r4;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mChildFragmentManager;

        virtualinvoke $r1.noteStateNotSaved();

        $r1 = r0.mChildFragmentManager;

        virtualinvoke $r1.execPendingActions();

        r0.mState = 4;

        r0.mCalled = 0;

        virtualinvoke r0.onResume();

        $z0 = r0.mCalled;

        if $z0 == 0 goto label2;

        $r2 = r0.mLifecycleRegistry;

        $r3 = androidx.lifecycle.Lifecycle$Event.ON_RESUME;

        virtualinvoke $r2.handleLifecycleEvent($r3);

        $r4 = r0.mView;

        if $r4 == null goto label1;

        $r5 = r0.mViewLifecycleOwner;

        $r3 = androidx.lifecycle.Lifecycle$Event.ON_RESUME;

        virtualinvoke $r5.handleLifecycleEvent($r3);

     label1:
        $r1 = r0.mChildFragmentManager;

        virtualinvoke $r1.dispatchResume();

        $r1 = r0.mChildFragmentManager;

        virtualinvoke $r1.execPendingActions();

        return;

     label2:
        $r6 = new androidx.fragment.app.SuperNotCalledException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<init>();

        $r7 = virtualinvoke $r7.append("Fragment ");

        $r7 = virtualinvoke $r7.append(r0);

        $r7 = virtualinvoke $r7.append(" did not call through to super.onResume()");

        $r8 = virtualinvoke $r7.toString();

        specialinvoke $r6.<init>($r8);

        throw $r6;
    }

    void performSaveInstanceState(android.os.Bundle)
    {
        androidx.savedstate.SavedStateRegistryController r3;
        androidx.fragment.app.FragmentManagerImpl r4;
        android.os.Bundle $r1;
        android.os.Parcelable $r2;
        androidx.fragment.app.Fragment r0;

        r0 := @this;

        $r1 := @parameter0;

        virtualinvoke r0.onSaveInstanceState($r1);

        r3 = r0.mSavedStateRegistryController;

        virtualinvoke r3.performSave($r1);

        r4 = r0.mChildFragmentManager;

        $r2 = virtualinvoke r4.saveAllState();

        if $r2 == null goto label1;

        virtualinvoke $r1.putParcelable("android:support:fragments", $r2);

     label1:
        return;
    }

    void performStart()
    {
        androidx.fragment.app.FragmentViewLifecycleOwner $r5;
        androidx.fragment.app.FragmentManagerImpl $r1;
        androidx.lifecycle.LifecycleRegistry $r2;
        androidx.fragment.app.SuperNotCalledException $r6;
        androidx.lifecycle.Lifecycle$Event $r3;
        androidx.fragment.app.Fragment r0;
        android.view.View $r4;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mChildFragmentManager;

        virtualinvoke $r1.noteStateNotSaved();

        $r1 = r0.mChildFragmentManager;

        virtualinvoke $r1.execPendingActions();

        r0.mState = 3;

        r0.mCalled = 0;

        virtualinvoke r0.onStart();

        $z0 = r0.mCalled;

        if $z0 == 0 goto label2;

        $r2 = r0.mLifecycleRegistry;

        $r3 = androidx.lifecycle.Lifecycle$Event.ON_START;

        virtualinvoke $r2.handleLifecycleEvent($r3);

        $r4 = r0.mView;

        if $r4 == null goto label1;

        $r5 = r0.mViewLifecycleOwner;

        $r3 = androidx.lifecycle.Lifecycle$Event.ON_START;

        virtualinvoke $r5.handleLifecycleEvent($r3);

     label1:
        $r1 = r0.mChildFragmentManager;

        virtualinvoke $r1.dispatchStart();

        return;

     label2:
        $r6 = new androidx.fragment.app.SuperNotCalledException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<init>();

        $r7 = virtualinvoke $r7.append("Fragment ");

        $r7 = virtualinvoke $r7.append(r0);

        $r7 = virtualinvoke $r7.append(" did not call through to super.onStart()");

        $r8 = virtualinvoke $r7.toString();

        specialinvoke $r6.<init>($r8);

        throw $r6;
    }

    void performStop()
    {
        androidx.fragment.app.FragmentViewLifecycleOwner $r3;
        androidx.fragment.app.FragmentManagerImpl $r1;
        androidx.lifecycle.LifecycleRegistry $r5;
        androidx.fragment.app.SuperNotCalledException $r6;
        androidx.lifecycle.Lifecycle$Event $r4;
        androidx.fragment.app.Fragment r0;
        android.view.View $r2;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this;

        $r1 = r0.mChildFragmentManager;

        virtualinvoke $r1.dispatchStop();

        $r2 = r0.mView;

        if $r2 == null goto label1;

        $r3 = r0.mViewLifecycleOwner;

        $r4 = androidx.lifecycle.Lifecycle$Event.ON_STOP;

        virtualinvoke $r3.handleLifecycleEvent($r4);

     label1:
        $r5 = r0.mLifecycleRegistry;

        $r4 = androidx.lifecycle.Lifecycle$Event.ON_STOP;

        virtualinvoke $r5.handleLifecycleEvent($r4);

        r0.mState = 2;

        r0.mCalled = 0;

        virtualinvoke r0.onStop();

        $z0 = r0.mCalled;

        if $z0 == 0 goto label2;

        return;

     label2:
        $r6 = new androidx.fragment.app.SuperNotCalledException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<init>();

        $r7 = virtualinvoke $r7.append("Fragment ");

        $r7 = virtualinvoke $r7.append(r0);

        $r7 = virtualinvoke $r7.append(" did not call through to super.onStop()");

        $r8 = virtualinvoke $r7.toString();

        specialinvoke $r6.<init>($r8);

        throw $r6;
    }

    public void postponeEnterTransition()
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;

        r0 := @this;

        $r1 = specialinvoke r0.ensureAnimationInfo();

        $r1.mEnterTransitionPostponed = 1;

        return;
    }

    public final void postponeEnterTransition(long, java.util.concurrent.TimeUnit)
    {
        androidx.fragment.app.FragmentManagerImpl r3;
        androidx.fragment.app.FragmentHostCallback r4;
        long $l0;
        java.lang.Runnable $r7;
        java.util.concurrent.TimeUnit $r1;
        androidx.fragment.app.Fragment$AnimationInfo $r2;
        android.os.Handler $r5;
        android.os.Looper $r6;
        androidx.fragment.app.Fragment r0;

        r0 := @this;

        $l0 := @parameter0;

        $r1 := @parameter1;

        $r2 = specialinvoke r0.ensureAnimationInfo();

        $r2.mEnterTransitionPostponed = 1;

        r3 = r0.mFragmentManager;

        if r3 == null goto label1;

        r4 = r3.mHost;

        $r5 = virtualinvoke r4.getHandler();

        goto label2;

     label1:
        $r5 = new android.os.Handler;

        $r6 = android.os.Looper.getMainLooper();

        specialinvoke $r5.<init>($r6);

     label2:
        $r7 = r0.mPostponedDurationRunnable;

        virtualinvoke $r5.removeCallbacks($r7);

        $r7 = r0.mPostponedDurationRunnable;

        $l0 = virtualinvoke $r1.toMillis($l0);

        virtualinvoke $r5.postDelayed($r7, $l0);

        return;
    }

    public void registerForContextMenu(android.view.View)
    {
        androidx.fragment.app.Fragment r0;
        android.view.View $r1;

        r0 := @this;

        $r1 := @parameter0;

        virtualinvoke $r1.setOnCreateContextMenuListener(r0);

        return;
    }

    public final void requestPermissions(java.lang.String[], int)
    {
        java.lang.IllegalStateException $r3;
        androidx.fragment.app.FragmentHostCallback $r2;
        androidx.fragment.app.Fragment r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 = r0.mHost;

        if $r2 == null goto label1;

        virtualinvoke $r2.onRequestPermissionsFromFragment(r0, $r1, $i0);

        return;

     label1:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<init>();

        $r4 = virtualinvoke $r4.append("Fragment ");

        $r4 = virtualinvoke $r4.append(r0);

        $r4 = virtualinvoke $r4.append(" not attached to Activity");

        $r5 = virtualinvoke $r4.toString();

        specialinvoke $r3.<init>($r5);

        throw $r3;
    }

    public final androidx.fragment.app.FragmentActivity requireActivity()
    {
        java.lang.IllegalStateException $r1;
        androidx.fragment.app.Fragment r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        androidx.fragment.app.FragmentActivity $r2;

        r0 := @this;

        $r2 = virtualinvoke r0.getActivity();

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("Fragment ");

        $r3 = virtualinvoke $r3.append(r0);

        $r3 = virtualinvoke $r3.append(" not attached to an activity.");

        $r4 = virtualinvoke $r3.toString();

        specialinvoke $r1.<init>($r4);

        throw $r1;
    }

    public final android.os.Bundle requireArguments()
    {
        java.lang.IllegalStateException $r1;
        android.os.Bundle $r2;
        androidx.fragment.app.Fragment r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this;

        $r2 = virtualinvoke r0.getArguments();

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("Fragment ");

        $r3 = virtualinvoke $r3.append(r0);

        $r3 = virtualinvoke $r3.append(" does not have any arguments.");

        $r4 = virtualinvoke $r3.toString();

        specialinvoke $r1.<init>($r4);

        throw $r1;
    }

    public final android.content.Context requireContext()
    {
        java.lang.IllegalStateException $r1;
        android.content.Context $r2;
        androidx.fragment.app.Fragment r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this;

        $r2 = virtualinvoke r0.getContext();

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("Fragment ");

        $r3 = virtualinvoke $r3.append(r0);

        $r3 = virtualinvoke $r3.append(" not attached to a context.");

        $r4 = virtualinvoke $r3.toString();

        specialinvoke $r1.<init>($r4);

        throw $r1;
    }

    public final androidx.fragment.app.FragmentManager requireFragmentManager()
    {
        java.lang.IllegalStateException $r1;
        androidx.fragment.app.FragmentManager $r2;
        androidx.fragment.app.Fragment r0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this;

        $r2 = virtualinvoke r0.getFragmentManager();

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("Fragment ");

        $r3 = virtualinvoke $r3.append(r0);

        $r3 = virtualinvoke $r3.append(" not associated with a fragment manager.");

        $r4 = virtualinvoke $r3.toString();

        specialinvoke $r1.<init>($r4);

        throw $r1;
    }

    public final java.lang.Object requireHost()
    {
        java.lang.IllegalStateException $r1;
        androidx.fragment.app.Fragment r0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this;

        $r2 = virtualinvoke r0.getHost();

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("Fragment ");

        $r3 = virtualinvoke $r3.append(r0);

        $r3 = virtualinvoke $r3.append(" not attached to a host.");

        $r4 = virtualinvoke $r3.toString();

        specialinvoke $r1.<init>($r4);

        throw $r1;
    }

    public final androidx.fragment.app.Fragment requireParentFragment()
    {
        android.content.Context $r2;
        java.lang.IllegalStateException $r3;
        androidx.fragment.app.Fragment r0, $r1;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this;

        $r1 = virtualinvoke r0.getParentFragment();

        if $r1 != null goto label2;

        $r2 = virtualinvoke r0.getContext();

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<init>();

        $r4 = virtualinvoke $r4.append("Fragment ");

        $r4 = virtualinvoke $r4.append(r0);

        $r4 = virtualinvoke $r4.append(" is not attached to any Fragment or host");

        $r5 = virtualinvoke $r4.toString();

        specialinvoke $r3.<init>($r5);

        throw $r3;

     label1:
        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<init>();

        $r4 = virtualinvoke $r4.append("Fragment ");

        $r4 = virtualinvoke $r4.append(r0);

        $r4 = virtualinvoke $r4.append(" is not a child Fragment, it is directly attached to ");

        $r2 = virtualinvoke r0.getContext();

        $r4 = virtualinvoke $r4.append($r2);

        $r5 = virtualinvoke $r4.toString();

        specialinvoke $r3.<init>($r5);

        throw $r3;

     label2:
        return $r1;
    }

    public final android.view.View requireView()
    {
        java.lang.IllegalStateException $r1;
        androidx.fragment.app.Fragment r0;
        android.view.View $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        r0 := @this;

        $r2 = virtualinvoke r0.getView();

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<init>();

        $r3 = virtualinvoke $r3.append("Fragment ");

        $r3 = virtualinvoke $r3.append(r0);

        $r3 = virtualinvoke $r3.append(" did not return a View from onCreateView() or this was called before onCreateView().");

        $r4 = virtualinvoke $r3.toString();

        specialinvoke $r1.<init>($r4);

        throw $r1;
    }

    void restoreChildFragmentState(android.os.Bundle)
    {
        androidx.fragment.app.FragmentManagerImpl $r3;
        android.os.Bundle $r1;
        android.os.Parcelable $r2;
        androidx.fragment.app.Fragment r0;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.getParcelable("android:support:fragments");

        if $r2 == null goto label1;

        $r3 = r0.mChildFragmentManager;

        virtualinvoke $r3.restoreSaveState($r2);

        $r3 = r0.mChildFragmentManager;

        virtualinvoke $r3.dispatchCreate();

     label1:
        return;
    }

    final void restoreViewState(android.os.Bundle)
    {
        androidx.fragment.app.FragmentViewLifecycleOwner $r4;
        android.os.Bundle $r1;
        androidx.fragment.app.SuperNotCalledException $r6;
        androidx.lifecycle.Lifecycle$Event $r5;
        android.util.SparseArray $r2;
        androidx.fragment.app.Fragment r0;
        android.view.View $r3;
        java.lang.StringBuilder $r7;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mSavedViewState;

        if $r2 == null goto label1;

        $r3 = r0.mInnerView;

        virtualinvoke $r3.restoreHierarchyState($r2);

        r0.mSavedViewState = null;

     label1:
        r0.mCalled = 0;

        virtualinvoke r0.onViewStateRestored($r1);

        $z0 = r0.mCalled;

        if $z0 == 0 goto label2;

        $r3 = r0.mView;

        if $r3 == null goto label3;

        $r4 = r0.mViewLifecycleOwner;

        $r5 = androidx.lifecycle.Lifecycle$Event.ON_CREATE;

        virtualinvoke $r4.handleLifecycleEvent($r5);

        return;

     label2:
        $r6 = new androidx.fragment.app.SuperNotCalledException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<init>();

        $r7 = virtualinvoke $r7.append("Fragment ");

        $r7 = virtualinvoke $r7.append(r0);

        $r7 = virtualinvoke $r7.append(" did not call through to super.onViewStateRestored()");

        $r8 = virtualinvoke $r7.toString();

        specialinvoke $r6.<init>($r8);

        throw $r6;

     label3:
        return;
    }

    public void setAllowEnterTransitionOverlap(boolean)
    {
        androidx.fragment.app.Fragment$AnimationInfo $r1;
        androidx.fragment.app.Fragment r0;
        java.lang.Boolean $r2;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        $r1 = specialinvoke r0.ensureAnimationInfo();

        $r2 = java.lang.Boolean.valueOf($z0);

        $r1.mAllowEnterTransitionOverlap = $r2;

        return;
    }

    public void setAllowReturnTransitionOverlap(boolean)
    {
        androidx.fragment.app.Fragment$AnimationInfo $r1;
        androidx.fragment.app.Fragment r0;
        java.lang.Boolean $r2;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        $r1 = specialinvoke r0.ensureAnimationInfo();

        $r2 = java.lang.Boolean.valueOf($z0);

        $r1.mAllowReturnTransitionOverlap = $r2;

        return;
    }

    void setAnimatingAway(android.view.View)
    {
        androidx.fragment.app.Fragment r0;
        android.view.View $r1;
        androidx.fragment.app.Fragment$AnimationInfo $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = specialinvoke r0.ensureAnimationInfo();

        $r2.mAnimatingAway = $r1;

        return;
    }

    void setAnimator(android.animation.Animator)
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r2;
        android.animation.Animator $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = specialinvoke r0.ensureAnimationInfo();

        $r2.mAnimator = $r1;

        return;
    }

    public void setArguments(android.os.Bundle)
    {
        androidx.fragment.app.FragmentManagerImpl $r2;
        java.lang.IllegalStateException $r3;
        android.os.Bundle $r1;
        androidx.fragment.app.Fragment r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mFragmentManager;

        if $r2 == null goto label2;

        $z0 = virtualinvoke r0.isStateSaved();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<init>("Fragment already added and state has been saved");

        throw $r3;

     label2:
        r0.mArguments = $r1;

        return;
    }

    public void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r2;
        androidx.core.app.SharedElementCallback $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = specialinvoke r0.ensureAnimationInfo();

        $r2.mEnterTransitionCallback = $r1;

        return;
    }

    public void setEnterTransition(java.lang.Object)
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r2;
        java.lang.Object $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = specialinvoke r0.ensureAnimationInfo();

        $r2.mEnterTransition = $r1;

        return;
    }

    public void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r2;
        androidx.core.app.SharedElementCallback $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = specialinvoke r0.ensureAnimationInfo();

        $r2.mExitTransitionCallback = $r1;

        return;
    }

    public void setExitTransition(java.lang.Object)
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r2;
        java.lang.Object $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = specialinvoke r0.ensureAnimationInfo();

        $r2.mExitTransition = $r1;

        return;
    }

    public void setHasOptionsMenu(boolean)
    {
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.Fragment r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 := @parameter0;

        $z1 = r0.mHasMenu;

        if $z1 == $z0 goto label1;

        r0.mHasMenu = $z0;

        $z0 = virtualinvoke r0.isAdded();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r0.isHidden();

        if $z0 != 0 goto label1;

        $r1 = r0.mHost;

        virtualinvoke $r1.onSupportInvalidateOptionsMenu();

     label1:
        return;
    }

    void setHideReplaced(boolean)
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        $r1 = specialinvoke r0.ensureAnimationInfo();

        $r1.mIsHideReplaced = $z0;

        return;
    }

    public void setInitialSavedState(androidx.fragment.app.Fragment$SavedState)
    {
        androidx.fragment.app.FragmentManagerImpl $r2;
        java.lang.IllegalStateException $r4;
        android.os.Bundle $r3;
        androidx.fragment.app.Fragment$SavedState $r1;
        androidx.fragment.app.Fragment r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mFragmentManager;

        if $r2 != null goto label3;

        if $r1 == null goto label1;

        $r3 = $r1.mState;

        if $r3 == null goto label1;

        $r3 = $r1.mState;

        goto label2;

     label1:
        $r3 = null;

     label2:
        r0.mSavedFragmentState = $r3;

        return;

     label3:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<init>("Fragment already added");

        throw $r4;
    }

    public void setMenuVisibility(boolean)
    {
        androidx.fragment.app.FragmentHostCallback $r1;
        androidx.fragment.app.Fragment r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 := @parameter0;

        $z1 = r0.mMenuVisible;

        if $z1 == $z0 goto label1;

        r0.mMenuVisible = $z0;

        $z0 = r0.mHasMenu;

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r0.isAdded();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke r0.isHidden();

        if $z0 != 0 goto label1;

        $r1 = r0.mHost;

        virtualinvoke $r1.onSupportInvalidateOptionsMenu();

     label1:
        return;
    }

    void setNextAnim(int)
    {
        androidx.fragment.app.Fragment r0;
        int $i0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mAnimationInfo;

        if $r1 != null goto label1;

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = specialinvoke r0.ensureAnimationInfo();

        $r1.mNextAnim = $i0;

        return;
    }

    void setNextTransition(int, int)
    {
        androidx.fragment.app.Fragment$AnimationInfo $r1;
        androidx.fragment.app.Fragment r0;
        int $i0, $i1;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $r1 = r0.mAnimationInfo;

        if $r1 != null goto label1;

        if $i0 != 0 goto label1;

        if $i1 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.ensureAnimationInfo();

        $r1 = r0.mAnimationInfo;

        $r1.mNextTransition = $i0;

        $r1 = r0.mAnimationInfo;

        $r1.mNextTransitionStyle = $i1;

        return;
    }

    void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
    {
        java.lang.IllegalStateException $r4;
        androidx.fragment.app.Fragment$OnStartEnterTransitionListener $r1, $r3;
        androidx.fragment.app.Fragment$AnimationInfo $r2;
        androidx.fragment.app.Fragment r0;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.ensureAnimationInfo();

        $r2 = r0.mAnimationInfo;

        $r3 = $r2.mStartEnterTransitionListener;

        if $r1 != $r3 goto label1;

        return;

     label1:
        if $r1 == null goto label3;

        $r2 = r0.mAnimationInfo;

        $r3 = $r2.mStartEnterTransitionListener;

        if $r3 != null goto label2;

        goto label3;

     label2:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r5 = virtualinvoke $r5.append("Trying to set a replacement startPostponedEnterTransition on ");

        $r5 = virtualinvoke $r5.append(r0);

        $r6 = virtualinvoke $r5.toString();

        specialinvoke $r4.<init>($r6);

        throw $r4;

     label3:
        $r2 = r0.mAnimationInfo;

        $z0 = $r2.mEnterTransitionPostponed;

        if $z0 == 0 goto label4;

        $r2 = r0.mAnimationInfo;

        $r2.mStartEnterTransitionListener = $r1;

     label4:
        if $r1 == null goto label5;

        interfaceinvoke $r1.startListening();

     label5:
        return;
    }

    public void setReenterTransition(java.lang.Object)
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r2;
        java.lang.Object $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = specialinvoke r0.ensureAnimationInfo();

        $r2.mReenterTransition = $r1;

        return;
    }

    public void setRetainInstance(boolean)
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.FragmentManagerImpl $r1;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        r0.mRetainInstance = $z0;

        $r1 = r0.mFragmentManager;

        if $r1 == null goto label2;

        if $z0 == 0 goto label1;

        virtualinvoke $r1.addRetainedFragment(r0);

        return;

     label1:
        virtualinvoke $r1.removeRetainedFragment(r0);

        return;

     label2:
        r0.mRetainInstanceChangedWhileDetached = 1;

        return;
    }

    public void setReturnTransition(java.lang.Object)
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r2;
        java.lang.Object $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = specialinvoke r0.ensureAnimationInfo();

        $r2.mReturnTransition = $r1;

        return;
    }

    public void setSharedElementEnterTransition(java.lang.Object)
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r2;
        java.lang.Object $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = specialinvoke r0.ensureAnimationInfo();

        $r2.mSharedElementEnterTransition = $r1;

        return;
    }

    public void setSharedElementReturnTransition(java.lang.Object)
    {
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$AnimationInfo $r2;
        java.lang.Object $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = specialinvoke r0.ensureAnimationInfo();

        $r2.mSharedElementReturnTransition = $r1;

        return;
    }

    void setStateAfterAnimating(int)
    {
        androidx.fragment.app.Fragment r0;
        int $i0;
        androidx.fragment.app.Fragment$AnimationInfo $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = specialinvoke r0.ensureAnimationInfo();

        $r1.mStateAfterAnimating = $i0;

        return;
    }

    public void setTargetFragment(androidx.fragment.app.Fragment, int)
    {
        androidx.fragment.app.FragmentManagerImpl r8;
        androidx.fragment.app.FragmentManager $r2, $r3;
        java.lang.IllegalArgumentException $r4;
        androidx.fragment.app.Fragment r0, $r1, r7;
        int $i0;
        java.lang.StringBuilder r5;
        java.lang.String $r6;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 = virtualinvoke r0.getFragmentManager();

        if $r1 == null goto label01;

        $r3 = virtualinvoke $r1.getFragmentManager();

        goto label02;

     label01:
        $r3 = null;

     label02:
        if $r2 == null goto label04;

        if $r3 == null goto label04;

        if $r2 != $r3 goto label03;

        goto label04;

     label03:
        $r4 = new java.lang.IllegalArgumentException;

        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<init>();

        r5 = virtualinvoke r5.append("Fragment ");

        r5 = virtualinvoke r5.append($r1);

        r5 = virtualinvoke r5.append(" must share the same FragmentManager to be set as a target fragment");

        $r6 = virtualinvoke r5.toString();

        specialinvoke $r4.<init>($r6);

        throw $r4;

     label04:
        r7 = $r1;

     label05:
        if r7 == null goto label07;

        if r7 == r0 goto label06;

        r7 = virtualinvoke r7.getTargetFragment();

        goto label05;

     label06:
        $r4 = new java.lang.IllegalArgumentException;

        r5 = new java.lang.StringBuilder;

        specialinvoke r5.<init>();

        r5 = virtualinvoke r5.append("Setting ");

        r5 = virtualinvoke r5.append($r1);

        r5 = virtualinvoke r5.append(" as the target of ");

        r5 = virtualinvoke r5.append(r0);

        r5 = virtualinvoke r5.append(" would create a target cycle");

        $r6 = virtualinvoke r5.toString();

        specialinvoke $r4.<init>($r6);

        throw $r4;

     label07:
        if $r1 != null goto label08;

        r0.mTargetWho = null;

        r0.mTarget = null;

        goto label10;

     label08:
        r8 = r0.mFragmentManager;

        if r8 == null goto label09;

        r8 = $r1.mFragmentManager;

        if r8 == null goto label09;

        $r6 = $r1.mWho;

        r0.mTargetWho = $r6;

        r0.mTarget = null;

        goto label10;

     label09:
        r0.mTargetWho = null;

        r0.mTarget = $r1;

     label10:
        r0.mTargetRequestCode = $i0;

        return;
    }

    public void setUserVisibleHint(boolean)
    {
        androidx.fragment.app.FragmentManagerImpl $r1;
        android.os.Bundle $r2;
        androidx.fragment.app.Fragment r0;
        int $i0;
        java.lang.Boolean $r3;
        boolean $z0, $z1;

        r0 := @this;

        $z0 := @parameter0;

        $z1 = r0.mUserVisibleHint;

        if $z1 != 0 goto label1;

        if $z0 == 0 goto label1;

        $i0 = r0.mState;

        if $i0 >= 3 goto label1;

        $r1 = r0.mFragmentManager;

        if $r1 == null goto label1;

        $z1 = virtualinvoke r0.isAdded();

        if $z1 == 0 goto label1;

        $z1 = r0.mIsCreated;

        if $z1 == 0 goto label1;

        $r1 = r0.mFragmentManager;

        virtualinvoke $r1.performPendingDeferredStart(r0);

     label1:
        r0.mUserVisibleHint = $z0;

        $i0 = r0.mState;

        if $i0 >= 3 goto label2;

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        r0.mDeferStart = $z1;

        $r2 = r0.mSavedFragmentState;

        if $r2 == null goto label4;

        $r3 = java.lang.Boolean.valueOf($z0);

        r0.mSavedUserVisibleHint = $r3;

     label4:
        return;
    }

    public boolean shouldShowRequestPermissionRationale(java.lang.String)
    {
        androidx.fragment.app.FragmentHostCallback $r2;
        androidx.fragment.app.Fragment r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mHost;

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.onShouldShowRequestPermissionRationale($r1);

        return $z0;

     label1:
        return 0;
    }

    public void startActivity(android.content.Intent)
    {
        androidx.fragment.app.Fragment r0;
        android.content.Intent $r1;

        r0 := @this;

        $r1 := @parameter0;

        virtualinvoke r0.startActivity($r1, null);

        return;
    }

    public void startActivity(android.content.Intent, android.os.Bundle)
    {
        java.lang.IllegalStateException $r7;
        androidx.fragment.app.FragmentHostCallback $r3;
        android.os.Bundle $r2;
        android.content.Intent $r1;
        androidx.fragment.app.Fragment r0;
        java.lang.StringBuilder $r4, $r6;
        java.lang.String $r5;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = r0.mHost;

        if $r3 == null goto label1;

        virtualinvoke $r3.onStartActivityFromFragment(r0, $r1, -1, $r2);

        return;

     label1:
        $r7 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $r4 = virtualinvoke $r6.append("Fragment ");

        $r4 = virtualinvoke $r4.append(r0);

        $r4 = virtualinvoke $r4.append(" not attached to Activity");

        $r5 = virtualinvoke $r4.toString();

        specialinvoke $r7.<init>($r5);

        throw $r7;
    }

    public void startActivityForResult(android.content.Intent, int)
    {
        androidx.fragment.app.Fragment r0;
        int $i0;
        android.content.Intent $r1;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        virtualinvoke r0.startActivityForResult($r1, $i0, null);

        return;
    }

    public void startActivityForResult(android.content.Intent, int, android.os.Bundle)
    {
        java.lang.IllegalStateException $r4;
        androidx.fragment.app.FragmentHostCallback $r3;
        android.os.Bundle $r2;
        android.content.Intent $r1;
        androidx.fragment.app.Fragment r0;
        int $i0;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 := @parameter2;

        $r3 = r0.mHost;

        if $r3 == null goto label1;

        virtualinvoke $r3.onStartActivityFromFragment(r0, $r1, $i0, $r2);

        return;

     label1:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<init>();

        $r5 = virtualinvoke $r5.append("Fragment ");

        $r5 = virtualinvoke $r5.append(r0);

        $r5 = virtualinvoke $r5.append(" not attached to Activity");

        $r6 = virtualinvoke $r5.toString();

        specialinvoke $r4.<init>($r6);

        throw $r4;
    }

    public void startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender$SendIntentException
    {
        java.lang.IllegalStateException $r5;
        androidx.fragment.app.FragmentHostCallback $r4;
        android.os.Bundle $r3;
        android.content.Intent $r2;
        android.content.IntentSender $r1;
        androidx.fragment.app.Fragment r0;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $r2 := @parameter2;

        $i1 := @parameter3;

        $i2 := @parameter4;

        $i3 := @parameter5;

        $r3 := @parameter6;

        $r4 = r0.mHost;

        if $r4 == null goto label1;

        virtualinvoke $r4.onStartIntentSenderFromFragment(r0, $r1, $i0, $r2, $i1, $i2, $i3, $r3);

        return;

     label1:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<init>();

        $r6 = virtualinvoke $r6.append("Fragment ");

        $r6 = virtualinvoke $r6.append(r0);

        $r6 = virtualinvoke $r6.append(" not attached to Activity");

        $r7 = virtualinvoke $r6.toString();

        specialinvoke $r5.<init>($r7);

        throw $r5;
    }

    public void startPostponedEnterTransition()
    {
        androidx.fragment.app.FragmentManagerImpl $r1;
        androidx.fragment.app.FragmentHostCallback $r2;
        androidx.fragment.app.Fragment$AnimationInfo $r7;
        android.os.Looper $r3, $r5;
        android.os.Handler $r4;
        androidx.fragment.app.Fragment r0;
        androidx.fragment.app.Fragment$3 $r6;

        r0 := @this;

        $r1 = r0.mFragmentManager;

        if $r1 == null goto label3;

        $r2 = $r1.mHost;

        if $r2 != null goto label1;

        goto label3;

     label1:
        $r3 = android.os.Looper.myLooper();

        $r1 = r0.mFragmentManager;

        $r2 = $r1.mHost;

        $r4 = virtualinvoke $r2.getHandler();

        $r5 = virtualinvoke $r4.getLooper();

        if $r3 == $r5 goto label2;

        $r1 = r0.mFragmentManager;

        $r2 = $r1.mHost;

        $r4 = virtualinvoke $r2.getHandler();

        $r6 = new androidx.fragment.app.Fragment$3;

        specialinvoke $r6.<init>(r0);

        virtualinvoke $r4.postAtFrontOfQueue($r6);

        return;

     label2:
        virtualinvoke r0.callStartTransitionListener();

        return;

     label3:
        $r7 = specialinvoke r0.ensureAnimationInfo();

        $r7.mEnterTransitionPostponed = 0;

        return;
    }

    public java.lang.String toString()
    {
        androidx.fragment.app.Fragment r0;
        int $i0;
        java.lang.StringBuilder r1;
        java.lang.String $r2;

        r0 := @this;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<init>(128);

        androidx.core.util.DebugUtils.buildShortClassTag(r0, r1);

        virtualinvoke r1.append(" (");

        $r2 = r0.mWho;

        virtualinvoke r1.append($r2);

        virtualinvoke r1.append(")");

        $i0 = r0.mFragmentId;

        if $i0 == 0 goto label1;

        virtualinvoke r1.append(" id=0x");

        $i0 = r0.mFragmentId;

        $r2 = java.lang.Integer.toHexString($i0);

        virtualinvoke r1.append($r2);

     label1:
        $r2 = r0.mTag;

        if $r2 == null goto label2;

        virtualinvoke r1.append(" ");

        $r2 = r0.mTag;

        virtualinvoke r1.append($r2);

     label2:
        virtualinvoke r1.append(125);

        $r2 = virtualinvoke r1.toString();

        return $r2;
    }

    public void unregisterForContextMenu(android.view.View)
    {
        androidx.fragment.app.Fragment r0;
        android.view.View $r1;

        r0 := @this;

        $r1 := @parameter0;

        virtualinvoke $r1.setOnCreateContextMenuListener(null);

        return;
    }
}
