public class androidx.work.impl.constraints.controllers.BatteryNotLowController extends androidx.work.impl.constraints.controllers.ConstraintController
{

    public void <init>(android.content.Context, androidx.work.impl.utils.taskexecutor.TaskExecutor)
    {
        androidx.work.impl.utils.taskexecutor.TaskExecutor $r2;
        android.content.Context $r1;
        androidx.work.impl.constraints.trackers.BatteryNotLowTracker $r4;
        androidx.work.impl.constraints.controllers.BatteryNotLowController r0;
        androidx.work.impl.constraints.trackers.Trackers $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = androidx.work.impl.constraints.trackers.Trackers.getInstance($r1, $r2);

        $r4 = virtualinvoke $r3.getBatteryNotLowTracker();

        specialinvoke r0.<init>($r4);

        return;
    }

    boolean hasConstraint(androidx.work.impl.model.WorkSpec)
    {
        androidx.work.impl.constraints.controllers.BatteryNotLowController r0;
        androidx.work.Constraints $r2;
        androidx.work.impl.model.WorkSpec $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = $r1.constraints;

        $z0 = virtualinvoke $r2.requiresBatteryNotLow();

        return $z0;
    }

    boolean isConstrained(java.lang.Boolean)
    {
        java.lang.Boolean $r1;
        androidx.work.impl.constraints.controllers.BatteryNotLowController r0;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = virtualinvoke $r1.booleanValue();

        $z0 = $z0 ^ 1;

        return $z0;
    }

    volatile boolean isConstrained(java.lang.Object)
    {
        androidx.work.impl.constraints.controllers.BatteryNotLowController r0;
        java.lang.Boolean $r2;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = (java.lang.Boolean) $r1;

        $z0 = virtualinvoke r0.isConstrained($r2);

        return $z0;
    }
}
