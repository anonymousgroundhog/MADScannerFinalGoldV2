public abstract class androidx.room.SharedSQLiteStatement extends java.lang.Object
{
    private final androidx.room.RoomDatabase mDatabase;
    private final java.util.concurrent.atomic.AtomicBoolean mLock;
    private volatile androidx.sqlite.db.SupportSQLiteStatement mStmt;

    public void <init>(androidx.room.RoomDatabase)
    {
        androidx.room.SharedSQLiteStatement r0;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        androidx.room.RoomDatabase $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        $r2 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r2.<init>(0);

        r0.mLock = $r2;

        r0.mDatabase = $r1;

        return;
    }

    private androidx.sqlite.db.SupportSQLiteStatement createNewStatement()
    {
        androidx.room.RoomDatabase $r2;
        androidx.room.SharedSQLiteStatement r0;
        java.lang.String $r1;
        androidx.sqlite.db.SupportSQLiteStatement $r3;

        r0 := @this;

        $r1 = virtualinvoke r0.createQuery();

        $r2 = r0.mDatabase;

        $r3 = virtualinvoke $r2.compileStatement($r1);

        return $r3;
    }

    private androidx.sqlite.db.SupportSQLiteStatement getStmt(boolean)
    {
        androidx.room.SharedSQLiteStatement r0;
        androidx.sqlite.db.SupportSQLiteStatement r1;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        if $z0 == 0 goto label2;

        r1 = r0.mStmt;

        if r1 != null goto label1;

        r1 = specialinvoke r0.createNewStatement();

        r0.mStmt = r1;

     label1:
        r1 = r0.mStmt;

        return r1;

     label2:
        r1 = specialinvoke r0.createNewStatement();

        return r1;
    }

    public androidx.sqlite.db.SupportSQLiteStatement acquire()
    {
        androidx.room.SharedSQLiteStatement r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        androidx.sqlite.db.SupportSQLiteStatement $r2;
        boolean $z0;

        r0 := @this;

        virtualinvoke r0.assertNotMainThread();

        $r1 = r0.mLock;

        $z0 = virtualinvoke $r1.compareAndSet(0, 1);

        $r2 = specialinvoke r0.getStmt($z0);

        return $r2;
    }

    protected void assertNotMainThread()
    {
        androidx.room.SharedSQLiteStatement r0;
        androidx.room.RoomDatabase $r1;

        r0 := @this;

        $r1 = r0.mDatabase;

        virtualinvoke $r1.assertNotMainThread();

        return;
    }

    protected abstract java.lang.String createQuery();

    public void release(androidx.sqlite.db.SupportSQLiteStatement)
    {
        androidx.room.SharedSQLiteStatement r0;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        androidx.sqlite.db.SupportSQLiteStatement $r1, $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mStmt;

        if $r1 != $r2 goto label1;

        $r3 = r0.mLock;

        virtualinvoke $r3.set(0);

     label1:
        return;
    }
}
