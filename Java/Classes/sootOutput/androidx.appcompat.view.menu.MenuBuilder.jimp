public class androidx.appcompat.view.menu.MenuBuilder extends java.lang.Object implements androidx.core.internal.view.SupportMenu
{
    private static final java.lang.String ACTION_VIEW_STATES_KEY;
    private static final java.lang.String EXPANDED_ACTION_VIEW_ID;
    private static final java.lang.String PRESENTER_KEY;
    private static final java.lang.String TAG;
    private static final int[] sCategoryToOrder;
    private java.util.ArrayList mActionItems;
    private androidx.appcompat.view.menu.MenuBuilder$Callback mCallback;
    private final android.content.Context mContext;
    private android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo;
    private int mDefaultShowAsAction;
    private androidx.appcompat.view.menu.MenuItemImpl mExpandedItem;
    private boolean mGroupDividerEnabled;
    android.graphics.drawable.Drawable mHeaderIcon;
    java.lang.CharSequence mHeaderTitle;
    android.view.View mHeaderView;
    private boolean mIsActionItemsStale;
    private boolean mIsClosing;
    private boolean mIsVisibleItemsStale;
    private java.util.ArrayList mItems;
    private boolean mItemsChangedWhileDispatchPrevented;
    private java.util.ArrayList mNonActionItems;
    private boolean mOptionalIconsVisible;
    private boolean mOverrideVisibleItems;
    private java.util.concurrent.CopyOnWriteArrayList mPresenters;
    private boolean mPreventDispatchingItemsChanged;
    private boolean mQwertyMode;
    private final android.content.res.Resources mResources;
    private boolean mShortcutsVisible;
    private boolean mStructureChangedWhileDispatchPrevented;
    private java.util.ArrayList mTempShortcutItemList;
    private java.util.ArrayList mVisibleItems;

    static void <clinit>()
    {
        int[] $r0;

        $r0 = newarray (int)[6];

        $r0[0] = 1;

        $r0[1] = 4;

        $r0[2] = 5;

        $r0[3] = 3;

        $r0[4] = 2;

        $r0[5] = 0;

        androidx.appcompat.view.menu.MenuBuilder.sCategoryToOrder = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        android.content.Context $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.content.res.Resources $r2;
        java.util.ArrayList $r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.mDefaultShowAsAction = 0;

        r0.mPreventDispatchingItemsChanged = 0;

        r0.mItemsChangedWhileDispatchPrevented = 0;

        r0.mStructureChangedWhileDispatchPrevented = 0;

        r0.mOptionalIconsVisible = 0;

        r0.mIsClosing = 0;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<init>();

        r0.mTempShortcutItemList = $r3;

        $r4 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r4.<init>();

        r0.mPresenters = $r4;

        r0.mGroupDividerEnabled = 0;

        r0.mContext = $r1;

        $r2 = virtualinvoke $r1.getResources();

        r0.mResources = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<init>();

        r0.mItems = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<init>();

        r0.mVisibleItems = $r3;

        r0.mIsVisibleItemsStale = 1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<init>();

        r0.mActionItems = $r3;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<init>();

        r0.mNonActionItems = $r3;

        r0.mIsActionItemsStale = 1;

        specialinvoke r0.setShortcutsVisibleInner(1);

        return;
    }

    private androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int, int, int, int, java.lang.CharSequence, int)
    {
        androidx.appcompat.view.menu.MenuItemImpl $r2;
        java.lang.CharSequence $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        $i3 := @parameter3;

        $r1 := @parameter4;

        $i4 := @parameter5;

        $r2 = new androidx.appcompat.view.menu.MenuItemImpl;

        specialinvoke $r2.<init>(r0, $i0, $i1, $i2, $i3, $r1, $i4);

        return $r2;
    }

    private void dispatchPresenterUpdate(boolean)
    {
        java.util.Iterator $r2;
        androidx.appcompat.view.menu.MenuPresenter r5;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.lang.Object $r3;
        java.lang.ref.WeakReference r4;
        boolean $z0, $z1;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this;

        $z0 := @parameter0;

        $r1 = r0.mPresenters;

        $z1 = virtualinvoke $r1.isEmpty();

        if $z1 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.stopDispatchingItemsChanged();

        $r1 = r0.mPresenters;

        $r2 = virtualinvoke $r1.iterator();

     label2:
        $z1 = interfaceinvoke $r2.hasNext();

        if $z1 == 0 goto label4;

        $r3 = interfaceinvoke $r2.next();

        r4 = (java.lang.ref.WeakReference) $r3;

        $r3 = virtualinvoke r4.get();

        r5 = (androidx.appcompat.view.menu.MenuPresenter) $r3;

        if r5 != null goto label3;

        $r1 = r0.mPresenters;

        virtualinvoke $r1.remove(r4);

        goto label2;

     label3:
        interfaceinvoke r5.updateMenuView($z0);

        goto label2;

     label4:
        virtualinvoke r0.startDispatchingItemsChanged();

        return;
    }

    private void dispatchRestoreInstanceState(android.os.Bundle)
    {
        android.os.Bundle $r1;
        android.os.Parcelable r8;
        java.util.Iterator $r4;
        androidx.appcompat.view.menu.MenuPresenter r7;
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.util.SparseArray $r2;
        int $i0;
        java.lang.Object $r5;
        java.lang.ref.WeakReference r6;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke $r1.getSparseParcelableArray("android:menu:presenters");

        if $r2 == null goto label4;

        $r3 = r0.mPresenters;

        $z0 = virtualinvoke $r3.isEmpty();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.mPresenters;

        $r4 = virtualinvoke $r3.iterator();

     label2:
        $z0 = interfaceinvoke $r4.hasNext();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.next();

        r6 = (java.lang.ref.WeakReference) $r5;

        $r5 = virtualinvoke r6.get();

        r7 = (androidx.appcompat.view.menu.MenuPresenter) $r5;

        if r7 != null goto label3;

        $r3 = r0.mPresenters;

        virtualinvoke $r3.remove(r6);

        goto label2;

     label3:
        $i0 = interfaceinvoke r7.getId();

        if $i0 <= 0 goto label2;

        $r5 = virtualinvoke $r2.get($i0);

        r8 = (android.os.Parcelable) $r5;

        if r8 == null goto label2;

        interfaceinvoke r7.onRestoreInstanceState(r8);

        goto label2;

     label4:
        return;
    }

    private void dispatchSaveInstanceState(android.os.Bundle)
    {
        android.os.Bundle $r1;
        android.os.Parcelable $r8;
        java.util.Iterator $r4;
        androidx.appcompat.view.menu.MenuPresenter r7;
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.util.SparseArray r3;
        int $i0;
        java.lang.Object $r5;
        java.lang.ref.WeakReference r6;
        java.util.concurrent.CopyOnWriteArrayList r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mPresenters;

        $z0 = virtualinvoke r2.isEmpty();

        if $z0 == 0 goto label1;

        return;

     label1:
        r3 = new android.util.SparseArray;

        specialinvoke r3.<init>();

        r2 = r0.mPresenters;

        $r4 = virtualinvoke r2.iterator();

     label2:
        $z0 = interfaceinvoke $r4.hasNext();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.next();

        r6 = (java.lang.ref.WeakReference) $r5;

        $r5 = virtualinvoke r6.get();

        r7 = (androidx.appcompat.view.menu.MenuPresenter) $r5;

        if r7 != null goto label3;

        r2 = r0.mPresenters;

        virtualinvoke r2.remove(r6);

        goto label2;

     label3:
        $i0 = interfaceinvoke r7.getId();

        if $i0 <= 0 goto label2;

        $r8 = interfaceinvoke r7.onSaveInstanceState();

        if $r8 == null goto label2;

        virtualinvoke r3.put($i0, $r8);

        goto label2;

     label4:
        virtualinvoke $r1.putSparseParcelableArray("android:menu:presenters", r3);

        return;
    }

    private boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder, androidx.appcompat.view.menu.MenuPresenter)
    {
        java.util.Iterator $r4;
        androidx.appcompat.view.menu.MenuPresenter $r2;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.lang.Object $r5;
        java.lang.ref.WeakReference r6;
        androidx.appcompat.view.menu.SubMenuBuilder $r1;
        java.util.concurrent.CopyOnWriteArrayList $r3;
        boolean $z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = r0.mPresenters;

        $z0 = virtualinvoke $r3.isEmpty();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z0 = 0;

        if $r2 == null goto label2;

        $z0 = interfaceinvoke $r2.onSubMenuSelected($r1);

     label2:
        $r3 = r0.mPresenters;

        $r4 = virtualinvoke $r3.iterator();

     label3:
        $z1 = interfaceinvoke $r4.hasNext();

        if $z1 == 0 goto label5;

        $r5 = interfaceinvoke $r4.next();

        r6 = (java.lang.ref.WeakReference) $r5;

        $r5 = virtualinvoke r6.get();

        $r2 = (androidx.appcompat.view.menu.MenuPresenter) $r5;

        if $r2 != null goto label4;

        $r3 = r0.mPresenters;

        virtualinvoke $r3.remove(r6);

        goto label3;

     label4:
        if $z0 != 0 goto label3;

        $z0 = interfaceinvoke $r2.onSubMenuSelected($r1);

        goto label3;

     label5:
        return $z0;
    }

    private static int findInsertIndex(java.util.ArrayList, int)
    {
        androidx.appcompat.view.menu.MenuItemImpl r2;
        int $i0, $i1, $i2;
        java.lang.Object $r1;
        java.util.ArrayList r0;

        r0 := @parameter0;

        $i0 := @parameter1;

        $i1 = virtualinvoke r0.size();

        $i1 = $i1 + -1;

     label1:
        if $i1 < 0 goto label3;

        $r1 = virtualinvoke r0.get($i1);

        r2 = (androidx.appcompat.view.menu.MenuItemImpl) $r1;

        $i2 = virtualinvoke r2.getOrdering();

        if $i2 > $i0 goto label2;

        $i0 = $i1 + 1;

        return $i0;

     label2:
        $i1 = $i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    private static int getOrdering(int)
    {
        int[] $r0;
        int $i0, i1, $i2;
        java.lang.IllegalArgumentException $r1;

        $i0 := @parameter0;

        i1 = -65536 & $i0;

        i1 = i1 >> 16;

        if i1 < 0 goto label1;

        $r0 = androidx.appcompat.view.menu.MenuBuilder.sCategoryToOrder;

        $i2 = lengthof $r0;

        if i1 >= $i2 goto label1;

        i1 = $r0[i1];

        i1 = i1 << 16;

        $i0 = 65535 & $i0;

        $i0 = i1 | $i0;

        return $i0;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<init>("order does not contain a valid category.");

        throw $r1;
    }

    private void removeItemAtInt(int, boolean)
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        int $i0, $i1;
        boolean $z0;
        java.util.ArrayList $r1;

        r0 := @this;

        $i0 := @parameter0;

        $z0 := @parameter1;

        if $i0 < 0 goto label2;

        $r1 = r0.mItems;

        $i1 = virtualinvoke $r1.size();

        if $i0 < $i1 goto label1;

        return;

     label1:
        $r1 = r0.mItems;

        virtualinvoke $r1.remove($i0);

        if $z0 == 0 goto label2;

        virtualinvoke r0.onItemsChanged(1);

     label2:
        return;
    }

    private void setHeaderInternal(int, java.lang.CharSequence, int, android.graphics.drawable.Drawable, android.view.View)
    {
        android.content.Context $r5;
        java.lang.CharSequence $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.graphics.drawable.Drawable $r2;
        int $i0, $i1;
        android.view.View $r3;
        android.content.res.Resources $r4;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $i1 := @parameter2;

        $r2 := @parameter3;

        $r3 := @parameter4;

        $r4 = virtualinvoke r0.getResources();

        if $r3 == null goto label1;

        r0.mHeaderView = $r3;

        r0.mHeaderTitle = null;

        r0.mHeaderIcon = null;

        goto label6;

     label1:
        if $i0 <= 0 goto label2;

        $r1 = virtualinvoke $r4.getText($i0);

        r0.mHeaderTitle = $r1;

        goto label3;

     label2:
        if $r1 == null goto label3;

        r0.mHeaderTitle = $r1;

     label3:
        if $i1 <= 0 goto label4;

        $r5 = virtualinvoke r0.getContext();

        $r2 = androidx.core.content.ContextCompat.getDrawable($r5, $i1);

        r0.mHeaderIcon = $r2;

        goto label5;

     label4:
        if $r2 == null goto label5;

        r0.mHeaderIcon = $r2;

     label5:
        r0.mHeaderView = null;

     label6:
        virtualinvoke r0.onItemsChanged(0);

        return;
    }

    private void setShortcutsVisibleInner(boolean)
    {
        android.content.Context $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.view.ViewConfiguration $r4;
        android.content.res.Configuration $r3;
        int $i0;
        boolean $z0, $z1;
        android.content.res.Resources $r2;

        r0 := @this;

        $z0 := @parameter0;

        if $z0 == 0 goto label1;

        $r2 = r0.mResources;

        $r3 = virtualinvoke $r2.getConfiguration();

        $i0 = $r3.keyboard;

        $z0 = 1;

        if $i0 == 1 goto label1;

        $r1 = r0.mContext;

        $r4 = android.view.ViewConfiguration.get($r1);

        $r1 = r0.mContext;

        $z1 = androidx.core.view.ViewConfigurationCompat.shouldShowMenuShortcutsWhenKeyboardPresent($r4, $r1);

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.mShortcutsVisible = $z0;

        return;
    }

    public android.view.MenuItem add(int)
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        int $i0;
        java.lang.String $r2;
        android.content.res.Resources $r1;
        android.view.MenuItem $r3;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mResources;

        $r2 = virtualinvoke $r1.getString($i0);

        $r3 = virtualinvoke r0.addInternal(0, 0, 0, $r2);

        return $r3;
    }

    public android.view.MenuItem add(int, int, int, int)
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.view.MenuItem $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2;
        android.content.res.Resources $r1;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        $i3 := @parameter3;

        $r1 = r0.mResources;

        $r2 = virtualinvoke $r1.getString($i3);

        $r3 = virtualinvoke r0.addInternal($i0, $i1, $i2, $r2);

        return $r3;
    }

    public android.view.MenuItem add(int, int, int, java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;
        int $i0, $i1, $i2;
        android.view.MenuItem $r2;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        $r1 := @parameter3;

        $r2 = virtualinvoke r0.addInternal($i0, $i1, $i2, $r1);

        return $r2;
    }

    public android.view.MenuItem add(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.view.MenuItem $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke r0.addInternal(0, 0, 0, $r1);

        return $r2;
    }

    public int addIntentOptions(int, int, int, android.content.ComponentName, android.content.Intent[], android.content.Intent, int, android.view.MenuItem[])
    {
        android.content.Context r6;
        android.content.pm.PackageManager $r7;
        android.content.Intent $r3, r5, r11;
        android.graphics.drawable.Drawable $r18;
        android.view.MenuItem $r17;
        int $i0, $i1, $i2, $i3, i4, i5;
        android.content.pm.ActivityInfo $r12;
        android.content.Intent[] $r2;
        java.lang.String $r14, $r15;
        android.view.MenuItem[] $r4;
        java.lang.CharSequence $r16;
        android.content.ComponentName $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.content.pm.ResolveInfo r10;
        java.util.List $r8;
        java.lang.Object $r9;
        android.content.pm.ApplicationInfo $r13;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        $r1 := @parameter3;

        $r2 := @parameter4;

        $r3 := @parameter5;

        $i3 := @parameter6;

        $r4 := @parameter7;

        r6 = r0.mContext;

        $r7 = virtualinvoke r6.getPackageManager();

        i4 = 0;

        $r8 = virtualinvoke $r7.queryIntentActivityOptions($r1, $r2, $r3, 0);

        if $r8 == null goto label1;

        i4 = interfaceinvoke $r8.size();

     label1:
        $i3 = $i3 & 1;

        if $i3 != 0 goto label2;

        virtualinvoke r0.removeGroup($i0);

     label2:
        $i3 = 0;

     label3:
        if $i3 >= i4 goto label7;

        $r9 = interfaceinvoke $r8.get($i3);

        r10 = (android.content.pm.ResolveInfo) $r9;

        r5 = new android.content.Intent;

        i5 = r10.specificIndex;

        if i5 >= 0 goto label4;

        r11 = $r3;

        goto label5;

     label4:
        i5 = r10.specificIndex;

        r11 = $r2[i5];

     label5:
        specialinvoke r5.<init>(r11);

        $r1 = new android.content.ComponentName;

        $r12 = r10.activityInfo;

        $r13 = $r12.applicationInfo;

        $r14 = $r13.packageName;

        $r12 = r10.activityInfo;

        $r15 = $r12.name;

        specialinvoke $r1.<init>($r14, $r15);

        virtualinvoke r5.setComponent($r1);

        $r16 = virtualinvoke r10.loadLabel($r7);

        $r17 = virtualinvoke r0.add($i0, $i1, $i2, $r16);

        $r18 = virtualinvoke r10.loadIcon($r7);

        $r17 = interfaceinvoke $r17.setIcon($r18);

        $r17 = interfaceinvoke $r17.setIntent(r5);

        if $r4 == null goto label6;

        i5 = r10.specificIndex;

        if i5 < 0 goto label6;

        i5 = r10.specificIndex;

        $r4[i5] = $r17;

     label6:
        $i3 = $i3 + 1;

        goto label3;

     label7:
        return i4;
    }

    protected android.view.MenuItem addInternal(int, int, int, java.lang.CharSequence)
    {
        androidx.appcompat.view.menu.MenuItemImpl $r2;
        java.lang.CharSequence $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.util.ArrayList $r4;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.ContextMenu$ContextMenuInfo $r3;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        $r1 := @parameter3;

        $i4 = androidx.appcompat.view.menu.MenuBuilder.getOrdering($i2);

        $i3 = r0.mDefaultShowAsAction;

        $r2 = specialinvoke r0.createNewMenuItem($i0, $i1, $i2, $i4, $r1, $i3);

        $r3 = r0.mCurrentMenuInfo;

        if $r3 == null goto label1;

        virtualinvoke $r2.setMenuInfo($r3);

     label1:
        $r4 = r0.mItems;

        $i0 = androidx.appcompat.view.menu.MenuBuilder.findInsertIndex($r4, $i4);

        virtualinvoke $r4.add($i0, $r2);

        virtualinvoke r0.onItemsChanged(1);

        return $r2;
    }

    public void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
    {
        android.content.Context $r2;
        androidx.appcompat.view.menu.MenuPresenter $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mContext;

        virtualinvoke r0.addMenuPresenter($r1, $r2);

        return;
    }

    public void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter, android.content.Context)
    {
        android.content.Context $r2;
        androidx.appcompat.view.menu.MenuPresenter $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.lang.ref.WeakReference $r3;
        java.util.concurrent.CopyOnWriteArrayList $r4;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r4 = r0.mPresenters;

        $r3 = new java.lang.ref.WeakReference;

        specialinvoke $r3.<init>($r1);

        virtualinvoke $r4.add($r3);

        interfaceinvoke $r1.initForMenu($r2, r0);

        r0.mIsActionItemsStale = 1;

        return;
    }

    public android.view.SubMenu addSubMenu(int)
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        int $i0;
        java.lang.String $r2;
        android.view.SubMenu $r3;
        android.content.res.Resources $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mResources;

        $r2 = virtualinvoke $r1.getString($i0);

        $r3 = virtualinvoke r0.addSubMenu(0, 0, 0, $r2);

        return $r3;
    }

    public android.view.SubMenu addSubMenu(int, int, int, int)
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.view.SubMenu $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2;
        android.content.res.Resources $r1;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        $i3 := @parameter3;

        $r1 = r0.mResources;

        $r2 = virtualinvoke $r1.getString($i3);

        $r3 = virtualinvoke r0.addSubMenu($i0, $i1, $i2, $r2);

        return $r3;
    }

    public android.view.SubMenu addSubMenu(int, int, int, java.lang.CharSequence)
    {
        android.content.Context $r3;
        androidx.appcompat.view.menu.MenuItemImpl r5;
        java.lang.CharSequence $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.view.MenuItem $r4;
        int $i0, $i1, $i2;
        androidx.appcompat.view.menu.SubMenuBuilder r2;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 := @parameter2;

        $r1 := @parameter3;

        $r4 = virtualinvoke r0.addInternal($i0, $i1, $i2, $r1);

        r5 = (androidx.appcompat.view.menu.MenuItemImpl) $r4;

        r2 = new androidx.appcompat.view.menu.SubMenuBuilder;

        $r3 = r0.mContext;

        specialinvoke r2.<init>($r3, r0, r5);

        virtualinvoke r5.setSubMenu(r2);

        return r2;
    }

    public android.view.SubMenu addSubMenu(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        android.view.SubMenu $r2;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = virtualinvoke r0.addSubMenu(0, 0, 0, $r1);

        return $r2;
    }

    public void changeMenuMode()
    {
        androidx.appcompat.view.menu.MenuBuilder$Callback $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $r1 = r0.mCallback;

        if $r1 == null goto label1;

        interfaceinvoke $r1.onMenuModeChange(r0);

     label1:
        return;
    }

    public void clear()
    {
        androidx.appcompat.view.menu.MenuItemImpl $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.util.ArrayList $r2;

        r0 := @this;

        $r1 = r0.mExpandedItem;

        if $r1 == null goto label1;

        virtualinvoke r0.collapseItemActionView($r1);

     label1:
        $r2 = r0.mItems;

        virtualinvoke $r2.clear();

        virtualinvoke r0.onItemsChanged(1);

        return;
    }

    public void clearAll()
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this;

        r0.mPreventDispatchingItemsChanged = 1;

        virtualinvoke r0.clear();

        virtualinvoke r0.clearHeader();

        $r1 = r0.mPresenters;

        virtualinvoke $r1.clear();

        r0.mPreventDispatchingItemsChanged = 0;

        r0.mItemsChangedWhileDispatchPrevented = 0;

        r0.mStructureChangedWhileDispatchPrevented = 0;

        virtualinvoke r0.onItemsChanged(1);

        return;
    }

    public void clearHeader()
    {
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        r0.mHeaderIcon = null;

        r0.mHeaderTitle = null;

        r0.mHeaderView = null;

        virtualinvoke r0.onItemsChanged(0);

        return;
    }

    public void close()
    {
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        virtualinvoke r0.close(1);

        return;
    }

    public final void close(boolean)
    {
        java.util.Iterator $r2;
        androidx.appcompat.view.menu.MenuPresenter r5;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.lang.Object $r3;
        java.lang.ref.WeakReference r4;
        boolean $z0, $z1;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this;

        $z0 := @parameter0;

        $z1 = r0.mIsClosing;

        if $z1 == 0 goto label1;

        return;

     label1:
        r0.mIsClosing = 1;

        $r1 = r0.mPresenters;

        $r2 = virtualinvoke $r1.iterator();

     label2:
        $z1 = interfaceinvoke $r2.hasNext();

        if $z1 == 0 goto label4;

        $r3 = interfaceinvoke $r2.next();

        r4 = (java.lang.ref.WeakReference) $r3;

        $r3 = virtualinvoke r4.get();

        r5 = (androidx.appcompat.view.menu.MenuPresenter) $r3;

        if r5 != null goto label3;

        $r1 = r0.mPresenters;

        virtualinvoke $r1.remove(r4);

        goto label2;

     label3:
        interfaceinvoke r5.onCloseMenu(r0, $z0);

        goto label2;

     label4:
        r0.mIsClosing = 0;

        return;
    }

    public boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
    {
        androidx.appcompat.view.menu.MenuItemImpl $r1, r3;
        java.util.Iterator $r4;
        androidx.appcompat.view.menu.MenuPresenter r7;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.lang.Object $r5;
        java.lang.ref.WeakReference r6;
        java.util.concurrent.CopyOnWriteArrayList r2;
        boolean $z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mPresenters;

        $z0 = virtualinvoke r2.isEmpty();

        if $z0 != 0 goto label5;

        r3 = r0.mExpandedItem;

        if r3 == $r1 goto label1;

        goto label5;

     label1:
        $z0 = 0;

        virtualinvoke r0.stopDispatchingItemsChanged();

        r2 = r0.mPresenters;

        $r4 = virtualinvoke r2.iterator();

     label2:
        $z1 = interfaceinvoke $r4.hasNext();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke $r4.next();

        r6 = (java.lang.ref.WeakReference) $r5;

        $r5 = virtualinvoke r6.get();

        r7 = (androidx.appcompat.view.menu.MenuPresenter) $r5;

        if r7 != null goto label3;

        r2 = r0.mPresenters;

        virtualinvoke r2.remove(r6);

        goto label2;

     label3:
        $z1 = interfaceinvoke r7.collapseItemActionView(r0, $r1);

        $z0 = $z1;

        if $z1 == 0 goto label2;

        goto label4;

     label4:
        virtualinvoke r0.startDispatchingItemsChanged();

        if $z0 == 0 goto label6;

        r0.mExpandedItem = null;

        return $z0;

     label5:
        return 0;

     label6:
        return $z0;
    }

    boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder, android.view.MenuItem)
    {
        androidx.appcompat.view.menu.MenuBuilder r0, $r1;
        androidx.appcompat.view.menu.MenuBuilder$Callback $r3;
        android.view.MenuItem $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = r0.mCallback;

        if $r3 == null goto label1;

        $z0 = interfaceinvoke $r3.onMenuItemSelected($r1, $r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
    {
        androidx.appcompat.view.menu.MenuItemImpl $r1;
        java.util.Iterator $r3;
        androidx.appcompat.view.menu.MenuPresenter r6;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.lang.Object $r4;
        java.lang.ref.WeakReference r5;
        java.util.concurrent.CopyOnWriteArrayList r2;
        boolean $z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mPresenters;

        $z0 = virtualinvoke r2.isEmpty();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z0 = 0;

        virtualinvoke r0.stopDispatchingItemsChanged();

        r2 = r0.mPresenters;

        $r3 = virtualinvoke r2.iterator();

     label2:
        $z1 = interfaceinvoke $r3.hasNext();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r3.next();

        r5 = (java.lang.ref.WeakReference) $r4;

        $r4 = virtualinvoke r5.get();

        r6 = (androidx.appcompat.view.menu.MenuPresenter) $r4;

        if r6 != null goto label3;

        r2 = r0.mPresenters;

        virtualinvoke r2.remove(r5);

        goto label2;

     label3:
        $z1 = interfaceinvoke r6.expandItemActionView(r0, $r1);

        $z0 = $z1;

        if $z1 == 0 goto label2;

        goto label4;

     label4:
        virtualinvoke r0.startDispatchingItemsChanged();

        if $z0 == 0 goto label5;

        r0.mExpandedItem = $r1;

     label5:
        return $z0;
    }

    public int findGroupIndex(int)
    {
        int $i0;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $i0 := @parameter0;

        $i0 = virtualinvoke r0.findGroupIndex($i0, 0);

        return $i0;
    }

    public int findGroupIndex(int, int)
    {
        androidx.appcompat.view.menu.MenuItemImpl r3;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.util.ArrayList r1;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 = virtualinvoke r0.size();

        if $i1 >= 0 goto label1;

        $i1 = 0;

     label1:
        if $i1 >= $i2 goto label3;

        r1 = r0.mItems;

        $r2 = virtualinvoke r1.get($i1);

        r3 = (androidx.appcompat.view.menu.MenuItemImpl) $r2;

        $i3 = virtualinvoke r3.getGroupId();

        if $i3 != $i0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public android.view.MenuItem findItem(int)
    {
        androidx.appcompat.view.menu.MenuItemImpl r3;
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.view.SubMenu $r4;
        java.util.ArrayList r1;
        android.view.MenuItem $r5;
        int $i0, $i1, i2, $i3;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 = virtualinvoke r0.size();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label4;

        r1 = r0.mItems;

        $r2 = virtualinvoke r1.get(i2);

        r3 = (androidx.appcompat.view.menu.MenuItemImpl) $r2;

        $i3 = virtualinvoke r3.getItemId();

        if $i3 != $i0 goto label2;

        return r3;

     label2:
        $z0 = virtualinvoke r3.hasSubMenu();

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke r3.getSubMenu();

        $r5 = interfaceinvoke $r4.findItem($i0);

        if $r5 == null goto label3;

        return $r5;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return null;
    }

    public int findItemIndex(int)
    {
        androidx.appcompat.view.menu.MenuItemImpl r3;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.util.ArrayList r1;
        int $i0, $i1, i2, $i3;
        java.lang.Object $r2;

        r0 := @this;

        $i0 := @parameter0;

        $i1 = virtualinvoke r0.size();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label3;

        r1 = r0.mItems;

        $r2 = virtualinvoke r1.get(i2);

        r3 = (androidx.appcompat.view.menu.MenuItemImpl) $r2;

        $i3 = virtualinvoke r3.getItemId();

        if $i3 != $i0 goto label2;

        return i2;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return -1;
    }

    androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int, android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        androidx.appcompat.view.menu.MenuItemImpl $r5;
        java.util.ArrayList r2;
        int $i0, $i1, $i2, i3, $i6, $i7;
        boolean $z0;
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.view.KeyCharacterMap$KeyData r3, $r7;
        char $c4, $c5;
        char[] $r6;
        java.lang.Object $r4;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        r2 = r0.mTempShortcutItemList;

        virtualinvoke r2.clear();

        virtualinvoke r0.findItemsWithShortcutForKey(r2, $i0, $r1);

        $z0 = virtualinvoke r2.isEmpty();

        if $z0 == 0 goto label01;

        return null;

     label01:
        $i1 = virtualinvoke $r1.getMetaState();

        $r7 = new android.view.KeyCharacterMap$KeyData;

        r3 = $r7;

        specialinvoke $r7.<init>();

        virtualinvoke $r1.getKeyData(r3);

        $i2 = virtualinvoke r2.size();

        if $i2 != 1 goto label02;

        $r4 = virtualinvoke r2.get(0);

        $r5 = (androidx.appcompat.view.menu.MenuItemImpl) $r4;

        return $r5;

     label02:
        $z0 = virtualinvoke r0.isQwertyMode();

        i3 = 0;

     label03:
        if i3 >= $i2 goto label09;

        $r4 = virtualinvoke r2.get(i3);

        $r5 = (androidx.appcompat.view.menu.MenuItemImpl) $r4;

        if $z0 == 0 goto label04;

        $c4 = virtualinvoke $r5.getAlphabeticShortcut();

        goto label05;

     label04:
        $c4 = virtualinvoke $r5.getNumericShortcut();

     label05:
        $r6 = r3.meta;

        $c5 = $r6[0];

        $i6 = (int) $c4;

        $i7 = (int) $c5;

        if $i6 != $i7 goto label06;

        $i6 = $i1 & 2;

        if $i6 == 0 goto label10;

     label06:
        $r6 = r3.meta;

        $c5 = $r6[2];

        $i6 = (int) $c4;

        $i7 = (int) $c5;

        if $i6 != $i7 goto label07;

        $i6 = $i1 & 2;

        if $i6 != 0 goto label10;

     label07:
        if $z0 == 0 goto label08;

        $i6 = (int) $c4;

        if $i6 != 8 goto label08;

        if $i0 != 67 goto label08;

        return $r5;

     label08:
        i3 = i3 + 1;

        goto label03;

     label09:
        return null;

     label10:
        return $r5;
    }

    void findItemsWithShortcutForKey(java.util.List, int, android.view.KeyEvent)
    {
        android.view.KeyEvent $r2;
        androidx.appcompat.view.menu.MenuItemImpl r6;
        java.util.ArrayList r4;
        int $i0, $i1, $i2, i3, $i5, i6;
        boolean $z0, $z1;
        androidx.appcompat.view.menu.MenuBuilder r0, r8;
        android.view.KeyCharacterMap$KeyData r3, $r10;
        char $c4, $c7;
        android.view.SubMenu $r7;
        java.util.List r1;
        char[] $r9;
        java.lang.Object $r5;

        r0 := @this;

        r1 := @parameter0;

        $i0 := @parameter1;

        $r2 := @parameter2;

        $z0 = virtualinvoke r0.isQwertyMode();

        $i1 = virtualinvoke $r2.getModifiers();

        $r10 = new android.view.KeyCharacterMap$KeyData;

        r3 = $r10;

        specialinvoke $r10.<init>();

        $z1 = virtualinvoke $r2.getKeyData(r3);

        if $z1 != 0 goto label01;

        if $i0 == 67 goto label01;

        return;

     label01:
        r4 = r0.mItems;

        $i2 = virtualinvoke r4.size();

        i3 = 0;

     label02:
        if i3 >= $i2 goto label12;

        r4 = r0.mItems;

        $r5 = virtualinvoke r4.get(i3);

        r6 = (androidx.appcompat.view.menu.MenuItemImpl) $r5;

        $z1 = virtualinvoke r6.hasSubMenu();

        if $z1 == 0 goto label03;

        $r7 = virtualinvoke r6.getSubMenu();

        r8 = (androidx.appcompat.view.menu.MenuBuilder) $r7;

        virtualinvoke r8.findItemsWithShortcutForKey(r1, $i0, $r2);

     label03:
        if $z0 == 0 goto label04;

        $c4 = virtualinvoke r6.getAlphabeticShortcut();

        goto label05;

     label04:
        $c4 = virtualinvoke r6.getNumericShortcut();

     label05:
        if $z0 == 0 goto label06;

        i6 = virtualinvoke r6.getAlphabeticModifiers();

        goto label07;

     label06:
        i6 = virtualinvoke r6.getNumericModifiers();

     label07:
        $i5 = $i1 & 69647;

        i6 = 69647 & i6;

        if $i5 != i6 goto label08;

        $z1 = 1;

        goto label09;

     label08:
        $z1 = 0;

     label09:
        if $z1 == 0 goto label11;

        if $c4 == 0 goto label11;

        $r9 = r3.meta;

        $c7 = $r9[0];

        $i5 = (int) $c4;

        i6 = (int) $c7;

        if $i5 == i6 goto label10;

        $r9 = r3.meta;

        $c7 = $r9[2];

        $i5 = (int) $c4;

        i6 = (int) $c7;

        if $i5 == i6 goto label10;

        if $z0 == 0 goto label11;

        $i5 = (int) $c4;

        if $i5 != 8 goto label11;

        if $i0 != 67 goto label11;

     label10:
        $z1 = virtualinvoke r6.isEnabled();

        if $z1 == 0 goto label11;

        interfaceinvoke r1.add(r6);

     label11:
        i3 = i3 + 1;

        goto label02;

     label12:
        return;
    }

    public void flagActionItems()
    {
        androidx.appcompat.view.menu.MenuItemImpl r8;
        java.util.Iterator $r3;
        androidx.appcompat.view.menu.MenuPresenter r6;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.util.ArrayList $r1, r7;
        int $i0, i1;
        java.lang.Object $r4;
        java.lang.ref.WeakReference r5;
        boolean z0, $z1;
        java.util.concurrent.CopyOnWriteArrayList r2;

        r0 := @this;

        $r1 = virtualinvoke r0.getVisibleItems();

        z0 = r0.mIsActionItemsStale;

        if z0 != 0 goto label01;

        return;

     label01:
        z0 = 0;

        r2 = r0.mPresenters;

        $r3 = virtualinvoke r2.iterator();

     label02:
        $z1 = interfaceinvoke $r3.hasNext();

        if $z1 == 0 goto label04;

        $r4 = interfaceinvoke $r3.next();

        r5 = (java.lang.ref.WeakReference) $r4;

        $r4 = virtualinvoke r5.get();

        r6 = (androidx.appcompat.view.menu.MenuPresenter) $r4;

        if r6 != null goto label03;

        r2 = r0.mPresenters;

        virtualinvoke r2.remove(r5);

        goto label02;

     label03:
        $z1 = interfaceinvoke r6.flagActionItems();

        z0 = z0 | $z1;

        goto label02;

     label04:
        if z0 == 0 goto label09;

        r7 = r0.mActionItems;

        virtualinvoke r7.clear();

        r7 = r0.mNonActionItems;

        virtualinvoke r7.clear();

        $i0 = virtualinvoke $r1.size();

        i1 = 0;

     label05:
        if i1 >= $i0 goto label08;

        $r4 = virtualinvoke $r1.get(i1);

        r8 = (androidx.appcompat.view.menu.MenuItemImpl) $r4;

        z0 = virtualinvoke r8.isActionButton();

        if z0 == 0 goto label06;

        r7 = r0.mActionItems;

        virtualinvoke r7.add(r8);

        goto label07;

     label06:
        r7 = r0.mNonActionItems;

        virtualinvoke r7.add(r8);

     label07:
        i1 = i1 + 1;

        goto label05;

     label08:
        goto label10;

     label09:
        $r1 = r0.mActionItems;

        virtualinvoke $r1.clear();

        $r1 = r0.mNonActionItems;

        virtualinvoke $r1.clear();

        $r1 = r0.mNonActionItems;

        r7 = virtualinvoke r0.getVisibleItems();

        virtualinvoke $r1.addAll(r7);

     label10:
        r0.mIsActionItemsStale = 0;

        return;
    }

    public java.util.ArrayList getActionItems()
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.util.ArrayList r1;

        r0 := @this;

        virtualinvoke r0.flagActionItems();

        r1 = r0.mActionItems;

        return r1;
    }

    protected java.lang.String getActionViewStatesKey()
    {
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        return "android:menu:actionviewstates";
    }

    public android.content.Context getContext()
    {
        android.content.Context r1;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        r1 = r0.mContext;

        return r1;
    }

    public androidx.appcompat.view.menu.MenuItemImpl getExpandedItem()
    {
        androidx.appcompat.view.menu.MenuItemImpl r1;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        r1 = r0.mExpandedItem;

        return r1;
    }

    public android.graphics.drawable.Drawable getHeaderIcon()
    {
        android.graphics.drawable.Drawable r1;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        r1 = r0.mHeaderIcon;

        return r1;
    }

    public java.lang.CharSequence getHeaderTitle()
    {
        java.lang.CharSequence r1;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        r1 = r0.mHeaderTitle;

        return r1;
    }

    public android.view.View getHeaderView()
    {
        android.view.View r1;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        r1 = r0.mHeaderView;

        return r1;
    }

    public android.view.MenuItem getItem(int)
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        int $i0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;
        android.view.MenuItem $r3;

        r0 := @this;

        $i0 := @parameter0;

        $r2 = r0.mItems;

        $r1 = virtualinvoke $r2.get($i0);

        $r3 = (android.view.MenuItem) $r1;

        return $r3;
    }

    public java.util.ArrayList getNonActionItems()
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.util.ArrayList r1;

        r0 := @this;

        virtualinvoke r0.flagActionItems();

        r1 = r0.mNonActionItems;

        return r1;
    }

    boolean getOptionalIconsVisible()
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mOptionalIconsVisible;

        return z0;
    }

    android.content.res.Resources getResources()
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.content.res.Resources r1;

        r0 := @this;

        r1 = r0.mResources;

        return r1;
    }

    public androidx.appcompat.view.menu.MenuBuilder getRootMenu()
    {
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        return r0;
    }

    public java.util.ArrayList getVisibleItems()
    {
        androidx.appcompat.view.menu.MenuItemImpl r3;
        androidx.appcompat.view.menu.MenuBuilder r0;
        int $i0, i1;
        java.lang.Object $r2;
        boolean z0;
        java.util.ArrayList r1;

        r0 := @this;

        z0 = r0.mIsVisibleItemsStale;

        if z0 != 0 goto label1;

        r1 = r0.mVisibleItems;

        return r1;

     label1:
        r1 = r0.mVisibleItems;

        virtualinvoke r1.clear();

        r1 = r0.mItems;

        $i0 = virtualinvoke r1.size();

        i1 = 0;

     label2:
        if i1 >= $i0 goto label4;

        r1 = r0.mItems;

        $r2 = virtualinvoke r1.get(i1);

        r3 = (androidx.appcompat.view.menu.MenuItemImpl) $r2;

        z0 = virtualinvoke r3.isVisible();

        if z0 == 0 goto label3;

        r1 = r0.mVisibleItems;

        virtualinvoke r1.add(r3);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        r0.mIsVisibleItemsStale = 0;

        r0.mIsActionItemsStale = 1;

        r1 = r0.mVisibleItems;

        return r1;
    }

    public boolean hasVisibleItems()
    {
        androidx.appcompat.view.menu.MenuItemImpl r3;
        androidx.appcompat.view.menu.MenuBuilder r0;
        int $i0, i1;
        java.lang.Object $r2;
        boolean z0;
        java.util.ArrayList r1;

        r0 := @this;

        z0 = r0.mOverrideVisibleItems;

        if z0 == 0 goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke r0.size();

        i1 = 0;

     label2:
        if i1 >= $i0 goto label4;

        r1 = r0.mItems;

        $r2 = virtualinvoke r1.get(i1);

        r3 = (androidx.appcompat.view.menu.MenuItemImpl) $r2;

        z0 = virtualinvoke r3.isVisible();

        if z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public boolean isGroupDividerEnabled()
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mGroupDividerEnabled;

        return z0;
    }

    boolean isQwertyMode()
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mQwertyMode;

        return z0;
    }

    public boolean isShortcutKey(int, android.view.KeyEvent)
    {
        android.view.KeyEvent $r1;
        androidx.appcompat.view.menu.MenuItemImpl $r2;
        androidx.appcompat.view.menu.MenuBuilder r0;
        int $i0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $r2 = virtualinvoke r0.findItemWithShortcutForKey($i0, $r1);

        if $r2 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isShortcutsVisible()
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        boolean z0;

        r0 := @this;

        z0 = r0.mShortcutsVisible;

        return z0;
    }

    void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl)
    {
        androidx.appcompat.view.menu.MenuItemImpl $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $r1 := @parameter0;

        r0.mIsActionItemsStale = 1;

        virtualinvoke r0.onItemsChanged(1);

        return;
    }

    void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl)
    {
        androidx.appcompat.view.menu.MenuItemImpl $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $r1 := @parameter0;

        r0.mIsVisibleItemsStale = 1;

        virtualinvoke r0.onItemsChanged(1);

        return;
    }

    public void onItemsChanged(boolean)
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 := @parameter0;

        $z1 = r0.mPreventDispatchingItemsChanged;

        if $z1 != 0 goto label2;

        if $z0 == 0 goto label1;

        r0.mIsVisibleItemsStale = 1;

        r0.mIsActionItemsStale = 1;

     label1:
        specialinvoke r0.dispatchPresenterUpdate($z0);

        return;

     label2:
        r0.mItemsChangedWhileDispatchPrevented = 1;

        if $z0 == 0 goto label3;

        r0.mStructureChangedWhileDispatchPrevented = 1;

     label3:
        return;
    }

    public boolean performIdentifierAction(int, int)
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        int $i0, $i1;
        android.view.MenuItem $r1;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $r1 = virtualinvoke r0.findItem($i0);

        $z0 = virtualinvoke r0.performItemAction($r1, $i1);

        return $z0;
    }

    public boolean performItemAction(android.view.MenuItem, int)
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        int $i0;
        android.view.MenuItem $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $z0 = virtualinvoke r0.performItemAction($r1, null, $i0);

        return $z0;
    }

    public boolean performItemAction(android.view.MenuItem, androidx.appcompat.view.menu.MenuPresenter, int)
    {
        android.content.Context $r6;
        androidx.appcompat.view.menu.MenuItemImpl r3;
        androidx.appcompat.view.menu.MenuPresenter $r2;
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.view.SubMenu $r7;
        android.view.MenuItem $r1;
        int $i0;
        androidx.core.view.ActionProvider $r4;
        boolean $z0, $z1, $z2;
        androidx.appcompat.view.menu.SubMenuBuilder r5;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 := @parameter2;

        r3 = (androidx.appcompat.view.menu.MenuItemImpl) $r1;

        if r3 == null goto label11;

        $z0 = virtualinvoke r3.isEnabled();

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $z0 = virtualinvoke r3.invoke();

        $r4 = virtualinvoke r3.getSupportActionProvider();

        if $r4 == null goto label02;

        $z1 = virtualinvoke $r4.hasSubMenu();

        if $z1 == 0 goto label02;

        $z1 = 1;

        goto label03;

     label02:
        $z1 = 0;

     label03:
        $z2 = virtualinvoke r3.hasCollapsibleActionView();

        if $z2 == 0 goto label04;

        $z1 = virtualinvoke r3.expandActionView();

        $z0 = $z0 | $z1;

        if $z0 == 0 goto label12;

        virtualinvoke r0.close(1);

        return $z0;

     label04:
        $z2 = virtualinvoke r3.hasSubMenu();

        if $z2 != 0 goto label06;

        if $z1 == 0 goto label05;

        goto label06;

     label05:
        $i0 = $i0 & 1;

        if $i0 != 0 goto label12;

        virtualinvoke r0.close(1);

        return $z0;

     label06:
        $i0 = $i0 & 4;

        if $i0 != 0 goto label07;

        virtualinvoke r0.close(0);

     label07:
        $z2 = virtualinvoke r3.hasSubMenu();

        if $z2 != 0 goto label08;

        r5 = new androidx.appcompat.view.menu.SubMenuBuilder;

        $r6 = virtualinvoke r0.getContext();

        specialinvoke r5.<init>($r6, r0, r3);

        virtualinvoke r3.setSubMenu(r5);

     label08:
        $r7 = virtualinvoke r3.getSubMenu();

        r5 = (androidx.appcompat.view.menu.SubMenuBuilder) $r7;

        if $z1 == 0 goto label09;

        virtualinvoke $r4.onPrepareSubMenu(r5);

     label09:
        $z1 = specialinvoke r0.dispatchSubMenuSelected(r5, $r2);

        $z0 = $z0 | $z1;

        if $z0 != 0 goto label10;

        virtualinvoke r0.close(1);

     label10:
        return $z0;

     label11:
        return 0;

     label12:
        return $z0;
    }

    public boolean performShortcut(int, android.view.KeyEvent, int)
    {
        android.view.KeyEvent $r1;
        androidx.appcompat.view.menu.MenuItemImpl $r2;
        androidx.appcompat.view.menu.MenuBuilder r0;
        int $i0, $i1;
        boolean z0;

        r0 := @this;

        $i0 := @parameter0;

        $r1 := @parameter1;

        $i1 := @parameter2;

        $r2 = virtualinvoke r0.findItemWithShortcutForKey($i0, $r1);

        z0 = 0;

        if $r2 == null goto label1;

        z0 = virtualinvoke r0.performItemAction($r2, $i1);

     label1:
        $i0 = $i1 & 2;

        if $i0 == 0 goto label2;

        virtualinvoke r0.close(1);

     label2:
        return z0;
    }

    public void removeGroup(int)
    {
        androidx.appcompat.view.menu.MenuItemImpl r3;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.util.ArrayList r1;
        int $i0, i1, $i2, i3, i4;
        java.lang.Object $r2;

        r0 := @this;

        $i0 := @parameter0;

        $i2 = virtualinvoke r0.findGroupIndex($i0);

        if $i2 < 0 goto label3;

        r1 = r0.mItems;

        i1 = virtualinvoke r1.size();

        i3 = i1 - $i2;

        i4 = 0;

     label1:
        i1 = i4 + 1;

        if i4 >= i3 goto label2;

        r1 = r0.mItems;

        $r2 = virtualinvoke r1.get($i2);

        r3 = (androidx.appcompat.view.menu.MenuItemImpl) $r2;

        i4 = virtualinvoke r3.getGroupId();

        if i4 != $i0 goto label2;

        specialinvoke r0.removeItemAtInt($i2, 0);

        i4 = i1;

        goto label1;

     label2:
        virtualinvoke r0.onItemsChanged(1);

     label3:
        return;
    }

    public void removeItem(int)
    {
        int $i0;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $i0 := @parameter0;

        $i0 = virtualinvoke r0.findItemIndex($i0);

        specialinvoke r0.removeItemAtInt($i0, 1);

        return;
    }

    public void removeItemAt(int)
    {
        int $i0;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.removeItemAtInt($i0, 1);

        return;
    }

    public void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
    {
        java.util.Iterator $r3;
        androidx.appcompat.view.menu.MenuPresenter $r1, r6;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.lang.Object $r4;
        java.lang.ref.WeakReference r5;
        java.util.concurrent.CopyOnWriteArrayList $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mPresenters;

        $r3 = virtualinvoke $r2.iterator();

     label1:
        $z0 = interfaceinvoke $r3.hasNext();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.next();

        r5 = (java.lang.ref.WeakReference) $r4;

        $r4 = virtualinvoke r5.get();

        r6 = (androidx.appcompat.view.menu.MenuPresenter) $r4;

        if r6 == null goto label2;

        if r6 != $r1 goto label1;

     label2:
        $r2 = r0.mPresenters;

        virtualinvoke $r2.remove(r5);

        goto label1;

     label3:
        return;
    }

    public void restoreActionViewStates(android.os.Bundle)
    {
        android.os.Bundle $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.view.SubMenu $r6;
        android.view.MenuItem $r4;
        android.util.SparseArray $r3;
        int $i0, i1, $i2;
        android.view.View $r5;
        java.lang.String $r2;
        boolean $z0;
        androidx.appcompat.view.menu.SubMenuBuilder r7;

        r0 := @this;

        $r1 := @parameter0;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r0.getActionViewStatesKey();

        $r3 = virtualinvoke $r1.getSparseParcelableArray($r2);

        $i0 = virtualinvoke r0.size();

        i1 = 0;

     label2:
        if i1 >= $i0 goto label5;

        $r4 = virtualinvoke r0.getItem(i1);

        $r5 = interfaceinvoke $r4.getActionView();

        if $r5 == null goto label3;

        $i2 = virtualinvoke $r5.getId();

        if $i2 == -1 goto label3;

        virtualinvoke $r5.restoreHierarchyState($r3);

     label3:
        $z0 = interfaceinvoke $r4.hasSubMenu();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r4.getSubMenu();

        r7 = (androidx.appcompat.view.menu.SubMenuBuilder) $r6;

        virtualinvoke r7.restoreActionViewStates($r1);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        $i0 = virtualinvoke $r1.getInt("android:menu:expandedactionview");

        if $i0 <= 0 goto label6;

        $r4 = virtualinvoke r0.findItem($i0);

        if $r4 == null goto label6;

        interfaceinvoke $r4.expandActionView();

     label6:
        return;
    }

    public void restorePresenterStates(android.os.Bundle)
    {
        android.os.Bundle $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.dispatchRestoreInstanceState($r1);

        return;
    }

    public void saveActionViewStates(android.os.Bundle)
    {
        android.os.Bundle $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.view.SubMenu $r5;
        android.view.MenuItem $r3;
        android.util.SparseArray r2, $r8;
        int $i0, i1, $i2;
        android.view.View $r4;
        java.lang.String $r7;
        boolean $z0;
        androidx.appcompat.view.menu.SubMenuBuilder r6;

        r0 := @this;

        $r1 := @parameter0;

        r2 = null;

        $i0 = virtualinvoke r0.size();

        i1 = 0;

     label1:
        if i1 >= $i0 goto label5;

        $r3 = virtualinvoke r0.getItem(i1);

        $r4 = interfaceinvoke $r3.getActionView();

        if $r4 == null goto label3;

        $i2 = virtualinvoke $r4.getId();

        if $i2 == -1 goto label3;

        if r2 != null goto label2;

        $r8 = new android.util.SparseArray;

        specialinvoke $r8.<init>();

        r2 = $r8;

     label2:
        virtualinvoke $r4.saveHierarchyState(r2);

        $z0 = interfaceinvoke $r3.isActionViewExpanded();

        if $z0 == 0 goto label3;

        $i2 = interfaceinvoke $r3.getItemId();

        virtualinvoke $r1.putInt("android:menu:expandedactionview", $i2);

     label3:
        $z0 = interfaceinvoke $r3.hasSubMenu();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r3.getSubMenu();

        r6 = (androidx.appcompat.view.menu.SubMenuBuilder) $r5;

        virtualinvoke r6.saveActionViewStates($r1);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        if r2 == null goto label6;

        $r7 = virtualinvoke r0.getActionViewStatesKey();

        virtualinvoke $r1.putSparseParcelableArray($r7, r2);

     label6:
        return;
    }

    public void savePresenterStates(android.os.Bundle)
    {
        android.os.Bundle $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.dispatchSaveInstanceState($r1);

        return;
    }

    public void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
    {
        androidx.appcompat.view.menu.MenuBuilder$Callback $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $r1 := @parameter0;

        r0.mCallback = $r1;

        return;
    }

    public void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo)
    {
        android.view.ContextMenu$ContextMenuInfo $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $r1 := @parameter0;

        r0.mCurrentMenuInfo = $r1;

        return;
    }

    public androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int)
    {
        int $i0;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $i0 := @parameter0;

        r0.mDefaultShowAsAction = $i0;

        return r0;
    }

    void setExclusiveItemChecked(android.view.MenuItem)
    {
        androidx.appcompat.view.menu.MenuItemImpl r4;
        androidx.appcompat.view.menu.MenuBuilder r0;
        android.view.MenuItem $r1;
        java.util.ArrayList r2;
        int $i0, $i1, i2, $i3;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 = interfaceinvoke $r1.getGroupId();

        r2 = r0.mItems;

        $i1 = virtualinvoke r2.size();

        virtualinvoke r0.stopDispatchingItemsChanged();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label7;

        r2 = r0.mItems;

        $r3 = virtualinvoke r2.get(i2);

        r4 = (androidx.appcompat.view.menu.MenuItemImpl) $r3;

        $i3 = virtualinvoke r4.getGroupId();

        if $i3 != $i0 goto label6;

        $z0 = virtualinvoke r4.isExclusiveCheckable();

        if $z0 != 0 goto label2;

        goto label6;

     label2:
        $z0 = virtualinvoke r4.isCheckable();

        if $z0 != 0 goto label3;

        goto label6;

     label3:
        if r4 != $r1 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        virtualinvoke r4.setCheckedInt($z0);

     label6:
        i2 = i2 + 1;

        goto label1;

     label7:
        virtualinvoke r0.startDispatchingItemsChanged();

        return;
    }

    public void setGroupCheckable(int, boolean, boolean)
    {
        androidx.appcompat.view.menu.MenuItemImpl r3;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.util.ArrayList r1;
        int $i0, $i1, i2, $i3;
        java.lang.Object $r2;
        boolean $z0, $z1;

        r0 := @this;

        $i0 := @parameter0;

        $z0 := @parameter1;

        $z1 := @parameter2;

        r1 = r0.mItems;

        $i1 = virtualinvoke r1.size();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label3;

        r1 = r0.mItems;

        $r2 = virtualinvoke r1.get(i2);

        r3 = (androidx.appcompat.view.menu.MenuItemImpl) $r2;

        $i3 = virtualinvoke r3.getGroupId();

        if $i3 != $i0 goto label2;

        virtualinvoke r3.setExclusiveCheckable($z1);

        virtualinvoke r3.setCheckable($z0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public void setGroupDividerEnabled(boolean)
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        r0.mGroupDividerEnabled = $z0;

        return;
    }

    public void setGroupEnabled(int, boolean)
    {
        androidx.appcompat.view.menu.MenuItemImpl r3;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.util.ArrayList r1;
        int $i0, $i1, i2, $i3;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this;

        $i0 := @parameter0;

        $z0 := @parameter1;

        r1 = r0.mItems;

        $i1 = virtualinvoke r1.size();

        i2 = 0;

     label1:
        if i2 >= $i1 goto label3;

        r1 = r0.mItems;

        $r2 = virtualinvoke r1.get(i2);

        r3 = (androidx.appcompat.view.menu.MenuItemImpl) $r2;

        $i3 = virtualinvoke r3.getGroupId();

        if $i3 != $i0 goto label2;

        virtualinvoke r3.setEnabled($z0);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public void setGroupVisible(int, boolean)
    {
        androidx.appcompat.view.menu.MenuItemImpl r3;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.util.ArrayList r1;
        int $i0, $i1, i2, $i3;
        java.lang.Object $r2;
        boolean $z0, z1, $z2;

        r0 := @this;

        $i0 := @parameter0;

        $z0 := @parameter1;

        r1 = r0.mItems;

        $i1 = virtualinvoke r1.size();

        z1 = 0;

        i2 = 0;

     label1:
        if i2 >= $i1 goto label3;

        r1 = r0.mItems;

        $r2 = virtualinvoke r1.get(i2);

        r3 = (androidx.appcompat.view.menu.MenuItemImpl) $r2;

        $i3 = virtualinvoke r3.getGroupId();

        if $i3 != $i0 goto label2;

        $z2 = virtualinvoke r3.setVisibleInt($z0);

        if $z2 == 0 goto label2;

        z1 = 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        if z1 == 0 goto label4;

        virtualinvoke r0.onItemsChanged(1);

     label4:
        return;
    }

    protected androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int)
    {
        int $i0;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.setHeaderInternal(0, null, $i0, null, null);

        return r0;
    }

    protected androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.setHeaderInternal(0, null, 0, $r1, null);

        return r0;
    }

    protected androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int)
    {
        int $i0;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.setHeaderInternal($i0, null, 0, null, null);

        return r0;
    }

    protected androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)
    {
        java.lang.CharSequence $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.setHeaderInternal(0, $r1, 0, null, null);

        return r0;
    }

    protected androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View)
    {
        android.view.View $r1;
        androidx.appcompat.view.menu.MenuBuilder r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.setHeaderInternal(0, null, 0, null, $r1);

        return r0;
    }

    public void setOptionalIconsVisible(boolean)
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        r0.mOptionalIconsVisible = $z0;

        return;
    }

    public void setOverrideVisibleItems(boolean)
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        r0.mOverrideVisibleItems = $z0;

        return;
    }

    public void setQwertyMode(boolean)
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        r0.mQwertyMode = $z0;

        virtualinvoke r0.onItemsChanged(0);

        return;
    }

    public void setShortcutsVisible(boolean)
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 := @parameter0;

        $z1 = r0.mShortcutsVisible;

        if $z1 != $z0 goto label1;

        return;

     label1:
        specialinvoke r0.setShortcutsVisibleInner($z0);

        virtualinvoke r0.onItemsChanged(0);

        return;
    }

    public int size()
    {
        int $i0;
        androidx.appcompat.view.menu.MenuBuilder r0;
        java.util.ArrayList $r1;

        r0 := @this;

        $r1 = r0.mItems;

        $i0 = virtualinvoke $r1.size();

        return $i0;
    }

    public void startDispatchingItemsChanged()
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        boolean $z0;

        r0 := @this;

        r0.mPreventDispatchingItemsChanged = 0;

        $z0 = r0.mItemsChangedWhileDispatchPrevented;

        if $z0 == 0 goto label1;

        r0.mItemsChangedWhileDispatchPrevented = 0;

        $z0 = r0.mStructureChangedWhileDispatchPrevented;

        virtualinvoke r0.onItemsChanged($z0);

     label1:
        return;
    }

    public void stopDispatchingItemsChanged()
    {
        androidx.appcompat.view.menu.MenuBuilder r0;
        boolean $z0;

        r0 := @this;

        $z0 = r0.mPreventDispatchingItemsChanged;

        if $z0 != 0 goto label1;

        r0.mPreventDispatchingItemsChanged = 1;

        r0.mItemsChangedWhileDispatchPrevented = 0;

        r0.mStructureChangedWhileDispatchPrevented = 0;

     label1:
        return;
    }
}
