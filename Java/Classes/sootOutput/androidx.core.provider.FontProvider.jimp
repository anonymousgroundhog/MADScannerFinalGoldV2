class androidx.core.provider.FontProvider extends java.lang.Object
{
    private static final java.util.Comparator sByteArrayComparator;

    static void <clinit>()
    {
        androidx.core.provider.FontProvider$1 $r0;

        $r0 = new androidx.core.provider.FontProvider$1;

        specialinvoke $r0.<init>();

        androidx.core.provider.FontProvider.sByteArrayComparator = $r0;

        return;
    }

    private void <init>()
    {
        androidx.core.provider.FontProvider r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    private static java.util.List convertToByteArrayList(android.content.pm.Signature[])
    {
        byte[] $r2;
        int i0, $i1;
        android.content.pm.Signature[] $r0;
        java.util.ArrayList r1;
        android.content.pm.Signature $r3;

        $r0 := @parameter0;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<init>();

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 >= $i1 goto label2;

        $r3 = $r0[i0];

        $r2 = virtualinvoke $r3.toByteArray();

        interfaceinvoke r1.add($r2);

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }

    private static boolean equalsByteArrayList(java.util.List, java.util.List)
    {
        byte[] $r3, $r4;
        java.util.List r0, r1;
        int $i0, $i1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @parameter0;

        r1 := @parameter1;

        $i0 = interfaceinvoke r0.size();

        $i1 = interfaceinvoke r1.size();

        if $i0 == $i1 goto label1;

        return 0;

     label1:
        $i0 = 0;

     label2:
        $i1 = interfaceinvoke r0.size();

        if $i0 >= $i1 goto label4;

        $r2 = interfaceinvoke r0.get($i0);

        $r3 = (byte[]) $r2;

        $r2 = interfaceinvoke r1.get($i0);

        $r4 = (byte[]) $r2;

        $z0 = java.util.Arrays.equals($r3, $r4);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        return 1;
    }

    private static java.util.List getCertificates(androidx.core.provider.FontRequest, android.content.res.Resources)
    {
        java.util.List $r2;
        int $i0;
        androidx.core.provider.FontRequest $r0;
        android.content.res.Resources $r1;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 = virtualinvoke $r0.getCertificates();

        if $r2 == null goto label1;

        $r2 = virtualinvoke $r0.getCertificates();

        return $r2;

     label1:
        $i0 = virtualinvoke $r0.getCertificatesArrayResId();

        $r2 = androidx.core.content.res.FontResourcesParserCompat.readCerts($r1, $i0);

        return $r2;
    }

    static androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context, androidx.core.provider.FontRequest, android.os.CancellationSignal) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r3;
        android.os.CancellationSignal $r2;
        androidx.core.provider.FontRequest $r1;
        android.content.pm.ProviderInfo $r5;
        androidx.core.provider.FontsContractCompat$FontInfo[] $r8;
        androidx.core.provider.FontsContractCompat$FontFamilyResult $r6;
        java.lang.String r7;
        android.content.res.Resources $r4;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        $r3 = virtualinvoke $r0.getPackageManager();

        $r4 = virtualinvoke $r0.getResources();

        $r5 = androidx.core.provider.FontProvider.getProvider($r3, $r1, $r4);

        if $r5 != null goto label1;

        $r6 = androidx.core.provider.FontsContractCompat$FontFamilyResult.create(1, null);

        return $r6;

     label1:
        r7 = $r5.authority;

        $r8 = androidx.core.provider.FontProvider.query($r0, $r1, r7, $r2);

        $r6 = androidx.core.provider.FontsContractCompat$FontFamilyResult.create(0, $r8);

        return $r6;
    }

    static android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager, androidx.core.provider.FontRequest, android.content.res.Resources) throws android.content.pm.PackageManager$NameNotFoundException
    {
        android.content.pm.PackageManager $r0;
        android.content.pm.PackageManager$NameNotFoundException r15;
        android.content.pm.PackageInfo $r7;
        android.content.pm.ProviderInfo $r4;
        android.content.pm.Signature[] r8;
        java.util.ArrayList r12;
        int i0, $i1;
        java.lang.String $r3, r5, $r6;
        boolean $z0;
        java.util.Collection $r14;
        androidx.core.provider.FontRequest $r1;
        java.util.List $r9, $r11;
        java.lang.Object $r13;
        java.lang.StringBuilder r16;
        java.util.Comparator r10;
        android.content.res.Resources $r2;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        $r3 = virtualinvoke $r1.getProviderAuthority();

        $r4 = virtualinvoke $r0.resolveContentProvider($r3, 0);

        if $r4 == null goto label5;

        r5 = $r4.packageName;

        $r6 = virtualinvoke $r1.getProviderPackage();

        $z0 = virtualinvoke r5.equals($r6);

        if $z0 == 0 goto label4;

        $r3 = $r4.packageName;

        $r7 = virtualinvoke $r0.getPackageInfo($r3, 64);

        r8 = $r7.signatures;

        $r9 = androidx.core.provider.FontProvider.convertToByteArrayList(r8);

        r10 = androidx.core.provider.FontProvider.sByteArrayComparator;

        java.util.Collections.sort($r9, r10);

        $r11 = androidx.core.provider.FontProvider.getCertificates($r1, $r2);

        i0 = 0;

     label1:
        $i1 = interfaceinvoke $r11.size();

        if i0 >= $i1 goto label3;

        r12 = new java.util.ArrayList;

        $r13 = interfaceinvoke $r11.get(i0);

        $r14 = (java.util.Collection) $r13;

        specialinvoke r12.<init>($r14);

        r10 = androidx.core.provider.FontProvider.sByteArrayComparator;

        java.util.Collections.sort(r12, r10);

        $z0 = androidx.core.provider.FontProvider.equalsByteArrayList($r9, r12);

        if $z0 == 0 goto label2;

        return $r4;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return null;

     label4:
        r15 = new android.content.pm.PackageManager$NameNotFoundException;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<init>();

        r16 = virtualinvoke r16.append("Found content provider ");

        r16 = virtualinvoke r16.append($r3);

        r16 = virtualinvoke r16.append(", but package was not ");

        $r3 = virtualinvoke $r1.getProviderPackage();

        r16 = virtualinvoke r16.append($r3);

        $r3 = virtualinvoke r16.toString();

        specialinvoke r15.<init>($r3);

        throw r15;

     label5:
        r15 = new android.content.pm.PackageManager$NameNotFoundException;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<init>();

        r16 = virtualinvoke r16.append("No package found for authority: ");

        r16 = virtualinvoke r16.append($r3);

        $r3 = virtualinvoke r16.toString();

        specialinvoke r15.<init>($r3);

        goto label6;

     label6:
        throw r15;
    }

    static androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context, androidx.core.provider.FontRequest, java.lang.String, android.os.CancellationSignal)
    {
        android.net.Uri $r7, $r8, $r15;
        android.content.ContentResolver $r11;
        android.net.Uri$Builder r6, $r19;
        boolean $z0;
        androidx.core.provider.FontsContractCompat$FontInfo $r16;
        android.os.CancellationSignal $r3;
        androidx.core.provider.FontsContractCompat$FontInfo[] r17;
        java.lang.Throwable r14;
        android.content.Context $r0;
        java.lang.Object[] $r18;
        java.lang.String[] $r10, r12;
        long $l8;
        java.util.ArrayList r4, r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10;
        java.lang.String $r2;
        android.database.Cursor r9, $r13;
        androidx.core.provider.FontRequest $r1;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 := @parameter2;

        $r3 := @parameter3;

        r5 = new java.util.ArrayList;

        specialinvoke r5.<init>();

        $r19 = new android.net.Uri$Builder;

        specialinvoke $r19.<init>();

        r6 = virtualinvoke $r19.scheme("content");

        r6 = virtualinvoke r6.authority($r2);

        $r7 = virtualinvoke r6.build();

        $r19 = new android.net.Uri$Builder;

        specialinvoke $r19.<init>();

        r6 = virtualinvoke $r19.scheme("content");

        r6 = virtualinvoke r6.authority($r2);

        r6 = virtualinvoke r6.appendPath("file");

        $r8 = virtualinvoke r6.build();

        r9 = null;

     label01:
        $r10 = newarray (java.lang.String)[7];

        $r10[0] = "_id";

        $r10[1] = "file_id";

        $r10[2] = "font_ttc_index";

        $r10[3] = "font_variation_settings";

        $r10[4] = "font_weight";

        $r10[5] = "font_italic";

        $r10[6] = "result_code";

        $r11 = virtualinvoke $r0.getContentResolver();

        r12 = newarray (java.lang.String)[1];

        $r2 = virtualinvoke $r1.getQuery();

        r12[0] = $r2;

        $r13 = virtualinvoke $r11.query($r7, $r10, "query = ?", r12, null, $r3);

     label02:
        r9 = $r13;

        if $r13 == null goto label36;

     label03:
        $i0 = interfaceinvoke $r13.getCount();

     label04:
        if $i0 <= 0 goto label36;

     label05:
        $i0 = interfaceinvoke $r13.getColumnIndex("result_code");

        r5 = new java.util.ArrayList;

     label06:
        r4 = r5;

     label07:
        specialinvoke r5.<init>();

     label08:
        r5 = r4;

     label09:
        $i1 = interfaceinvoke $r13.getColumnIndex("_id");

        $i2 = interfaceinvoke $r13.getColumnIndex("file_id");

        $i3 = interfaceinvoke $r13.getColumnIndex("font_ttc_index");

        $i4 = interfaceinvoke $r13.getColumnIndex("font_weight");

        $i5 = interfaceinvoke $r13.getColumnIndex("font_italic");

     label10:
        $z0 = interfaceinvoke $r13.moveToNext();

     label11:
        if $z0 == 0 goto label35;

        if $i0 == -1 goto label15;

     label12:
        $i6 = interfaceinvoke $r13.getInt($i0);

     label13:
        goto label16;

     label14:
        r14 := @caughtexception;

        goto label39;

     label15:
        $i6 = 0;

     label16:
        if $i3 == -1 goto label19;

     label17:
        $i7 = interfaceinvoke $r13.getInt($i3);

     label18:
        goto label20;

     label19:
        $i7 = 0;

     label20:
        if $i2 != -1 goto label23;

     label21:
        $l8 = interfaceinvoke $r13.getLong($i1);

        $r15 = android.content.ContentUris.withAppendedId($r7, $l8);

     label22:
        goto label24;

     label23:
        $l8 = interfaceinvoke $r13.getLong($i2);

        $r15 = android.content.ContentUris.withAppendedId($r8, $l8);

     label24:
        if $i4 == -1 goto label27;

     label25:
        $i9 = interfaceinvoke $r13.getInt($i4);

     label26:
        goto label28;

     label27:
        $i9 = 400;

     label28:
        if $i5 == -1 goto label31;

     label29:
        $i10 = interfaceinvoke $r13.getInt($i5);

     label30:
        if $i10 != 1 goto label31;

        $z0 = 1;

        goto label32;

     label31:
        $z0 = 0;

     label32:
        $r16 = androidx.core.provider.FontsContractCompat$FontInfo.create($r15, $i7, $i9, $z0, $i6);

        virtualinvoke r4.add($r16);

     label33:
        goto label10;

     label34:
        r14 := @caughtexception;

        goto label39;

     label35:
        goto label36;

     label36:
        if $r13 == null goto label37;

        interfaceinvoke $r13.close();

     label37:
        r17 = newarray (androidx.core.provider.FontsContractCompat$FontInfo)[0];

        $r18 = virtualinvoke r5.toArray(r17);

        r17 = (androidx.core.provider.FontsContractCompat$FontInfo[]) $r18;

        return r17;

     label38:
        r14 := @caughtexception;

     label39:
        if r9 == null goto label40;

        interfaceinvoke r9.close();

     label40:
        goto label41;

     label41:
        throw r14;

        catch java.lang.Throwable from label01 to label02 with label38;
        catch java.lang.Throwable from label03 to label04 with label38;
        catch java.lang.Throwable from label05 to label06 with label38;
        catch java.lang.Throwable from label07 to label08 with label38;
        catch java.lang.Throwable from label09 to label11 with label38;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label17 to label18 with label14;
        catch java.lang.Throwable from label21 to label22 with label14;
        catch java.lang.Throwable from label23 to label24 with label38;
        catch java.lang.Throwable from label25 to label26 with label14;
        catch java.lang.Throwable from label29 to label30 with label14;
        catch java.lang.Throwable from label32 to label33 with label34;
    }
}
