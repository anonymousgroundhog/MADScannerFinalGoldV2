public abstract class androidx.work.WorkerFactory extends java.lang.Object
{
    private static final java.lang.String TAG;

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = androidx.work.Logger.tagWithPrefix("WorkerFactory");

        androidx.work.WorkerFactory.TAG = $r0;

        return;
    }

    public void <init>()
    {
        androidx.work.WorkerFactory r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    public static androidx.work.WorkerFactory getDefaultWorkerFactory()
    {
        androidx.work.WorkerFactory$1 $r0;

        $r0 = new androidx.work.WorkerFactory$1;

        specialinvoke $r0.<init>();

        return $r0;
    }

    public abstract androidx.work.ListenableWorker createWorker(android.content.Context, java.lang.String, androidx.work.WorkerParameters);

    public final androidx.work.ListenableWorker createWorkerWithDefaultFallback(android.content.Context, java.lang.String, androidx.work.WorkerParameters)
    {
        java.lang.Throwable r8, r18;
        android.content.Context $r1;
        java.lang.IllegalStateException $r19;
        java.lang.Object[] $r16;
        androidx.work.WorkerParameters $r3;
        androidx.work.ListenableWorker $r4, r5;
        java.lang.reflect.Constructor $r15;
        androidx.work.Logger $r9;
        java.lang.String $r2, $r10, $r12;
        boolean $z0;
        java.lang.Class[] r14;
        androidx.work.WorkerFactory r0;
        java.lang.Throwable[] $r13;
        java.lang.Class r6, $r7;
        java.lang.StringBuilder $r11;
        java.lang.Object $r17;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 := @parameter2;

        $r4 = virtualinvoke r0.createWorker($r1, $r2, $r3);

        r5 = $r4;

        if $r4 != null goto label08;

        r6 = null;

     label01:
        $r7 = java.lang.Class.forName($r2);

        $r7 = virtualinvoke $r7.asSubclass(class "Landroidx/work/ListenableWorker;");

     label02:
        r6 = $r7;

        goto label04;

     label03:
        r8 := @caughtexception;

        $r9 = androidx.work.Logger.get();

        $r10 = androidx.work.WorkerFactory.TAG;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<init>();

        $r11 = virtualinvoke $r11.append("Invalid class: ");

        $r11 = virtualinvoke $r11.append($r2);

        $r12 = virtualinvoke $r11.toString();

        $r13 = newarray (java.lang.Throwable)[1];

        $r13[0] = r8;

        virtualinvoke $r9.error($r10, $r12, $r13);

     label04:
        if r6 == null goto label08;

     label05:
        r14 = newarray (java.lang.Class)[2];

        r14[0] = class "Landroid/content/Context;";

        r14[1] = class "Landroidx/work/WorkerParameters;";

        $r15 = virtualinvoke r6.getDeclaredConstructor(r14);

        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = $r1;

        $r16[1] = $r3;

        $r17 = virtualinvoke $r15.newInstance($r16);

        $r4 = (androidx.work.ListenableWorker) $r17;

     label06:
        r5 = $r4;

        goto label08;

     label07:
        r18 := @caughtexception;

        $r9 = androidx.work.Logger.get();

        $r10 = androidx.work.WorkerFactory.TAG;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<init>();

        $r11 = virtualinvoke $r11.append("Could not instantiate ");

        $r11 = virtualinvoke $r11.append($r2);

        $r12 = virtualinvoke $r11.toString();

        $r13 = newarray (java.lang.Throwable)[1];

        $r13[0] = r18;

        virtualinvoke $r9.error($r10, $r12, $r13);

     label08:
        if r5 == null goto label10;

        $z0 = virtualinvoke r5.isUsed();

        if $z0 != 0 goto label09;

        return r5;

     label09:
        r6 = virtualinvoke r0.getClass();

        $r10 = virtualinvoke r6.getName();

        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = $r10;

        $r16[1] = $r2;

        $r2 = java.lang.String.format("WorkerFactory (%s) returned an instance of a ListenableWorker (%s) which has already been invoked. createWorker() must always return a new instance of a ListenableWorker.", $r16);

        $r19 = new java.lang.IllegalStateException;

        specialinvoke $r19.<init>($r2);

        throw $r19;

     label10:
        return r5;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label05 to label06 with label07;
    }
}
