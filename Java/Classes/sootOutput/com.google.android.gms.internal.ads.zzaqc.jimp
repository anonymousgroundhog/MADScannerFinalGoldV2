public final class com.google.android.gms.internal.ads.zzaqc extends java.lang.Object
{
    private static javax.crypto.Cipher zza;
    private static final java.lang.Object zzb;
    private static final java.lang.Object zzc;

    static void <clinit>()
    {
        java.lang.Object $r0;

        com.google.android.gms.internal.ads.zzaqc.zza = null;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<init>();

        com.google.android.gms.internal.ads.zzaqc.zzb = $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<init>();

        com.google.android.gms.internal.ads.zzaqc.zzc = $r0;

        return;
    }

    public void <init>(java.security.SecureRandom)
    {
        java.security.SecureRandom $r1;
        com.google.android.gms.internal.ads.zzaqc r0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        return;
    }

    private static final javax.crypto.Cipher zzc() throws java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException
    {
        java.lang.Throwable $r2;
        java.lang.Object $r0;
        javax.crypto.Cipher $r1;

        $r0 = com.google.android.gms.internal.ads.zzaqc.zzc;

        entermonitor $r0;

     label1:
        $r1 = com.google.android.gms.internal.ads.zzaqc.zza;

        if $r1 != null goto label2;

        $r1 = javax.crypto.Cipher.getInstance("AES/CBC/PKCS5Padding");

        com.google.android.gms.internal.ads.zzaqc.zza = $r1;

     label2:
        $r1 = com.google.android.gms.internal.ads.zzaqc.zza;

        exitmonitor $r0;

     label3:
        return $r1;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final java.lang.String zza(byte[], byte[]) throws com.google.android.gms.internal.ads.zzaqb
    {
        java.lang.Throwable $r9;
        byte[] $r1, $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        javax.crypto.Cipher $r5;
        java.nio.ByteBuffer $r6, $r7;
        com.google.android.gms.internal.ads.zzaqb $r11;
        javax.crypto.NoSuchPaddingException $r12;
        com.google.android.gms.internal.ads.zzaqc r0;
        int $i0, $i1;
        java.lang.String $r8;
        javax.crypto.IllegalBlockSizeException $r13;
        javax.crypto.BadPaddingException $r10;
        java.security.NoSuchAlgorithmException $r15;
        java.lang.Object $r4;
        java.security.InvalidKeyException $r14;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 = lengthof $r1;

        $r3 = new javax.crypto.spec.SecretKeySpec;

     label01:
        specialinvoke $r3.<init>($r1, "AES");

     label02:
        $r4 = com.google.android.gms.internal.ads.zzaqc.zzb;

        entermonitor $r4;

     label03:
        $r5 = com.google.android.gms.internal.ads.zzaqc.zzc();

        virtualinvoke $r5.init(1, $r3, null);

        $r5 = com.google.android.gms.internal.ads.zzaqc.zzc();

        $r1 = virtualinvoke $r5.doFinal($r2);

        $r5 = com.google.android.gms.internal.ads.zzaqc.zzc();

        $r2 = virtualinvoke $r5.getIV();

        exitmonitor $r4;

     label04:
        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        $i0 = $i0 + $i1;

     label05:
        $r6 = java.nio.ByteBuffer.allocate($i0);

        $r7 = virtualinvoke $r6.put($r2);

        virtualinvoke $r7.put($r1);

        virtualinvoke $r6.flip();

     label06:
        $r1 = newarray (byte)[$i0];

     label07:
        virtualinvoke $r6.get($r1);

        $r8 = com.google.android.gms.internal.ads.zzaoh.zza($r1, 0);

     label08:
        return $r8;

     label09:
        $r9 := @caughtexception;

     label10:
        exitmonitor $r4;

     label11:
        throw $r9;

     label12:
        $r10 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzaqb;

        specialinvoke $r11.<init>(r0, $r10);

        throw $r11;

     label13:
        $r12 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzaqb;

        specialinvoke $r11.<init>(r0, $r12);

        throw $r11;

     label14:
        $r13 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzaqb;

        specialinvoke $r11.<init>(r0, $r13);

        throw $r11;

     label15:
        $r14 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzaqb;

        specialinvoke $r11.<init>(r0, $r14);

        throw $r11;

     label16:
        $r15 := @caughtexception;

        $r11 = new com.google.android.gms.internal.ads.zzaqb;

        specialinvoke $r11.<init>(r0, $r15);

        throw $r11;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label16;
        catch java.security.InvalidKeyException from label01 to label02 with label15;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label14;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label13;
        catch javax.crypto.BadPaddingException from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label16;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label16;
        catch java.security.InvalidKeyException from label05 to label06 with label15;
        catch java.security.InvalidKeyException from label07 to label08 with label15;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label14;
        catch javax.crypto.IllegalBlockSizeException from label07 to label08 with label14;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label13;
        catch javax.crypto.NoSuchPaddingException from label07 to label08 with label13;
        catch javax.crypto.BadPaddingException from label05 to label06 with label12;
        catch javax.crypto.BadPaddingException from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label09;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label16;
        catch java.security.InvalidKeyException from label11 to label12 with label15;
        catch javax.crypto.IllegalBlockSizeException from label11 to label12 with label14;
        catch javax.crypto.NoSuchPaddingException from label11 to label12 with label13;
        catch javax.crypto.BadPaddingException from label11 to label12 with label12;
    }

    public final byte[] zzb(byte[], java.lang.String) throws com.google.android.gms.internal.ads.zzaqb
    {
        java.lang.Throwable $r9;
        byte[] $r1, $r3, $r5;
        javax.crypto.spec.SecretKeySpec $r17;
        javax.crypto.Cipher $r8;
        java.nio.ByteBuffer $r4;
        java.security.InvalidAlgorithmParameterException $r11;
        com.google.android.gms.internal.ads.zzaqb $r19;
        javax.crypto.spec.IvParameterSpec $r18;
        javax.crypto.NoSuchPaddingException $r13;
        com.google.android.gms.internal.ads.zzaqc r0;
        int $i0;
        java.lang.String $r2;
        javax.crypto.IllegalBlockSizeException $r14;
        java.lang.IllegalArgumentException $r10;
        javax.crypto.BadPaddingException $r12;
        java.security.NoSuchAlgorithmException $r16;
        java.lang.Object $r7;
        java.security.InvalidKeyException $r15;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $i0 = lengthof $r1;

     label01:
        $r3 = com.google.android.gms.internal.ads.zzaoh.zzb($r2, 0);

     label02:
        $i0 = lengthof $r3;

        if $i0 <= 16 goto label13;

     label03:
        $r4 = java.nio.ByteBuffer.allocate($i0);

        virtualinvoke $r4.put($r3);

        virtualinvoke $r4.flip();

     label04:
        $r3 = newarray (byte)[16];

        $i0 = $i0 + -16;

        $r5 = newarray (byte)[$i0];

     label05:
        virtualinvoke $r4.get($r3);

        virtualinvoke $r4.get($r5);

     label06:
        $r17 = new javax.crypto.spec.SecretKeySpec;

     label07:
        specialinvoke $r17.<init>($r1, "AES");

     label08:
        $r7 = com.google.android.gms.internal.ads.zzaqc.zzb;

        entermonitor $r7;

     label09:
        $r8 = com.google.android.gms.internal.ads.zzaqc.zzc();

        $r18 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r18.<init>($r3);

        virtualinvoke $r8.init(2, $r17, $r18);

        $r8 = com.google.android.gms.internal.ads.zzaqc.zzc();

        $r1 = virtualinvoke $r8.doFinal($r5);

        exitmonitor $r7;

     label10:
        return $r1;

     label11:
        $r9 := @caughtexception;

        exitmonitor $r7;

     label12:
        throw $r9;

     label13:
        $r19 = new com.google.android.gms.internal.ads.zzaqb;

     label14:
        specialinvoke $r19.<init>(r0);

     label15:
        throw $r19;

     label16:
        $r10 := @caughtexception;

        $r19 = new com.google.android.gms.internal.ads.zzaqb;

        specialinvoke $r19.<init>(r0, $r10);

        throw $r19;

     label17:
        $r11 := @caughtexception;

        $r19 = new com.google.android.gms.internal.ads.zzaqb;

        specialinvoke $r19.<init>(r0, $r11);

        throw $r19;

     label18:
        $r12 := @caughtexception;

        $r19 = new com.google.android.gms.internal.ads.zzaqb;

        specialinvoke $r19.<init>(r0, $r12);

        throw $r19;

     label19:
        $r13 := @caughtexception;

        $r19 = new com.google.android.gms.internal.ads.zzaqb;

        specialinvoke $r19.<init>(r0, $r13);

        throw $r19;

     label20:
        $r14 := @caughtexception;

        $r19 = new com.google.android.gms.internal.ads.zzaqb;

        specialinvoke $r19.<init>(r0, $r14);

        throw $r19;

     label21:
        $r15 := @caughtexception;

        $r19 = new com.google.android.gms.internal.ads.zzaqb;

        specialinvoke $r19.<init>(r0, $r15);

        throw $r19;

     label22:
        $r16 := @caughtexception;

        $r19 = new com.google.android.gms.internal.ads.zzaqb;

        specialinvoke $r19.<init>(r0, $r16);

        throw $r19;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label22;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label22;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label22;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label22;
        catch java.security.InvalidKeyException from label01 to label02 with label21;
        catch java.security.InvalidKeyException from label03 to label04 with label21;
        catch java.security.InvalidKeyException from label05 to label06 with label21;
        catch java.security.InvalidKeyException from label07 to label08 with label21;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label20;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label20;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label20;
        catch javax.crypto.IllegalBlockSizeException from label07 to label08 with label20;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label19;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label19;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label19;
        catch javax.crypto.NoSuchPaddingException from label07 to label08 with label19;
        catch javax.crypto.BadPaddingException from label01 to label02 with label18;
        catch javax.crypto.BadPaddingException from label03 to label04 with label18;
        catch javax.crypto.BadPaddingException from label05 to label06 with label18;
        catch javax.crypto.BadPaddingException from label07 to label08 with label18;
        catch java.security.InvalidAlgorithmParameterException from label01 to label02 with label17;
        catch java.security.InvalidAlgorithmParameterException from label03 to label04 with label17;
        catch java.security.InvalidAlgorithmParameterException from label05 to label06 with label17;
        catch java.security.InvalidAlgorithmParameterException from label07 to label08 with label17;
        catch java.lang.IllegalArgumentException from label01 to label02 with label16;
        catch java.lang.IllegalArgumentException from label03 to label04 with label16;
        catch java.lang.IllegalArgumentException from label05 to label06 with label16;
        catch java.lang.IllegalArgumentException from label07 to label08 with label16;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.security.NoSuchAlgorithmException from label12 to label13 with label22;
        catch java.security.NoSuchAlgorithmException from label14 to label15 with label22;
        catch java.security.InvalidKeyException from label12 to label13 with label21;
        catch java.security.InvalidKeyException from label14 to label15 with label21;
        catch javax.crypto.IllegalBlockSizeException from label12 to label13 with label20;
        catch javax.crypto.IllegalBlockSizeException from label14 to label15 with label20;
        catch javax.crypto.NoSuchPaddingException from label12 to label13 with label19;
        catch javax.crypto.NoSuchPaddingException from label14 to label15 with label19;
        catch javax.crypto.BadPaddingException from label12 to label13 with label18;
        catch javax.crypto.BadPaddingException from label14 to label15 with label18;
        catch java.security.InvalidAlgorithmParameterException from label12 to label13 with label17;
        catch java.security.InvalidAlgorithmParameterException from label14 to label15 with label17;
        catch java.lang.IllegalArgumentException from label12 to label13 with label16;
        catch java.lang.IllegalArgumentException from label14 to label15 with label16;
    }
}
