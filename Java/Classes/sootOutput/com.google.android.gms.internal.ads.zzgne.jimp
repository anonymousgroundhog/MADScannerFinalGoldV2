public final class com.google.android.gms.internal.ads.zzgne extends java.lang.Object
{

    public static int zza(java.security.spec.EllipticCurve) throws java.security.GeneralSecurityException
    {
        int $i0;
        java.math.BigInteger $r0, $r2;
        java.security.spec.EllipticCurve $r1;

        $r1 := @parameter0;

        $r2 = com.google.android.gms.internal.ads.zzgcj.zza($r1);

        $r0 = java.math.BigInteger.ONE;

        $r0 = virtualinvoke $r2.subtract($r0);

        $i0 = virtualinvoke $r0.bitLength();

        $i0 = $i0 + 7;

        $i0 = $i0 / 8;

        return $i0;
    }

    public static java.security.KeyPair zzb(java.security.spec.ECParameterSpec) throws java.security.GeneralSecurityException
    {
        java.security.KeyPairGenerator $r3;
        java.security.KeyPair $r4;
        java.lang.Object $r2;
        com.google.android.gms.internal.ads.zzgnn $r1;
        java.security.spec.ECParameterSpec $r0;

        $r0 := @parameter0;

        $r1 = com.google.android.gms.internal.ads.zzgnn.zzf;

        $r2 = virtualinvoke $r1.zza("EC");

        $r3 = (java.security.KeyPairGenerator) $r2;

        virtualinvoke $r3.initialize($r0);

        $r4 = virtualinvoke $r3.generateKeyPair();

        return $r4;
    }

    public static void zzc(java.security.interfaces.ECPublicKey, java.security.interfaces.ECPrivateKey) throws java.security.GeneralSecurityException
    {
        java.security.interfaces.ECPrivateKey $r1;
        java.security.spec.ECPoint $r2;
        java.security.spec.EllipticCurve $r4;
        java.security.interfaces.ECPublicKey $r0;
        java.security.spec.ECParameterSpec $r3;

        $r0 := @parameter0;

        $r1 := @parameter1;

        com.google.android.gms.internal.ads.zzgne.zzd($r0, $r1);

        $r2 = interfaceinvoke $r0.getW();

        $r3 = interfaceinvoke $r1.getParams();

        $r4 = virtualinvoke $r3.getCurve();

        com.google.android.gms.internal.ads.zzgcj.zzb($r2, $r4);

        return;
    }

    static void zzd(java.security.interfaces.ECPublicKey, java.security.interfaces.ECPrivateKey) throws java.security.GeneralSecurityException
    {
        java.security.GeneralSecurityException $r4;
        java.security.interfaces.ECPrivateKey $r1;
        java.lang.RuntimeException $r5;
        java.security.interfaces.ECPublicKey $r0;
        java.security.spec.ECParameterSpec $r2, $r3;
        boolean $z0;

        $r0 := @parameter0;

        $r1 := @parameter1;

     label1:
        $r2 = interfaceinvoke $r0.getParams();

        $r3 = interfaceinvoke $r1.getParams();

        $z0 = com.google.android.gms.internal.ads.zzgcj.zzc($r2, $r3);

     label2:
        if $z0 == 0 goto label3;

        return;

     label3:
        $r4 = new java.security.GeneralSecurityException;

     label4:
        specialinvoke $r4.<init>("invalid public key spec");

     label5:
        throw $r4;

     label6:
        $r5 := @caughtexception;

        goto label8;

     label7:
        $r5 := @caughtexception;

     label8:
        $r4 = new java.security.GeneralSecurityException;

        specialinvoke $r4.<init>($r5);

        throw $r4;

        catch java.lang.IllegalArgumentException from label1 to label2 with label7;
        catch java.lang.IllegalArgumentException from label4 to label5 with label7;
        catch java.lang.NullPointerException from label1 to label2 with label6;
        catch java.lang.NullPointerException from label4 to label6 with label6;
    }

    public static byte[] zze(java.security.interfaces.ECPrivateKey, java.security.interfaces.ECPublicKey) throws java.security.GeneralSecurityException
    {
        byte[] $r10;
        java.lang.IllegalStateException $r20;
        java.security.spec.ECPublicKeySpec $r21;
        java.security.InvalidAlgorithmParameterException $r22;
        java.security.GeneralSecurityException $r23;
        javax.crypto.KeyAgreement $r9;
        int $i0;
        java.security.interfaces.ECPrivateKey $r0;
        java.math.BigInteger $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        com.google.android.gms.internal.ads.zzgnn $r5;
        boolean $z0;
        java.security.PublicKey $r8;
        java.security.spec.EllipticCurve $r4;
        java.security.spec.ECParameterSpec $r3;
        java.security.KeyFactory $r7;
        java.security.spec.ECPoint $r2;
        java.lang.Object $r6;
        java.security.interfaces.ECPublicKey $r1;

        $r0 := @parameter0;

        $r1 := @parameter1;

        com.google.android.gms.internal.ads.zzgne.zzd($r1, $r0);

        $r2 = interfaceinvoke $r1.getW();

        $r3 = interfaceinvoke $r0.getParams();

        $r4 = virtualinvoke $r3.getCurve();

        com.google.android.gms.internal.ads.zzgcj.zzb($r2, $r4);

        $r3 = interfaceinvoke $r0.getParams();

        $r21 = new java.security.spec.ECPublicKeySpec;

        specialinvoke $r21.<init>($r2, $r3);

        $r5 = com.google.android.gms.internal.ads.zzgnn.zzg;

        $r6 = virtualinvoke $r5.zza("EC");

        $r7 = (java.security.KeyFactory) $r6;

        $r8 = virtualinvoke $r7.generatePublic($r21);

        $r5 = com.google.android.gms.internal.ads.zzgnn.zze;

        $r6 = virtualinvoke $r5.zza("ECDH");

        $r9 = (javax.crypto.KeyAgreement) $r6;

        virtualinvoke $r9.init($r0);

     label01:
        virtualinvoke $r9.doPhase($r8, 1);

        $r10 = virtualinvoke $r9.generateSecret();

        $r3 = interfaceinvoke $r0.getParams();

        $r4 = virtualinvoke $r3.getCurve();

     label02:
        $r12 = new java.math.BigInteger;

        $r11 = $r12;

     label03:
        specialinvoke $r12.<init>(1, $r10);

        $i0 = virtualinvoke $r12.signum();

     label04:
        if $i0 == -1 goto label74;

     label05:
        $r12 = com.google.android.gms.internal.ads.zzgcj.zza($r4);

        $i0 = virtualinvoke $r11.compareTo($r12);

     label06:
        if $i0 >= 0 goto label74;

     label07:
        $r12 = com.google.android.gms.internal.ads.zzgcj.zza($r4);

        $r13 = virtualinvoke $r4.getA();

        $r14 = virtualinvoke $r4.getB();

        $r15 = virtualinvoke $r11.multiply($r11);

        $r13 = virtualinvoke $r15.add($r13);

        $r11 = virtualinvoke $r13.multiply($r11);

        $r11 = virtualinvoke $r11.add($r14);

        $r11 = virtualinvoke $r11.mod($r12);

        $i0 = virtualinvoke $r12.signum();

     label08:
        if $i0 != 1 goto label71;

     label09:
        $r11 = virtualinvoke $r11.mod($r12);

     label10:
        $r14 = java.math.BigInteger.ZERO;

     label11:
        $z0 = virtualinvoke $r11.equals($r14);

     label12:
        if $z0 == 0 goto label13;

        $r11 = java.math.BigInteger.ZERO;

        goto label67;

     label13:
        $z0 = virtualinvoke $r12.testBit(0);

     label14:
        if $z0 == 0 goto label19;

     label15:
        $z0 = virtualinvoke $r12.testBit(1);

     label16:
        if $z0 == 0 goto label19;

        $r14 = java.math.BigInteger.ONE;

     label17:
        $r14 = virtualinvoke $r12.add($r14);

        $r14 = virtualinvoke $r14.shiftRight(2);

        $r14 = virtualinvoke $r11.modPow($r14, $r12);

     label18:
        goto label60;

     label19:
        $z0 = virtualinvoke $r12.testBit(0);

     label20:
        $r14 = null;

        if $z0 == 0 goto label60;

     label21:
        $z0 = virtualinvoke $r12.testBit(1);

     label22:
        if $z0 != 0 goto label59;

        $r14 = java.math.BigInteger.ONE;

        $r13 = java.math.BigInteger.ONE;

     label23:
        $r13 = virtualinvoke $r12.subtract($r13);

        $r15 = virtualinvoke $r13.shiftRight(1);

     label24:
        $i0 = 0;

     label25:
        $r13 = virtualinvoke $r14.multiply($r14);

        $r13 = virtualinvoke $r13.subtract($r11);

        $r13 = virtualinvoke $r13.mod($r12);

     label26:
        $r16 = java.math.BigInteger.ZERO;

     label27:
        $z0 = virtualinvoke $r13.equals($r16);

     label28:
        if $z0 != 0 goto label58;

     label29:
        $r16 = virtualinvoke $r13.modPow($r15, $r12);

     label30:
        $r17 = java.math.BigInteger.ONE;

     label31:
        $r17 = virtualinvoke $r16.add($r17);

        $z0 = virtualinvoke $r17.equals($r12);

     label32:
        if $z0 == 0 goto label45;

        $r15 = java.math.BigInteger.ONE;

     label33:
        $r15 = virtualinvoke $r12.add($r15);

        $r15 = virtualinvoke $r15.shiftRight(1);

     label34:
        $r18 = java.math.BigInteger.ONE;

     label35:
        $i0 = virtualinvoke $r15.bitLength();

     label36:
        $i0 = $i0 + -2;

        $r17 = $r14;

     label37:
        if $i0 < 0 goto label44;

     label38:
        $r16 = virtualinvoke $r17.multiply($r18);

        $r17 = virtualinvoke $r17.multiply($r17);

        $r19 = virtualinvoke $r18.multiply($r18);

        $r19 = virtualinvoke $r19.mod($r12);

        $r19 = virtualinvoke $r19.multiply($r13);

        $r17 = virtualinvoke $r17.add($r19);

        $r17 = virtualinvoke $r17.mod($r12);

        $r16 = virtualinvoke $r16.add($r16);

        $r16 = virtualinvoke $r16.mod($r12);

        $z0 = virtualinvoke $r15.testBit($i0);

     label39:
        if $z0 == 0 goto label42;

     label40:
        $r19 = virtualinvoke $r17.multiply($r14);

        $r18 = virtualinvoke $r16.multiply($r13);

        $r19 = virtualinvoke $r19.add($r18);

        $r19 = virtualinvoke $r19.mod($r12);

        $r16 = virtualinvoke $r14.multiply($r16);

        $r16 = virtualinvoke $r16.add($r17);

        $r16 = virtualinvoke $r16.mod($r12);

     label41:
        $r18 = $r16;

        $r17 = $r19;

        goto label43;

     label42:
        $r18 = $r16;

     label43:
        $i0 = $i0 + -1;

        goto label37;

     label44:
        $r14 = $r17;

        goto label60;

     label45:
        $r13 = java.math.BigInteger.ONE;

     label46:
        $z0 = virtualinvoke $r16.equals($r13);

     label47:
        if $z0 == 0 goto label55;

        $r13 = java.math.BigInteger.ONE;

     label48:
        $r14 = virtualinvoke $r14.add($r13);

     label49:
        $i0 = $i0 + 1;

        if $i0 != 128 goto label25;

     label50:
        $z0 = virtualinvoke $r12.isProbablePrime(80);

     label51:
        if $z0 == 0 goto label52;

        goto label25;

     label52:
        $r22 = new java.security.InvalidAlgorithmParameterException;

     label53:
        specialinvoke $r22.<init>("p is not prime");

     label54:
        throw $r22;

     label55:
        $r22 = new java.security.InvalidAlgorithmParameterException;

     label56:
        specialinvoke $r22.<init>("p is not prime");

     label57:
        throw $r22;

     label58:
        $r11 = $r14;

        goto label67;

     label59:
        goto label60;

     label60:
        if $r14 == null goto label66;

     label61:
        $r13 = virtualinvoke $r14.multiply($r14);

        $r13 = virtualinvoke $r13.mod($r12);

        $i0 = virtualinvoke $r13.compareTo($r11);

     label62:
        if $i0 != 0 goto label63;

        goto label66;

     label63:
        $r23 = new java.security.GeneralSecurityException;

     label64:
        specialinvoke $r23.<init>("Could not find a modular square root");

     label65:
        throw $r23;

     label66:
        $r11 = $r14;

     label67:
        $z0 = virtualinvoke $r11.testBit(0);

     label68:
        if $z0 == 1 goto label79;

     label69:
        $r11 = virtualinvoke $r12.subtract($r11);

        virtualinvoke $r11.mod($r12);

     label70:
        return $r10;

     label71:
        $r22 = new java.security.InvalidAlgorithmParameterException;

     label72:
        specialinvoke $r22.<init>("p must be positive");

     label73:
        throw $r22;

     label74:
        $r23 = new java.security.GeneralSecurityException;

     label75:
        specialinvoke $r23.<init>("shared secret is out of range");

     label76:
        throw $r23;

     label77:
        $r20 := @caughtexception;

        $r23 = new java.security.GeneralSecurityException;

        specialinvoke $r23.<init>($r20);

        goto label78;

     label78:
        throw $r23;

     label79:
        return $r10;

        catch java.lang.IllegalStateException from label01 to label02 with label77;
        catch java.lang.IllegalStateException from label03 to label04 with label77;
        catch java.lang.IllegalStateException from label05 to label06 with label77;
        catch java.lang.IllegalStateException from label07 to label08 with label77;
        catch java.lang.IllegalStateException from label09 to label10 with label77;
        catch java.lang.IllegalStateException from label11 to label12 with label77;
        catch java.lang.IllegalStateException from label13 to label14 with label77;
        catch java.lang.IllegalStateException from label15 to label16 with label77;
        catch java.lang.IllegalStateException from label17 to label18 with label77;
        catch java.lang.IllegalStateException from label19 to label20 with label77;
        catch java.lang.IllegalStateException from label21 to label22 with label77;
        catch java.lang.IllegalStateException from label23 to label24 with label77;
        catch java.lang.IllegalStateException from label25 to label26 with label77;
        catch java.lang.IllegalStateException from label27 to label28 with label77;
        catch java.lang.IllegalStateException from label29 to label30 with label77;
        catch java.lang.IllegalStateException from label31 to label32 with label77;
        catch java.lang.IllegalStateException from label33 to label34 with label77;
        catch java.lang.IllegalStateException from label35 to label36 with label77;
        catch java.lang.IllegalStateException from label38 to label39 with label77;
        catch java.lang.IllegalStateException from label40 to label41 with label77;
        catch java.lang.IllegalStateException from label46 to label47 with label77;
        catch java.lang.IllegalStateException from label48 to label49 with label77;
        catch java.lang.IllegalStateException from label50 to label51 with label77;
        catch java.lang.IllegalStateException from label53 to label54 with label77;
        catch java.lang.IllegalStateException from label56 to label57 with label77;
        catch java.lang.IllegalStateException from label61 to label62 with label77;
        catch java.lang.IllegalStateException from label64 to label65 with label77;
        catch java.lang.IllegalStateException from label67 to label68 with label77;
        catch java.lang.IllegalStateException from label69 to label70 with label77;
        catch java.lang.IllegalStateException from label72 to label73 with label77;
        catch java.lang.IllegalStateException from label75 to label76 with label77;
    }

    public static java.security.interfaces.ECPrivateKey zzf(int, byte[]) throws java.security.GeneralSecurityException
    {
        byte[] $r0;
        java.security.spec.ECParameterSpec $r1;
        java.security.KeyFactory $r6;
        java.security.spec.ECPrivateKeySpec $r3;
        java.security.PrivateKey $r7;
        int $i0;
        java.security.interfaces.ECPrivateKey $r8;
        java.math.BigInteger $r2;
        java.lang.Object $r5;
        com.google.android.gms.internal.ads.zzgnn $r4;

        $i0 := @parameter0;

        $r0 := @parameter1;

        $r1 = com.google.android.gms.internal.ads.zzgne.zzh($i0);

        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<init>(1, $r0);

        $r3 = new java.security.spec.ECPrivateKeySpec;

        specialinvoke $r3.<init>($r2, $r1);

        $r4 = com.google.android.gms.internal.ads.zzgnn.zzg;

        $r5 = virtualinvoke $r4.zza("EC");

        $r6 = (java.security.KeyFactory) $r5;

        $r7 = virtualinvoke $r6.generatePrivate($r3);

        $r8 = (java.security.interfaces.ECPrivateKey) $r7;

        return $r8;
    }

    public static java.security.interfaces.ECPublicKey zzg(java.security.spec.ECParameterSpec, int, byte[]) throws java.security.GeneralSecurityException
    {
        byte[] $r1, $r3;
        java.security.spec.ECPublicKeySpec $r13;
        java.security.GeneralSecurityException $r14;
        byte $b3;
        int $i0, $i1, $i2;
        java.math.BigInteger $r4, $r11;
        com.google.android.gms.internal.ads.zzgnn $r6;
        java.security.PublicKey $r9;
        java.security.spec.EllipticCurve $r2;
        java.security.spec.ECParameterSpec $r0;
        java.security.KeyFactory $r8;
        java.security.spec.ECPoint $r12;
        java.lang.Object $r7;
        java.security.interfaces.ECPublicKey $r10;

        $r0 := @parameter0;

        $i0 := @parameter1;

        $r1 := @parameter2;

        $r2 = virtualinvoke $r0.getCurve();

        $i1 = com.google.android.gms.internal.ads.zzgne.zza($r2);

        $i2 = $i1 + $i1;

        $i0 = lengthof $r1;

        $i2 = $i2 + 1;

        if $i0 != $i2 goto label2;

        $b3 = $r1[0];

        $i2 = (int) $b3;

        if $i2 != 4 goto label1;

        $i1 = $i1 + 1;

        $r4 = new java.math.BigInteger;

        $r3 = java.util.Arrays.copyOfRange($r1, 1, $i1);

        specialinvoke $r4.<init>(1, $r3);

        $r11 = new java.math.BigInteger;

        $r1 = java.util.Arrays.copyOfRange($r1, $i1, $i0);

        specialinvoke $r11.<init>(1, $r1);

        $r12 = new java.security.spec.ECPoint;

        specialinvoke $r12.<init>($r4, $r11);

        com.google.android.gms.internal.ads.zzgcj.zzb($r12, $r2);

        $r13 = new java.security.spec.ECPublicKeySpec;

        specialinvoke $r13.<init>($r12, $r0);

        $r6 = com.google.android.gms.internal.ads.zzgnn.zzg;

        $r7 = virtualinvoke $r6.zza("EC");

        $r8 = (java.security.KeyFactory) $r7;

        $r9 = virtualinvoke $r8.generatePublic($r13);

        $r10 = (java.security.interfaces.ECPublicKey) $r9;

        return $r10;

     label1:
        $r14 = new java.security.GeneralSecurityException;

        specialinvoke $r14.<init>("invalid point format");

        throw $r14;

     label2:
        $r14 = new java.security.GeneralSecurityException;

        specialinvoke $r14.<init>("invalid point size");

        throw $r14;
    }

    public static java.security.spec.ECParameterSpec zzh(int) throws java.security.NoSuchAlgorithmException
    {
        int $i0;
        java.security.spec.ECParameterSpec r0;

        $i0 := @parameter0;

        $i0 = $i0 + -1;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            default: goto label1;
        };

     label1:
        r0 = com.google.android.gms.internal.ads.zzgcj.zzc;

        return r0;

     label2:
        r0 = com.google.android.gms.internal.ads.zzgcj.zzb;

        return r0;

     label3:
        r0 = com.google.android.gms.internal.ads.zzgcj.zza;

        return r0;
    }

    public static byte[] zzi(int, int, java.security.spec.ECPoint) throws java.security.GeneralSecurityException
    {
        byte[] $r3;
        int $i0, $i1;
        java.security.spec.ECPoint $r0;
        java.security.spec.EllipticCurve $r2;
        java.security.spec.ECParameterSpec $r1;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $r0 := @parameter2;

        $r1 = com.google.android.gms.internal.ads.zzgne.zzh($i0);

        $r2 = virtualinvoke $r1.getCurve();

        $r3 = com.google.android.gms.internal.ads.zzgne.zzj($r2, 1, $r0);

        return $r3;
    }

    public static byte[] zzj(java.security.spec.EllipticCurve, int, java.security.spec.ECPoint) throws java.security.GeneralSecurityException
    {
        byte[] $r2, $r4, $r5, $r6;
        java.security.spec.EllipticCurve $r0;
        byte $b2;
        int $i0, $i1, $i3, $i4;
        java.security.spec.ECPoint $r1;
        java.math.BigInteger $r3;
        boolean $z0;

        $r0 := @parameter0;

        $i0 := @parameter1;

        $r1 := @parameter2;

        com.google.android.gms.internal.ads.zzgcj.zzb($r1, $r0);

        $i1 = com.google.android.gms.internal.ads.zzgne.zza($r0);

        $i0 = $i0 + -1;

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label1;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        $i1 = $i1 + 1;

        $r2 = newarray (byte)[$i1];

        $r3 = virtualinvoke $r1.getAffineX();

        $r4 = com.google.android.gms.internal.ads.zzgci.zza($r3);

        $i0 = lengthof $r4;

        $i1 = $i1 - $i0;

        java.lang.System.arraycopy($r4, 0, $r2, $i1, $i0);

        $r3 = virtualinvoke $r1.getAffineY();

        $z0 = virtualinvoke $r3.testBit(0);

        if 1 == $z0 goto label6;

        $b2 = 2;

        goto label7;

     label2:
        $i0 = $i1 + $i1;

        $r2 = newarray (byte)[$i0];

        $r3 = virtualinvoke $r1.getAffineX();

        $r5 = com.google.android.gms.internal.ads.zzgci.zza($r3);

        $r4 = $r5;

        $i3 = lengthof $r5;

        if $i3 <= $i1 goto label3;

        $i4 = $i3 - $i1;

        $r4 = java.util.Arrays.copyOfRange($r5, $i4, $i3);

     label3:
        $r3 = virtualinvoke $r1.getAffineY();

        $r5 = com.google.android.gms.internal.ads.zzgci.zza($r3);

        $r6 = $r5;

        $i3 = lengthof $r5;

        if $i3 <= $i1 goto label4;

        $i4 = $i3 - $i1;

        $r6 = java.util.Arrays.copyOfRange($r5, $i4, $i3);

     label4:
        $i3 = lengthof $r6;

        $i0 = $i0 - $i3;

        java.lang.System.arraycopy($r6, 0, $r2, $i0, $i3);

        $i0 = lengthof $r4;

        $i1 = $i1 - $i0;

        java.lang.System.arraycopy($r4, 0, $r2, $i1, $i0);

        return $r2;

     label5:
        $i0 = $i1 + $i1;

        $i3 = $i0 + 1;

        $r2 = newarray (byte)[$i3];

        $r3 = virtualinvoke $r1.getAffineX();

        $r4 = com.google.android.gms.internal.ads.zzgci.zza($r3);

        $r3 = virtualinvoke $r1.getAffineY();

        $r5 = com.google.android.gms.internal.ads.zzgci.zza($r3);

        $i0 = lengthof $r5;

        $i3 = $i3 - $i0;

        java.lang.System.arraycopy($r5, 0, $r2, $i3, $i0);

        $i1 = $i1 + 1;

        $i0 = lengthof $r4;

        $i1 = $i1 - $i0;

        java.lang.System.arraycopy($r4, 0, $r2, $i1, $i0);

        $r2[0] = 4;

        return $r2;

     label6:
        $b2 = 3;

     label7:
        $r2[0] = $b2;

        return $r2;
    }
}
