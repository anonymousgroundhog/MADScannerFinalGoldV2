class androidx.work.impl.model.WorkSpecDao_Impl$1 extends androidx.room.EntityInsertionAdapter
{
    final androidx.work.impl.model.WorkSpecDao_Impl this$0;

    void <init>(androidx.work.impl.model.WorkSpecDao_Impl, androidx.room.RoomDatabase)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$1 r0;
        androidx.room.RoomDatabase $r2;
        androidx.work.impl.model.WorkSpecDao_Impl $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        r0.this$0 = $r1;

        specialinvoke r0.<init>($r2);

        return;
    }

    public void bind(androidx.sqlite.db.SupportSQLiteStatement, androidx.work.impl.model.WorkSpec)
    {
        byte[] $r6;
        androidx.work.NetworkType $r10;
        androidx.work.BackoffPolicy r7;
        androidx.work.Constraints r9;
        androidx.work.impl.model.WorkSpecDao_Impl$1 r0;
        long l1;
        androidx.work.impl.model.WorkSpec $r2;
        androidx.work.ContentUriTriggers $r11;
        androidx.work.WorkInfo$State r4;
        int $i0;
        java.lang.String r3;
        androidx.work.OutOfQuotaPolicy r8;
        androidx.work.Data r5;
        androidx.sqlite.db.SupportSQLiteStatement $r1;
        boolean z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        r3 = $r2.id;

        if r3 != null goto label01;

        interfaceinvoke $r1.bindNull(1);

        goto label02;

     label01:
        r3 = $r2.id;

        interfaceinvoke $r1.bindString(1, r3);

     label02:
        r4 = $r2.state;

        $i0 = androidx.work.impl.model.WorkTypeConverters.stateToInt(r4);

        l1 = (long) $i0;

        interfaceinvoke $r1.bindLong(2, l1);

        r3 = $r2.workerClassName;

        if r3 != null goto label03;

        interfaceinvoke $r1.bindNull(3);

        goto label04;

     label03:
        r3 = $r2.workerClassName;

        interfaceinvoke $r1.bindString(3, r3);

     label04:
        r3 = $r2.inputMergerClassName;

        if r3 != null goto label05;

        interfaceinvoke $r1.bindNull(4);

        goto label06;

     label05:
        r3 = $r2.inputMergerClassName;

        interfaceinvoke $r1.bindString(4, r3);

     label06:
        r5 = $r2.input;

        $r6 = androidx.work.Data.toByteArrayInternal(r5);

        if $r6 != null goto label07;

        interfaceinvoke $r1.bindNull(5);

        goto label08;

     label07:
        interfaceinvoke $r1.bindBlob(5, $r6);

     label08:
        r5 = $r2.output;

        $r6 = androidx.work.Data.toByteArrayInternal(r5);

        if $r6 != null goto label09;

        interfaceinvoke $r1.bindNull(6);

        goto label10;

     label09:
        interfaceinvoke $r1.bindBlob(6, $r6);

     label10:
        l1 = $r2.initialDelay;

        interfaceinvoke $r1.bindLong(7, l1);

        l1 = $r2.intervalDuration;

        interfaceinvoke $r1.bindLong(8, l1);

        l1 = $r2.flexDuration;

        interfaceinvoke $r1.bindLong(9, l1);

        $i0 = $r2.runAttemptCount;

        l1 = (long) $i0;

        interfaceinvoke $r1.bindLong(10, l1);

        r7 = $r2.backoffPolicy;

        $i0 = androidx.work.impl.model.WorkTypeConverters.backoffPolicyToInt(r7);

        l1 = (long) $i0;

        interfaceinvoke $r1.bindLong(11, l1);

        l1 = $r2.backoffDelayDuration;

        interfaceinvoke $r1.bindLong(12, l1);

        l1 = $r2.periodStartTime;

        interfaceinvoke $r1.bindLong(13, l1);

        l1 = $r2.minimumRetentionDuration;

        interfaceinvoke $r1.bindLong(14, l1);

        l1 = $r2.scheduleRequestedAt;

        interfaceinvoke $r1.bindLong(15, l1);

        z0 = $r2.expedited;

        l1 = (long) z0;

        interfaceinvoke $r1.bindLong(16, l1);

        r8 = $r2.outOfQuotaPolicy;

        $i0 = androidx.work.impl.model.WorkTypeConverters.outOfQuotaPolicyToInt(r8);

        l1 = (long) $i0;

        interfaceinvoke $r1.bindLong(17, l1);

        r9 = $r2.constraints;

        if r9 == null goto label13;

        $r10 = virtualinvoke r9.getRequiredNetworkType();

        $i0 = androidx.work.impl.model.WorkTypeConverters.networkTypeToInt($r10);

        l1 = (long) $i0;

        interfaceinvoke $r1.bindLong(18, l1);

        z0 = virtualinvoke r9.requiresCharging();

        l1 = (long) z0;

        interfaceinvoke $r1.bindLong(19, l1);

        z0 = virtualinvoke r9.requiresDeviceIdle();

        l1 = (long) z0;

        interfaceinvoke $r1.bindLong(20, l1);

        z0 = virtualinvoke r9.requiresBatteryNotLow();

        l1 = (long) z0;

        interfaceinvoke $r1.bindLong(21, l1);

        z0 = virtualinvoke r9.requiresStorageNotLow();

        l1 = (long) z0;

        interfaceinvoke $r1.bindLong(22, l1);

        l1 = virtualinvoke r9.getTriggerContentUpdateDelay();

        interfaceinvoke $r1.bindLong(23, l1);

        l1 = virtualinvoke r9.getTriggerMaxContentDelay();

        interfaceinvoke $r1.bindLong(24, l1);

        $r11 = virtualinvoke r9.getContentUriTriggers();

        $r6 = androidx.work.impl.model.WorkTypeConverters.contentUriTriggersToByteArray($r11);

        if $r6 != null goto label11;

        interfaceinvoke $r1.bindNull(25);

        goto label12;

     label11:
        interfaceinvoke $r1.bindBlob(25, $r6);

     label12:
        return;

     label13:
        interfaceinvoke $r1.bindNull(18);

        interfaceinvoke $r1.bindNull(19);

        interfaceinvoke $r1.bindNull(20);

        interfaceinvoke $r1.bindNull(21);

        interfaceinvoke $r1.bindNull(22);

        interfaceinvoke $r1.bindNull(23);

        interfaceinvoke $r1.bindNull(24);

        interfaceinvoke $r1.bindNull(25);

        return;
    }

    public volatile void bind(androidx.sqlite.db.SupportSQLiteStatement, java.lang.Object)
    {
        androidx.work.impl.model.WorkSpecDao_Impl$1 r0;
        java.lang.Object $r2;
        androidx.sqlite.db.SupportSQLiteStatement $r1;
        androidx.work.impl.model.WorkSpec $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        $r3 = (androidx.work.impl.model.WorkSpec) $r2;

        virtualinvoke r0.bind($r1, $r3);

        return;
    }

    public java.lang.String createQuery()
    {
        androidx.work.impl.model.WorkSpecDao_Impl$1 r0;

        r0 := @this;

        return "INSERT OR IGNORE INTO `WorkSpec` (`id`,`state`,`worker_class_name`,`input_merger_class_name`,`input`,`output`,`initial_delay`,`interval_duration`,`flex_duration`,`run_attempt_count`,`backoff_policy`,`backoff_delay_duration`,`period_start_time`,`minimum_retention_duration`,`schedule_requested_at`,`run_in_foreground`,`out_of_quota_policy`,`required_network_type`,`requires_charging`,`requires_device_idle`,`requires_battery_not_low`,`requires_storage_not_low`,`trigger_content_update_delay`,`trigger_max_content_delay`,`content_uri_triggers`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
    }
}
