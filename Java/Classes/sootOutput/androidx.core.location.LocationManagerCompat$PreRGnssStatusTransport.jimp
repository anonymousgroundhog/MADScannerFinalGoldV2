class androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport extends android.location.GnssStatus$Callback
{
    final androidx.core.location.GnssStatusCompat$Callback mCallback;
    volatile java.util.concurrent.Executor mExecutor;

    void <init>(androidx.core.location.GnssStatusCompat$Callback)
    {
        androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport r0;
        androidx.core.location.GnssStatusCompat$Callback $r1;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        androidx.core.util.Preconditions.checkArgument($z0, "invalid null callback");

        r0.mCallback = $r1;

        return;
    }

    public void onFirstFix(int)
    {
        java.util.concurrent.Executor r1;
        int $i0;
        androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$3 $r2;
        androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport r0;

        r0 := @this;

        $i0 := @parameter0;

        r1 = r0.mExecutor;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = new androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$3;

        specialinvoke $r2.<init>(r0, r1, $i0);

        interfaceinvoke r1.execute($r2);

        return;
    }

    public void onSatelliteStatusChanged(android.location.GnssStatus)
    {
        java.util.concurrent.Executor r2;
        androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$4 $r3;
        androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport r0;
        android.location.GnssStatus $r1;

        r0 := @this;

        $r1 := @parameter0;

        r2 = r0.mExecutor;

        if r2 != null goto label1;

        return;

     label1:
        $r3 = new androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$4;

        specialinvoke $r3.<init>(r0, r2, $r1);

        interfaceinvoke r2.execute($r3);

        return;
    }

    public void onStarted()
    {
        androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport r0;
        androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$1 $r2;
        java.util.concurrent.Executor r1;

        r0 := @this;

        r1 = r0.mExecutor;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = new androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$1;

        specialinvoke $r2.<init>(r0, r1);

        interfaceinvoke r1.execute($r2);

        return;
    }

    public void onStopped()
    {
        androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$2 $r2;
        androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport r0;
        java.util.concurrent.Executor r1;

        r0 := @this;

        r1 = r0.mExecutor;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = new androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport$2;

        specialinvoke $r2.<init>(r0, r1);

        interfaceinvoke r1.execute($r2);

        return;
    }

    public void register(java.util.concurrent.Executor)
    {
        java.util.concurrent.Executor $r1, $r2;
        androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport r0;
        boolean $z0, $z1;

        r0 := @this;

        $r1 := @parameter0;

        $z0 = 1;

        if $r1 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        androidx.core.util.Preconditions.checkArgument($z1, "invalid null executor");

        $r2 = r0.mExecutor;

        if $r2 != null goto label3;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        androidx.core.util.Preconditions.checkState($z0);

        r0.mExecutor = $r1;

        return;
    }

    public void unregister()
    {
        androidx.core.location.LocationManagerCompat$PreRGnssStatusTransport r0;

        r0 := @this;

        r0.mExecutor = null;

        return;
    }
}
