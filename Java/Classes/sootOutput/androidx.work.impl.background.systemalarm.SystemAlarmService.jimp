public class androidx.work.impl.background.systemalarm.SystemAlarmService extends androidx.lifecycle.LifecycleService implements androidx.work.impl.background.systemalarm.SystemAlarmDispatcher$CommandsCompletedListener
{
    private static final java.lang.String TAG;
    private androidx.work.impl.background.systemalarm.SystemAlarmDispatcher mDispatcher;
    private boolean mIsShutdown;

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = androidx.work.Logger.tagWithPrefix("SystemAlarmService");

        androidx.work.impl.background.systemalarm.SystemAlarmService.TAG = $r0;

        return;
    }

    public void <init>()
    {
        androidx.work.impl.background.systemalarm.SystemAlarmService r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    private void initializeDispatcher()
    {
        androidx.work.impl.background.systemalarm.SystemAlarmService r0;
        androidx.work.impl.background.systemalarm.SystemAlarmDispatcher $r1;

        r0 := @this;

        $r1 = new androidx.work.impl.background.systemalarm.SystemAlarmDispatcher;

        specialinvoke $r1.<init>(r0);

        r0.mDispatcher = $r1;

        virtualinvoke $r1.setCompletedListener(r0);

        return;
    }

    public void onAllCommandsCompleted()
    {
        androidx.work.impl.background.systemalarm.SystemAlarmService r0;
        androidx.work.Logger $r2;
        java.lang.Throwable[] $r3;
        java.lang.String $r1;

        r0 := @this;

        r0.mIsShutdown = 1;

        $r2 = androidx.work.Logger.get();

        $r1 = androidx.work.impl.background.systemalarm.SystemAlarmService.TAG;

        $r3 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r2.debug($r1, "All commands completed in dispatcher", $r3);

        androidx.work.impl.utils.WakeLocks.checkWakeLocks();

        virtualinvoke r0.stopSelf();

        return;
    }

    public void onCreate()
    {
        androidx.work.impl.background.systemalarm.SystemAlarmService r0;

        r0 := @this;

        specialinvoke r0.onCreate();

        specialinvoke r0.initializeDispatcher();

        r0.mIsShutdown = 0;

        return;
    }

    public void onDestroy()
    {
        androidx.work.impl.background.systemalarm.SystemAlarmService r0;
        androidx.work.impl.background.systemalarm.SystemAlarmDispatcher $r1;

        r0 := @this;

        specialinvoke r0.onDestroy();

        r0.mIsShutdown = 1;

        $r1 = r0.mDispatcher;

        virtualinvoke $r1.onDestroy();

        return;
    }

    public int onStartCommand(android.content.Intent, int, int)
    {
        androidx.work.impl.background.systemalarm.SystemAlarmService r0;
        android.content.Intent $r1;
        androidx.work.impl.background.systemalarm.SystemAlarmDispatcher $r5;
        androidx.work.Logger $r4;
        java.lang.Throwable[] $r3;
        int $i0, $i1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $i0 := @parameter1;

        $i1 := @parameter2;

        specialinvoke r0.onStartCommand($r1, $i0, $i1);

        $z0 = r0.mIsShutdown;

        if $z0 == 0 goto label1;

        $r4 = androidx.work.Logger.get();

        $r2 = androidx.work.impl.background.systemalarm.SystemAlarmService.TAG;

        $r3 = newarray (java.lang.Throwable)[0];

        virtualinvoke $r4.info($r2, "Re-initializing SystemAlarmDispatcher after a request to shut-down.", $r3);

        $r5 = r0.mDispatcher;

        virtualinvoke $r5.onDestroy();

        specialinvoke r0.initializeDispatcher();

        r0.mIsShutdown = 0;

     label1:
        if $r1 == null goto label2;

        $r5 = r0.mDispatcher;

        virtualinvoke $r5.add($r1, $i1);

     label2:
        return 3;
    }
}
