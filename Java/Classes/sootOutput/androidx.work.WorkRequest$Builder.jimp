public abstract class androidx.work.WorkRequest$Builder extends java.lang.Object
{
    boolean mBackoffCriteriaSet;
    java.util.UUID mId;
    java.util.Set mTags;
    androidx.work.impl.model.WorkSpec mWorkSpec;
    java.lang.Class mWorkerClass;

    void <init>(java.lang.Class)
    {
        java.util.HashSet $r2;
        androidx.work.WorkRequest$Builder r0;
        java.lang.Class r1;
        java.util.UUID $r3;
        java.lang.String $r5, $r6;
        androidx.work.impl.model.WorkSpec $r4;

        r0 := @this;

        r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.mBackoffCriteriaSet = 0;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<init>();

        r0.mTags = $r2;

        $r3 = java.util.UUID.randomUUID();

        r0.mId = $r3;

        r0.mWorkerClass = r1;

        $r4 = new androidx.work.impl.model.WorkSpec;

        $r3 = r0.mId;

        $r5 = virtualinvoke $r3.toString();

        $r6 = virtualinvoke r1.getName();

        specialinvoke $r4.<init>($r5, $r6);

        r0.mWorkSpec = $r4;

        $r5 = virtualinvoke r1.getName();

        virtualinvoke r0.addTag($r5);

        return;
    }

    public final androidx.work.WorkRequest$Builder addTag(java.lang.String)
    {
        androidx.work.WorkRequest$Builder r0;
        java.util.Set $r2;
        java.lang.String $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mTags;

        interfaceinvoke $r2.add($r1);

        r0 = virtualinvoke r0.getThis();

        return r0;
    }

    public final androidx.work.WorkRequest build()
    {
        androidx.work.WorkRequest $r1;
        androidx.work.Constraints r3;
        java.util.UUID $r5;
        java.lang.IllegalArgumentException $r4;
        androidx.work.impl.model.WorkSpec r2, $r6;
        int i0;
        androidx.work.WorkRequest$Builder r0;
        java.lang.String $r7;
        boolean $z0, $z1;

        r0 := @this;

        $r1 = virtualinvoke r0.buildInternal();

        r2 = r0.mWorkSpec;

        r3 = r2.constraints;

        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 < 24 goto label1;

        $z0 = virtualinvoke r3.hasContentUriTriggers();

        if $z0 != 0 goto label3;

     label1:
        $z0 = virtualinvoke r3.requiresBatteryNotLow();

        if $z0 != 0 goto label3;

        $z0 = virtualinvoke r3.requiresCharging();

        if $z0 != 0 goto label3;

        i0 = android.os.Build$VERSION.SDK_INT;

        if i0 < 23 goto label2;

        $z0 = virtualinvoke r3.requiresDeviceIdle();

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $z0 = 0;

        goto label4;

     label3:
        $z0 = 1;

     label4:
        r2 = r0.mWorkSpec;

        $z1 = r2.expedited;

        if $z1 == 0 goto label6;

        if $z0 != 0 goto label5;

        goto label6;

     label5:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<init>("Expedited jobs only support network and storage constraints");

        throw $r4;

     label6:
        $r5 = java.util.UUID.randomUUID();

        r0.mId = $r5;

        r2 = new androidx.work.impl.model.WorkSpec;

        $r6 = r0.mWorkSpec;

        specialinvoke r2.<init>($r6);

        r0.mWorkSpec = r2;

        $r5 = r0.mId;

        $r7 = virtualinvoke $r5.toString();

        r2.id = $r7;

        return $r1;
    }

    abstract androidx.work.WorkRequest buildInternal();

    abstract androidx.work.WorkRequest$Builder getThis();

    public final androidx.work.WorkRequest$Builder keepResultsForAtLeast(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        androidx.work.WorkRequest$Builder r0;
        long $l0;
        androidx.work.impl.model.WorkSpec $r2;

        r0 := @this;

        $l0 := @parameter0;

        $r1 := @parameter1;

        $r2 = r0.mWorkSpec;

        $l0 = virtualinvoke $r1.toMillis($l0);

        $r2.minimumRetentionDuration = $l0;

        r0 = virtualinvoke r0.getThis();

        return r0;
    }

    public final androidx.work.WorkRequest$Builder keepResultsForAtLeast(java.time.Duration)
    {
        java.time.Duration $r1;
        androidx.work.WorkRequest$Builder r0;
        long $l0;
        androidx.work.impl.model.WorkSpec $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mWorkSpec;

        $l0 = virtualinvoke $r1.toMillis();

        $r2.minimumRetentionDuration = $l0;

        r0 = virtualinvoke r0.getThis();

        return r0;
    }

    public final androidx.work.WorkRequest$Builder setBackoffCriteria(androidx.work.BackoffPolicy, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r2;
        androidx.work.BackoffPolicy $r1;
        androidx.work.WorkRequest$Builder r0;
        long $l0;
        androidx.work.impl.model.WorkSpec $r3;

        r0 := @this;

        $r1 := @parameter0;

        $l0 := @parameter1;

        $r2 := @parameter2;

        r0.mBackoffCriteriaSet = 1;

        $r3 = r0.mWorkSpec;

        $r3.backoffPolicy = $r1;

        $r3 = r0.mWorkSpec;

        $l0 = virtualinvoke $r2.toMillis($l0);

        virtualinvoke $r3.setBackoffDelayDuration($l0);

        r0 = virtualinvoke r0.getThis();

        return r0;
    }

    public final androidx.work.WorkRequest$Builder setBackoffCriteria(androidx.work.BackoffPolicy, java.time.Duration)
    {
        androidx.work.BackoffPolicy $r1;
        java.time.Duration $r2;
        androidx.work.WorkRequest$Builder r0;
        long $l0;
        androidx.work.impl.model.WorkSpec $r3;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        r0.mBackoffCriteriaSet = 1;

        $r3 = r0.mWorkSpec;

        $r3.backoffPolicy = $r1;

        $r3 = r0.mWorkSpec;

        $l0 = virtualinvoke $r2.toMillis();

        virtualinvoke $r3.setBackoffDelayDuration($l0);

        r0 = virtualinvoke r0.getThis();

        return r0;
    }

    public final androidx.work.WorkRequest$Builder setConstraints(androidx.work.Constraints)
    {
        androidx.work.WorkRequest$Builder r0;
        androidx.work.Constraints $r1;
        androidx.work.impl.model.WorkSpec $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mWorkSpec;

        $r2.constraints = $r1;

        r0 = virtualinvoke r0.getThis();

        return r0;
    }

    public androidx.work.WorkRequest$Builder setExpedited(androidx.work.OutOfQuotaPolicy)
    {
        androidx.work.WorkRequest$Builder r0;
        androidx.work.OutOfQuotaPolicy $r1;
        androidx.work.impl.model.WorkSpec $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mWorkSpec;

        $r2.expedited = 1;

        $r2 = r0.mWorkSpec;

        $r2.outOfQuotaPolicy = $r1;

        r0 = virtualinvoke r0.getThis();

        return r0;
    }

    public androidx.work.WorkRequest$Builder setInitialDelay(long, java.util.concurrent.TimeUnit)
    {
        long $l0, $l2;
        java.lang.IllegalArgumentException $r3;
        androidx.work.impl.model.WorkSpec $r2;
        java.util.concurrent.TimeUnit $r1;
        byte $b1;
        int $i3;
        androidx.work.WorkRequest$Builder r0;

        r0 := @this;

        $l0 := @parameter0;

        $r1 := @parameter1;

        $r2 = r0.mWorkSpec;

        $l0 = virtualinvoke $r1.toMillis($l0);

        $r2.initialDelay = $l0;

        $l0 = java.lang.System.currentTimeMillis();

        $l0 = 9223372036854775807L - $l0;

        $r2 = r0.mWorkSpec;

        $l2 = $r2.initialDelay;

        $b1 = $l0 cmp $l2;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        r0 = virtualinvoke r0.getThis();

        return r0;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<init>("The given initial delay is too large and will cause an overflow!");

        throw $r3;
    }

    public androidx.work.WorkRequest$Builder setInitialDelay(java.time.Duration)
    {
        long $l1, $l2;
        java.lang.IllegalArgumentException $r3;
        androidx.work.impl.model.WorkSpec $r2;
        byte $b0;
        java.time.Duration $r1;
        int $i3;
        androidx.work.WorkRequest$Builder r0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mWorkSpec;

        $l1 = virtualinvoke $r1.toMillis();

        $r2.initialDelay = $l1;

        $l1 = java.lang.System.currentTimeMillis();

        $l1 = 9223372036854775807L - $l1;

        $r2 = r0.mWorkSpec;

        $l2 = $r2.initialDelay;

        $b0 = $l1 cmp $l2;

        $i3 = (int) $b0;

        if $i3 <= 0 goto label1;

        r0 = virtualinvoke r0.getThis();

        return r0;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<init>("The given initial delay is too large and will cause an overflow!");

        throw $r3;
    }

    public final androidx.work.WorkRequest$Builder setInitialRunAttemptCount(int)
    {
        int $i0;
        androidx.work.WorkRequest$Builder r0;
        androidx.work.impl.model.WorkSpec $r1;

        r0 := @this;

        $i0 := @parameter0;

        $r1 = r0.mWorkSpec;

        $r1.runAttemptCount = $i0;

        r0 = virtualinvoke r0.getThis();

        return r0;
    }

    public final androidx.work.WorkRequest$Builder setInitialState(androidx.work.WorkInfo$State)
    {
        androidx.work.WorkRequest$Builder r0;
        androidx.work.impl.model.WorkSpec $r2;
        androidx.work.WorkInfo$State $r1;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mWorkSpec;

        $r2.state = $r1;

        r0 = virtualinvoke r0.getThis();

        return r0;
    }

    public final androidx.work.WorkRequest$Builder setInputData(androidx.work.Data)
    {
        androidx.work.WorkRequest$Builder r0;
        androidx.work.Data $r1;
        androidx.work.impl.model.WorkSpec $r2;

        r0 := @this;

        $r1 := @parameter0;

        $r2 = r0.mWorkSpec;

        $r2.input = $r1;

        r0 = virtualinvoke r0.getThis();

        return r0;
    }

    public final androidx.work.WorkRequest$Builder setPeriodStartTime(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        androidx.work.WorkRequest$Builder r0;
        long $l0;
        androidx.work.impl.model.WorkSpec $r2;

        r0 := @this;

        $l0 := @parameter0;

        $r1 := @parameter1;

        $r2 = r0.mWorkSpec;

        $l0 = virtualinvoke $r1.toMillis($l0);

        $r2.periodStartTime = $l0;

        r0 = virtualinvoke r0.getThis();

        return r0;
    }

    public final androidx.work.WorkRequest$Builder setScheduleRequestedAt(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit $r1;
        androidx.work.WorkRequest$Builder r0;
        long $l0;
        androidx.work.impl.model.WorkSpec $r2;

        r0 := @this;

        $l0 := @parameter0;

        $r1 := @parameter1;

        $r2 = r0.mWorkSpec;

        $l0 = virtualinvoke $r1.toMillis($l0);

        $r2.scheduleRequestedAt = $l0;

        r0 = virtualinvoke r0.getThis();

        return r0;
    }
}
