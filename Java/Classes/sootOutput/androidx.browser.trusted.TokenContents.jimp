final class androidx.browser.trusted.TokenContents extends java.lang.Object
{
    private final byte[] mContents;
    private java.util.List mFingerprints;
    private java.lang.String mPackageName;

    public static int $r8$lambda$Q7kOl2yBde7CmQs5Ktpiz56Nr70(byte[], byte[])
    {
        int $i0;
        byte[] $r0, $r1;

        $r1 := @parameter0;

        $r0 := @parameter1;

        $i0 = androidx.browser.trusted.TokenContents.compareByteArrays($r1, $r0);

        return $i0;
    }

    private void <init>(byte[])
    {
        androidx.browser.trusted.TokenContents r0;
        byte[] $r1;

        r0 := @this;

        $r1 := @parameter0;

        specialinvoke r0.<init>();

        r0.mContents = $r1;

        return;
    }

    private void <init>(byte[], java.lang.String, java.util.List)
    {
        byte[] $r1;
        java.util.Iterator $r5;
        java.util.ArrayList $r4;
        java.util.List r3;
        androidx.browser.trusted.TokenContents r0;
        int $i0;
        java.lang.Object $r6;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        r3 := @parameter2;

        specialinvoke r0.<init>();

        r0.mContents = $r1;

        r0.mPackageName = $r2;

        $r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke r3.size();

        specialinvoke $r4.<init>($i0);

        r0.mFingerprints = $r4;

        $r5 = interfaceinvoke r3.iterator();

     label1:
        $z0 = interfaceinvoke $r5.hasNext();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.next();

        $r1 = (byte[]) $r6;

        r3 = r0.mFingerprints;

        $i0 = lengthof $r1;

        $r1 = java.util.Arrays.copyOf($r1, $i0);

        interfaceinvoke r3.add($r1);

        goto label1;

     label2:
        return;
    }

    private static int compareByteArrays(byte[], byte[])
    {
        byte[] $r0, $r1;
        byte $b3, $b4;
        int $i0, i1, $i2;

        $r0 := @parameter0;

        $r1 := @parameter1;

        if $r0 != $r1 goto label1;

        return 0;

     label1:
        if $r0 != null goto label2;

        i1 = -1;

        return i1;

     label2:
        if $r1 != null goto label3;

        return 1;

     label3:
        i1 = 0;

     label4:
        $i0 = lengthof $r0;

        $i2 = lengthof $r1;

        $i0 = java.lang.Math.min($i0, $i2);

        if i1 >= $i0 goto label6;

        $b3 = $r0[i1];

        $b4 = $r1[i1];

        $i0 = (int) $b3;

        $i2 = (int) $b4;

        if $i0 == $i2 goto label5;

        $b3 = $r0[i1];

        $b4 = $r1[i1];

        i1 = (int) $b3;

        $i0 = (int) $b4;

        i1 = i1 - $i0;

        return i1;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        i1 = lengthof $r0;

        $i0 = lengthof $r1;

        if i1 == $i0 goto label7;

        i1 = lengthof $r0;

        $i0 = lengthof $r1;

        i1 = i1 - $i0;

        return i1;

     label7:
        return 0;
    }

    static androidx.browser.trusted.TokenContents create(java.lang.String, java.util.List) throws java.io.IOException
    {
        byte[] $r3;
        java.util.List r1;
        androidx.browser.trusted.TokenContents $r2;
        java.lang.String $r0;

        $r0 := @parameter0;

        r1 := @parameter1;

        $r2 = new androidx.browser.trusted.TokenContents;

        $r3 = androidx.browser.trusted.TokenContents.createToken($r0, r1);

        specialinvoke $r2.<init>($r3, $r0, r1);

        return $r2;
    }

    private static byte[] createToken(java.lang.String, java.util.List) throws java.io.IOException
    {
        byte[] r7;
        java.io.ByteArrayOutputStream r4;
        java.util.Iterator $r5;
        java.util.List r1;
        java.io.DataOutputStream r2;
        int $i0;
        androidx.browser.trusted.TokenContents$$ExternalSyntheticLambda0 r3;
        java.lang.Object $r6;
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0;

        r1 := @parameter1;

        r3 = new androidx.browser.trusted.TokenContents$$ExternalSyntheticLambda0;

        specialinvoke r3.<init>();

        java.util.Collections.sort(r1, r3);

        r4 = new java.io.ByteArrayOutputStream;

        specialinvoke r4.<init>();

        r2 = new java.io.DataOutputStream;

        specialinvoke r2.<init>(r4);

        virtualinvoke r2.writeUTF($r0);

        $i0 = interfaceinvoke r1.size();

        virtualinvoke r2.writeInt($i0);

        $r5 = interfaceinvoke r1.iterator();

     label1:
        $z0 = interfaceinvoke $r5.hasNext();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.next();

        r7 = (byte[]) $r6;

        $i0 = lengthof r7;

        virtualinvoke r2.writeInt($i0);

        virtualinvoke r2.write(r7);

        goto label1;

     label2:
        virtualinvoke r2.flush();

        r7 = virtualinvoke r4.toByteArray();

        return r7;
    }

    static androidx.browser.trusted.TokenContents deserialize(byte[])
    {
        androidx.browser.trusted.TokenContents $r1;
        byte[] $r0;

        $r0 := @parameter0;

        $r1 = new androidx.browser.trusted.TokenContents;

        specialinvoke $r1.<init>($r0);

        return $r1;
    }

    private void parseIfNeeded() throws java.io.IOException
    {
        byte[] r1;
        java.io.DataInputStream r3;
        java.lang.IllegalStateException $r7;
        java.util.ArrayList r5;
        java.util.List $r6;
        java.io.ByteArrayInputStream r4;
        androidx.browser.trusted.TokenContents r0;
        int $i0, i1, $i2, $i3;
        java.lang.String r2;

        r0 := @this;

        r2 = r0.mPackageName;

        if r2 == null goto label1;

        return;

     label1:
        r3 = new java.io.DataInputStream;

        r4 = new java.io.ByteArrayInputStream;

        r1 = r0.mContents;

        specialinvoke r4.<init>(r1);

        specialinvoke r3.<init>(r4);

        r2 = virtualinvoke r3.readUTF();

        r0.mPackageName = r2;

        $i0 = virtualinvoke r3.readInt();

        r5 = new java.util.ArrayList;

        specialinvoke r5.<init>($i0);

        r0.mFingerprints = r5;

        i1 = 0;

     label2:
        if i1 >= $i0 goto label4;

        $i2 = virtualinvoke r3.readInt();

        r1 = newarray (byte)[$i2];

        $i3 = virtualinvoke r3.read(r1);

        if $i3 != $i2 goto label3;

        $r6 = r0.mFingerprints;

        interfaceinvoke $r6.add(r1);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<init>("Could not read fingerprint");

        throw $r7;

     label4:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        byte[] $r2, $r6;
        androidx.browser.trusted.TokenContents r0, r5;
        java.lang.Object $r1;
        java.lang.Class $r3, $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        if $r1 == null goto label3;

        $r3 = virtualinvoke r0.getClass();

        $r4 = virtualinvoke $r1.getClass();

        if $r3 == $r4 goto label2;

        goto label3;

     label2:
        r5 = (androidx.browser.trusted.TokenContents) $r1;

        $r6 = r0.mContents;

        $r2 = r5.mContents;

        $z0 = java.util.Arrays.equals($r6, $r2);

        return $z0;

     label3:
        return 0;
    }

    public byte[] getFingerprint(int) throws java.io.IOException
    {
        byte[] $r3, $r4;
        java.lang.IllegalStateException $r5;
        java.util.List $r1;
        androidx.browser.trusted.TokenContents r0;
        int $i0;
        java.lang.Object $r2;

        r0 := @this;

        $i0 := @parameter0;

        specialinvoke r0.parseIfNeeded();

        $r1 = r0.mFingerprints;

        if $r1 == null goto label1;

        $r2 = interfaceinvoke $r1.get($i0);

        $r3 = (byte[]) $r2;

        $r1 = r0.mFingerprints;

        $r2 = interfaceinvoke $r1.get($i0);

        $r4 = (byte[]) $r2;

        $i0 = lengthof $r4;

        $r3 = java.util.Arrays.copyOf($r3, $i0);

        return $r3;

     label1:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<init>();

        throw $r5;
    }

    public int getFingerprintCount() throws java.io.IOException
    {
        java.lang.IllegalStateException $r2;
        java.util.List $r1;
        androidx.browser.trusted.TokenContents r0;
        int $i0;

        r0 := @this;

        specialinvoke r0.parseIfNeeded();

        $r1 = r0.mFingerprints;

        if $r1 == null goto label1;

        $i0 = interfaceinvoke $r1.size();

        return $i0;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<init>();

        throw $r2;
    }

    public java.lang.String getPackageName() throws java.io.IOException
    {
        androidx.browser.trusted.TokenContents r0;
        java.lang.IllegalStateException $r2;
        java.lang.String $r1;

        r0 := @this;

        specialinvoke r0.parseIfNeeded();

        $r1 = r0.mPackageName;

        if $r1 == null goto label1;

        return $r1;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<init>();

        throw $r2;
    }

    public int hashCode()
    {
        androidx.browser.trusted.TokenContents r0;
        int $i0;
        byte[] $r1;

        r0 := @this;

        $r1 = r0.mContents;

        $i0 = java.util.Arrays.hashCode($r1);

        return $i0;
    }

    public byte[] serialize()
    {
        androidx.browser.trusted.TokenContents r0;
        int $i0;
        byte[] $r1;

        r0 := @this;

        $r1 = r0.mContents;

        $i0 = lengthof $r1;

        $r1 = java.util.Arrays.copyOf($r1, $i0);

        return $r1;
    }
}
