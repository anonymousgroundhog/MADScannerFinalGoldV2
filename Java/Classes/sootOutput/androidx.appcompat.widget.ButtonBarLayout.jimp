public class androidx.appcompat.widget.ButtonBarLayout extends android.widget.LinearLayout
{
    private static final int PEEK_BUTTON_DP;
    private boolean mAllowStacking;
    private int mLastWidthSize;
    private int mMinimumHeight;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.content.Context $r1;
        android.util.AttributeSet $r2;
        int[] $r3;
        int $i0;
        androidx.appcompat.widget.ButtonBarLayout r0;
        android.content.res.TypedArray $r4;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        $r2 := @parameter1;

        specialinvoke r0.<init>($r1, $r2);

        r0.mLastWidthSize = -1;

        r0.mMinimumHeight = 0;

        $r3 = androidx.appcompat.R$styleable.ButtonBarLayout;

        $r4 = virtualinvoke $r1.obtainStyledAttributes($r2, $r3);

        $r3 = androidx.appcompat.R$styleable.ButtonBarLayout;

        androidx.core.view.ViewCompat.saveAttributeDataForStyleable(r0, $r1, $r3, $r2, $r4, 0, 0);

        $i0 = androidx.appcompat.R$styleable.ButtonBarLayout_allowStacking;

        $z0 = virtualinvoke $r4.getBoolean($i0, 1);

        r0.mAllowStacking = $z0;

        virtualinvoke $r4.recycle();

        return;
    }

    private int getNextVisibleChildIndex(int)
    {
        int $i0, $i1, $i2;
        android.view.View $r1;
        androidx.appcompat.widget.ButtonBarLayout r0;

        r0 := @this;

        $i0 := @parameter0;

        $i1 = virtualinvoke r0.getChildCount();

     label1:
        if $i0 >= $i1 goto label3;

        $r1 = virtualinvoke r0.getChildAt($i0);

        $i2 = virtualinvoke $r1.getVisibility();

        if $i2 != 0 goto label2;

        return $i0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return -1;
    }

    private boolean isStacked()
    {
        int $i0;
        androidx.appcompat.widget.ButtonBarLayout r0;

        r0 := @this;

        $i0 = virtualinvoke r0.getOrientation();

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void setStacked(boolean)
    {
        byte b0;
        int i1;
        android.view.View $r1;
        androidx.appcompat.widget.ButtonBarLayout r0;
        boolean $z0;

        r0 := @this;

        $z0 := @parameter0;

        i1 = (int) $z0;

        virtualinvoke r0.setOrientation(i1);

        if $z0 == 0 goto label1;

        b0 = 5;

        goto label2;

     label1:
        b0 = 80;

     label2:
        virtualinvoke r0.setGravity(b0);

        i1 = androidx.appcompat.R$id.spacer;

        $r1 = virtualinvoke r0.findViewById(i1);

        if $r1 == null goto label5;

        if $z0 == 0 goto label3;

        b0 = 8;

        goto label4;

     label3:
        b0 = 4;

     label4:
        virtualinvoke $r1.setVisibility(b0);

     label5:
        i1 = virtualinvoke r0.getChildCount();

        i1 = i1 + -2;

     label6:
        if i1 < 0 goto label7;

        $r1 = virtualinvoke r0.getChildAt(i1);

        virtualinvoke r0.bringChildToFront($r1);

        i1 = i1 + -1;

        goto label6;

     label7:
        return;
    }

    public int getMinimumHeight()
    {
        int $i0, $i1;
        androidx.appcompat.widget.ButtonBarLayout r0;

        r0 := @this;

        $i0 = r0.mMinimumHeight;

        $i1 = specialinvoke r0.getMinimumHeight();

        $i0 = java.lang.Math.max($i0, $i1);

        return $i0;
    }

    protected void onMeasure(int, int)
    {
        android.view.ViewGroup$LayoutParams $r2;
        androidx.appcompat.widget.ButtonBarLayout r0;
        android.util.DisplayMetrics $r5;
        int $i0, $i1, $i2, i3;
        android.view.View $r1;
        float $f0;
        android.widget.LinearLayout$LayoutParams r3;
        boolean z0, $z1;
        android.content.res.Resources $r4;

        r0 := @this;

        $i0 := @parameter0;

        $i1 := @parameter1;

        $i2 = android.view.View$MeasureSpec.getSize($i0);

        z0 = r0.mAllowStacking;

        if z0 == 0 goto label02;

        i3 = r0.mLastWidthSize;

        if $i2 <= i3 goto label01;

        z0 = specialinvoke r0.isStacked();

        if z0 == 0 goto label01;

        specialinvoke r0.setStacked(0);

     label01:
        r0.mLastWidthSize = $i2;

     label02:
        z0 = 0;

        $z1 = specialinvoke r0.isStacked();

        if $z1 != 0 goto label03;

        i3 = android.view.View$MeasureSpec.getMode($i0);

        if i3 != 1073741824 goto label03;

        $i2 = android.view.View$MeasureSpec.makeMeasureSpec($i2, -2147483648);

        z0 = 1;

        goto label04;

     label03:
        $i2 = $i0;

     label04:
        specialinvoke r0.onMeasure($i2, $i1);

        $z1 = r0.mAllowStacking;

        if $z1 == 0 goto label07;

        $z1 = specialinvoke r0.isStacked();

        if $z1 != 0 goto label07;

        $i2 = virtualinvoke r0.getMeasuredWidthAndState();

        $i2 = -16777216 & $i2;

        if $i2 != 16777216 goto label05;

        $z1 = 1;

        goto label06;

     label05:
        $z1 = 0;

     label06:
        if $z1 == 0 goto label07;

        specialinvoke r0.setStacked(1);

        z0 = 1;

     label07:
        if z0 == 0 goto label08;

        specialinvoke r0.onMeasure($i0, $i1);

     label08:
        $i0 = 0;

        $i1 = specialinvoke r0.getNextVisibleChildIndex(0);

        if $i1 < 0 goto label11;

        $r1 = virtualinvoke r0.getChildAt($i1);

        $r2 = virtualinvoke $r1.getLayoutParams();

        r3 = (android.widget.LinearLayout$LayoutParams) $r2;

        $i0 = virtualinvoke r0.getPaddingTop();

        $i2 = virtualinvoke $r1.getMeasuredHeight();

        $i0 = $i0 + $i2;

        $i2 = r3.topMargin;

        $i0 = $i0 + $i2;

        $i2 = r3.bottomMargin;

        $i0 = $i0 + $i2;

        z0 = specialinvoke r0.isStacked();

        if z0 == 0 goto label10;

        $i1 = $i1 + 1;

        $i1 = specialinvoke r0.getNextVisibleChildIndex($i1);

        if $i1 < 0 goto label09;

        $r1 = virtualinvoke r0.getChildAt($i1);

        $i1 = virtualinvoke $r1.getPaddingTop();

        $r4 = virtualinvoke r0.getResources();

        $r5 = virtualinvoke $r4.getDisplayMetrics();

        $f0 = $r5.density;

        $f0 = $f0 * 16.0F;

        $i2 = (int) $f0;

        $i1 = $i1 + $i2;

        $i0 = $i0 + $i1;

     label09:
        goto label11;

     label10:
        $i1 = virtualinvoke r0.getPaddingBottom();

        $i0 = $i0 + $i1;

     label11:
        $i1 = androidx.core.view.ViewCompat.getMinimumHeight(r0);

        if $i1 == $i0 goto label12;

        virtualinvoke r0.setMinimumHeight($i0);

     label12:
        return;
    }

    public void setAllowStacking(boolean)
    {
        int $i0;
        androidx.appcompat.widget.ButtonBarLayout r0;
        boolean $z0, $z1;

        r0 := @this;

        $z0 := @parameter0;

        $z1 = r0.mAllowStacking;

        if $z1 == $z0 goto label2;

        r0.mAllowStacking = $z0;

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r0.getOrientation();

        if $i0 != 1 goto label1;

        specialinvoke r0.setStacked(0);

     label1:
        virtualinvoke r0.requestLayout();

     label2:
        return;
    }
}
