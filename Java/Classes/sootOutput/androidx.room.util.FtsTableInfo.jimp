public class androidx.room.util.FtsTableInfo extends java.lang.Object
{
    private static final java.lang.String[] FTS_OPTIONS;
    public final java.util.Set columns;
    public final java.lang.String name;
    public final java.util.Set options;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[9];

        $r0[0] = "tokenize=";

        $r0[1] = "compress=";

        $r0[2] = "content=";

        $r0[3] = "languageid=";

        $r0[4] = "matchinfo=";

        $r0[5] = "notindexed=";

        $r0[6] = "order=";

        $r0[7] = "prefix=";

        $r0[8] = "uncompress=";

        androidx.room.util.FtsTableInfo.FTS_OPTIONS = $r0;

        return;
    }

    public void <init>(java.lang.String, java.util.Set, java.lang.String)
    {
        java.util.Set r2;
        java.lang.String $r1, $r3;
        androidx.room.util.FtsTableInfo r0;

        r0 := @this;

        $r1 := @parameter0;

        r2 := @parameter1;

        $r3 := @parameter2;

        specialinvoke r0.<init>();

        r0.name = $r1;

        r0.columns = r2;

        r2 = androidx.room.util.FtsTableInfo.parseOptions($r3);

        r0.options = r2;

        return;
    }

    public void <init>(java.lang.String, java.util.Set, java.util.Set)
    {
        java.util.Set r2, r3;
        java.lang.String $r1;
        androidx.room.util.FtsTableInfo r0;

        r0 := @this;

        $r1 := @parameter0;

        r2 := @parameter1;

        r3 := @parameter2;

        specialinvoke r0.<init>();

        r0.name = $r1;

        r0.columns = r2;

        r0.options = r3;

        return;
    }

    static java.util.Set parseOptions(java.lang.String)
    {
        java.lang.String[] $r8;
        java.util.ArrayList r3, $r10;
        java.util.HashSet r2, $r9;
        java.lang.Character r5;
        int $i0, $i1, $i2, $i5;
        java.lang.String $r0, $r6;
        boolean $z0;
        java.util.Iterator $r7;
        char $c3, $c4;
        java.lang.Object $r4;
        java.util.ArrayDeque r1, $r11;

        $r0 := @parameter0;

        $z0 = virtualinvoke $r0.isEmpty();

        if $z0 == 0 goto label01;

        $r9 = new java.util.HashSet;

        specialinvoke $r9.<init>();

        return $r9;

     label01:
        $i0 = virtualinvoke $r0.indexOf(40);

        $i0 = $i0 + 1;

        $i1 = virtualinvoke $r0.lastIndexOf(41);

        $r0 = virtualinvoke $r0.substring($i0, $i1);

        $r10 = new java.util.ArrayList;

        r3 = $r10;

        specialinvoke $r10.<init>();

        $r11 = new java.util.ArrayDeque;

        r1 = $r11;

        specialinvoke $r11.<init>();

        $i1 = -1;

        $i0 = 0;

     label02:
        $i2 = virtualinvoke $r0.length();

        if $i0 >= $i2 goto label10;

        $c3 = virtualinvoke $r0.charAt($i0);

        $i2 = (int) $c3;

        lookupswitch($i2)
        {
            case 34: goto label07;
            case 39: goto label07;
            case 44: goto label06;
            case 91: goto label05;
            case 93: goto label04;
            case 96: goto label07;
            default: goto label03;
        };

     label03:
        goto label09;

     label04:
        $z0 = virtualinvoke r1.isEmpty();

        if $z0 != 0 goto label09;

        $r4 = virtualinvoke r1.peek();

        r5 = (java.lang.Character) $r4;

        $c3 = virtualinvoke r5.charValue();

        $i2 = (int) $c3;

        if $i2 != 91 goto label09;

        virtualinvoke r1.pop();

        goto label09;

     label05:
        $z0 = virtualinvoke r1.isEmpty();

        if $z0 == 0 goto label09;

        r5 = java.lang.Character.valueOf($c3);

        virtualinvoke r1.push(r5);

        goto label09;

     label06:
        $z0 = virtualinvoke r1.isEmpty();

        if $z0 == 0 goto label09;

        $i1 = $i1 + 1;

        $r6 = virtualinvoke $r0.substring($i1, $i0);

        $r6 = virtualinvoke $r6.trim();

        interfaceinvoke r3.add($r6);

        $i1 = $i0;

        goto label09;

     label07:
        $z0 = virtualinvoke r1.isEmpty();

        if $z0 == 0 goto label08;

        r5 = java.lang.Character.valueOf($c3);

        virtualinvoke r1.push(r5);

        goto label09;

     label08:
        $r4 = virtualinvoke r1.peek();

        r5 = (java.lang.Character) $r4;

        $c4 = virtualinvoke r5.charValue();

        $i2 = (int) $c4;

        $i5 = (int) $c3;

        if $i2 != $i5 goto label09;

        virtualinvoke r1.pop();

     label09:
        $i0 = $i0 + 1;

        goto label02;

     label10:
        $i0 = $i1 + 1;

        $r0 = virtualinvoke $r0.substring($i0);

        $r0 = virtualinvoke $r0.trim();

        interfaceinvoke r3.add($r0);

        $r9 = new java.util.HashSet;

        r2 = $r9;

        specialinvoke $r9.<init>();

        $r7 = interfaceinvoke r3.iterator();

     label11:
        $z0 = interfaceinvoke $r7.hasNext();

        if $z0 == 0 goto label14;

        $r4 = interfaceinvoke $r7.next();

        $r6 = (java.lang.String) $r4;

        $r8 = androidx.room.util.FtsTableInfo.FTS_OPTIONS;

        $i0 = lengthof $r8;

        $i1 = 0;

     label12:
        if $i1 >= $i0 goto label11;

        $r0 = $r8[$i1];

        $z0 = virtualinvoke $r6.startsWith($r0);

        if $z0 == 0 goto label13;

        virtualinvoke r2.add($r6);

     label13:
        $i1 = $i1 + 1;

        goto label12;

     label14:
        return r2;
    }

    public static androidx.room.util.FtsTableInfo read(androidx.sqlite.db.SupportSQLiteDatabase, java.lang.String)
    {
        androidx.sqlite.db.SupportSQLiteDatabase $r0;
        java.util.Set $r3, $r4;
        java.lang.String $r1;
        androidx.room.util.FtsTableInfo $r2;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r3 = androidx.room.util.FtsTableInfo.readColumns($r0, $r1);

        $r4 = androidx.room.util.FtsTableInfo.readOptions($r0, $r1);

        $r2 = new androidx.room.util.FtsTableInfo;

        specialinvoke $r2.<init>($r1, $r3, $r4);

        return $r2;
    }

    private static java.util.Set readColumns(androidx.sqlite.db.SupportSQLiteDatabase, java.lang.String)
    {
        java.lang.Throwable r5;
        java.util.HashSet r4;
        androidx.sqlite.db.SupportSQLiteDatabase $r0;
        int $i0;
        java.lang.StringBuilder r2;
        java.lang.String $r1;
        android.database.Cursor $r3;
        boolean $z0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<init>();

        r2 = virtualinvoke r2.append("PRAGMA table_info(`");

        r2 = virtualinvoke r2.append($r1);

        r2 = virtualinvoke r2.append("`)");

        $r1 = virtualinvoke r2.toString();

        $r3 = interfaceinvoke $r0.query($r1);

        r4 = new java.util.HashSet;

        specialinvoke r4.<init>();

     label01:
        $i0 = interfaceinvoke $r3.getColumnCount();

     label02:
        if $i0 <= 0 goto label08;

     label03:
        $i0 = interfaceinvoke $r3.getColumnIndex("name");

     label04:
        $z0 = interfaceinvoke $r3.moveToNext();

     label05:
        if $z0 == 0 goto label08;

     label06:
        $r1 = interfaceinvoke $r3.getString($i0);

        interfaceinvoke r4.add($r1);

     label07:
        goto label04;

     label08:
        interfaceinvoke $r3.close();

        return r4;

     label09:
        r5 := @caughtexception;

        interfaceinvoke $r3.close();

        goto label10;

     label10:
        throw r5;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label05 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
    }

    private static java.util.Set readOptions(androidx.sqlite.db.SupportSQLiteDatabase, java.lang.String)
    {
        java.lang.Throwable $r6;
        java.util.Set $r5;
        androidx.sqlite.db.SupportSQLiteDatabase $r0;
        int $i0;
        java.lang.StringBuilder r3;
        java.lang.String $r1, r2;
        android.database.Cursor $r4;
        boolean $z0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        r2 = "";

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<init>();

        r3 = virtualinvoke r3.append("SELECT * FROM sqlite_master WHERE `name` = \'");

        r3 = virtualinvoke r3.append($r1);

        r3 = virtualinvoke r3.append("\'");

        $r1 = virtualinvoke r3.toString();

        $r4 = interfaceinvoke $r0.query($r1);

     label1:
        $z0 = interfaceinvoke $r4.moveToFirst();

     label2:
        if $z0 == 0 goto label5;

     label3:
        $i0 = interfaceinvoke $r4.getColumnIndexOrThrow("sql");

        $r1 = interfaceinvoke $r4.getString($i0);

     label4:
        r2 = $r1;

     label5:
        interfaceinvoke $r4.close();

        $r5 = androidx.room.util.FtsTableInfo.parseOptions(r2);

        return $r5;

     label6:
        $r6 := @caughtexception;

        interfaceinvoke $r4.close();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Set $r7, $r8;
        androidx.room.util.FtsTableInfo r0, r4;
        java.lang.Object $r1;
        java.lang.Class $r2, $r3;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this;

        $r1 := @parameter0;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        if $r1 == null goto label8;

        $r2 = virtualinvoke r0.getClass();

        $r3 = virtualinvoke $r1.getClass();

        if $r2 == $r3 goto label2;

        return 0;

     label2:
        r4 = (androidx.room.util.FtsTableInfo) $r1;

        $r5 = r0.name;

        if $r5 == null goto label3;

        $r6 = r4.name;

        $z0 = virtualinvoke $r5.equals($r6);

        if $z0 != 0 goto label4;

        return 0;

     label3:
        $r5 = r4.name;

        if $r5 == null goto label4;

        return 0;

     label4:
        $r7 = r0.columns;

        if $r7 == null goto label5;

        $r8 = r4.columns;

        $z0 = interfaceinvoke $r7.equals($r8);

        if $z0 != 0 goto label6;

        return 0;

     label5:
        $r7 = r4.columns;

        if $r7 == null goto label6;

        return 0;

     label6:
        $r7 = r0.options;

        if $r7 == null goto label7;

        $r8 = r4.options;

        $z0 = interfaceinvoke $r7.equals($r8);

        return $z0;

     label7:
        $r7 = r4.options;

        if $r7 != null goto label8;

        return 1;

     label8:
        return 0;
    }

    public int hashCode()
    {
        int $i0, $i1, $i2;
        java.util.Set $r2;
        java.lang.String r1;
        androidx.room.util.FtsTableInfo r0;

        r0 := @this;

        r1 = r0.name;

        $i0 = 0;

        if r1 == null goto label1;

        $i1 = virtualinvoke r1.hashCode();

        goto label2;

     label1:
        $i1 = 0;

     label2:
        $i1 = $i1 * 31;

        $r2 = r0.columns;

        if $r2 == null goto label3;

        $i2 = interfaceinvoke $r2.hashCode();

        goto label4;

     label3:
        $i2 = 0;

     label4:
        $i1 = $i1 + $i2;

        $i1 = $i1 * 31;

        $r2 = r0.options;

        if $r2 == null goto label5;

        $i0 = interfaceinvoke $r2.hashCode();

     label5:
        $i0 = $i1 + $i0;

        return $i0;
    }

    public java.lang.String toString()
    {
        java.util.Set $r3;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        androidx.room.util.FtsTableInfo r0;

        r0 := @this;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<init>();

        $r1 = virtualinvoke $r1.append("FtsTableInfo{name=\'");

        $r2 = r0.name;

        $r1 = virtualinvoke $r1.append($r2);

        $r1 = virtualinvoke $r1.append(39);

        $r1 = virtualinvoke $r1.append(", columns=");

        $r3 = r0.columns;

        $r1 = virtualinvoke $r1.append($r3);

        $r1 = virtualinvoke $r1.append(", options=");

        $r3 = r0.options;

        $r1 = virtualinvoke $r1.append($r3);

        $r1 = virtualinvoke $r1.append(125);

        $r2 = virtualinvoke $r1.toString();

        return $r2;
    }
}
