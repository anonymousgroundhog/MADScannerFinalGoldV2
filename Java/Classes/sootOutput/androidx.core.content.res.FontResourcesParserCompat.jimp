public class androidx.core.content.res.FontResourcesParserCompat extends java.lang.Object
{
    private static final int DEFAULT_TIMEOUT_MILLIS;
    public static final int FETCH_STRATEGY_ASYNC;
    public static final int FETCH_STRATEGY_BLOCKING;
    public static final int INFINITE_TIMEOUT_VALUE;
    private static final int ITALIC;
    private static final int NORMAL_WEIGHT;

    private void <init>()
    {
        androidx.core.content.res.FontResourcesParserCompat r0;

        r0 := @this;

        specialinvoke r0.<init>();

        return;
    }

    private static int getType(android.content.res.TypedArray, int)
    {
        android.util.TypedValue r1;
        int $i0, i1;
        android.content.res.TypedArray $r0;

        $r0 := @parameter0;

        $i0 := @parameter1;

        i1 = android.os.Build$VERSION.SDK_INT;

        if i1 < 21 goto label1;

        $i0 = virtualinvoke $r0.getType($i0);

        return $i0;

     label1:
        r1 = new android.util.TypedValue;

        specialinvoke r1.<init>();

        virtualinvoke $r0.getValue($i0, r1);

        $i0 = r1.type;

        return $i0;
    }

    public static androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser, android.content.res.Resources) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParserException $r3;
        androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry $r2;
        int $i0;
        org.xmlpull.v1.XmlPullParser $r0;
        android.content.res.Resources $r1;

        $r0 := @parameter0;

        $r1 := @parameter1;

     label1:
        $i0 = interfaceinvoke $r0.next();

        if $i0 == 2 goto label2;

        if $i0 == 1 goto label2;

        goto label1;

     label2:
        if $i0 != 2 goto label3;

        $r2 = androidx.core.content.res.FontResourcesParserCompat.readFamilies($r0, $r1);

        return $r2;

     label3:
        $r3 = new org.xmlpull.v1.XmlPullParserException;

        specialinvoke $r3.<init>("No start tag found");

        goto label4;

     label4:
        throw $r3;
    }

    public static java.util.List readCerts(android.content.res.Resources, int)
    {
        java.lang.Throwable r5;
        java.lang.String[] $r4;
        android.content.res.TypedArray $r2;
        java.util.ArrayList r3;
        java.util.List $r1;
        int $i0, $i1;
        android.content.res.Resources $r0;

        $r0 := @parameter0;

        $i0 := @parameter1;

        if $i0 != 0 goto label01;

        $r1 = java.util.Collections.emptyList();

        return $r1;

     label01:
        $r2 = virtualinvoke $r0.obtainTypedArray($i0);

     label02:
        $i1 = virtualinvoke $r2.length();

     label03:
        if $i1 != 0 goto label06;

     label04:
        $r1 = java.util.Collections.emptyList();

     label05:
        virtualinvoke $r2.recycle();

        return $r1;

     label06:
        r3 = new java.util.ArrayList;

        specialinvoke r3.<init>();

        $i1 = androidx.core.content.res.FontResourcesParserCompat.getType($r2, 0);

     label07:
        if $i1 != 1 goto label15;

        $i0 = 0;

     label08:
        $i1 = virtualinvoke $r2.length();

     label09:
        if $i0 >= $i1 goto label14;

     label10:
        $i1 = virtualinvoke $r2.getResourceId($i0, 0);

     label11:
        if $i1 == 0 goto label13;

     label12:
        $r4 = virtualinvoke $r0.getStringArray($i1);

        $r1 = androidx.core.content.res.FontResourcesParserCompat.toByteArrayList($r4);

        interfaceinvoke r3.add($r1);

     label13:
        $i0 = $i0 + 1;

        goto label08;

     label14:
        goto label16;

     label15:
        $r4 = virtualinvoke $r0.getStringArray($i0);

        $r1 = androidx.core.content.res.FontResourcesParserCompat.toByteArrayList($r4);

        interfaceinvoke r3.add($r1);

     label16:
        virtualinvoke $r2.recycle();

        return r3;

     label17:
        r5 := @caughtexception;

        virtualinvoke $r2.recycle();

        goto label18;

     label18:
        throw r5;

        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }

    private static androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser, android.content.res.Resources) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry $r3;
        java.lang.String $r2;
        org.xmlpull.v1.XmlPullParser $r0;
        android.content.res.Resources $r1;
        boolean $z0;

        $r0 := @parameter0;

        $r1 := @parameter1;

        interfaceinvoke $r0.require(2, null, "font-family");

        $r2 = interfaceinvoke $r0.getName();

        $z0 = virtualinvoke $r2.equals("font-family");

        if $z0 == 0 goto label1;

        $r3 = androidx.core.content.res.FontResourcesParserCompat.readFamily($r0, $r1);

        return $r3;

     label1:
        androidx.core.content.res.FontResourcesParserCompat.skip($r0);

        return null;
    }

    private static androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser, android.content.res.Resources) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        java.lang.Object[] $r16;
        android.content.res.TypedArray $r4;
        java.util.ArrayList r12;
        android.util.AttributeSet $r2;
        int[] r3;
        int i0, i1, i2, i3;
        java.lang.String $r5, $r6, $r7, $r8;
        org.xmlpull.v1.XmlPullParser $r0;
        boolean $z0;
        androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry r14;
        androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry r10;
        androidx.core.provider.FontRequest r11;
        androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] r15;
        java.util.List $r9;
        androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry $r13;
        android.content.res.Resources $r1;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r2 = android.util.Xml.asAttributeSet($r0);

        r3 = androidx.core.R$styleable.FontFamily;

        $r4 = virtualinvoke $r1.obtainAttributes($r2, r3);

        i0 = androidx.core.R$styleable.FontFamily_fontProviderAuthority;

        $r5 = virtualinvoke $r4.getString(i0);

        i0 = androidx.core.R$styleable.FontFamily_fontProviderPackage;

        $r6 = virtualinvoke $r4.getString(i0);

        i0 = androidx.core.R$styleable.FontFamily_fontProviderQuery;

        $r7 = virtualinvoke $r4.getString(i0);

        i0 = androidx.core.R$styleable.FontFamily_fontProviderCerts;

        i0 = virtualinvoke $r4.getResourceId(i0, 0);

        i1 = androidx.core.R$styleable.FontFamily_fontProviderFetchStrategy;

        i1 = virtualinvoke $r4.getInteger(i1, 1);

        i2 = androidx.core.R$styleable.FontFamily_fontProviderFetchTimeout;

        i2 = virtualinvoke $r4.getInteger(i2, 500);

        i3 = androidx.core.R$styleable.FontFamily_fontProviderSystemFontFamily;

        $r8 = virtualinvoke $r4.getString(i3);

        virtualinvoke $r4.recycle();

        if $r5 == null goto label3;

        if $r6 == null goto label3;

        if $r7 == null goto label3;

     label1:
        i3 = interfaceinvoke $r0.next();

        if i3 == 3 goto label2;

        androidx.core.content.res.FontResourcesParserCompat.skip($r0);

        goto label1;

     label2:
        $r9 = androidx.core.content.res.FontResourcesParserCompat.readCerts($r1, i0);

        r10 = new androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry;

        r11 = new androidx.core.provider.FontRequest;

        specialinvoke r11.<init>($r5, $r6, $r7, $r9);

        specialinvoke r10.<init>(r11, i1, i2, $r8);

        return r10;

     label3:
        r12 = new java.util.ArrayList;

        specialinvoke r12.<init>();

     label4:
        i0 = interfaceinvoke $r0.next();

        if i0 == 3 goto label7;

        i0 = interfaceinvoke $r0.getEventType();

        if i0 == 2 goto label5;

        goto label4;

     label5:
        $r5 = interfaceinvoke $r0.getName();

        $z0 = virtualinvoke $r5.equals("font");

        if $z0 == 0 goto label6;

        $r13 = androidx.core.content.res.FontResourcesParserCompat.readFont($r0, $r1);

        interfaceinvoke r12.add($r13);

        goto label4;

     label6:
        androidx.core.content.res.FontResourcesParserCompat.skip($r0);

        goto label4;

     label7:
        $z0 = interfaceinvoke r12.isEmpty();

        if $z0 == 0 goto label8;

        return null;

     label8:
        r14 = new androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry;

        i0 = interfaceinvoke r12.size();

        r15 = newarray (androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)[i0];

        $r16 = interfaceinvoke r12.toArray(r15);

        r15 = (androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) $r16;

        specialinvoke r14.<init>(r15);

        return r14;
    }

    private static androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser, android.content.res.Resources) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.TypedArray $r5;
        android.util.AttributeSet $r3;
        int[] r4;
        int i0, i1, $i2, $i3;
        java.lang.String $r6, $r7;
        androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry $r2;
        org.xmlpull.v1.XmlPullParser $r0;
        android.content.res.Resources $r1;
        boolean $z0, $z1;

        $r0 := @parameter0;

        $r1 := @parameter1;

        $r3 = android.util.Xml.asAttributeSet($r0);

        r4 = androidx.core.R$styleable.FontFamilyFont;

        $r5 = virtualinvoke $r1.obtainAttributes($r3, r4);

        i1 = androidx.core.R$styleable.FontFamilyFont_fontWeight;

        $z0 = virtualinvoke $r5.hasValue(i1);

        if $z0 == 0 goto label01;

        i1 = androidx.core.R$styleable.FontFamilyFont_fontWeight;

        goto label02;

     label01:
        i1 = androidx.core.R$styleable.FontFamilyFont_android_fontWeight;

     label02:
        i1 = virtualinvoke $r5.getInt(i1, 400);

        i0 = androidx.core.R$styleable.FontFamilyFont_fontStyle;

        $z0 = virtualinvoke $r5.hasValue(i0);

        if $z0 == 0 goto label03;

        i0 = androidx.core.R$styleable.FontFamilyFont_fontStyle;

        goto label04;

     label03:
        i0 = androidx.core.R$styleable.FontFamilyFont_android_fontStyle;

     label04:
        i0 = virtualinvoke $r5.getInt(i0, 0);

        if 1 != i0 goto label05;

        $z0 = 1;

        goto label06;

     label05:
        $z0 = 0;

     label06:
        i0 = androidx.core.R$styleable.FontFamilyFont_ttcIndex;

        $z1 = virtualinvoke $r5.hasValue(i0);

        if $z1 == 0 goto label07;

        i0 = androidx.core.R$styleable.FontFamilyFont_ttcIndex;

        goto label08;

     label07:
        i0 = androidx.core.R$styleable.FontFamilyFont_android_ttcIndex;

     label08:
        $i2 = androidx.core.R$styleable.FontFamilyFont_fontVariationSettings;

        $z1 = virtualinvoke $r5.hasValue($i2);

        if $z1 == 0 goto label09;

        $i2 = androidx.core.R$styleable.FontFamilyFont_fontVariationSettings;

        goto label10;

     label09:
        $i2 = androidx.core.R$styleable.FontFamilyFont_android_fontVariationSettings;

     label10:
        $r6 = virtualinvoke $r5.getString($i2);

        i0 = virtualinvoke $r5.getInt(i0, 0);

        $i2 = androidx.core.R$styleable.FontFamilyFont_font;

        $z1 = virtualinvoke $r5.hasValue($i2);

        if $z1 == 0 goto label11;

        $i3 = androidx.core.R$styleable.FontFamilyFont_font;

        goto label12;

     label11:
        $i3 = androidx.core.R$styleable.FontFamilyFont_android_font;

     label12:
        $i2 = virtualinvoke $r5.getResourceId($i3, 0);

        $r7 = virtualinvoke $r5.getString($i3);

        virtualinvoke $r5.recycle();

     label13:
        $i3 = interfaceinvoke $r0.next();

        if $i3 == 3 goto label14;

        androidx.core.content.res.FontResourcesParserCompat.skip($r0);

        goto label13;

     label14:
        $r2 = new androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry;

        specialinvoke $r2.<init>($r7, i1, $z0, $r6, i0, $i2);

        return $r2;
    }

    private static void skip(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        int $i0, i1;
        org.xmlpull.v1.XmlPullParser $r0;

        $r0 := @parameter0;

        i1 = 1;

     label1:
        if i1 <= 0 goto label5;

        $i0 = interfaceinvoke $r0.next();

        lookupswitch($i0)
        {
            case 2: goto label4;
            case 3: goto label3;
            default: goto label2;
        };

     label2:
        goto label1;

     label3:
        i1 = i1 + -1;

        goto label1;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }

    private static java.util.List toByteArrayList(java.lang.String[])
    {
        byte[] $r3;
        int $i0, $i1;
        java.lang.String[] $r0;
        java.lang.String r2;
        java.util.ArrayList r1;

        $r0 := @parameter0;

        r1 = new java.util.ArrayList;

        specialinvoke r1.<init>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        r2 = $r0[$i1];

        $r3 = android.util.Base64.decode(r2, 0);

        interfaceinvoke r1.add($r3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return r1;
    }
}
